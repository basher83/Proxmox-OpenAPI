{
  "openapi": "3.0.3",
  "info": {
    "title": "Proxmox VE API",
    "description": "Complete Proxmox Virtual Environment API specification for managing virtualized infrastructure.\n\nThis specification covers all aspects of Proxmox VE management including:\n- **Virtual Machine Management**: Create, configure, and manage VMs\n- **Container Management**: LXC container lifecycle management\n- **Storage Management**: Configure and manage storage backends\n- **Network Configuration**: Virtual networks and firewall rules\n- **Cluster Operations**: Multi-node cluster management\n- **User Management**: Authentication, authorization, and access control\n- **Backup & Restore**: Data protection and recovery\n- **Monitoring**: System status and performance metrics\n\nThe API supports both token-based authentication and session-based authentication with CSRF protection.",
    "version": "8.0.0",
    "contact": {
      "name": "Proxmox Support",
      "url": "https://www.proxmox.com",
      "email": "support@proxmox.com"
    },
    "license": {
      "name": "AGPL-3.0",
      "url": "https://www.gnu.org/licenses/agpl-3.0.html"
    }
  },
  "servers": [
    {
      "url": "https://{host}:8006/api2/json",
      "description": "Proxmox VE Server",
      "variables": {
        "host": {
          "default": "localhost",
          "description": "Proxmox VE server hostname or IP address"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Access Control",
      "description": "Access Control related operations"
    },
    {
      "name": "Cluster",
      "description": "Cluster related operations"
    },
    {
      "name": "Nodes",
      "description": "Nodes related operations"
    },
    {
      "name": "Resource Pools",
      "description": "Resource Pools related operations"
    },
    {
      "name": "Storage",
      "description": "Storage related operations"
    },
    {
      "name": "System Info",
      "description": "System Info related operations"
    }
  ],
  "paths": {
    "/cluster": {
      "get": {
        "summary": "Cluster index.",
        "description": "Cluster index.",
        "operationId": "get_cluster",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/replication": {
      "get": {
        "summary": "List replication jobs.",
        "description": "List replication jobs.",
        "operationId": "get_cluster_cluster_replication",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new replication job",
        "description": "Create a new replication job",
        "operationId": "post_cluster_cluster_replication",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable/deactivate the entry."
                  },
                  "id": {
                    "type": "string",
                    "format": "pve-replication-job-id",
                    "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                    "pattern": "[1-9][0-9]{2,8}-\\d{1,9}"
                  },
                  "rate": {
                    "type": "number",
                    "description": "Rate limit in mbps (megabytes per second) as floating point number.",
                    "minimum": 1
                  },
                  "remove_job": {
                    "type": "string",
                    "description": "Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.",
                    "enum": [
                      "local",
                      "full"
                    ]
                  },
                  "schedule": {
                    "type": "string",
                    "format": "pve-calendar-event",
                    "description": "Storage replication schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128,
                    "default": "*/15"
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "For internal use, to detect if the guest was stolen."
                  },
                  "target": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node."
                  },
                  "type": {
                    "type": "string",
                    "description": "Section type.",
                    "enum": [
                      "local"
                    ]
                  }
                },
                "required": [
                  "id",
                  "target",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/replication/cluster/replication/{id}": {
      "delete": {
        "summary": "Mark replication job for removal.",
        "description": "Mark replication job for removal.",
        "operationId": "delete_cluster_cluster_replication_cluster_replication_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Will remove the jobconfig entry, but will not cleanup.",
              "default": false
            },
            "description": "Will remove the jobconfig entry, but will not cleanup."
          },
          {
            "name": "keep",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Keep replicated data at target (do not remove).",
              "default": false
            },
            "description": "Keep replicated data at target (do not remove)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read replication job configuration.",
        "description": "Read replication job configuration.",
        "operationId": "get_cluster_cluster_replication_cluster_replication_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update replication job configuration.",
        "description": "Update replication job configuration.",
        "operationId": "put_cluster_cluster_replication_cluster_replication_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable/deactivate the entry."
                  },
                  "rate": {
                    "type": "number",
                    "description": "Rate limit in mbps (megabytes per second) as floating point number.",
                    "minimum": 1
                  },
                  "remove_job": {
                    "type": "string",
                    "description": "Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.",
                    "enum": [
                      "local",
                      "full"
                    ]
                  },
                  "schedule": {
                    "type": "string",
                    "format": "pve-calendar-event",
                    "description": "Storage replication schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128,
                    "default": "*/15"
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "For internal use, to detect if the guest was stolen."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/metrics": {
      "get": {
        "summary": "Metrics index.",
        "description": "Metrics index.",
        "operationId": "get_cluster_cluster_metrics",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/metrics/cluster/metrics/server": {
      "get": {
        "summary": "List configured metric servers.",
        "description": "List configured metric servers.",
        "operationId": "get_cluster_cluster_metrics_cluster_metrics_server",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "description": "Flag to disable the plugin."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the entry."
                      },
                      "port": {
                        "type": "integer",
                        "description": "Server network port"
                      },
                      "server": {
                        "type": "string",
                        "description": "Server dns name or IP address"
                      },
                      "type": {
                        "type": "string",
                        "description": "Plugin type."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/metrics/cluster/metrics/server/cluster/metrics/server/{id}": {
      "delete": {
        "summary": "Remove Metric server.",
        "description": "Remove Metric server.",
        "operationId": "delete_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read metric server configuration.",
        "description": "Read metric server configuration.",
        "operationId": "get_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new external metric server config",
        "description": "Create a new external metric server config",
        "operationId": "post_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api-path-prefix": {
                    "type": "string",
                    "description": "An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The InfluxDB bucket/db. Only necessary when using the http v2 api."
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the plugin."
                  },
                  "influxdbproto": {
                    "type": "string",
                    "enum": [
                      "udp",
                      "http",
                      "https"
                    ],
                    "default": "udp"
                  },
                  "max-body-size": {
                    "type": "integer",
                    "description": "InfluxDB max-body-size in bytes. Requests are batched up to this size.",
                    "minimum": 1,
                    "default": 25000000
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU for metrics transmission over UDP",
                    "minimum": 512,
                    "maximum": 65536,
                    "default": 1500
                  },
                  "organization": {
                    "type": "string",
                    "description": "The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api."
                  },
                  "path": {
                    "type": "string",
                    "format": "graphite-path",
                    "description": "root graphite path (ex: proxmox.mycluster.mykey)"
                  },
                  "port": {
                    "type": "integer",
                    "description": "server network port",
                    "minimum": 1,
                    "maximum": 65536
                  },
                  "proto": {
                    "type": "string",
                    "description": "Protocol to send graphite data. TCP or UDP (default)",
                    "enum": [
                      "udp",
                      "tcp"
                    ]
                  },
                  "server": {
                    "type": "string",
                    "format": "address",
                    "description": "server dns name or IP address"
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "graphite TCP socket timeout (default=1)",
                    "minimum": 0,
                    "default": 1
                  },
                  "token": {
                    "type": "string",
                    "description": "The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead."
                  },
                  "type": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Plugin type.",
                    "enum": [
                      "graphite",
                      "influxdb"
                    ]
                  },
                  "verify-certificate": {
                    "type": "boolean",
                    "description": "Set to 0 to disable certificate verification for https endpoints.",
                    "default": true
                  }
                },
                "required": [
                  "port",
                  "server",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update metric server configuration.",
        "description": "Update metric server configuration.",
        "operationId": "put_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api-path-prefix": {
                    "type": "string",
                    "description": "An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The InfluxDB bucket/db. Only necessary when using the http v2 api."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the plugin."
                  },
                  "influxdbproto": {
                    "type": "string",
                    "enum": [
                      "udp",
                      "http",
                      "https"
                    ],
                    "default": "udp"
                  },
                  "max-body-size": {
                    "type": "integer",
                    "description": "InfluxDB max-body-size in bytes. Requests are batched up to this size.",
                    "minimum": 1,
                    "default": 25000000
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU for metrics transmission over UDP",
                    "minimum": 512,
                    "maximum": 65536,
                    "default": 1500
                  },
                  "organization": {
                    "type": "string",
                    "description": "The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api."
                  },
                  "path": {
                    "type": "string",
                    "format": "graphite-path",
                    "description": "root graphite path (ex: proxmox.mycluster.mykey)"
                  },
                  "port": {
                    "type": "integer",
                    "description": "server network port",
                    "minimum": 1,
                    "maximum": 65536
                  },
                  "proto": {
                    "type": "string",
                    "description": "Protocol to send graphite data. TCP or UDP (default)",
                    "enum": [
                      "udp",
                      "tcp"
                    ]
                  },
                  "server": {
                    "type": "string",
                    "format": "address",
                    "description": "server dns name or IP address"
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "graphite TCP socket timeout (default=1)",
                    "minimum": 0,
                    "default": 1
                  },
                  "token": {
                    "type": "string",
                    "description": "The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead."
                  },
                  "verify-certificate": {
                    "type": "boolean",
                    "description": "Set to 0 to disable certificate verification for https endpoints.",
                    "default": true
                  }
                },
                "required": [
                  "port",
                  "server"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/metrics/cluster/metrics/export": {
      "get": {
        "summary": "Retrieve metrics of the cluster.",
        "description": "Retrieve metrics of the cluster.",
        "operationId": "get_cluster_cluster_metrics_cluster_metrics_export",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "history",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also return historic values. Returns full available metric history unless `start-time` is also set",
              "default": false
            },
            "description": "Also return historic values. Returns full available metric history unless `start-time` is also set"
          },
          {
            "name": "local-only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only return metrics for the current node instead of the whole cluster",
              "default": false
            },
            "description": "Only return metrics for the current node instead of the whole cluster"
          },
          {
            "name": "start-time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Only include metrics with a timestamp > start-time.",
              "default": 0
            },
            "description": "Only include metrics with a timestamp > start-time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for this metric object, for instance 'node/<nodename>' or 'qemu/<vmid>'."
                          },
                          "metric": {
                            "type": "string",
                            "description": "Name of the metric."
                          },
                          "timestamp": {
                            "type": "integer",
                            "description": "Time at which this metric was observed"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the metric."
                          },
                          "value": {
                            "type": "number",
                            "description": "Metric value."
                          }
                        }
                      },
                      "description": "Array of system metrics. Metrics are sorted by their timestamp."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications": {
      "get": {
        "summary": "Index for notification-related API endpoints.",
        "description": "Index for notification-related API endpoints.",
        "operationId": "get_cluster_cluster_notifications",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/matcher-fields": {
      "get": {
        "summary": "Returns known notification metadata fields",
        "description": "Returns known notification metadata fields",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_matcher-fields",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the field."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/matcher-field-values": {
      "get": {
        "summary": "Returns known notification metadata fields and their known values",
        "description": "Returns known notification metadata fields and their known values",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_matcher-field-values",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Additional comment for this value."
                      },
                      "field": {
                        "type": "string",
                        "description": "Field this value belongs to."
                      },
                      "value": {
                        "type": "string",
                        "description": "Notification metadata value known by the system."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints": {
      "get": {
        "summary": "Index for all available endpoint types.",
        "description": "Index for all available endpoint types.",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/sendmail": {
      "get": {
        "summary": "Returns a list of all sendmail endpoints",
        "description": "Returns a list of all sendmail endpoints",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "author": {
                        "type": "string",
                        "description": "Author of the mail"
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment"
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target"
                      },
                      "from-address": {
                        "type": "string",
                        "description": "`From` address for the mail"
                      },
                      "mailto": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "email-or-username"
                        },
                        "description": "List of email recipients"
                      },
                      "mailto-user": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "pve-userid"
                        },
                        "description": "List of users"
                      },
                      "name": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "The name of the endpoint."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sendmail endpoint",
        "description": "Create a new sendmail endpoint",
        "operationId": "post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail"
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    }
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    }
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the endpoint."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/sendmail/cluster/notifications/endpoints/sendmail/{name}": {
      "delete": {
        "summary": "Remove sendmail endpoint",
        "description": "Remove sendmail endpoint",
        "operationId": "delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail_cluster_notifications_endpoints_sendmail_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Return a specific sendmail endpoint",
        "description": "Return a specific sendmail endpoint",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail_cluster_notifications_endpoints_sendmail_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "author": {
                      "type": "string",
                      "description": "Author of the mail"
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment"
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target"
                    },
                    "from-address": {
                      "type": "string",
                      "description": "`From` address for the mail"
                    },
                    "mailto": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "email-or-username"
                      },
                      "description": "List of email recipients"
                    },
                    "mailto-user": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "pve-userid"
                      },
                      "description": "List of users"
                    },
                    "name": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "The name of the endpoint."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update existing sendmail endpoint",
        "description": "Update existing sendmail endpoint",
        "operationId": "put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail_cluster_notifications_endpoints_sendmail_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail"
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    }
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/gotify": {
      "get": {
        "summary": "Returns a list of all gotify endpoints",
        "description": "Returns a list of all gotify endpoints",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment"
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target"
                      },
                      "name": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "The name of the endpoint."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in"
                      },
                      "server": {
                        "type": "string",
                        "description": "Server URL"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new gotify endpoint",
        "description": "Create a new gotify endpoint",
        "operationId": "post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the endpoint."
                  },
                  "server": {
                    "type": "string",
                    "description": "Server URL"
                  },
                  "token": {
                    "type": "string",
                    "description": "Secret token"
                  }
                },
                "required": [
                  "name",
                  "server",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/gotify/cluster/notifications/endpoints/gotify/{name}": {
      "delete": {
        "summary": "Remove gotify endpoint",
        "description": "Remove gotify endpoint",
        "operationId": "delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify_cluster_notifications_endpoints_gotify_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Return a specific gotify endpoint",
        "description": "Return a specific gotify endpoint",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify_cluster_notifications_endpoints_gotify_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "Comment"
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target"
                    },
                    "name": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "The name of the endpoint."
                    },
                    "server": {
                      "type": "string",
                      "description": "Server URL"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update existing gotify endpoint",
        "description": "Update existing gotify endpoint",
        "operationId": "put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify_cluster_notifications_endpoints_gotify_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "server": {
                    "type": "string",
                    "description": "Server URL"
                  },
                  "token": {
                    "type": "string",
                    "description": "Secret token"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/smtp": {
      "get": {
        "summary": "Returns a list of all smtp endpoints",
        "description": "Returns a list of all smtp endpoints",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "author": {
                        "type": "string",
                        "description": "Author of the mail. Defaults to 'Proxmox VE'."
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment"
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target"
                      },
                      "from-address": {
                        "type": "string",
                        "description": "`From` address for the mail"
                      },
                      "mailto": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "email-or-username"
                        },
                        "description": "List of email recipients"
                      },
                      "mailto-user": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "pve-userid"
                        },
                        "description": "List of users"
                      },
                      "mode": {
                        "type": "string",
                        "description": "Determine which encryption method shall be used for the connection."
                      },
                      "name": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "The name of the endpoint."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in"
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections."
                      },
                      "server": {
                        "type": "string",
                        "description": "The address of the SMTP server."
                      },
                      "username": {
                        "type": "string",
                        "description": "Username for SMTP authentication"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new smtp endpoint",
        "description": "Create a new smtp endpoint",
        "operationId": "post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail. Defaults to 'Proxmox VE'."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail"
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    }
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    }
                  },
                  "mode": {
                    "type": "string",
                    "description": "Determine which encryption method shall be used for the connection.",
                    "enum": [
                      "insecure",
                      "starttls",
                      "tls"
                    ],
                    "default": "tls"
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the endpoint."
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication"
                  },
                  "port": {
                    "type": "integer",
                    "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections."
                  },
                  "server": {
                    "type": "string",
                    "description": "The address of the SMTP server."
                  },
                  "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication"
                  }
                },
                "required": [
                  "from-address",
                  "name",
                  "server"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/smtp/cluster/notifications/endpoints/smtp/{name}": {
      "delete": {
        "summary": "Remove smtp endpoint",
        "description": "Remove smtp endpoint",
        "operationId": "delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp_cluster_notifications_endpoints_smtp_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Return a specific smtp endpoint",
        "description": "Return a specific smtp endpoint",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp_cluster_notifications_endpoints_smtp_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "author": {
                      "type": "string",
                      "description": "Author of the mail. Defaults to 'Proxmox VE'."
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment"
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target"
                    },
                    "from-address": {
                      "type": "string",
                      "description": "`From` address for the mail"
                    },
                    "mailto": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "email-or-username"
                      },
                      "description": "List of email recipients"
                    },
                    "mailto-user": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "pve-userid"
                      },
                      "description": "List of users"
                    },
                    "mode": {
                      "type": "string",
                      "description": "Determine which encryption method shall be used for the connection."
                    },
                    "name": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "The name of the endpoint."
                    },
                    "port": {
                      "type": "integer",
                      "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections."
                    },
                    "server": {
                      "type": "string",
                      "description": "The address of the SMTP server."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username for SMTP authentication"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update existing smtp endpoint",
        "description": "Update existing smtp endpoint",
        "operationId": "put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp_cluster_notifications_endpoints_smtp_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail. Defaults to 'Proxmox VE'."
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail"
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    }
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    }
                  },
                  "mode": {
                    "type": "string",
                    "description": "Determine which encryption method shall be used for the connection.",
                    "enum": [
                      "insecure",
                      "starttls",
                      "tls"
                    ],
                    "default": "tls"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication"
                  },
                  "port": {
                    "type": "integer",
                    "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections."
                  },
                  "server": {
                    "type": "string",
                    "description": "The address of the SMTP server."
                  },
                  "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/webhook": {
      "get": {
        "summary": "Returns a list of all webhook endpoints",
        "description": "Returns a list of all webhook endpoints",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "HTTP body, base64 encoded"
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment"
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target"
                      },
                      "header": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>"
                      },
                      "method": {
                        "type": "string",
                        "description": "HTTP method"
                      },
                      "name": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "The name of the endpoint."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in"
                      },
                      "secret": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>"
                      },
                      "url": {
                        "type": "string",
                        "description": "Server URL"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new webhook endpoint",
        "description": "Create a new webhook endpoint",
        "operationId": "post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "HTTP body, base64 encoded"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "header": {
                    "type": "array",
                    "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    }
                  },
                  "method": {
                    "type": "string",
                    "description": "HTTP method",
                    "enum": [
                      "post",
                      "put",
                      "get"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the endpoint."
                  },
                  "secret": {
                    "type": "array",
                    "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    }
                  },
                  "url": {
                    "type": "string",
                    "description": "Server URL"
                  }
                },
                "required": [
                  "method",
                  "name",
                  "url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/webhook/cluster/notifications/endpoints/webhook/{name}": {
      "delete": {
        "summary": "Remove webhook endpoint",
        "description": "Remove webhook endpoint",
        "operationId": "delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook_cluster_notifications_endpoints_webhook_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Return a specific webhook endpoint",
        "description": "Return a specific webhook endpoint",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook_cluster_notifications_endpoints_webhook_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string",
                      "description": "HTTP body, base64 encoded"
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment"
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target"
                    },
                    "header": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>"
                    },
                    "method": {
                      "type": "string",
                      "description": "HTTP method"
                    },
                    "name": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "The name of the endpoint."
                    },
                    "secret": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>"
                    },
                    "url": {
                      "type": "string",
                      "description": "Server URL"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update existing webhook endpoint",
        "description": "Update existing webhook endpoint",
        "operationId": "put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook_cluster_notifications_endpoints_webhook_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "HTTP body, base64 encoded"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false
                  },
                  "header": {
                    "type": "array",
                    "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    }
                  },
                  "method": {
                    "type": "string",
                    "description": "HTTP method",
                    "enum": [
                      "post",
                      "put",
                      "get"
                    ]
                  },
                  "secret": {
                    "type": "array",
                    "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    }
                  },
                  "url": {
                    "type": "string",
                    "description": "Server URL"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/targets": {
      "get": {
        "summary": "Returns a list of all entities that can be used as notification targets.",
        "description": "Returns a list of all entities that can be used as notification targets.",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_targets",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment"
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Show if this target is disabled"
                      },
                      "name": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "Name of the target."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the target."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/targets/cluster/notifications/targets/{name}/cluster/notifications/targets/{name}/test": {
      "post": {
        "summary": "Send a test notification to a provided target.",
        "description": "Send a test notification to a provided target.",
        "operationId": "post_cluster_cluster_notifications_cluster_notifications_targets_cluster_notifications_targets_name_cluster_notifications_targets_name_test",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/matchers": {
      "get": {
        "summary": "Returns a list of all matchers",
        "description": "Returns a list of all matchers",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_matchers",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment"
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this matcher"
                      },
                      "invert-match": {
                        "type": "boolean",
                        "description": "Invert match of the whole matcher"
                      },
                      "match-calendar": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Match notification timestamp"
                      },
                      "match-field": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>"
                      },
                      "match-severity": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Notification severities to match"
                      },
                      "mode": {
                        "type": "string",
                        "description": "Choose between 'all' and 'any' for when multiple properties are specified"
                      },
                      "name": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "Name of the matcher."
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in"
                      },
                      "target": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "pve-configid"
                        },
                        "description": "Targets to notify on match"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new matcher",
        "description": "Create a new matcher",
        "operationId": "post_cluster_cluster_notifications_cluster_notifications_matchers",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this matcher",
                    "default": false
                  },
                  "invert-match": {
                    "type": "boolean",
                    "description": "Invert match of the whole matcher"
                  },
                  "match-calendar": {
                    "type": "array",
                    "description": "Match notification timestamp",
                    "items": {
                      "type": "string"
                    }
                  },
                  "match-field": {
                    "type": "array",
                    "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                    "items": {
                      "type": "string"
                    }
                  },
                  "match-severity": {
                    "type": "array",
                    "description": "Notification severities to match",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mode": {
                    "type": "string",
                    "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                    "enum": [
                      "all",
                      "any"
                    ],
                    "default": "all"
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Name of the matcher."
                  },
                  "target": {
                    "type": "array",
                    "description": "Targets to notify on match",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/notifications/cluster/notifications/matchers/cluster/notifications/matchers/{name}": {
      "delete": {
        "summary": "Remove matcher",
        "description": "Remove matcher",
        "operationId": "delete_cluster_cluster_notifications_cluster_notifications_matchers_cluster_notifications_matchers_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Return a specific matcher",
        "description": "Return a specific matcher",
        "operationId": "get_cluster_cluster_notifications_cluster_notifications_matchers_cluster_notifications_matchers_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "Comment"
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this matcher"
                    },
                    "invert-match": {
                      "type": "boolean",
                      "description": "Invert match of the whole matcher"
                    },
                    "match-calendar": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Match notification timestamp"
                    },
                    "match-field": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>"
                    },
                    "match-severity": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Notification severities to match"
                    },
                    "mode": {
                      "type": "string",
                      "description": "Choose between 'all' and 'any' for when multiple properties are specified"
                    },
                    "name": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "Name of the matcher."
                    },
                    "target": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "pve-configid"
                      },
                      "description": "Targets to notify on match"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update existing matcher",
        "description": "Update existing matcher",
        "operationId": "put_cluster_cluster_notifications_cluster_notifications_matchers_cluster_notifications_matchers_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment"
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this matcher",
                    "default": false
                  },
                  "invert-match": {
                    "type": "boolean",
                    "description": "Invert match of the whole matcher"
                  },
                  "match-calendar": {
                    "type": "array",
                    "description": "Match notification timestamp",
                    "items": {
                      "type": "string"
                    }
                  },
                  "match-field": {
                    "type": "array",
                    "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                    "items": {
                      "type": "string"
                    }
                  },
                  "match-severity": {
                    "type": "array",
                    "description": "Notification severities to match",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mode": {
                    "type": "string",
                    "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                    "enum": [
                      "all",
                      "any"
                    ],
                    "default": "all"
                  },
                  "target": {
                    "type": "array",
                    "description": "Targets to notify on match",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_cluster_cluster_config",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Generate new cluster configuration. If no links given, default to local IP address as link0.",
        "description": "Generate new cluster configuration. If no links given, default to local IP address as link0.",
        "operationId": "post_cluster_cluster_config",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clustername": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "The name of the cluster.",
                    "maxLength": 15
                  },
                  "link[n]": {
                    "type": "string",
                    "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)"
                  },
                  "nodeid": {
                    "type": "integer",
                    "description": "Node id for this node.",
                    "minimum": 1
                  },
                  "votes": {
                    "type": "integer",
                    "description": "Number of votes for this node.",
                    "minimum": 1
                  }
                },
                "required": [
                  "clustername"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config/cluster/config/apiversion": {
      "get": {
        "summary": "Return the version of the cluster join API available on this node.",
        "description": "Return the version of the cluster join API available on this node.",
        "operationId": "get_cluster_cluster_config_cluster_config_apiversion",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Cluster Join API version, currently 1",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Cluster Join API version, currently 1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config/cluster/config/nodes": {
      "get": {
        "summary": "Corosync node list.",
        "description": "Corosync node list.",
        "operationId": "get_cluster_cluster_config_cluster_config_nodes",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "node": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config/cluster/config/nodes/cluster/config/nodes/{node}": {
      "delete": {
        "summary": "Removes a node from the cluster configuration.",
        "description": "Removes a node from the cluster configuration.",
        "operationId": "delete_cluster_cluster_config_cluster_config_nodes_cluster_config_nodes_node",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Adds a node to the cluster configuration. This call is for internal use.",
        "description": "Adds a node to the cluster configuration. This call is for internal use.",
        "operationId": "post_cluster_cluster_config_cluster_config_nodes_cluster_config_nodes_node",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiversion": {
                    "type": "integer",
                    "description": "The JOIN_API_VERSION of the new node."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Do not throw error if node already exists."
                  },
                  "link[n]": {
                    "type": "string",
                    "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)"
                  },
                  "new_node_ip": {
                    "type": "string",
                    "format": "ip",
                    "description": "IP Address of node to add. Used as fallback if no links are given."
                  },
                  "nodeid": {
                    "type": "integer",
                    "description": "Node id for this node.",
                    "minimum": 1
                  },
                  "votes": {
                    "type": "integer",
                    "description": "Number of votes for this node",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "corosync_authkey": {
                      "type": "string"
                    },
                    "corosync_conf": {
                      "type": "string"
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config/cluster/config/join": {
      "get": {
        "summary": "Get information needed to join this cluster over the connected node.",
        "description": "Get information needed to join this cluster over the connected node.",
        "operationId": "get_cluster_cluster_config_cluster_config_join",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-node",
              "description": "The node for which the joinee gets the nodeinfo. ",
              "default": "current connected node"
            },
            "description": "The node for which the joinee gets the nodeinfo. "
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config_digest": {
                      "type": "string"
                    },
                    "nodelist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "format": "pve-node",
                            "description": "The cluster node name."
                          },
                          "nodeid": {
                            "type": "integer",
                            "description": "Node id for this node."
                          },
                          "pve_addr": {
                            "type": "string",
                            "format": "ip"
                          },
                          "pve_fp": {
                            "type": "string",
                            "description": "Certificate SHA 256 fingerprint."
                          },
                          "quorum_votes": {
                            "type": "integer"
                          },
                          "ring0_addr": {
                            "type": "string",
                            "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)"
                          }
                        }
                      }
                    },
                    "preferred_node": {
                      "type": "string",
                      "format": "pve-node",
                      "description": "The cluster node name."
                    },
                    "totem": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).",
        "description": "Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).",
        "operationId": "post_cluster_cluster_config_cluster_config_join",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Do not throw error if node already exists."
                  },
                  "hostname": {
                    "type": "string",
                    "description": "Hostname (or IP) of an existing cluster member."
                  },
                  "link[n]": {
                    "type": "string",
                    "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)"
                  },
                  "nodeid": {
                    "type": "integer",
                    "description": "Node id for this node.",
                    "minimum": 1
                  },
                  "password": {
                    "type": "string",
                    "description": "Superuser (root) password of peer node.",
                    "maxLength": 128
                  },
                  "votes": {
                    "type": "integer",
                    "description": "Number of votes for this node",
                    "minimum": 0
                  }
                },
                "required": [
                  "fingerprint",
                  "hostname",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config/cluster/config/totem": {
      "get": {
        "summary": "Get corosync totem protocol settings.",
        "description": "Get corosync totem protocol settings.",
        "operationId": "get_cluster_cluster_config_cluster_config_totem",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/config/cluster/config/qdevice": {
      "get": {
        "summary": "Get QDevice status",
        "description": "Get QDevice status",
        "operationId": "get_cluster_cluster_config_cluster_config_qdevice",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_cluster_cluster_firewall",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/groups": {
      "get": {
        "summary": "List security groups.",
        "description": "List security groups.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_groups",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "group": {
                        "type": "string",
                        "description": "Security Group name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new security group.",
        "description": "Create new security group.",
        "operationId": "post_cluster_cluster_firewall_cluster_firewall_groups",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "group": {
                    "type": "string",
                    "description": "Security Group name.",
                    "minLength": 2,
                    "maxLength": 18,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename/update an existing security group. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing group.",
                    "minLength": 2,
                    "maxLength": 18,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "group"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/groups/cluster/firewall/groups/{group}": {
      "delete": {
        "summary": "Delete security group.",
        "description": "Delete security group.",
        "operationId": "delete_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "List rules.",
        "description": "List rules.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new rule.",
        "description": "Create new rule.",
        "operationId": "post_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                },
                "required": [
                  "action",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/groups/cluster/firewall/groups/{group}/cluster/firewall/groups/{group}/{pos}": {
      "delete": {
        "summary": "Delete rule.",
        "description": "Delete rule.",
        "operationId": "delete_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group_cluster_firewall_groups_group_pos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get single rule data.",
        "description": "Get single rule data.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group_cluster_firewall_groups_group_pos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "dest": {
                      "type": "string"
                    },
                    "dport": {
                      "type": "string"
                    },
                    "enable": {
                      "type": "integer"
                    },
                    "icmp-type": {
                      "type": "string"
                    },
                    "iface": {
                      "type": "string"
                    },
                    "ipversion": {
                      "type": "integer"
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule"
                    },
                    "macro": {
                      "type": "string"
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sport": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Modify rule data.",
        "description": "Modify rule data.",
        "operationId": "put_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group_cluster_firewall_groups_group_pos",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/rules": {
      "get": {
        "summary": "List rules.",
        "description": "List rules.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_rules",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new rule.",
        "description": "Create new rule.",
        "operationId": "post_cluster_cluster_firewall_cluster_firewall_rules",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                },
                "required": [
                  "action",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/rules/cluster/firewall/rules/{pos}": {
      "delete": {
        "summary": "Delete rule.",
        "description": "Delete rule.",
        "operationId": "delete_cluster_cluster_firewall_cluster_firewall_rules_cluster_firewall_rules_pos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get single rule data.",
        "description": "Get single rule data.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_rules_cluster_firewall_rules_pos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "dest": {
                      "type": "string"
                    },
                    "dport": {
                      "type": "string"
                    },
                    "enable": {
                      "type": "integer"
                    },
                    "icmp-type": {
                      "type": "string"
                    },
                    "iface": {
                      "type": "string"
                    },
                    "ipversion": {
                      "type": "integer"
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule"
                    },
                    "macro": {
                      "type": "string"
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sport": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Modify rule data.",
        "description": "Modify rule data.",
        "operationId": "put_cluster_cluster_firewall_cluster_firewall_rules_cluster_firewall_rules_pos",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/ipset": {
      "get": {
        "summary": "List IPSets",
        "description": "List IPSets",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_ipset",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "name": {
                        "type": "string",
                        "description": "IP set name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new IPSet",
        "description": "Create new IPSet",
        "operationId": "post_cluster_cluster_firewall_cluster_firewall_ipset",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "name": {
                    "type": "string",
                    "description": "IP set name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/ipset/cluster/firewall/ipset/{name}": {
      "delete": {
        "summary": "Delete IPSet",
        "description": "Delete IPSet",
        "operationId": "delete_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Delete all members of the IPSet, if there are any."
            },
            "description": "Delete all members of the IPSet, if there are any."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "List IPSet content",
        "description": "List IPSet content",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "nomatch": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Add IP or Network to IPSet.",
        "description": "Add IP or Network to IPSet.",
        "operationId": "post_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDRorAlias",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "nomatch": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "cidr"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/ipset/cluster/firewall/ipset/{name}/cluster/firewall/ipset/{name}/{cidr}": {
      "delete": {
        "summary": "Remove IP or Network from IPSet.",
        "description": "Remove IP or Network from IPSet.",
        "operationId": "delete_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name_cluster_firewall_ipset_name_cidr",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read IP or Network settings from IPSet.",
        "description": "Read IP or Network settings from IPSet.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name_cluster_firewall_ipset_name_cidr",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP or Network settings",
        "description": "Update IP or Network settings",
        "operationId": "put_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name_cluster_firewall_ipset_name_cidr",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "nomatch": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/aliases": {
      "get": {
        "summary": "List aliases",
        "description": "List aliases",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_aliases",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create IP or Network Alias.",
        "description": "Create IP or Network Alias.",
        "operationId": "post_cluster_cluster_firewall_cluster_firewall_aliases",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDR",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Alias name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/aliases/cluster/firewall/aliases/{name}": {
      "delete": {
        "summary": "Remove IP or Network alias.",
        "description": "Remove IP or Network alias.",
        "operationId": "delete_cluster_cluster_firewall_cluster_firewall_aliases_cluster_firewall_aliases_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read alias.",
        "description": "Read alias.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_aliases_cluster_firewall_aliases_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP or Network alias.",
        "description": "Update IP or Network alias.",
        "operationId": "put_cluster_cluster_firewall_cluster_firewall_aliases_cluster_firewall_aliases_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDR",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing alias.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/options": {
      "get": {
        "summary": "Get Firewall options.",
        "description": "Get Firewall options.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_options",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ebtables": {
                      "type": "boolean",
                      "description": "Enable ebtables rules cluster wide."
                    },
                    "enable": {
                      "type": "integer",
                      "description": "Enable or disable the firewall cluster wide."
                    },
                    "log_ratelimit": {
                      "type": "string",
                      "description": "Log ratelimiting settings"
                    },
                    "policy_forward": {
                      "type": "string",
                      "description": "Forward policy."
                    },
                    "policy_in": {
                      "type": "string",
                      "description": "Input policy."
                    },
                    "policy_out": {
                      "type": "string",
                      "description": "Output policy."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set Firewall options.",
        "description": "Set Firewall options.",
        "operationId": "put_cluster_cluster_firewall_cluster_firewall_options",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "ebtables": {
                    "type": "boolean",
                    "description": "Enable ebtables rules cluster wide.",
                    "default": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Enable or disable the firewall cluster wide.",
                    "minimum": 0
                  },
                  "log_ratelimit": {
                    "type": "string",
                    "description": "Log ratelimiting settings"
                  },
                  "policy_forward": {
                    "type": "string",
                    "description": "Forward policy.",
                    "enum": [
                      "ACCEPT",
                      "DROP"
                    ]
                  },
                  "policy_in": {
                    "type": "string",
                    "description": "Input policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ]
                  },
                  "policy_out": {
                    "type": "string",
                    "description": "Output policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/macros": {
      "get": {
        "summary": "List available macros",
        "description": "List available macros",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_macros",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "descr": {
                        "type": "string",
                        "description": "More verbose description (if available)."
                      },
                      "macro": {
                        "type": "string",
                        "description": "Macro name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/firewall/cluster/firewall/refs": {
      "get": {
        "summary": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "operationId": "get_cluster_cluster_firewall_cluster_firewall_refs",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list references of specified type.",
              "enum": [
                "alias",
                "ipset"
              ]
            },
            "description": "Only list references of specified type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/backup": {
      "get": {
        "summary": "List vzdump backup schedule.",
        "description": "List vzdump backup schedule.",
        "operationId": "get_cluster_cluster_backup",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The job ID."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new vzdump backup job.",
        "description": "Create new vzdump backup job.",
        "operationId": "post_cluster_cluster_backup",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Backup all known guest systems on this host.",
                    "default": false
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Limit I/O bandwidth (in KiB/s).",
                    "minimum": 0,
                    "default": 0
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512
                  },
                  "compress": {
                    "type": "string",
                    "description": "Compress dump file.",
                    "enum": [
                      "0",
                      "1",
                      "gzip",
                      "lzo",
                      "zstd"
                    ],
                    "default": "0"
                  },
                  "dow": {
                    "type": "string",
                    "format": "pve-day-of-week-list",
                    "description": "Day of week selection.",
                    "default": "mon,tue,wed,thu,fri,sat,sun"
                  },
                  "dumpdir": {
                    "type": "string",
                    "description": "Store resulting files to specified directory."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the job.",
                    "default": "1"
                  },
                  "exclude": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Exclude specified guest systems (assumes --all)"
                  },
                  "exclude-path": {
                    "type": "array",
                    "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fleecing": {
                    "type": "string",
                    "format": "backup-fleecing",
                    "description": "Options for backup fleecing (VM only)."
                  },
                  "id": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Job ID (will be autogenerated)."
                  },
                  "ionice": {
                    "type": "integer",
                    "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                    "minimum": 0,
                    "maximum": 8,
                    "default": 7
                  },
                  "lockwait": {
                    "type": "integer",
                    "description": "Maximal time to wait for the global lock (minutes).",
                    "minimum": 0,
                    "default": 180
                  },
                  "mailnotification": {
                    "type": "string",
                    "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                    "enum": [
                      "always",
                      "failure"
                    ],
                    "default": "always"
                  },
                  "mailto": {
                    "type": "string",
                    "format": "email-or-username-list",
                    "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications."
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                    "minimum": 1
                  },
                  "mode": {
                    "type": "string",
                    "description": "Backup mode.",
                    "enum": [
                      "snapshot",
                      "suspend",
                      "stop"
                    ],
                    "default": "snapshot"
                  },
                  "node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Only run if executed on this node."
                  },
                  "notes-template": {
                    "type": "string",
                    "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                    "maxLength": 1024
                  },
                  "notification-mode": {
                    "type": "string",
                    "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                    "enum": [
                      "auto",
                      "legacy-sendmail",
                      "notification-system"
                    ],
                    "default": "auto"
                  },
                  "notification-policy": {
                    "type": "string",
                    "description": "Deprecated: Do not use",
                    "enum": [
                      "always",
                      "failure",
                      "never"
                    ],
                    "default": "always"
                  },
                  "notification-target": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Deprecated: Do not use"
                  },
                  "pbs-change-detection-mode": {
                    "type": "string",
                    "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                    "enum": [
                      "legacy",
                      "data",
                      "metadata"
                    ]
                  },
                  "performance": {
                    "type": "string",
                    "format": "backup-performance",
                    "description": "Other performance-related settings."
                  },
                  "pigz": {
                    "type": "integer",
                    "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                    "default": 0
                  },
                  "pool": {
                    "type": "string",
                    "description": "Backup all known guest systems included in the specified pool."
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "If true, mark backup(s) as protected."
                  },
                  "prune-backups": {
                    "type": "string",
                    "format": "prune-backups",
                    "description": "Use these retention options instead of those from the storage configuration.",
                    "default": "keep-all=1"
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Be quiet.",
                    "default": false
                  },
                  "remove": {
                    "type": "boolean",
                    "description": "Prune older backups according to 'prune-backups'.",
                    "default": true
                  },
                  "repeat-missed": {
                    "type": "boolean",
                    "description": "If true, the job will be run as soon as possible if it was missed while the scheduler was not running.",
                    "default": false
                  },
                  "schedule": {
                    "type": "string",
                    "format": "pve-calendar-event",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128
                  },
                  "script": {
                    "type": "string",
                    "description": "Use specified hook script."
                  },
                  "starttime": {
                    "type": "string",
                    "description": "Job Start time.",
                    "pattern": "\\d{1,2}:\\d{1,2}"
                  },
                  "stdexcludes": {
                    "type": "boolean",
                    "description": "Exclude temporary files and logs.",
                    "default": true
                  },
                  "stop": {
                    "type": "boolean",
                    "description": "Stop running backup jobs on this host.",
                    "default": false
                  },
                  "stopwait": {
                    "type": "integer",
                    "description": "Maximal time to wait until a guest system is stopped (minutes).",
                    "minimum": 0,
                    "default": 10
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Store resulting file to this storage."
                  },
                  "tmpdir": {
                    "type": "string",
                    "description": "Store temporary files to specified directory."
                  },
                  "vmid": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "The ID of the guest system you want to backup."
                  },
                  "zstd": {
                    "type": "integer",
                    "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                    "default": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/backup/cluster/backup/{id}": {
      "delete": {
        "summary": "Delete vzdump backup job definition.",
        "description": "Delete vzdump backup job definition.",
        "operationId": "delete_cluster_cluster_backup_cluster_backup_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read vzdump backup job definition.",
        "description": "Read vzdump backup job definition.",
        "operationId": "get_cluster_cluster_backup_cluster_backup_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update vzdump backup job definition.",
        "description": "Update vzdump backup job definition.",
        "operationId": "put_cluster_cluster_backup_cluster_backup_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Backup all known guest systems on this host.",
                    "default": false
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Limit I/O bandwidth (in KiB/s).",
                    "minimum": 0,
                    "default": 0
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512
                  },
                  "compress": {
                    "type": "string",
                    "description": "Compress dump file.",
                    "enum": [
                      "0",
                      "1",
                      "gzip",
                      "lzo",
                      "zstd"
                    ],
                    "default": "0"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dow": {
                    "type": "string",
                    "format": "pve-day-of-week-list",
                    "description": "Day of week selection."
                  },
                  "dumpdir": {
                    "type": "string",
                    "description": "Store resulting files to specified directory."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the job.",
                    "default": "1"
                  },
                  "exclude": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Exclude specified guest systems (assumes --all)"
                  },
                  "exclude-path": {
                    "type": "array",
                    "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fleecing": {
                    "type": "string",
                    "format": "backup-fleecing",
                    "description": "Options for backup fleecing (VM only)."
                  },
                  "ionice": {
                    "type": "integer",
                    "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                    "minimum": 0,
                    "maximum": 8,
                    "default": 7
                  },
                  "lockwait": {
                    "type": "integer",
                    "description": "Maximal time to wait for the global lock (minutes).",
                    "minimum": 0,
                    "default": 180
                  },
                  "mailnotification": {
                    "type": "string",
                    "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                    "enum": [
                      "always",
                      "failure"
                    ],
                    "default": "always"
                  },
                  "mailto": {
                    "type": "string",
                    "format": "email-or-username-list",
                    "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications."
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                    "minimum": 1
                  },
                  "mode": {
                    "type": "string",
                    "description": "Backup mode.",
                    "enum": [
                      "snapshot",
                      "suspend",
                      "stop"
                    ],
                    "default": "snapshot"
                  },
                  "node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Only run if executed on this node."
                  },
                  "notes-template": {
                    "type": "string",
                    "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                    "maxLength": 1024
                  },
                  "notification-mode": {
                    "type": "string",
                    "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                    "enum": [
                      "auto",
                      "legacy-sendmail",
                      "notification-system"
                    ],
                    "default": "auto"
                  },
                  "notification-policy": {
                    "type": "string",
                    "description": "Deprecated: Do not use",
                    "enum": [
                      "always",
                      "failure",
                      "never"
                    ],
                    "default": "always"
                  },
                  "notification-target": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Deprecated: Do not use"
                  },
                  "pbs-change-detection-mode": {
                    "type": "string",
                    "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                    "enum": [
                      "legacy",
                      "data",
                      "metadata"
                    ]
                  },
                  "performance": {
                    "type": "string",
                    "format": "backup-performance",
                    "description": "Other performance-related settings."
                  },
                  "pigz": {
                    "type": "integer",
                    "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                    "default": 0
                  },
                  "pool": {
                    "type": "string",
                    "description": "Backup all known guest systems included in the specified pool."
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "If true, mark backup(s) as protected."
                  },
                  "prune-backups": {
                    "type": "string",
                    "format": "prune-backups",
                    "description": "Use these retention options instead of those from the storage configuration.",
                    "default": "keep-all=1"
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Be quiet.",
                    "default": false
                  },
                  "remove": {
                    "type": "boolean",
                    "description": "Prune older backups according to 'prune-backups'.",
                    "default": true
                  },
                  "repeat-missed": {
                    "type": "boolean",
                    "description": "If true, the job will be run as soon as possible if it was missed while the scheduler was not running.",
                    "default": false
                  },
                  "schedule": {
                    "type": "string",
                    "format": "pve-calendar-event",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128
                  },
                  "script": {
                    "type": "string",
                    "description": "Use specified hook script."
                  },
                  "starttime": {
                    "type": "string",
                    "description": "Job Start time.",
                    "pattern": "\\d{1,2}:\\d{1,2}"
                  },
                  "stdexcludes": {
                    "type": "boolean",
                    "description": "Exclude temporary files and logs.",
                    "default": true
                  },
                  "stop": {
                    "type": "boolean",
                    "description": "Stop running backup jobs on this host.",
                    "default": false
                  },
                  "stopwait": {
                    "type": "integer",
                    "description": "Maximal time to wait until a guest system is stopped (minutes).",
                    "minimum": 0,
                    "default": 10
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Store resulting file to this storage."
                  },
                  "tmpdir": {
                    "type": "string",
                    "description": "Store temporary files to specified directory."
                  },
                  "vmid": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "The ID of the guest system you want to backup."
                  },
                  "zstd": {
                    "type": "integer",
                    "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                    "default": 1
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/backup/cluster/backup/{id}/cluster/backup/{id}/included_volumes": {
      "get": {
        "summary": "Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.",
        "description": "Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.",
        "operationId": "get_cluster_cluster_backup_cluster_backup_id_cluster_backup_id_included_volumes",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "children": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Configuration key of the volume."
                                },
                                "included": {
                                  "type": "boolean",
                                  "description": "Whether the volume is included in the backup or not."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the volume."
                                },
                                "reason": {
                                  "type": "string",
                                  "description": "The reason why the volume is included (or excluded)."
                                }
                              }
                            },
                            "description": "The volumes of the guest with the information if they will be included in backups."
                          },
                          "id": {
                            "type": "integer",
                            "description": "VMID of the guest."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the guest"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the guest, VM, CT or unknown for removed but not purged guests."
                          }
                        }
                      }
                    }
                  },
                  "description": "Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/backup-info": {
      "get": {
        "summary": "Index for backup info related endpoints",
        "description": "Index for backup info related endpoints",
        "operationId": "get_cluster_cluster_backup-info",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Directory index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string",
                        "description": "API sub-directory endpoint"
                      }
                    }
                  },
                  "description": "Directory index."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/backup-info/cluster/backup-info/not-backed-up": {
      "get": {
        "summary": "Shows all guests which are not covered by any backup job.",
        "description": "Shows all guests which are not covered by any backup job.",
        "operationId": "get_cluster_cluster_backup-info_cluster_backup-info_not-backed-up",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Contains the guest objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the guest"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the guest."
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "VMID of the guest."
                      }
                    }
                  },
                  "description": "Contains the guest objects."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_cluster_cluster_ha",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/resources": {
      "get": {
        "summary": "List HA resources.",
        "description": "List HA resources.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_resources",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list resources of specific type",
              "enum": [
                "ct",
                "vm"
              ]
            },
            "description": "Only list resources of specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new HA resource.",
        "description": "Create a new HA resource.",
        "operationId": "post_cluster_cluster_ha_cluster_ha_resources",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "group": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The HA group identifier."
                  },
                  "max_relocate": {
                    "type": "integer",
                    "description": "Maximal number of service relocate tries when a service failes to start.",
                    "minimum": 0,
                    "default": 1
                  },
                  "max_restart": {
                    "type": "integer",
                    "description": "Maximal number of tries to restart the service on a node after its start failed.",
                    "minimum": 0,
                    "default": 1
                  },
                  "sid": {
                    "type": "string",
                    "format": "pve-ha-resource-or-vm-id",
                    "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100)."
                  },
                  "state": {
                    "type": "string",
                    "description": "Requested resource state.",
                    "enum": [
                      "started",
                      "stopped",
                      "enabled",
                      "disabled",
                      "ignored"
                    ],
                    "default": "started"
                  },
                  "type": {
                    "type": "string",
                    "description": "Resource type.",
                    "enum": [
                      "ct",
                      "vm"
                    ]
                  }
                },
                "required": [
                  "sid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/resources/cluster/ha/resources/{sid}": {
      "delete": {
        "summary": "Delete resource configuration.",
        "description": "Delete resource configuration.",
        "operationId": "delete_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sid parameter"
            },
            "description": "The sid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read resource configuration.",
        "description": "Read resource configuration.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sid parameter"
            },
            "description": "The sid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "Description."
                    },
                    "digest": {
                      "type": "string",
                      "description": "Can be used to prevent concurrent modifications."
                    },
                    "group": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "The HA group identifier."
                    },
                    "max_relocate": {
                      "type": "integer",
                      "description": "Maximal number of service relocate tries when a service failes to start."
                    },
                    "max_restart": {
                      "type": "integer",
                      "description": "Maximal number of tries to restart the service on a node after its start failed."
                    },
                    "sid": {
                      "type": "string",
                      "format": "pve-ha-resource-or-vm-id",
                      "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100)."
                    },
                    "state": {
                      "type": "string",
                      "description": "Requested resource state."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resources."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update resource configuration.",
        "description": "Update resource configuration.",
        "operationId": "put_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "group": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The HA group identifier."
                  },
                  "max_relocate": {
                    "type": "integer",
                    "description": "Maximal number of service relocate tries when a service failes to start.",
                    "minimum": 0,
                    "default": 1
                  },
                  "max_restart": {
                    "type": "integer",
                    "description": "Maximal number of tries to restart the service on a node after its start failed.",
                    "minimum": 0,
                    "default": 1
                  },
                  "state": {
                    "type": "string",
                    "description": "Requested resource state.",
                    "enum": [
                      "started",
                      "stopped",
                      "enabled",
                      "disabled",
                      "ignored"
                    ],
                    "default": "started"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sid parameter"
            },
            "description": "The sid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/resources/cluster/ha/resources/{sid}/cluster/ha/resources/{sid}/migrate": {
      "post": {
        "summary": "Request resource migration (online) to another node.",
        "description": "Request resource migration (online) to another node.",
        "operationId": "post_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid_cluster_ha_resources_sid_migrate",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node."
                  }
                },
                "required": [
                  "node"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sid parameter"
            },
            "description": "The sid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/resources/cluster/ha/resources/{sid}/cluster/ha/resources/{sid}/relocate": {
      "post": {
        "summary": "Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.",
        "description": "Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.",
        "operationId": "post_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid_cluster_ha_resources_sid_relocate",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node."
                  }
                },
                "required": [
                  "node"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The sid parameter"
            },
            "description": "The sid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/groups": {
      "get": {
        "summary": "Get HA groups.",
        "description": "Get HA groups.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_groups",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new HA group.",
        "description": "Create a new HA group.",
        "operationId": "post_cluster_cluster_ha_cluster_ha_groups",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "group": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The HA group identifier."
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-ha-group-node-list",
                    "description": "List of cluster node names with optional priority."
                  },
                  "nofailback": {
                    "type": "boolean",
                    "description": "The CRM tries to run services on the node with the highest priority. If a node with higher priority comes online, the CRM migrates the service to that node. Enabling nofailback prevents that behavior.",
                    "default": false
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Resources bound to restricted groups may only run on nodes defined by the group.",
                    "default": false
                  },
                  "type": {
                    "type": "string",
                    "description": "Group type.",
                    "enum": [
                      "group"
                    ]
                  }
                },
                "required": [
                  "group",
                  "nodes"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/groups/cluster/ha/groups/{group}": {
      "delete": {
        "summary": "Delete ha group configuration.",
        "description": "Delete ha group configuration.",
        "operationId": "delete_cluster_cluster_ha_cluster_ha_groups_cluster_ha_groups_group",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read ha group configuration.",
        "description": "Read ha group configuration.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_groups_cluster_ha_groups_group",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update ha group configuration.",
        "description": "Update ha group configuration.",
        "operationId": "put_cluster_cluster_ha_cluster_ha_groups_cluster_ha_groups_group",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-ha-group-node-list",
                    "description": "List of cluster node names with optional priority."
                  },
                  "nofailback": {
                    "type": "boolean",
                    "description": "The CRM tries to run services on the node with the highest priority. If a node with higher priority comes online, the CRM migrates the service to that node. Enabling nofailback prevents that behavior.",
                    "default": false
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Resources bound to restricted groups may only run on nodes defined by the group.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The group parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/status": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_status",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/status/cluster/ha/status/current": {
      "get": {
        "summary": "Get HA manger status.",
        "description": "Get HA manger status.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_status_cluster_ha_status_current",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "crm_state": {
                        "type": "string",
                        "description": "For type 'service'. Service state as seen by the CRM."
                      },
                      "id": {
                        "type": "string",
                        "description": "Status entry ID (quorum, master, lrm:<node>, service:<sid>)."
                      },
                      "max_relocate": {
                        "type": "integer",
                        "description": "For type 'service'."
                      },
                      "max_restart": {
                        "type": "integer",
                        "description": "For type 'service'."
                      },
                      "node": {
                        "type": "string",
                        "description": "Node associated to status entry."
                      },
                      "quorate": {
                        "type": "boolean",
                        "description": "For type 'quorum'. Whether the cluster is quorate or not."
                      },
                      "request_state": {
                        "type": "string",
                        "description": "For type 'service'. Requested service state."
                      },
                      "sid": {
                        "type": "string",
                        "description": "For type 'service'. Service ID."
                      },
                      "state": {
                        "type": "string",
                        "description": "For type 'service'. Verbose service state."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the entry (value depends on type)."
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "For type 'lrm','master'. Timestamp of the status information."
                      },
                      "type": {
                        "type": "object",
                        "description": "Type of status entry."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ha/cluster/ha/status/cluster/ha/status/manager_status": {
      "get": {
        "summary": "Get full HA manger status, including LRM status.",
        "description": "Get full HA manger status, including LRM status.",
        "operationId": "get_cluster_cluster_ha_cluster_ha_status_cluster_ha_status_manager_status",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme": {
      "get": {
        "summary": "ACMEAccount index.",
        "description": "ACMEAccount index.",
        "operationId": "get_cluster_cluster_acme",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/plugins": {
      "get": {
        "summary": "ACME plugin index.",
        "description": "ACME plugin index.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_plugins",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list ACME plugins of a specific type",
              "enum": [
                "dns",
                "standalone"
              ]
            },
            "description": "Only list ACME plugins of a specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "plugin": {
                        "type": "string",
                        "format": "pve-configid",
                        "description": "Unique identifier for ACME plugin instance."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Add ACME plugin configuration.",
        "description": "Add ACME plugin configuration.",
        "operationId": "post_cluster_cluster_acme_cluster_acme_plugins",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api": {
                    "type": "string",
                    "description": "API plugin name",
                    "enum": [
                      "1984hosting",
                      "acmedns",
                      "acmeproxy",
                      "active24",
                      "ad",
                      "ali",
                      "alviy",
                      "anx",
                      "artfiles",
                      "arvan",
                      "aurora",
                      "autodns",
                      "aws",
                      "azion",
                      "azure",
                      "bookmyname",
                      "bunny",
                      "cf",
                      "clouddns",
                      "cloudns",
                      "cn",
                      "conoha",
                      "constellix",
                      "cpanel",
                      "curanet",
                      "cyon",
                      "da",
                      "ddnss",
                      "desec",
                      "df",
                      "dgon",
                      "dnsexit",
                      "dnshome",
                      "dnsimple",
                      "dnsservices",
                      "doapi",
                      "domeneshop",
                      "dp",
                      "dpi",
                      "dreamhost",
                      "duckdns",
                      "durabledns",
                      "dyn",
                      "dynu",
                      "dynv6",
                      "easydns",
                      "edgedns",
                      "euserv",
                      "exoscale",
                      "fornex",
                      "freedns",
                      "gandi_livedns",
                      "gcloud",
                      "gcore",
                      "gd",
                      "geoscaling",
                      "googledomains",
                      "he",
                      "hetzner",
                      "hexonet",
                      "hostingde",
                      "huaweicloud",
                      "infoblox",
                      "infomaniak",
                      "internetbs",
                      "inwx",
                      "ionos",
                      "ionos_cloud",
                      "ipv64",
                      "ispconfig",
                      "jd",
                      "joker",
                      "kappernet",
                      "kas",
                      "kinghost",
                      "knot",
                      "la",
                      "leaseweb",
                      "lexicon",
                      "limacity",
                      "linode",
                      "linode_v4",
                      "loopia",
                      "lua",
                      "maradns",
                      "me",
                      "miab",
                      "misaka",
                      "myapi",
                      "mydevil",
                      "mydnsjp",
                      "mythic_beasts",
                      "namecheap",
                      "namecom",
                      "namesilo",
                      "nanelo",
                      "nederhost",
                      "neodigit",
                      "netcup",
                      "netlify",
                      "nic",
                      "njalla",
                      "nm",
                      "nsd",
                      "nsone",
                      "nsupdate",
                      "nw",
                      "oci",
                      "omglol",
                      "one",
                      "online",
                      "openprovider",
                      "openstack",
                      "opnsense",
                      "ovh",
                      "pdns",
                      "pleskxml",
                      "pointhq",
                      "porkbun",
                      "rackcorp",
                      "rackspace",
                      "rage4",
                      "rcode0",
                      "regru",
                      "scaleway",
                      "schlundtech",
                      "selectel",
                      "selfhost",
                      "servercow",
                      "simply",
                      "technitium",
                      "tele3",
                      "tencent",
                      "timeweb",
                      "transip",
                      "udr",
                      "ultra",
                      "unoeuro",
                      "variomedia",
                      "veesp",
                      "vercel",
                      "vscale",
                      "vultr",
                      "websupport",
                      "west_cn",
                      "world4you",
                      "yandex360",
                      "yc",
                      "zilore",
                      "zone",
                      "zoneedit",
                      "zonomi"
                    ]
                  },
                  "data": {
                    "type": "string",
                    "description": "DNS plugin data. (base64 encoded)"
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the config."
                  },
                  "id": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "ACME Plugin ID name"
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of cluster node names."
                  },
                  "type": {
                    "type": "string",
                    "description": "ACME challenge type.",
                    "enum": [
                      "dns",
                      "standalone"
                    ]
                  },
                  "validation-delay": {
                    "type": "integer",
                    "description": "Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records.",
                    "minimum": 0,
                    "maximum": 172800,
                    "default": 30
                  }
                },
                "required": [
                  "id",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/plugins/cluster/acme/plugins/{id}": {
      "delete": {
        "summary": "Delete ACME plugin configuration.",
        "description": "Delete ACME plugin configuration.",
        "operationId": "delete_cluster_cluster_acme_cluster_acme_plugins_cluster_acme_plugins_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get ACME plugin configuration.",
        "description": "Get ACME plugin configuration.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_plugins_cluster_acme_plugins_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update ACME plugin configuration.",
        "description": "Update ACME plugin configuration.",
        "operationId": "put_cluster_cluster_acme_cluster_acme_plugins_cluster_acme_plugins_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api": {
                    "type": "string",
                    "description": "API plugin name",
                    "enum": [
                      "1984hosting",
                      "acmedns",
                      "acmeproxy",
                      "active24",
                      "ad",
                      "ali",
                      "alviy",
                      "anx",
                      "artfiles",
                      "arvan",
                      "aurora",
                      "autodns",
                      "aws",
                      "azion",
                      "azure",
                      "bookmyname",
                      "bunny",
                      "cf",
                      "clouddns",
                      "cloudns",
                      "cn",
                      "conoha",
                      "constellix",
                      "cpanel",
                      "curanet",
                      "cyon",
                      "da",
                      "ddnss",
                      "desec",
                      "df",
                      "dgon",
                      "dnsexit",
                      "dnshome",
                      "dnsimple",
                      "dnsservices",
                      "doapi",
                      "domeneshop",
                      "dp",
                      "dpi",
                      "dreamhost",
                      "duckdns",
                      "durabledns",
                      "dyn",
                      "dynu",
                      "dynv6",
                      "easydns",
                      "edgedns",
                      "euserv",
                      "exoscale",
                      "fornex",
                      "freedns",
                      "gandi_livedns",
                      "gcloud",
                      "gcore",
                      "gd",
                      "geoscaling",
                      "googledomains",
                      "he",
                      "hetzner",
                      "hexonet",
                      "hostingde",
                      "huaweicloud",
                      "infoblox",
                      "infomaniak",
                      "internetbs",
                      "inwx",
                      "ionos",
                      "ionos_cloud",
                      "ipv64",
                      "ispconfig",
                      "jd",
                      "joker",
                      "kappernet",
                      "kas",
                      "kinghost",
                      "knot",
                      "la",
                      "leaseweb",
                      "lexicon",
                      "limacity",
                      "linode",
                      "linode_v4",
                      "loopia",
                      "lua",
                      "maradns",
                      "me",
                      "miab",
                      "misaka",
                      "myapi",
                      "mydevil",
                      "mydnsjp",
                      "mythic_beasts",
                      "namecheap",
                      "namecom",
                      "namesilo",
                      "nanelo",
                      "nederhost",
                      "neodigit",
                      "netcup",
                      "netlify",
                      "nic",
                      "njalla",
                      "nm",
                      "nsd",
                      "nsone",
                      "nsupdate",
                      "nw",
                      "oci",
                      "omglol",
                      "one",
                      "online",
                      "openprovider",
                      "openstack",
                      "opnsense",
                      "ovh",
                      "pdns",
                      "pleskxml",
                      "pointhq",
                      "porkbun",
                      "rackcorp",
                      "rackspace",
                      "rage4",
                      "rcode0",
                      "regru",
                      "scaleway",
                      "schlundtech",
                      "selectel",
                      "selfhost",
                      "servercow",
                      "simply",
                      "technitium",
                      "tele3",
                      "tencent",
                      "timeweb",
                      "transip",
                      "udr",
                      "ultra",
                      "unoeuro",
                      "variomedia",
                      "veesp",
                      "vercel",
                      "vscale",
                      "vultr",
                      "websupport",
                      "west_cn",
                      "world4you",
                      "yandex360",
                      "yc",
                      "zilore",
                      "zone",
                      "zoneedit",
                      "zonomi"
                    ]
                  },
                  "data": {
                    "type": "string",
                    "description": "DNS plugin data. (base64 encoded)"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the config."
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of cluster node names."
                  },
                  "validation-delay": {
                    "type": "integer",
                    "description": "Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records.",
                    "minimum": 0,
                    "maximum": 172800,
                    "default": 30
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/account": {
      "get": {
        "summary": "ACMEAccount index.",
        "description": "ACMEAccount index.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_account",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Register a new ACME account with CA.",
        "description": "Register a new ACME account with CA.",
        "operationId": "post_cluster_cluster_acme_cluster_acme_account",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact": {
                    "type": "string",
                    "format": "email-list",
                    "description": "Contact email addresses."
                  },
                  "directory": {
                    "type": "string",
                    "description": "URL of ACME CA directory endpoint.",
                    "pattern": "^https?://.*",
                    "default": "https://acme-v02.api.letsencrypt.org/directory"
                  },
                  "eab-hmac-key": {
                    "type": "string",
                    "description": "HMAC key for External Account Binding."
                  },
                  "eab-kid": {
                    "type": "string",
                    "description": "Key Identifier for External Account Binding."
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "ACME account config file name.",
                    "default": "default"
                  },
                  "tos_url": {
                    "type": "string",
                    "description": "URL of CA TermsOfService - setting this indicates agreement."
                  }
                },
                "required": [
                  "contact"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/account/cluster/acme/account/{name}": {
      "delete": {
        "summary": "Deactivate existing ACME account at CA.",
        "description": "Deactivate existing ACME account at CA.",
        "operationId": "delete_cluster_cluster_acme_cluster_acme_account_cluster_acme_account_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Return existing ACME account information.",
        "description": "Return existing ACME account information.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_account_cluster_acme_account_name",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account": {
                      "type": "object"
                    },
                    "directory": {
                      "type": "string",
                      "description": "URL of ACME CA directory endpoint."
                    },
                    "location": {
                      "type": "string"
                    },
                    "tos": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.",
        "description": "Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.",
        "operationId": "put_cluster_cluster_acme_cluster_acme_account_cluster_acme_account_name",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact": {
                    "type": "string",
                    "format": "email-list",
                    "description": "Contact email addresses."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/tos": {
      "get": {
        "summary": "Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.",
        "description": "Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_tos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "URL of ACME CA directory endpoint.",
              "pattern": "^https?://.*",
              "default": "https://acme-v02.api.letsencrypt.org/directory"
            },
            "description": "URL of ACME CA directory endpoint."
          }
        ],
        "responses": {
          "200": {
            "description": "ACME TermsOfService URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ACME TermsOfService URL."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/meta": {
      "get": {
        "summary": "Retrieve ACME Directory Meta Information",
        "description": "Retrieve ACME Directory Meta Information",
        "operationId": "get_cluster_cluster_acme_cluster_acme_meta",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "URL of ACME CA directory endpoint.",
              "pattern": "^https?://.*",
              "default": "https://acme-v02.api.letsencrypt.org/directory"
            },
            "description": "URL of ACME CA directory endpoint."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "caaIdentities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Hostnames referring to the ACME servers."
                    },
                    "externalAccountRequired": {
                      "type": "boolean",
                      "description": "EAB Required"
                    },
                    "termsOfService": {
                      "type": "string",
                      "description": "ACME TermsOfService URL."
                    },
                    "website": {
                      "type": "string",
                      "description": "URL to more information about the ACME server."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/directories": {
      "get": {
        "summary": "Get named known ACME directory endpoints.",
        "description": "Get named known ACME directory endpoints.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_directories",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL of ACME CA directory endpoint."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/acme/cluster/acme/challenge-schema": {
      "get": {
        "summary": "Get schema of ACME challenge types.",
        "description": "Get schema of ACME challenge types.",
        "operationId": "get_cluster_cluster_acme_cluster_acme_challenge-schema",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Human readable name, falls back to id"
                      },
                      "schema": {
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ceph": {
      "get": {
        "summary": "Cluster ceph index.",
        "description": "Cluster ceph index.",
        "operationId": "get_cluster_cluster_ceph",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ceph/cluster/ceph/metadata": {
      "get": {
        "summary": "Get ceph metadata.",
        "description": "Get ceph metadata.",
        "operationId": "get_cluster_cluster_ceph_cluster_ceph_metadata",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "versions"
              ],
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items for each type of service containing objects for each instance.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mds": {
                      "type": "object",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "properties": {
                            "addr": {
                              "type": "string",
                              "description": "Bind addresses and ports."
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the service instance."
                            }
                          },
                          "description": "Useful properties are listed, but not the full list."
                        }
                      },
                      "description": "Metadata servers configured in the cluster and their properties."
                    },
                    "mgr": {
                      "type": "object",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "properties": {
                            "addr": {
                              "type": "string",
                              "description": "Bind address"
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the service instance."
                            }
                          },
                          "description": "Useful properties are listed, but not the full list."
                        }
                      },
                      "description": "Managers configured in the cluster and their properties."
                    },
                    "mon": {
                      "type": "object",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "properties": {
                            "addrs": {
                              "type": "string",
                              "description": "Bind addresses and ports."
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the service instance."
                            }
                          },
                          "description": "Useful properties are listed, but not the full list."
                        }
                      },
                      "description": "Monitors configured in the cluster and their properties."
                    },
                    "node": {
                      "type": "object",
                      "properties": {
                        "{node}": {
                          "type": "object",
                          "properties": {
                            "buildcommit": {
                              "type": "string",
                              "description": "GIT commit used for the build."
                            },
                            "version": {
                              "type": "object",
                              "properties": {
                                "parts": {
                                  "type": "array",
                                  "description": "major, minor & patch"
                                },
                                "str": {
                                  "type": "string",
                                  "description": "Version as single string."
                                }
                              },
                              "description": "Version info."
                            }
                          }
                        }
                      },
                      "description": "Ceph version installed on the nodes."
                    },
                    "osd": {
                      "type": "array",
                      "description": "OSDs configured in the cluster and their properties."
                    }
                  },
                  "description": "Items for each type of service containing objects for each instance."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ceph/cluster/ceph/status": {
      "get": {
        "summary": "Get ceph status.",
        "description": "Get ceph status.",
        "operationId": "get_cluster_cluster_ceph_cluster_ceph_status",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ceph/cluster/ceph/flags": {
      "get": {
        "summary": "get the status of all ceph flags",
        "description": "get the status of all ceph flags",
        "operationId": "get_cluster_cluster_ceph_cluster_ceph_flags",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Flag description."
                      },
                      "name": {
                        "type": "string",
                        "description": "Flag name."
                      },
                      "value": {
                        "type": "boolean",
                        "description": "Flag value."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set/Unset multiple ceph flags at once.",
        "description": "Set/Unset multiple ceph flags at once.",
        "operationId": "put_cluster_cluster_ceph_cluster_ceph_flags",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nobackfill": {
                    "type": "boolean",
                    "description": "Backfilling of PGs is suspended."
                  },
                  "nodeep-scrub": {
                    "type": "boolean",
                    "description": "Deep Scrubbing is disabled."
                  },
                  "nodown": {
                    "type": "boolean",
                    "description": "OSD failure reports are being ignored, such that the monitors will not mark OSDs down."
                  },
                  "noin": {
                    "type": "boolean",
                    "description": "OSDs that were previously marked out will not be marked back in when they start."
                  },
                  "noout": {
                    "type": "boolean",
                    "description": "OSDs will not automatically be marked out after the configured interval."
                  },
                  "norebalance": {
                    "type": "boolean",
                    "description": "Rebalancing of PGs is suspended."
                  },
                  "norecover": {
                    "type": "boolean",
                    "description": "Recovery of PGs is suspended."
                  },
                  "noscrub": {
                    "type": "boolean",
                    "description": "Scrubbing is disabled."
                  },
                  "notieragent": {
                    "type": "boolean",
                    "description": "Cache tiering activity is suspended."
                  },
                  "noup": {
                    "type": "boolean",
                    "description": "OSDs are not allowed to start."
                  },
                  "pause": {
                    "type": "boolean",
                    "description": "Pauses read and writes."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/ceph/cluster/ceph/flags/cluster/ceph/flags/{flag}": {
      "get": {
        "summary": "Get the status of a specific ceph flag.",
        "description": "Get the status of a specific ceph flag.",
        "operationId": "get_cluster_cluster_ceph_cluster_ceph_flags_cluster_ceph_flags_flag",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "flag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The flag parameter"
            },
            "description": "The flag parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set or clear (unset) a specific ceph flag",
        "description": "Set or clear (unset) a specific ceph flag",
        "operationId": "put_cluster_cluster_ceph_cluster_ceph_flags_cluster_ceph_flags_flag",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "The new value of the flag"
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "flag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The flag parameter"
            },
            "description": "The flag parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/jobs": {
      "get": {
        "summary": "Index for jobs related endpoints.",
        "description": "Index for jobs related endpoints.",
        "operationId": "get_cluster_cluster_jobs",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Directory index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string",
                        "description": "API sub-directory endpoint"
                      }
                    }
                  },
                  "description": "Directory index."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/jobs/cluster/jobs/realm-sync": {
      "get": {
        "summary": "List configured realm-sync-jobs.",
        "description": "List configured realm-sync-jobs.",
        "operationId": "get_cluster_cluster_jobs_cluster_jobs_realm-sync",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment for the job."
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "If the job is enabled or not."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the entry."
                      },
                      "last-run": {
                        "type": "integer",
                        "description": "Last execution time of the job in seconds since the beginning of the UNIX epoch"
                      },
                      "next-run": {
                        "type": "integer",
                        "description": "Next planned execution time of the job in seconds since the beginning of the UNIX epoch."
                      },
                      "realm": {
                        "type": "string",
                        "format": "pve-realm",
                        "description": "Authentication domain ID"
                      },
                      "remove-vanished": {
                        "type": "string",
                        "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default)."
                      },
                      "schedule": {
                        "type": "string",
                        "description": "The configured sync schedule."
                      },
                      "scope": {
                        "type": "string",
                        "description": "Select what to sync."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/jobs/cluster/jobs/realm-sync/cluster/jobs/realm-sync/{id}": {
      "delete": {
        "summary": "Delete realm-sync job definition.",
        "description": "Delete realm-sync job definition.",
        "operationId": "delete_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read realm-sync job definition.",
        "description": "Read realm-sync job definition.",
        "operationId": "get_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new realm-sync job.",
        "description": "Create new realm-sync job.",
        "operationId": "post_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512
                  },
                  "enable-new": {
                    "type": "boolean",
                    "description": "Enable newly synced users immediately.",
                    "default": "1"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Determines if the job is enabled.",
                    "default": true
                  },
                  "realm": {
                    "type": "string",
                    "format": "pve-realm",
                    "description": "Authentication domain ID",
                    "maxLength": 32
                  },
                  "remove-vanished": {
                    "type": "string",
                    "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                    "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                    "default": "none"
                  },
                  "schedule": {
                    "type": "string",
                    "format": "pve-calendar-event",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128
                  },
                  "scope": {
                    "type": "string",
                    "description": "Select what to sync.",
                    "enum": [
                      "users",
                      "groups",
                      "both"
                    ]
                  }
                },
                "required": [
                  "schedule"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update realm-sync job definition.",
        "description": "Update realm-sync job definition.",
        "operationId": "put_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "enable-new": {
                    "type": "boolean",
                    "description": "Enable newly synced users immediately.",
                    "default": "1"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Determines if the job is enabled.",
                    "default": true
                  },
                  "remove-vanished": {
                    "type": "string",
                    "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                    "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                    "default": "none"
                  },
                  "schedule": {
                    "type": "string",
                    "format": "pve-calendar-event",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128
                  },
                  "scope": {
                    "type": "string",
                    "description": "Select what to sync.",
                    "enum": [
                      "users",
                      "groups",
                      "both"
                    ]
                  }
                },
                "required": [
                  "schedule"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/jobs/cluster/jobs/schedule-analyze": {
      "get": {
        "summary": "Returns a list of future schedule runtimes.",
        "description": "Returns a list of future schedule runtimes.",
        "operationId": "get_cluster_cluster_jobs_cluster_jobs_schedule-analyze",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "iterations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of event-iteration to simulate and return.",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of event-iteration to simulate and return."
          },
          {
            "name": "schedule",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-calendar-event",
              "description": "Job schedule. The format is a subset of `systemd` calendar events.",
              "maxLength": 128
            },
            "description": "Job schedule. The format is a subset of `systemd` calendar events."
          },
          {
            "name": "starttime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "UNIX timestamp to start the calculation from. Defaults to the current time."
            },
            "description": "UNIX timestamp to start the calculation from. Defaults to the current time."
          }
        ],
        "responses": {
          "200": {
            "description": "An array of the next <iterations> events since <starttime>.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "integer",
                        "description": "UNIX timestamp for the run."
                      },
                      "utc": {
                        "type": "string",
                        "description": "UTC timestamp for the run."
                      }
                    }
                  },
                  "description": "An array of the next <iterations> events since <starttime>."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping": {
      "get": {
        "summary": "List resource types.",
        "description": "List resource types.",
        "operationId": "get_cluster_cluster_mapping",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping/cluster/mapping/dir": {
      "get": {
        "summary": "List directory mapping",
        "description": "List directory mapping",
        "operationId": "get_cluster_cluster_mapping_cluster_mapping_dir",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "check-node",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-node",
              "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the directory to the response."
            },
            "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the directory to the response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "checks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "The message of the error"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The severity of the error"
                            }
                          }
                        },
                        "description": "A list of checks, only present if 'check-node' is set."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the logical mapping."
                      },
                      "id": {
                        "type": "string",
                        "description": "The logical ID of the mapping."
                      },
                      "map": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A mapping for a node."
                        },
                        "description": "The entries of the mapping."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new directory mapping.",
        "description": "Create a new directory mapping.",
        "operationId": "post_cluster_cluster_mapping_cluster_mapping_dir",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the directory mapping",
                    "maxLength": 4096
                  },
                  "id": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The ID of the directory mapping"
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id",
                  "map"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping/cluster/mapping/dir/cluster/mapping/dir/{id}": {
      "delete": {
        "summary": "Remove directory mapping.",
        "description": "Remove directory mapping.",
        "operationId": "delete_cluster_cluster_mapping_cluster_mapping_dir_cluster_mapping_dir_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get directory mapping.",
        "description": "Get directory mapping.",
        "operationId": "get_cluster_cluster_mapping_cluster_mapping_dir_cluster_mapping_dir_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update a directory mapping.",
        "description": "Update a directory mapping.",
        "operationId": "put_cluster_cluster_mapping_cluster_mapping_dir_cluster_mapping_dir_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the directory mapping",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping/cluster/mapping/pci": {
      "get": {
        "summary": "List PCI Hardware Mapping",
        "description": "List PCI Hardware Mapping",
        "operationId": "get_cluster_cluster_mapping_cluster_mapping_pci",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "check-node",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-node",
              "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the devices to the response."
            },
            "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the devices to the response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "checks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "The message of the error"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The severity of the error"
                            }
                          }
                        },
                        "description": "A list of checks, only present if 'check_node' is set."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the logical mapping."
                      },
                      "id": {
                        "type": "string",
                        "description": "The logical ID of the mapping."
                      },
                      "map": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A mapping for a node."
                        },
                        "description": "The entries of the mapping."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new hardware mapping.",
        "description": "Create a new hardware mapping.",
        "operationId": "post_cluster_cluster_mapping_cluster_mapping_pci",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the logical PCI device.",
                    "maxLength": 4096
                  },
                  "id": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The ID of the logical PCI mapping."
                  },
                  "live-migration-capable": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being able to be live-migrated (Experimental). This needs hardware and driver support to work.",
                    "default": false
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mdev": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being capable of providing mediated devices.",
                    "default": false
                  }
                },
                "required": [
                  "id",
                  "map"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping/cluster/mapping/pci/cluster/mapping/pci/{id}": {
      "delete": {
        "summary": "Remove Hardware Mapping.",
        "description": "Remove Hardware Mapping.",
        "operationId": "delete_cluster_cluster_mapping_cluster_mapping_pci_cluster_mapping_pci_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get PCI Mapping.",
        "description": "Get PCI Mapping.",
        "operationId": "get_cluster_cluster_mapping_cluster_mapping_pci_cluster_mapping_pci_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update a hardware mapping.",
        "description": "Update a hardware mapping.",
        "operationId": "put_cluster_cluster_mapping_cluster_mapping_pci_cluster_mapping_pci_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the logical PCI device.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "live-migration-capable": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being able to be live-migrated (Experimental). This needs hardware and driver support to work.",
                    "default": false
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mdev": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being capable of providing mediated devices.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping/cluster/mapping/usb": {
      "get": {
        "summary": "List USB Hardware Mappings",
        "description": "List USB Hardware Mappings",
        "operationId": "get_cluster_cluster_mapping_cluster_mapping_usb",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "check-node",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-node",
              "description": "If given, checks the configurations on the given node for correctness, and adds relevant errors to the devices."
            },
            "description": "If given, checks the configurations on the given node for correctness, and adds relevant errors to the devices."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "A description of the logical mapping."
                      },
                      "error": {
                        "type": "object",
                        "description": "A list of errors when 'check_node' is given."
                      },
                      "id": {
                        "type": "string",
                        "description": "The logical ID of the mapping."
                      },
                      "map": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A mapping for a node."
                        },
                        "description": "The entries of the mapping."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new hardware mapping.",
        "description": "Create a new hardware mapping.",
        "operationId": "post_cluster_cluster_mapping_cluster_mapping_usb",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the logical USB device.",
                    "maxLength": 4096
                  },
                  "id": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The ID of the logical USB mapping."
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id",
                  "map"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/mapping/cluster/mapping/usb/cluster/mapping/usb/{id}": {
      "delete": {
        "summary": "Remove Hardware Mapping.",
        "description": "Remove Hardware Mapping.",
        "operationId": "delete_cluster_cluster_mapping_cluster_mapping_usb_cluster_mapping_usb_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get USB Mapping.",
        "description": "Get USB Mapping.",
        "operationId": "get_cluster_cluster_mapping_cluster_mapping_usb_cluster_mapping_usb_id",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update a hardware mapping.",
        "description": "Update a hardware mapping.",
        "operationId": "put_cluster_cluster_mapping_cluster_mapping_usb_cluster_mapping_usb_id",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the logical USB device.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "map"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_cluster_cluster_sdn",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Apply sdn controller changes && reload.",
        "description": "Apply sdn controller changes && reload.",
        "operationId": "put_cluster_cluster_sdn",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets": {
      "get": {
        "summary": "SDN vnets index.",
        "description": "SDN vnets index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sdn vnet object.",
        "description": "Create a new sdn vnet object.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_vnets",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alias": {
                    "type": "string",
                    "description": "alias name of the vnet",
                    "maxLength": 256
                  },
                  "isolate-ports": {
                    "type": "boolean",
                    "description": "If true, sets the isolated property for all members of this VNet"
                  },
                  "tag": {
                    "type": "integer",
                    "description": "vlan or vxlan id"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type",
                    "enum": [
                      "vnet"
                    ]
                  },
                  "vlanaware": {
                    "type": "boolean",
                    "description": "Allow vm VLANs to pass through this vnet."
                  },
                  "vnet": {
                    "type": "string",
                    "format": "pve-sdn-vnet-id",
                    "description": "The SDN vnet object identifier."
                  },
                  "zone": {
                    "type": "string",
                    "description": "zone id"
                  }
                },
                "required": [
                  "vnet",
                  "zone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}": {
      "delete": {
        "summary": "Delete sdn vnet object configuration.",
        "description": "Delete sdn vnet object configuration.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read sdn vnet configuration.",
        "description": "Read sdn vnet configuration.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update sdn vnet object configuration.",
        "description": "Update sdn vnet object configuration.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alias": {
                    "type": "string",
                    "description": "alias name of the vnet",
                    "maxLength": 256
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "isolate-ports": {
                    "type": "boolean",
                    "description": "If true, sets the isolated property for all members of this VNet"
                  },
                  "tag": {
                    "type": "integer",
                    "description": "vlan or vxlan id"
                  },
                  "vlanaware": {
                    "type": "boolean",
                    "description": "Allow vm VLANs to pass through this vnet."
                  },
                  "zone": {
                    "type": "string",
                    "description": "zone id"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall/cluster/sdn/vnets/{vnet}/firewall/rules": {
      "get": {
        "summary": "List rules.",
        "description": "List rules.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new rule.",
        "description": "Create new rule.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                },
                "required": [
                  "action",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall/cluster/sdn/vnets/{vnet}/firewall/rules/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}": {
      "delete": {
        "summary": "Delete rule.",
        "description": "Delete rule.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules_cluster_sdn_vnets_vnet_firewall_rules_pos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get single rule data.",
        "description": "Get single rule data.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules_cluster_sdn_vnets_vnet_firewall_rules_pos",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "dest": {
                      "type": "string"
                    },
                    "dport": {
                      "type": "string"
                    },
                    "enable": {
                      "type": "integer"
                    },
                    "icmp-type": {
                      "type": "string"
                    },
                    "iface": {
                      "type": "string"
                    },
                    "ipversion": {
                      "type": "integer"
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule"
                    },
                    "macro": {
                      "type": "string"
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sport": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Modify rule data.",
        "description": "Modify rule data.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules_cluster_sdn_vnets_vnet_firewall_rules_pos",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall/cluster/sdn/vnets/{vnet}/firewall/options": {
      "get": {
        "summary": "Get vnet firewall options.",
        "description": "Get vnet firewall options.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_options",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "description": "Enable/disable firewall rules."
                    },
                    "log_level_forward": {
                      "type": "string",
                      "description": "Log level for forwarded traffic."
                    },
                    "policy_forward": {
                      "type": "string",
                      "description": "Forward policy."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set Firewall options.",
        "description": "Set Firewall options.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_options",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/disable firewall rules.",
                    "default": false
                  },
                  "log_level_forward": {
                    "type": "string",
                    "description": "Log level for forwarded traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "policy_forward": {
                    "type": "string",
                    "description": "Forward policy.",
                    "enum": [
                      "ACCEPT",
                      "DROP"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/subnets": {
      "get": {
        "summary": "SDN subnets index.",
        "description": "SDN subnets index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sdn subnet object.",
        "description": "Create a new sdn subnet object.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dhcp-dns-server": {
                    "type": "string",
                    "format": "ip",
                    "description": "IP address for the DNS server"
                  },
                  "dhcp-range": {
                    "type": "array",
                    "description": "A list of DHCP ranges for this subnet",
                    "items": {
                      "type": "string",
                      "format": "pve-sdn-dhcp-range"
                    }
                  },
                  "dnszoneprefix": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "dns domain zone prefix  ex: 'adm' -> <hostname>.adm.mydomain.com"
                  },
                  "gateway": {
                    "type": "string",
                    "format": "ip",
                    "description": "Subnet Gateway: Will be assign on vnet for layer3 zones"
                  },
                  "snat": {
                    "type": "boolean",
                    "description": "enable masquerade for this subnet if pve-firewall"
                  },
                  "subnet": {
                    "type": "string",
                    "format": "pve-sdn-subnet-id",
                    "description": "The SDN subnet object identifier."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "subnet"
                    ]
                  }
                },
                "required": [
                  "subnet",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/subnets/cluster/sdn/vnets/{vnet}/subnets/{subnet}": {
      "delete": {
        "summary": "Delete sdn subnet object configuration.",
        "description": "Delete sdn subnet object configuration.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets_cluster_sdn_vnets_vnet_subnets_subnet",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "subnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The subnet parameter"
            },
            "description": "The subnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read sdn subnet configuration.",
        "description": "Read sdn subnet configuration.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets_cluster_sdn_vnets_vnet_subnets_subnet",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "subnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The subnet parameter"
            },
            "description": "The subnet parameter"
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update sdn subnet object configuration.",
        "description": "Update sdn subnet object configuration.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets_cluster_sdn_vnets_vnet_subnets_subnet",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "dhcp-dns-server": {
                    "type": "string",
                    "format": "ip",
                    "description": "IP address for the DNS server"
                  },
                  "dhcp-range": {
                    "type": "array",
                    "description": "A list of DHCP ranges for this subnet",
                    "items": {
                      "type": "string",
                      "format": "pve-sdn-dhcp-range"
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dnszoneprefix": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "dns domain zone prefix  ex: 'adm' -> <hostname>.adm.mydomain.com"
                  },
                  "gateway": {
                    "type": "string",
                    "format": "ip",
                    "description": "Subnet Gateway: Will be assign on vnet for layer3 zones"
                  },
                  "snat": {
                    "type": "boolean",
                    "description": "enable masquerade for this subnet if pve-firewall"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "subnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The subnet parameter"
            },
            "description": "The subnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/ips": {
      "delete": {
        "summary": "Delete IP Mappings in a VNet",
        "description": "Delete IP Mappings in a VNet",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_ips",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          },
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ip",
              "description": "The IP address to delete"
            },
            "description": "The IP address to delete"
          },
          {
            "name": "mac",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "mac-addr",
              "description": "Unicast MAC address."
            },
            "description": "Unicast MAC address."
          },
          {
            "name": "zone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-sdn-zone-id",
              "description": "The SDN zone object identifier."
            },
            "description": "The SDN zone object identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create IP Mapping in a VNet",
        "description": "Create IP Mapping in a VNet",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_ips",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "format": "ip",
                    "description": "The IP address to associate with the given MAC address"
                  },
                  "mac": {
                    "type": "string",
                    "format": "mac-addr",
                    "description": "Unicast MAC address."
                  },
                  "zone": {
                    "type": "string",
                    "format": "pve-sdn-zone-id",
                    "description": "The SDN zone object identifier."
                  }
                },
                "required": [
                  "ip",
                  "zone"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP Mapping in a VNet",
        "description": "Update IP Mapping in a VNet",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_ips",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "format": "ip",
                    "description": "The IP address to associate with the given MAC address"
                  },
                  "mac": {
                    "type": "string",
                    "format": "mac-addr",
                    "description": "Unicast MAC address."
                  },
                  "vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  },
                  "zone": {
                    "type": "string",
                    "format": "pve-sdn-zone-id",
                    "description": "The SDN zone object identifier."
                  }
                },
                "required": [
                  "ip",
                  "zone"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The vnet parameter"
            },
            "description": "The vnet parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/zones": {
      "get": {
        "summary": "SDN zones index.",
        "description": "SDN zones index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_zones",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list SDN zones of specific type",
              "enum": [
                "evpn",
                "faucet",
                "qinq",
                "simple",
                "vlan",
                "vxlan"
              ]
            },
            "description": "Only list SDN zones of specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dhcp": {
                        "type": "string"
                      },
                      "dns": {
                        "type": "string"
                      },
                      "dnszone": {
                        "type": "string"
                      },
                      "ipam": {
                        "type": "string"
                      },
                      "mtu": {
                        "type": "integer"
                      },
                      "nodes": {
                        "type": "string"
                      },
                      "pending": {
                        "type": "boolean"
                      },
                      "reversedns": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "zone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sdn zone object.",
        "description": "Create a new sdn zone object.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_zones",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "advertise-subnets": {
                    "type": "boolean",
                    "description": "Advertise evpn subnets if you have silent hosts"
                  },
                  "bridge": {
                    "type": "string"
                  },
                  "bridge-disable-mac-learning": {
                    "type": "boolean",
                    "description": "Disable auto mac learning."
                  },
                  "controller": {
                    "type": "string",
                    "description": "Frr router name"
                  },
                  "dhcp": {
                    "type": "string",
                    "description": "Type of the DHCP backend for this zone",
                    "enum": [
                      "dnsmasq"
                    ]
                  },
                  "disable-arp-nd-suppression": {
                    "type": "boolean",
                    "description": "Disable ipv4 arp && ipv6 neighbour discovery suppression"
                  },
                  "dns": {
                    "type": "string",
                    "description": "dns api server"
                  },
                  "dnszone": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "dns domain zone  ex: mydomain.com"
                  },
                  "dp-id": {
                    "type": "integer",
                    "description": "Faucet dataplane id"
                  },
                  "exitnodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of cluster node names."
                  },
                  "exitnodes-local-routing": {
                    "type": "boolean",
                    "description": "Allow exitnodes to connect to evpn guests"
                  },
                  "exitnodes-primary": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Force traffic to this exitnode first."
                  },
                  "ipam": {
                    "type": "string",
                    "description": "use a specific ipam"
                  },
                  "mac": {
                    "type": "string",
                    "format": "mac-addr",
                    "description": "Anycast logical router mac address"
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU"
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of cluster node names."
                  },
                  "peers": {
                    "type": "string",
                    "format": "ip-list",
                    "description": "peers address list."
                  },
                  "reversedns": {
                    "type": "string",
                    "description": "reverse dns api server"
                  },
                  "rt-import": {
                    "type": "string",
                    "format": "pve-sdn-bgp-rt-list",
                    "description": "Route-Target import"
                  },
                  "tag": {
                    "type": "integer",
                    "description": "Service-VLAN Tag",
                    "minimum": 0
                  },
                  "type": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Plugin type.",
                    "enum": [
                      "evpn",
                      "faucet",
                      "qinq",
                      "simple",
                      "vlan",
                      "vxlan"
                    ]
                  },
                  "vlan-protocol": {
                    "type": "string",
                    "enum": [
                      "802.1q",
                      "802.1ad"
                    ],
                    "default": "802.1q"
                  },
                  "vrf-vxlan": {
                    "type": "integer",
                    "description": "l3vni."
                  },
                  "vxlan-port": {
                    "type": "integer",
                    "description": "Vxlan tunnel udp port (default 4789).",
                    "minimum": 1,
                    "maximum": 65536
                  },
                  "zone": {
                    "type": "string",
                    "format": "pve-sdn-zone-id",
                    "description": "The SDN zone object identifier."
                  }
                },
                "required": [
                  "type",
                  "zone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/zones/cluster/sdn/zones/{zone}": {
      "delete": {
        "summary": "Delete sdn zone object configuration.",
        "description": "Delete sdn zone object configuration.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_zones_cluster_sdn_zones_zone",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The zone parameter"
            },
            "description": "The zone parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read sdn zone configuration.",
        "description": "Read sdn zone configuration.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_zones_cluster_sdn_zones_zone",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The zone parameter"
            },
            "description": "The zone parameter"
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update sdn zone object configuration.",
        "description": "Update sdn zone object configuration.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_zones_cluster_sdn_zones_zone",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "advertise-subnets": {
                    "type": "boolean",
                    "description": "Advertise evpn subnets if you have silent hosts"
                  },
                  "bridge": {
                    "type": "string"
                  },
                  "bridge-disable-mac-learning": {
                    "type": "boolean",
                    "description": "Disable auto mac learning."
                  },
                  "controller": {
                    "type": "string",
                    "description": "Frr router name"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "dhcp": {
                    "type": "string",
                    "description": "Type of the DHCP backend for this zone",
                    "enum": [
                      "dnsmasq"
                    ]
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable-arp-nd-suppression": {
                    "type": "boolean",
                    "description": "Disable ipv4 arp && ipv6 neighbour discovery suppression"
                  },
                  "dns": {
                    "type": "string",
                    "description": "dns api server"
                  },
                  "dnszone": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "dns domain zone  ex: mydomain.com"
                  },
                  "dp-id": {
                    "type": "integer",
                    "description": "Faucet dataplane id"
                  },
                  "exitnodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of cluster node names."
                  },
                  "exitnodes-local-routing": {
                    "type": "boolean",
                    "description": "Allow exitnodes to connect to evpn guests"
                  },
                  "exitnodes-primary": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Force traffic to this exitnode first."
                  },
                  "ipam": {
                    "type": "string",
                    "description": "use a specific ipam"
                  },
                  "mac": {
                    "type": "string",
                    "format": "mac-addr",
                    "description": "Anycast logical router mac address"
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU"
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of cluster node names."
                  },
                  "peers": {
                    "type": "string",
                    "format": "ip-list",
                    "description": "peers address list."
                  },
                  "reversedns": {
                    "type": "string",
                    "description": "reverse dns api server"
                  },
                  "rt-import": {
                    "type": "string",
                    "format": "pve-sdn-bgp-rt-list",
                    "description": "Route-Target import"
                  },
                  "tag": {
                    "type": "integer",
                    "description": "Service-VLAN Tag",
                    "minimum": 0
                  },
                  "vlan-protocol": {
                    "type": "string",
                    "enum": [
                      "802.1q",
                      "802.1ad"
                    ],
                    "default": "802.1q"
                  },
                  "vrf-vxlan": {
                    "type": "integer",
                    "description": "l3vni."
                  },
                  "vxlan-port": {
                    "type": "integer",
                    "description": "Vxlan tunnel udp port (default 4789).",
                    "minimum": 1,
                    "maximum": 65536
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The zone parameter"
            },
            "description": "The zone parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/controllers": {
      "get": {
        "summary": "SDN controllers index.",
        "description": "SDN controllers index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_controllers",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list sdn controllers of specific type",
              "enum": [
                "bgp",
                "evpn",
                "faucet",
                "isis"
              ]
            },
            "description": "Only list sdn controllers of specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "controller": {
                        "type": "string"
                      },
                      "pending": {
                        "type": "boolean"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sdn controller object.",
        "description": "Create a new sdn controller object.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_controllers",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn": {
                    "type": "integer",
                    "description": "autonomous system number",
                    "minimum": 0,
                    "maximum": 4294967296
                  },
                  "bgp-multipath-as-path-relax": {
                    "type": "boolean"
                  },
                  "controller": {
                    "type": "string",
                    "format": "pve-sdn-controller-id",
                    "description": "The SDN controller object identifier."
                  },
                  "ebgp": {
                    "type": "boolean",
                    "description": "Enable ebgp. (remote-as external)"
                  },
                  "ebgp-multihop": {
                    "type": "integer"
                  },
                  "isis-domain": {
                    "type": "string",
                    "description": "ISIS domain."
                  },
                  "isis-ifaces": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "ISIS interface."
                  },
                  "isis-net": {
                    "type": "string",
                    "format": "pve-sdn-isis-net",
                    "description": "ISIS network entity title."
                  },
                  "loopback": {
                    "type": "string",
                    "description": "source loopback interface."
                  },
                  "node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "The cluster node name."
                  },
                  "peers": {
                    "type": "string",
                    "format": "ip-list",
                    "description": "peers address list."
                  },
                  "type": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Plugin type.",
                    "enum": [
                      "bgp",
                      "evpn",
                      "faucet",
                      "isis"
                    ]
                  }
                },
                "required": [
                  "controller",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/controllers/cluster/sdn/controllers/{controller}": {
      "delete": {
        "summary": "Delete sdn controller object configuration.",
        "description": "Delete sdn controller object configuration.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_controllers_cluster_sdn_controllers_controller",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "controller",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The controller parameter"
            },
            "description": "The controller parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read sdn controller configuration.",
        "description": "Read sdn controller configuration.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_controllers_cluster_sdn_controllers_controller",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "controller",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The controller parameter"
            },
            "description": "The controller parameter"
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display pending config."
            },
            "description": "Display pending config."
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Display running config."
            },
            "description": "Display running config."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update sdn controller object configuration.",
        "description": "Update sdn controller object configuration.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_controllers_cluster_sdn_controllers_controller",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn": {
                    "type": "integer",
                    "description": "autonomous system number",
                    "minimum": 0,
                    "maximum": 4294967296
                  },
                  "bgp-multipath-as-path-relax": {
                    "type": "boolean"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "ebgp": {
                    "type": "boolean",
                    "description": "Enable ebgp. (remote-as external)"
                  },
                  "ebgp-multihop": {
                    "type": "integer"
                  },
                  "isis-domain": {
                    "type": "string",
                    "description": "ISIS domain."
                  },
                  "isis-ifaces": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "ISIS interface."
                  },
                  "isis-net": {
                    "type": "string",
                    "format": "pve-sdn-isis-net",
                    "description": "ISIS network entity title."
                  },
                  "loopback": {
                    "type": "string",
                    "description": "source loopback interface."
                  },
                  "node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "The cluster node name."
                  },
                  "peers": {
                    "type": "string",
                    "format": "ip-list",
                    "description": "peers address list."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "controller",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The controller parameter"
            },
            "description": "The controller parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/ipams": {
      "get": {
        "summary": "SDN ipams index.",
        "description": "SDN ipams index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_ipams",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list sdn ipams of specific type",
              "enum": [
                "netbox",
                "phpipam",
                "pve"
              ]
            },
            "description": "Only list sdn ipams of specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ipam": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sdn ipam object.",
        "description": "Create a new sdn ipam object.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_ipams",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "ipam": {
                    "type": "string",
                    "format": "pve-sdn-ipam-id",
                    "description": "The SDN ipam object identifier."
                  },
                  "section": {
                    "type": "integer"
                  },
                  "token": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Plugin type.",
                    "enum": [
                      "netbox",
                      "phpipam",
                      "pve"
                    ]
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "ipam",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/ipams/cluster/sdn/ipams/{ipam}": {
      "delete": {
        "summary": "Delete sdn ipam object configuration.",
        "description": "Delete sdn ipam object configuration.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ipam parameter"
            },
            "description": "The ipam parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read sdn ipam configuration.",
        "description": "Read sdn ipam configuration.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ipam parameter"
            },
            "description": "The ipam parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update sdn ipam object configuration.",
        "description": "Update sdn ipam object configuration.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "section": {
                    "type": "integer"
                  },
                  "token": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ipam parameter"
            },
            "description": "The ipam parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/ipams/cluster/sdn/ipams/{ipam}/cluster/sdn/ipams/{ipam}/status": {
      "get": {
        "summary": "List PVE IPAM Entries",
        "description": "List PVE IPAM Entries",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam_cluster_sdn_ipams_ipam_status",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ipam parameter"
            },
            "description": "The ipam parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/dns": {
      "get": {
        "summary": "SDN dns index.",
        "description": "SDN dns index.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_dns",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list sdn dns of specific type",
              "enum": [
                "powerdns"
              ]
            },
            "description": "Only list sdn dns of specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dns": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new sdn dns object.",
        "description": "Create a new sdn dns object.",
        "operationId": "post_cluster_cluster_sdn_cluster_sdn_dns",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dns": {
                    "type": "string",
                    "format": "pve-sdn-dns-id",
                    "description": "The SDN dns object identifier."
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "key": {
                    "type": "string"
                  },
                  "reversemaskv6": {
                    "type": "integer"
                  },
                  "reversev6mask": {
                    "type": "integer"
                  },
                  "ttl": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Plugin type.",
                    "enum": [
                      "powerdns"
                    ]
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "dns",
                  "key",
                  "type",
                  "url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/sdn/cluster/sdn/dns/cluster/sdn/dns/{dns}": {
      "delete": {
        "summary": "Delete sdn dns object configuration.",
        "description": "Delete sdn dns object configuration.",
        "operationId": "delete_cluster_cluster_sdn_cluster_sdn_dns_cluster_sdn_dns_dns",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "dns",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The dns parameter"
            },
            "description": "The dns parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read sdn dns configuration.",
        "description": "Read sdn dns configuration.",
        "operationId": "get_cluster_cluster_sdn_cluster_sdn_dns_cluster_sdn_dns_dns",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "dns",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The dns parameter"
            },
            "description": "The dns parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update sdn dns object configuration.",
        "description": "Update sdn dns object configuration.",
        "operationId": "put_cluster_cluster_sdn_cluster_sdn_dns_cluster_sdn_dns_dns",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "key": {
                    "type": "string"
                  },
                  "reversemaskv6": {
                    "type": "integer"
                  },
                  "ttl": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "dns",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The dns parameter"
            },
            "description": "The dns parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/log": {
      "get": {
        "summary": "Read cluster log",
        "description": "Read cluster log",
        "operationId": "get_cluster_cluster_log",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of entries.",
              "minimum": 1
            },
            "description": "Maximum number of entries."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/resources": {
      "get": {
        "summary": "Resources index (cluster wide).",
        "description": "Resources index (cluster wide).",
        "operationId": "get_cluster_cluster_resources",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Resource type.",
              "enum": [
                "vm",
                "storage",
                "node",
                "sdn"
              ]
            },
            "description": "Resource type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cgroup-mode": {
                        "type": "integer",
                        "description": "The cgroup mode the node operates under (for type 'node')."
                      },
                      "content": {
                        "type": "string",
                        "format": "pve-storage-content-list",
                        "description": "Allowed storage content types (for type 'storage')."
                      },
                      "cpu": {
                        "type": "number",
                        "description": "CPU utilization (for types 'node', 'qemu' and 'lxc')."
                      },
                      "disk": {
                        "type": "integer",
                        "description": "Used disk space in bytes (for type 'storage'), used root image space for VMs (for types 'qemu' and 'lxc')."
                      },
                      "diskread": {
                        "type": "integer",
                        "description": "The amount of bytes the guest read from its block devices since the guest was started. This info is not available for all storage types. (for types 'qemu' and 'lxc')"
                      },
                      "diskwrite": {
                        "type": "integer",
                        "description": "The amount of bytes the guest wrote to its block devices since the guest was started. This info is not available for all storage types. (for types 'qemu' and 'lxc')"
                      },
                      "hastate": {
                        "type": "string",
                        "description": "HA service status (for HA managed VMs)."
                      },
                      "id": {
                        "type": "string",
                        "description": "Resource id."
                      },
                      "level": {
                        "type": "string",
                        "description": "Support level (for type 'node')."
                      },
                      "lock": {
                        "type": "string",
                        "description": "The guest's current config lock (for types 'qemu' and 'lxc')"
                      },
                      "maxcpu": {
                        "type": "number",
                        "description": "Number of available CPUs (for types 'node', 'qemu' and 'lxc')."
                      },
                      "maxdisk": {
                        "type": "integer",
                        "description": "Storage size in bytes (for type 'storage'), root image size for VMs (for types 'qemu' and 'lxc')."
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Number of available memory in bytes (for types 'node', 'qemu' and 'lxc')."
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Used memory in bytes (for types 'node', 'qemu' and 'lxc')."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the resource."
                      },
                      "netin": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started. (for types 'qemu' and 'lxc')"
                      },
                      "netout": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started. (for types 'qemu' and 'lxc')"
                      },
                      "node": {
                        "type": "string",
                        "format": "pve-node",
                        "description": "The cluster node name (for types 'node', 'storage', 'qemu', and 'lxc')."
                      },
                      "plugintype": {
                        "type": "string",
                        "description": "More specific type, if available."
                      },
                      "pool": {
                        "type": "string",
                        "description": "The pool name (for types 'pool', 'qemu' and 'lxc')."
                      },
                      "status": {
                        "type": "string",
                        "description": "Resource type dependent status."
                      },
                      "storage": {
                        "type": "string",
                        "format": "pve-storage-id",
                        "description": "The storage identifier (for type 'storage')."
                      },
                      "tags": {
                        "type": "string",
                        "description": "The guest's tags (for types 'qemu' and 'lxc')"
                      },
                      "template": {
                        "type": "boolean",
                        "description": "Determines if the guest is a template. (for types 'qemu' and 'lxc')"
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource type."
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Uptime of node or virtual guest in seconds (for types 'node', 'qemu' and 'lxc')."
                      },
                      "vmid": {
                        "type": "integer",
                        "format": "pve-vmid",
                        "description": "The numerical vmid (for types 'qemu' and 'lxc')."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/tasks": {
      "get": {
        "summary": "List recent tasks (cluster wide).",
        "description": "List recent tasks (cluster wide).",
        "operationId": "get_cluster_cluster_tasks",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "upid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/options": {
      "get": {
        "summary": "Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.",
        "description": "Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.",
        "operationId": "get_cluster_cluster_options",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set datacenter options.",
        "description": "Set datacenter options.",
        "operationId": "put_cluster_cluster_options",
        "tags": [
          "Cluster"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "string",
                    "description": "Set I/O bandwidth limit for various operations (in KiB/s)."
                  },
                  "consent-text": {
                    "type": "string",
                    "description": "Consent text that is displayed before logging in.",
                    "maxLength": 65536
                  },
                  "console": {
                    "type": "string",
                    "description": "Select the default Console viewer. You can either use the builtin java applet (VNC; deprecated and maps to html5), an external virt-viewer comtatible application (SPICE), an HTML5 based vnc viewer (noVNC), or an HTML5 based console client (xtermjs). If the selected viewer is not available (e.g. SPICE not activated for the VM), the fallback is noVNC.",
                    "enum": [
                      "applet",
                      "vv",
                      "html5",
                      "xtermjs"
                    ]
                  },
                  "crs": {
                    "type": "string",
                    "description": "Cluster resource scheduling settings."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "description": {
                    "type": "string",
                    "description": "Datacenter description. Shown in the web-interface datacenter notes panel. This is saved as comment inside the configuration file.",
                    "maxLength": 65536
                  },
                  "email_from": {
                    "type": "string",
                    "format": "email-opt",
                    "description": "Specify email address to send notification from (default is root@$hostname)"
                  },
                  "fencing": {
                    "type": "string",
                    "description": "Set the fencing mode of the HA cluster. Hardware mode needs a valid configuration of fence devices in /etc/pve/ha/fence.cfg. With both all two modes are used.\n\nWARNING: 'hardware' and 'both' are EXPERIMENTAL & WIP",
                    "enum": [
                      "watchdog",
                      "hardware",
                      "both"
                    ],
                    "default": "watchdog"
                  },
                  "ha": {
                    "type": "string",
                    "description": "Cluster wide HA settings."
                  },
                  "http_proxy": {
                    "type": "string",
                    "description": "Specify external http proxy which is used for downloads (example: 'http://username:password@host:port/')",
                    "pattern": "http://.*"
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Default keybord layout for vnc server.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ]
                  },
                  "language": {
                    "type": "string",
                    "description": "Default GUI language.",
                    "enum": [
                      "ar",
                      "ca",
                      "da",
                      "de",
                      "en",
                      "es",
                      "eu",
                      "fa",
                      "fr",
                      "hr",
                      "he",
                      "it",
                      "ja",
                      "ka",
                      "kr",
                      "nb",
                      "nl",
                      "nn",
                      "pl",
                      "pt_BR",
                      "ru",
                      "sl",
                      "sv",
                      "tr",
                      "ukr",
                      "zh_CN",
                      "zh_TW"
                    ]
                  },
                  "mac_prefix": {
                    "type": "string",
                    "format": "mac-prefix",
                    "description": "Prefix for the auto-generated MAC addresses of virtual guests. The default 'BC:24:11' is the OUI assigned by the IEEE to Proxmox Server Solutions GmbH for a 24-bit large MAC block. You're allowed to use this in local networks, i.e., those not directly reachable by the public (e.g., in a LAN or behind NAT).",
                    "default": "BC:24:11"
                  },
                  "max_workers": {
                    "type": "integer",
                    "description": "Defines how many workers (per node) are maximal started  on actions like 'stopall VMs' or task from the ha-manager.",
                    "minimum": 1
                  },
                  "migration": {
                    "type": "string",
                    "description": "For cluster wide migration settings."
                  },
                  "migration_unsecure": {
                    "type": "boolean",
                    "description": "Migration is secure using SSH tunnel by default. For secure private networks you can disable it to speed up migration. Deprecated, use the 'migration' property instead!"
                  },
                  "next-id": {
                    "type": "string",
                    "description": "Control the range for the free VMID auto-selection pool."
                  },
                  "notify": {
                    "type": "string",
                    "description": "Cluster-wide notification settings."
                  },
                  "registered-tags": {
                    "type": "string",
                    "description": "A list of tags that require a `Sys.Modify` on '/' to set and delete. Tags set here that are also in 'user-tag-access' also require `Sys.Modify`."
                  },
                  "tag-style": {
                    "type": "string",
                    "description": "Tag style options."
                  },
                  "u2f": {
                    "type": "string",
                    "description": "u2f"
                  },
                  "user-tag-access": {
                    "type": "string",
                    "description": "Privilege options for user-settable tags"
                  },
                  "webauthn": {
                    "type": "string",
                    "description": "webauthn configuration"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/status": {
      "get": {
        "summary": "Get cluster status information.",
        "description": "Get cluster status information.",
        "operationId": "get_cluster_cluster_status",
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "ip": {
                        "type": "string",
                        "description": "[node] IP of the resolved nodename."
                      },
                      "level": {
                        "type": "string",
                        "description": "[node] Proxmox VE Subscription level, indicates if eligible for enterprise support as well as access to the stable Proxmox VE Enterprise Repository."
                      },
                      "local": {
                        "type": "boolean",
                        "description": "[node] Indicates if this is the responding node."
                      },
                      "name": {
                        "type": "string"
                      },
                      "nodeid": {
                        "type": "integer",
                        "description": "[node] ID of the node from the corosync configuration."
                      },
                      "nodes": {
                        "type": "integer",
                        "description": "[cluster] Nodes count, including offline nodes."
                      },
                      "online": {
                        "type": "boolean",
                        "description": "[node] Indicates if the node is online or offline."
                      },
                      "quorate": {
                        "type": "boolean",
                        "description": "[cluster] Indicates if there is a majority of nodes online to make decisions"
                      },
                      "type": {
                        "type": "string",
                        "description": "Indicates the type, either cluster or node. The type defines the object properties e.g. quorate available for type cluster."
                      },
                      "version": {
                        "type": "integer",
                        "description": "[cluster] Current version of the corosync configuration file."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/cluster/cluster/nextid": {
      "get": {
        "summary": "Get next free VMID. Pass a VMID to assert that its free (at time of check).",
        "description": "Get next free VMID. Pass a VMID to assert that its free (at time of check).",
        "operationId": "get_cluster_cluster_nextid",
        "tags": [
          "Cluster"
        ],
        "parameters": [
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "pve-vmid",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999
            },
            "description": "The (unique) ID of the VM."
          }
        ],
        "responses": {
          "200": {
            "description": "The next free VMID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "The next free VMID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes": {
      "get": {
        "summary": "Cluster node index.",
        "description": "Cluster node index.",
        "operationId": "get_nodes",
        "tags": [
          "Nodes"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "number",
                        "description": "CPU utilization."
                      },
                      "level": {
                        "type": "string",
                        "description": "Support level."
                      },
                      "maxcpu": {
                        "type": "integer",
                        "description": "Number of available CPUs."
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Number of available memory in bytes."
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Used memory in bytes."
                      },
                      "node": {
                        "type": "string",
                        "format": "pve-node",
                        "description": "The cluster node name."
                      },
                      "ssl_fingerprint": {
                        "type": "string",
                        "description": "The SSL fingerprint for the node certificate."
                      },
                      "status": {
                        "type": "string",
                        "description": "Node status."
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Node uptime in seconds."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}": {
      "get": {
        "summary": "Node index.",
        "description": "Node index.",
        "operationId": "get_nodes_nodes_node",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu": {
      "get": {
        "summary": "Virtual machine index (per node).",
        "description": "Virtual machine index (per node).",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "full",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Determine the full status of active VMs."
            },
            "description": "Determine the full status of active VMs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "number",
                        "description": "Current CPU usage."
                      },
                      "cpus": {
                        "type": "number",
                        "description": "Maximum usable CPUs."
                      },
                      "diskread": {
                        "type": "integer",
                        "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                      },
                      "diskwrite": {
                        "type": "integer",
                        "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                      },
                      "lock": {
                        "type": "string",
                        "description": "The current config lock, if any."
                      },
                      "maxdisk": {
                        "type": "integer",
                        "description": "Root disk size in bytes."
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Maximum memory in bytes."
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Currently used memory in bytes."
                      },
                      "name": {
                        "type": "string",
                        "description": "VM (host)name."
                      },
                      "netin": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started."
                      },
                      "netout": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started."
                      },
                      "pid": {
                        "type": "integer",
                        "description": "PID of the QEMU process, if the VM is running."
                      },
                      "qmpstatus": {
                        "type": "string",
                        "description": "VM run state from the 'query-status' QMP monitor command."
                      },
                      "running-machine": {
                        "type": "string",
                        "description": "The currently running machine type (if running)."
                      },
                      "running-qemu": {
                        "type": "string",
                        "description": "The QEMU version the VM is currently using (if running)."
                      },
                      "serial": {
                        "type": "boolean",
                        "description": "Guest has serial device configured."
                      },
                      "status": {
                        "type": "string",
                        "description": "QEMU process status."
                      },
                      "tags": {
                        "type": "string",
                        "description": "The current configured tags, if any"
                      },
                      "template": {
                        "type": "boolean",
                        "description": "Determines if the guest is a template."
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Uptime in seconds."
                      },
                      "vmid": {
                        "type": "integer",
                        "format": "pve-vmid",
                        "description": "The (unique) ID of the VM."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create or restore a virtual machine.",
        "description": "Create or restore a virtual machine.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acpi": {
                    "type": "boolean",
                    "description": "Enable/disable ACPI.",
                    "default": true
                  },
                  "affinity": {
                    "type": "string",
                    "format": "pve-cpuset",
                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11"
                  },
                  "agent": {
                    "type": "string",
                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties."
                  },
                  "amd-sev": {
                    "type": "string",
                    "format": "pve-qemu-sev-fmt",
                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs"
                  },
                  "arch": {
                    "type": "string",
                    "description": "Virtual processor architecture. Defaults to the host.",
                    "enum": [
                      "x86_64",
                      "aarch64"
                    ]
                  },
                  "archive": {
                    "type": "string",
                    "description": "The backup archive. Either the file system path to a .tar or .vma file (use '-' to pipe data from stdin) or a proxmox storage backup volume identifier.",
                    "maxLength": 255
                  },
                  "args": {
                    "type": "string",
                    "description": "Arbitrary arguments passed to kvm."
                  },
                  "audio0": {
                    "type": "string",
                    "description": "Configure a audio device, useful in combination with QXL/Spice."
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatic restart after crash (currently ignored).",
                    "default": false
                  },
                  "balloon": {
                    "type": "integer",
                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                    "minimum": 0
                  },
                  "bios": {
                    "type": "string",
                    "description": "Select BIOS implementation.",
                    "enum": [
                      "seabios",
                      "ovmf"
                    ],
                    "default": "seabios"
                  },
                  "boot": {
                    "type": "string",
                    "format": "pve-qm-boot",
                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated."
                  },
                  "bootdisk": {
                    "type": "string",
                    "format": "pve-qm-bootdisk",
                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                    "pattern": "(ide|sata|scsi|virtio)\\d+"
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "restore limit from datacenter or storage config"
                  },
                  "cdrom": {
                    "type": "string",
                    "format": "pve-qm-ide",
                    "description": "This is an alias for option -ide2"
                  },
                  "cicustom": {
                    "type": "string",
                    "format": "pve-qm-cicustom",
                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start."
                  },
                  "cipassword": {
                    "type": "string",
                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords."
                  },
                  "citype": {
                    "type": "string",
                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                    "enum": [
                      "configdrive2",
                      "nocloud",
                      "opennebula"
                    ]
                  },
                  "ciupgrade": {
                    "type": "boolean",
                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                    "default": true
                  },
                  "ciuser": {
                    "type": "string",
                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user."
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores per socket.",
                    "minimum": 1,
                    "default": 1
                  },
                  "cpu": {
                    "type": "string",
                    "format": "pve-vm-cpu-conf",
                    "description": "Emulated CPU type."
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.",
                    "minimum": 0,
                    "maximum": 128,
                    "default": 0
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                    "minimum": 1,
                    "maximum": 262144,
                    "default": "cgroup v1: 1024, cgroup v2: 100"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192
                  },
                  "efidisk0": {
                    "type": "string",
                    "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Allow to overwrite existing VM."
                  },
                  "freeze": {
                    "type": "boolean",
                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution)."
                  },
                  "hookscript": {
                    "type": "string",
                    "format": "pve-volume-id",
                    "description": "Script that will be executed during various steps in the vms lifetime."
                  },
                  "hostpci[n]": {
                    "type": "string",
                    "format": "pve-qm-hostpci",
                    "description": "Map host PCI devices into guest."
                  },
                  "hotplug": {
                    "type": "string",
                    "format": "pve-hotplug-features",
                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                    "default": "network,disk,usb"
                  },
                  "hugepages": {
                    "type": "string",
                    "description": "Enable/disable hugepages memory.",
                    "enum": [
                      "any",
                      "2",
                      "1024"
                    ]
                  },
                  "ide[n]": {
                    "type": "string",
                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "import-working-storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "A file-based storage with 'images' content-type enabled, which is used as an intermediary extraction storage during import. Defaults to the source storage."
                  },
                  "ipconfig[n]": {
                    "type": "string",
                    "format": "pve-qm-ipconfig",
                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
                  },
                  "ivshmem": {
                    "type": "string",
                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host."
                  },
                  "keephugepages": {
                    "type": "boolean",
                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                    "default": false
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ]
                  },
                  "kvm": {
                    "type": "boolean",
                    "description": "Enable/disable KVM hardware virtualization.",
                    "default": true
                  },
                  "live-restore": {
                    "type": "boolean",
                    "description": "Start the VM immediately while importing or restoring in the background."
                  },
                  "localtime": {
                    "type": "boolean",
                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS."
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the VM.",
                    "enum": [
                      "backup",
                      "clone",
                      "create",
                      "migrate",
                      "rollback",
                      "snapshot",
                      "snapshot-delete",
                      "suspending",
                      "suspended"
                    ]
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine."
                  },
                  "memory": {
                    "type": "string",
                    "description": "Memory properties."
                  },
                  "migrate_downtime": {
                    "type": "number",
                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                    "minimum": 0,
                    "default": 0.1
                  },
                  "migrate_speed": {
                    "type": "integer",
                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                    "minimum": 0,
                    "default": 0
                  },
                  "name": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a name for the VM. Only used on the configuration web interface."
                  },
                  "nameserver": {
                    "type": "string",
                    "format": "address-list",
                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specify network devices."
                  },
                  "numa": {
                    "type": "boolean",
                    "description": "Enable/disable NUMA.",
                    "default": false
                  },
                  "numa[n]": {
                    "type": "string",
                    "description": "NUMA topology."
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a VM will be started during system bootup.",
                    "default": false
                  },
                  "ostype": {
                    "type": "string",
                    "description": "Specify guest operating system.",
                    "enum": [
                      "other",
                      "wxp",
                      "w2k",
                      "w2k3",
                      "w2k8",
                      "wvista",
                      "win7",
                      "win8",
                      "win10",
                      "win11",
                      "l24",
                      "l26",
                      "solaris"
                    ]
                  },
                  "parallel[n]": {
                    "type": "string",
                    "description": "Map host parallel devices (n is 0 to 2).",
                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                  },
                  "pool": {
                    "type": "string",
                    "format": "pve-poolid",
                    "description": "Add the VM to the specified pool."
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                    "default": false
                  },
                  "reboot": {
                    "type": "boolean",
                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                    "default": true
                  },
                  "rng0": {
                    "type": "string",
                    "format": "pve-qm-rng",
                    "description": "Configure a VirtIO-based Random Number Generator."
                  },
                  "sata[n]": {
                    "type": "string",
                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "scsi[n]": {
                    "type": "string",
                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "scsihw": {
                    "type": "string",
                    "description": "SCSI controller model",
                    "enum": [
                      "lsi",
                      "lsi53c810",
                      "virtio-scsi-pci",
                      "virtio-scsi-single",
                      "megasas",
                      "pvscsi"
                    ],
                    "default": "lsi"
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                  },
                  "serial[n]": {
                    "type": "string",
                    "description": "Create a serial device inside the VM (n is 0 to 3)",
                    "pattern": "(/dev/.+|socket)"
                  },
                  "shares": {
                    "type": "integer",
                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                    "minimum": 0,
                    "maximum": 50000,
                    "default": 1000
                  },
                  "smbios1": {
                    "type": "string",
                    "format": "pve-qm-smbios1",
                    "description": "Specify SMBIOS type 1 fields.",
                    "maxLength": 512
                  },
                  "smp": {
                    "type": "integer",
                    "description": "The number of CPUs. Please use option -sockets instead.",
                    "minimum": 1,
                    "default": 1
                  },
                  "sockets": {
                    "type": "integer",
                    "description": "The number of CPU sockets.",
                    "minimum": 1,
                    "default": 1
                  },
                  "spice_enhancements": {
                    "type": "string",
                    "description": "Configure additional enhancements for SPICE."
                  },
                  "sshkeys": {
                    "type": "string",
                    "format": "urlencoded",
                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format)."
                  },
                  "start": {
                    "type": "boolean",
                    "description": "Start VM after it was created successfully.",
                    "default": false
                  },
                  "startdate": {
                    "type": "string",
                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                    "default": "now"
                  },
                  "startup": {
                    "type": "string",
                    "format": "pve-startup-order",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Default storage."
                  },
                  "tablet": {
                    "type": "boolean",
                    "description": "Enable/disable the USB tablet device.",
                    "default": true
                  },
                  "tags": {
                    "type": "string",
                    "format": "pve-tag-list",
                    "description": "Tags of the VM. This is only meta information."
                  },
                  "tdf": {
                    "type": "boolean",
                    "description": "Enable/disable time drift fix.",
                    "default": false
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false
                  },
                  "tpmstate0": {
                    "type": "string",
                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Assign a unique random ethernet address."
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                  },
                  "usb[n]": {
                    "type": "string",
                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14)."
                  },
                  "vcpus": {
                    "type": "integer",
                    "description": "Number of hotplugged vcpus.",
                    "minimum": 1,
                    "default": 0
                  },
                  "vga": {
                    "type": "string",
                    "description": "Configure the VGA hardware."
                  },
                  "virtio[n]": {
                    "type": "string",
                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "virtiofs[n]": {
                    "type": "string",
                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs."
                  },
                  "vmgenid": {
                    "type": "string",
                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                    "default": "1 (autogenerated)"
                  },
                  "vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  },
                  "vmstatestorage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Default storage for VM state volumes/files."
                  },
                  "watchdog": {
                    "type": "string",
                    "format": "pve-qm-watchdog",
                    "description": "Create a virtual hardware watchdog device."
                  }
                },
                "required": [
                  "vmid"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}": {
      "delete": {
        "summary": "Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules",
        "description": "Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules",
        "operationId": "delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "destroy-unreferenced-disks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set, destroy additionally all disks not referenced in the config but with a matching VMID from all enabled storages.",
              "default": false
            },
            "description": "If set, destroy additionally all disks not referenced in the config but with a matching VMID from all enabled storages."
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Remove VMID from configurations, like backup & replication jobs and HA."
            },
            "description": "Remove VMID from configurations, like backup & replication jobs and HA."
          },
          {
            "name": "skiplock",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Ignore locks - only root is allowed to use this option."
            },
            "description": "Ignore locks - only root is allowed to use this option."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Directory index",
        "description": "Directory index",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/rules": {
      "get": {
        "summary": "List rules.",
        "description": "List rules.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new rule.",
        "description": "Create new rule.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                },
                "required": [
                  "action",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/rules/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}": {
      "delete": {
        "summary": "Delete rule.",
        "description": "Delete rule.",
        "operationId": "delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules_nodes_node_qemu_vmid_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get single rule data.",
        "description": "Get single rule data.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules_nodes_node_qemu_vmid_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "dest": {
                      "type": "string"
                    },
                    "dport": {
                      "type": "string"
                    },
                    "enable": {
                      "type": "integer"
                    },
                    "icmp-type": {
                      "type": "string"
                    },
                    "iface": {
                      "type": "string"
                    },
                    "ipversion": {
                      "type": "integer"
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule"
                    },
                    "macro": {
                      "type": "string"
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sport": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Modify rule data.",
        "description": "Modify rule data.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules_nodes_node_qemu_vmid_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/aliases": {
      "get": {
        "summary": "List aliases",
        "description": "List aliases",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create IP or Network Alias.",
        "description": "Create IP or Network Alias.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDR",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Alias name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr",
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/aliases/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}": {
      "delete": {
        "summary": "Remove IP or Network alias.",
        "description": "Remove IP or Network alias.",
        "operationId": "delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases_nodes_node_qemu_vmid_firewall_aliases_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read alias.",
        "description": "Read alias.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases_nodes_node_qemu_vmid_firewall_aliases_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP or Network alias.",
        "description": "Update IP or Network alias.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases_nodes_node_qemu_vmid_firewall_aliases_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDR",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing alias.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/ipset": {
      "get": {
        "summary": "List IPSets",
        "description": "List IPSets",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "name": {
                        "type": "string",
                        "description": "IP set name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new IPSet",
        "description": "Create new IPSet",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "name": {
                    "type": "string",
                    "description": "IP set name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/ipset/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}": {
      "delete": {
        "summary": "Delete IPSet",
        "description": "Delete IPSet",
        "operationId": "delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Delete all members of the IPSet, if there are any."
            },
            "description": "Delete all members of the IPSet, if there are any."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "List IPSet content",
        "description": "List IPSet content",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "nomatch": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Add IP or Network to IPSet.",
        "description": "Add IP or Network to IPSet.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDRorAlias",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "nomatch": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "cidr"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/ipset/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}": {
      "delete": {
        "summary": "Remove IP or Network from IPSet.",
        "description": "Remove IP or Network from IPSet.",
        "operationId": "delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name_nodes_node_qemu_vmid_firewall_ipset_name_cidr",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read IP or Network settings from IPSet.",
        "description": "Read IP or Network settings from IPSet.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name_nodes_node_qemu_vmid_firewall_ipset_name_cidr",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP or Network settings",
        "description": "Update IP or Network settings",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name_nodes_node_qemu_vmid_firewall_ipset_name_cidr",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "nomatch": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/options": {
      "get": {
        "summary": "Get VM firewall options.",
        "description": "Get VM firewall options.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_options",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dhcp": {
                      "type": "boolean",
                      "description": "Enable DHCP."
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Enable/disable firewall rules."
                    },
                    "ipfilter": {
                      "type": "boolean",
                      "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added."
                    },
                    "log_level_in": {
                      "type": "string",
                      "description": "Log level for incoming traffic."
                    },
                    "log_level_out": {
                      "type": "string",
                      "description": "Log level for outgoing traffic."
                    },
                    "macfilter": {
                      "type": "boolean",
                      "description": "Enable/disable MAC address filter."
                    },
                    "ndp": {
                      "type": "boolean",
                      "description": "Enable NDP (Neighbor Discovery Protocol)."
                    },
                    "policy_in": {
                      "type": "string",
                      "description": "Input policy."
                    },
                    "policy_out": {
                      "type": "string",
                      "description": "Output policy."
                    },
                    "radv": {
                      "type": "boolean",
                      "description": "Allow sending Router Advertisement."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set Firewall options.",
        "description": "Set Firewall options.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_options",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.",
                    "default": false
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/disable firewall rules.",
                    "default": false
                  },
                  "ipfilter": {
                    "type": "boolean",
                    "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added."
                  },
                  "log_level_in": {
                    "type": "string",
                    "description": "Log level for incoming traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "log_level_out": {
                    "type": "string",
                    "description": "Log level for outgoing traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macfilter": {
                    "type": "boolean",
                    "description": "Enable/disable MAC address filter.",
                    "default": true
                  },
                  "ndp": {
                    "type": "boolean",
                    "description": "Enable NDP (Neighbor Discovery Protocol).",
                    "default": false
                  },
                  "policy_in": {
                    "type": "string",
                    "description": "Input policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ]
                  },
                  "policy_out": {
                    "type": "string",
                    "description": "Output policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ]
                  },
                  "radv": {
                    "type": "boolean",
                    "description": "Allow sending Router Advertisement."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/log": {
      "get": {
        "summary": "Read firewall log",
        "description": "Read firewall log",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_log",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display log since this UNIX epoch.",
              "minimum": 0
            },
            "description": "Display log since this UNIX epoch."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display log until this UNIX epoch.",
              "minimum": 0
            },
            "description": "Display log until this UNIX epoch."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/refs": {
      "get": {
        "summary": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_refs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list references of specified type.",
              "enum": [
                "alias",
                "ipset"
              ]
            },
            "description": "Only list references of specified type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent": {
      "get": {
        "summary": "QEMU Guest Agent command index.",
        "description": "QEMU Guest Agent command index.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of QEMU Guest Agent commands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Returns the list of QEMU Guest Agent commands"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Execute QEMU Guest Agent commands.",
        "description": "Execute QEMU Guest Agent commands.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "The QGA command.",
                    "enum": [
                      "fsfreeze-freeze",
                      "fsfreeze-status",
                      "fsfreeze-thaw",
                      "fstrim",
                      "get-fsinfo",
                      "get-host-name",
                      "get-memory-block-info",
                      "get-memory-blocks",
                      "get-osinfo",
                      "get-time",
                      "get-timezone",
                      "get-users",
                      "get-vcpus",
                      "info",
                      "network-get-interfaces",
                      "ping",
                      "shutdown",
                      "suspend-disk",
                      "suspend-hybrid",
                      "suspend-ram"
                    ]
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze": {
      "post": {
        "summary": "Execute fsfreeze-freeze.",
        "description": "Execute fsfreeze-freeze.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fsfreeze-freeze",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status": {
      "post": {
        "summary": "Execute fsfreeze-status.",
        "description": "Execute fsfreeze-status.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fsfreeze-status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw": {
      "post": {
        "summary": "Execute fsfreeze-thaw.",
        "description": "Execute fsfreeze-thaw.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fsfreeze-thaw",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fstrim": {
      "post": {
        "summary": "Execute fstrim.",
        "description": "Execute fstrim.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fstrim",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-fsinfo": {
      "get": {
        "summary": "Execute get-fsinfo.",
        "description": "Execute get-fsinfo.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-fsinfo",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-host-name": {
      "get": {
        "summary": "Execute get-host-name.",
        "description": "Execute get-host-name.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-host-name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info": {
      "get": {
        "summary": "Execute get-memory-block-info.",
        "description": "Execute get-memory-block-info.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-memory-block-info",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks": {
      "get": {
        "summary": "Execute get-memory-blocks.",
        "description": "Execute get-memory-blocks.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-memory-blocks",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-osinfo": {
      "get": {
        "summary": "Execute get-osinfo.",
        "description": "Execute get-osinfo.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-osinfo",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-time": {
      "get": {
        "summary": "Execute get-time.",
        "description": "Execute get-time.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-time",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-timezone": {
      "get": {
        "summary": "Execute get-timezone.",
        "description": "Execute get-timezone.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-timezone",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-users": {
      "get": {
        "summary": "Execute get-users.",
        "description": "Execute get-users.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-users",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-vcpus": {
      "get": {
        "summary": "Execute get-vcpus.",
        "description": "Execute get-vcpus.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-vcpus",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/info": {
      "get": {
        "summary": "Execute info.",
        "description": "Execute info.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_info",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces": {
      "get": {
        "summary": "Execute network-get-interfaces.",
        "description": "Execute network-get-interfaces.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_network-get-interfaces",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/ping": {
      "post": {
        "summary": "Execute ping.",
        "description": "Execute ping.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_ping",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/shutdown": {
      "post": {
        "summary": "Execute shutdown.",
        "description": "Execute shutdown.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_shutdown",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/suspend-disk": {
      "post": {
        "summary": "Execute suspend-disk.",
        "description": "Execute suspend-disk.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_suspend-disk",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid": {
      "post": {
        "summary": "Execute suspend-hybrid.",
        "description": "Execute suspend-hybrid.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_suspend-hybrid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/suspend-ram": {
      "post": {
        "summary": "Execute suspend-ram.",
        "description": "Execute suspend-ram.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_suspend-ram",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/set-user-password": {
      "post": {
        "summary": "Sets the password for the given user to the given password",
        "description": "Sets the password for the given user to the given password",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_set-user-password",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "crypted": {
                    "type": "boolean",
                    "description": "set to 1 if the password has already been passed through crypt()",
                    "default": false
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password.",
                    "minLength": 5,
                    "maxLength": 1024
                  },
                  "username": {
                    "type": "string",
                    "description": "The user to set the password for."
                  }
                },
                "required": [
                  "password",
                  "username"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/exec": {
      "post": {
        "summary": "Executes the given command in the vm via the guest-agent and returns an object with the pid.",
        "description": "Executes the given command in the vm via the guest-agent and returns an object with the pid.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_exec",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "array",
                    "description": "The command as a list of program + arguments.",
                    "items": {
                      "type": "string",
                      "format": "string"
                    }
                  },
                  "input-data": {
                    "type": "string",
                    "description": "Data to pass as 'input-data' to the guest. Usually treated as STDIN to 'command'.",
                    "maxLength": 65536
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pid": {
                      "type": "integer",
                      "description": "The PID of the process started by the guest-agent."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/exec-status": {
      "get": {
        "summary": "Gets the status of the given pid started by the guest-agent",
        "description": "Gets the status of the given pid started by the guest-agent",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_exec-status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The PID to query"
            },
            "description": "The PID to query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "err-data": {
                      "type": "string",
                      "description": "stderr of the process"
                    },
                    "err-truncated": {
                      "type": "boolean",
                      "description": "true if stderr was not fully captured"
                    },
                    "exitcode": {
                      "type": "integer",
                      "description": "process exit code if it was normally terminated."
                    },
                    "exited": {
                      "type": "boolean",
                      "description": "Tells if the given command has exited yet."
                    },
                    "out-data": {
                      "type": "string",
                      "description": "stdout of the process"
                    },
                    "out-truncated": {
                      "type": "boolean",
                      "description": "true if stdout was not fully captured"
                    },
                    "signal": {
                      "type": "integer",
                      "description": "signal number or exception code if the process was abnormally terminated."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/file-read": {
      "get": {
        "summary": "Reads the given file via guest agent. Is limited to 16777216 bytes.",
        "description": "Reads the given file via guest agent. Is limited to 16777216 bytes.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_file-read",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "file",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The path to the file"
            },
            "description": "The path to the file"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a `content` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The content of the file, maximum 16777216"
                    },
                    "truncated": {
                      "type": "boolean",
                      "description": "If set to 1, the output is truncated and not complete"
                    }
                  },
                  "description": "Returns an object with a `content` property."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/file-write": {
      "post": {
        "summary": "Writes the given file via guest agent.",
        "description": "Writes the given file via guest agent.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_file-write",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content to write into the file.",
                    "maxLength": 61440
                  },
                  "encode": {
                    "type": "boolean",
                    "description": "If set, the content will be encoded as base64 (required by QEMU).Otherwise the content needs to be encoded beforehand - defaults to true.",
                    "default": true
                  },
                  "file": {
                    "type": "string",
                    "description": "The path to the file."
                  }
                },
                "required": [
                  "content",
                  "file"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/rrd": {
      "get": {
        "summary": "Read VM RRD statistics (returns PNG)",
        "description": "Read VM RRD statistics (returns PNG)",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_rrd",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid-list",
              "description": "The list of datasources you want to display."
            },
            "description": "The list of datasources you want to display."
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/rrddata": {
      "get": {
        "summary": "Read VM RRD statistics",
        "description": "Read VM RRD statistics",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_rrddata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/config": {
      "get": {
        "summary": "Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.",
        "description": "Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_config",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "current",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Get current values (instead of pending values).",
              "default": false
            },
            "description": "Get current values (instead of pending values)."
          },
          {
            "name": "snapshot",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "description": "Fetch config values from given snapshot.",
              "maxLength": 40
            },
            "description": "Fetch config values from given snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "The VM configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acpi": {
                      "type": "boolean",
                      "description": "Enable/disable ACPI."
                    },
                    "affinity": {
                      "type": "string",
                      "format": "pve-cpuset",
                      "description": "List of host cores used to execute guest processes, for example: 0,5,8-11"
                    },
                    "agent": {
                      "type": "string",
                      "description": "Enable/disable communication with the QEMU Guest Agent and its properties."
                    },
                    "amd-sev": {
                      "type": "string",
                      "format": "pve-qemu-sev-fmt",
                      "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs"
                    },
                    "arch": {
                      "type": "string",
                      "description": "Virtual processor architecture. Defaults to the host."
                    },
                    "args": {
                      "type": "string",
                      "description": "Arbitrary arguments passed to kvm."
                    },
                    "audio0": {
                      "type": "string",
                      "description": "Configure a audio device, useful in combination with QXL/Spice."
                    },
                    "autostart": {
                      "type": "boolean",
                      "description": "Automatic restart after crash (currently ignored)."
                    },
                    "balloon": {
                      "type": "integer",
                      "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver."
                    },
                    "bios": {
                      "type": "string",
                      "description": "Select BIOS implementation."
                    },
                    "boot": {
                      "type": "string",
                      "format": "pve-qm-boot",
                      "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated."
                    },
                    "bootdisk": {
                      "type": "string",
                      "format": "pve-qm-bootdisk",
                      "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead."
                    },
                    "cdrom": {
                      "type": "string",
                      "format": "pve-qm-ide",
                      "description": "This is an alias for option -ide2"
                    },
                    "cicustom": {
                      "type": "string",
                      "format": "pve-qm-cicustom",
                      "description": "cloud-init: Specify custom files to replace the automatically generated ones at start."
                    },
                    "cipassword": {
                      "type": "string",
                      "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords."
                    },
                    "citype": {
                      "type": "string",
                      "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows."
                    },
                    "ciupgrade": {
                      "type": "boolean",
                      "description": "cloud-init: do an automatic package upgrade after the first boot."
                    },
                    "ciuser": {
                      "type": "string",
                      "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user."
                    },
                    "cores": {
                      "type": "integer",
                      "description": "The number of cores per socket."
                    },
                    "cpu": {
                      "type": "string",
                      "format": "pve-vm-cpu-conf",
                      "description": "Emulated CPU type."
                    },
                    "cpulimit": {
                      "type": "number",
                      "description": "Limit of CPU usage."
                    },
                    "cpuunits": {
                      "type": "integer",
                      "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file."
                    },
                    "digest": {
                      "type": "string",
                      "description": "SHA1 digest of configuration file. This can be used to prevent concurrent modifications."
                    },
                    "efidisk0": {
                      "type": "string",
                      "description": "Configure a disk for storing EFI vars."
                    },
                    "freeze": {
                      "type": "boolean",
                      "description": "Freeze CPU at startup (use 'c' monitor command to start execution)."
                    },
                    "hookscript": {
                      "type": "string",
                      "format": "pve-volume-id",
                      "description": "Script that will be executed during various steps in the vms lifetime."
                    },
                    "hostpci[n]": {
                      "type": "string",
                      "format": "pve-qm-hostpci",
                      "description": "Map host PCI devices into guest."
                    },
                    "hotplug": {
                      "type": "string",
                      "format": "pve-hotplug-features",
                      "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7."
                    },
                    "hugepages": {
                      "type": "string",
                      "description": "Enable/disable hugepages memory."
                    },
                    "ide[n]": {
                      "type": "string",
                      "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3)."
                    },
                    "ipconfig[n]": {
                      "type": "string",
                      "format": "pve-qm-ipconfig",
                      "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
                    },
                    "ivshmem": {
                      "type": "string",
                      "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host."
                    },
                    "keephugepages": {
                      "type": "boolean",
                      "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts."
                    },
                    "keyboard": {
                      "type": "string",
                      "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS."
                    },
                    "kvm": {
                      "type": "boolean",
                      "description": "Enable/disable KVM hardware virtualization."
                    },
                    "localtime": {
                      "type": "boolean",
                      "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS."
                    },
                    "lock": {
                      "type": "string",
                      "description": "Lock/unlock the VM."
                    },
                    "machine": {
                      "type": "string",
                      "description": "Specify the QEMU machine."
                    },
                    "memory": {
                      "type": "string",
                      "description": "Memory properties."
                    },
                    "migrate_downtime": {
                      "type": "number",
                      "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge."
                    },
                    "migrate_speed": {
                      "type": "integer",
                      "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit."
                    },
                    "name": {
                      "type": "string",
                      "format": "dns-name",
                      "description": "Set a name for the VM. Only used on the configuration web interface."
                    },
                    "nameserver": {
                      "type": "string",
                      "format": "address-list",
                      "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                    },
                    "net[n]": {
                      "type": "string",
                      "description": "Specify network devices."
                    },
                    "numa": {
                      "type": "boolean",
                      "description": "Enable/disable NUMA."
                    },
                    "numa[n]": {
                      "type": "string",
                      "description": "NUMA topology."
                    },
                    "onboot": {
                      "type": "boolean",
                      "description": "Specifies whether a VM will be started during system bootup."
                    },
                    "ostype": {
                      "type": "string",
                      "description": "Specify guest operating system."
                    },
                    "parallel[n]": {
                      "type": "string",
                      "description": "Map host parallel devices (n is 0 to 2)."
                    },
                    "protection": {
                      "type": "boolean",
                      "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations."
                    },
                    "reboot": {
                      "type": "boolean",
                      "description": "Allow reboot. If set to '0' the VM exit on reboot."
                    },
                    "rng0": {
                      "type": "string",
                      "format": "pve-qm-rng",
                      "description": "Configure a VirtIO-based Random Number Generator."
                    },
                    "sata[n]": {
                      "type": "string",
                      "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5)."
                    },
                    "scsi[n]": {
                      "type": "string",
                      "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30)."
                    },
                    "scsihw": {
                      "type": "string",
                      "description": "SCSI controller model"
                    },
                    "searchdomain": {
                      "type": "string",
                      "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                    },
                    "serial[n]": {
                      "type": "string",
                      "description": "Create a serial device inside the VM (n is 0 to 3)"
                    },
                    "shares": {
                      "type": "integer",
                      "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd."
                    },
                    "smbios1": {
                      "type": "string",
                      "format": "pve-qm-smbios1",
                      "description": "Specify SMBIOS type 1 fields."
                    },
                    "smp": {
                      "type": "integer",
                      "description": "The number of CPUs. Please use option -sockets instead."
                    },
                    "sockets": {
                      "type": "integer",
                      "description": "The number of CPU sockets."
                    },
                    "spice_enhancements": {
                      "type": "string",
                      "description": "Configure additional enhancements for SPICE."
                    },
                    "sshkeys": {
                      "type": "string",
                      "format": "urlencoded",
                      "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format)."
                    },
                    "startdate": {
                      "type": "string",
                      "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'."
                    },
                    "startup": {
                      "type": "string",
                      "format": "pve-startup-order",
                      "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                    },
                    "tablet": {
                      "type": "boolean",
                      "description": "Enable/disable the USB tablet device."
                    },
                    "tags": {
                      "type": "string",
                      "format": "pve-tag-list",
                      "description": "Tags of the VM. This is only meta information."
                    },
                    "tdf": {
                      "type": "boolean",
                      "description": "Enable/disable time drift fix."
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Enable/disable Template."
                    },
                    "tpmstate0": {
                      "type": "string",
                      "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'."
                    },
                    "unused[n]": {
                      "type": "string",
                      "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                    },
                    "usb[n]": {
                      "type": "string",
                      "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14)."
                    },
                    "vcpus": {
                      "type": "integer",
                      "description": "Number of hotplugged vcpus."
                    },
                    "vga": {
                      "type": "string",
                      "description": "Configure the VGA hardware."
                    },
                    "virtio[n]": {
                      "type": "string",
                      "description": "Use volume as VIRTIO hard disk (n is 0 to 15)."
                    },
                    "virtiofs[n]": {
                      "type": "string",
                      "description": "Configuration for sharing a directory between host and guest using Virtio-fs."
                    },
                    "vmgenid": {
                      "type": "string",
                      "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly."
                    },
                    "vmstatestorage": {
                      "type": "string",
                      "format": "pve-storage-id",
                      "description": "Default storage for VM state volumes/files."
                    },
                    "watchdog": {
                      "type": "string",
                      "format": "pve-qm-watchdog",
                      "description": "Create a virtual hardware watchdog device."
                    }
                  },
                  "description": "The VM configuration."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Set virtual machine options (asynchronous API).",
        "description": "Set virtual machine options (asynchronous API).",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_config",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acpi": {
                    "type": "boolean",
                    "description": "Enable/disable ACPI.",
                    "default": true
                  },
                  "affinity": {
                    "type": "string",
                    "format": "pve-cpuset",
                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11"
                  },
                  "agent": {
                    "type": "string",
                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties."
                  },
                  "amd-sev": {
                    "type": "string",
                    "format": "pve-qemu-sev-fmt",
                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs"
                  },
                  "arch": {
                    "type": "string",
                    "description": "Virtual processor architecture. Defaults to the host.",
                    "enum": [
                      "x86_64",
                      "aarch64"
                    ]
                  },
                  "args": {
                    "type": "string",
                    "description": "Arbitrary arguments passed to kvm."
                  },
                  "audio0": {
                    "type": "string",
                    "description": "Configure a audio device, useful in combination with QXL/Spice."
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatic restart after crash (currently ignored).",
                    "default": false
                  },
                  "background_delay": {
                    "type": "integer",
                    "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
                    "minimum": 1,
                    "maximum": 30
                  },
                  "balloon": {
                    "type": "integer",
                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                    "minimum": 0
                  },
                  "bios": {
                    "type": "string",
                    "description": "Select BIOS implementation.",
                    "enum": [
                      "seabios",
                      "ovmf"
                    ],
                    "default": "seabios"
                  },
                  "boot": {
                    "type": "string",
                    "format": "pve-qm-boot",
                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated."
                  },
                  "bootdisk": {
                    "type": "string",
                    "format": "pve-qm-bootdisk",
                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                    "pattern": "(ide|sata|scsi|virtio)\\d+"
                  },
                  "cdrom": {
                    "type": "string",
                    "format": "pve-qm-ide",
                    "description": "This is an alias for option -ide2"
                  },
                  "cicustom": {
                    "type": "string",
                    "format": "pve-qm-cicustom",
                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start."
                  },
                  "cipassword": {
                    "type": "string",
                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords."
                  },
                  "citype": {
                    "type": "string",
                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                    "enum": [
                      "configdrive2",
                      "nocloud",
                      "opennebula"
                    ]
                  },
                  "ciupgrade": {
                    "type": "boolean",
                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                    "default": true
                  },
                  "ciuser": {
                    "type": "string",
                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user."
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores per socket.",
                    "minimum": 1,
                    "default": 1
                  },
                  "cpu": {
                    "type": "string",
                    "format": "pve-vm-cpu-conf",
                    "description": "Emulated CPU type."
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.",
                    "minimum": 0,
                    "maximum": 128,
                    "default": 0
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                    "minimum": 1,
                    "maximum": 262144,
                    "default": "cgroup v1: 1024, cgroup v2: 100"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "efidisk0": {
                    "type": "string",
                    "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal."
                  },
                  "freeze": {
                    "type": "boolean",
                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution)."
                  },
                  "hookscript": {
                    "type": "string",
                    "format": "pve-volume-id",
                    "description": "Script that will be executed during various steps in the vms lifetime."
                  },
                  "hostpci[n]": {
                    "type": "string",
                    "format": "pve-qm-hostpci",
                    "description": "Map host PCI devices into guest."
                  },
                  "hotplug": {
                    "type": "string",
                    "format": "pve-hotplug-features",
                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                    "default": "network,disk,usb"
                  },
                  "hugepages": {
                    "type": "string",
                    "description": "Enable/disable hugepages memory.",
                    "enum": [
                      "any",
                      "2",
                      "1024"
                    ]
                  },
                  "ide[n]": {
                    "type": "string",
                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "import-working-storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "A file-based storage with 'images' content-type enabled, which is used as an intermediary extraction storage during import. Defaults to the source storage."
                  },
                  "ipconfig[n]": {
                    "type": "string",
                    "format": "pve-qm-ipconfig",
                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
                  },
                  "ivshmem": {
                    "type": "string",
                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host."
                  },
                  "keephugepages": {
                    "type": "boolean",
                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                    "default": false
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ]
                  },
                  "kvm": {
                    "type": "boolean",
                    "description": "Enable/disable KVM hardware virtualization.",
                    "default": true
                  },
                  "localtime": {
                    "type": "boolean",
                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS."
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the VM.",
                    "enum": [
                      "backup",
                      "clone",
                      "create",
                      "migrate",
                      "rollback",
                      "snapshot",
                      "snapshot-delete",
                      "suspending",
                      "suspended"
                    ]
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine."
                  },
                  "memory": {
                    "type": "string",
                    "description": "Memory properties."
                  },
                  "migrate_downtime": {
                    "type": "number",
                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                    "minimum": 0,
                    "default": 0.1
                  },
                  "migrate_speed": {
                    "type": "integer",
                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                    "minimum": 0,
                    "default": 0
                  },
                  "name": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a name for the VM. Only used on the configuration web interface."
                  },
                  "nameserver": {
                    "type": "string",
                    "format": "address-list",
                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specify network devices."
                  },
                  "numa": {
                    "type": "boolean",
                    "description": "Enable/disable NUMA.",
                    "default": false
                  },
                  "numa[n]": {
                    "type": "string",
                    "description": "NUMA topology."
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a VM will be started during system bootup.",
                    "default": false
                  },
                  "ostype": {
                    "type": "string",
                    "description": "Specify guest operating system.",
                    "enum": [
                      "other",
                      "wxp",
                      "w2k",
                      "w2k3",
                      "w2k8",
                      "wvista",
                      "win7",
                      "win8",
                      "win10",
                      "win11",
                      "l24",
                      "l26",
                      "solaris"
                    ]
                  },
                  "parallel[n]": {
                    "type": "string",
                    "description": "Map host parallel devices (n is 0 to 2).",
                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                    "default": false
                  },
                  "reboot": {
                    "type": "boolean",
                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                    "default": true
                  },
                  "revert": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "Revert a pending change."
                  },
                  "rng0": {
                    "type": "string",
                    "format": "pve-qm-rng",
                    "description": "Configure a VirtIO-based Random Number Generator."
                  },
                  "sata[n]": {
                    "type": "string",
                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "scsi[n]": {
                    "type": "string",
                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "scsihw": {
                    "type": "string",
                    "description": "SCSI controller model",
                    "enum": [
                      "lsi",
                      "lsi53c810",
                      "virtio-scsi-pci",
                      "virtio-scsi-single",
                      "megasas",
                      "pvscsi"
                    ],
                    "default": "lsi"
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                  },
                  "serial[n]": {
                    "type": "string",
                    "description": "Create a serial device inside the VM (n is 0 to 3)",
                    "pattern": "(/dev/.+|socket)"
                  },
                  "shares": {
                    "type": "integer",
                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                    "minimum": 0,
                    "maximum": 50000,
                    "default": 1000
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  },
                  "smbios1": {
                    "type": "string",
                    "format": "pve-qm-smbios1",
                    "description": "Specify SMBIOS type 1 fields.",
                    "maxLength": 512
                  },
                  "smp": {
                    "type": "integer",
                    "description": "The number of CPUs. Please use option -sockets instead.",
                    "minimum": 1,
                    "default": 1
                  },
                  "sockets": {
                    "type": "integer",
                    "description": "The number of CPU sockets.",
                    "minimum": 1,
                    "default": 1
                  },
                  "spice_enhancements": {
                    "type": "string",
                    "description": "Configure additional enhancements for SPICE."
                  },
                  "sshkeys": {
                    "type": "string",
                    "format": "urlencoded",
                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format)."
                  },
                  "startdate": {
                    "type": "string",
                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                    "default": "now"
                  },
                  "startup": {
                    "type": "string",
                    "format": "pve-startup-order",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                  },
                  "tablet": {
                    "type": "boolean",
                    "description": "Enable/disable the USB tablet device.",
                    "default": true
                  },
                  "tags": {
                    "type": "string",
                    "format": "pve-tag-list",
                    "description": "Tags of the VM. This is only meta information."
                  },
                  "tdf": {
                    "type": "boolean",
                    "description": "Enable/disable time drift fix.",
                    "default": false
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false
                  },
                  "tpmstate0": {
                    "type": "string",
                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                  },
                  "usb[n]": {
                    "type": "string",
                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14)."
                  },
                  "vcpus": {
                    "type": "integer",
                    "description": "Number of hotplugged vcpus.",
                    "minimum": 1,
                    "default": 0
                  },
                  "vga": {
                    "type": "string",
                    "description": "Configure the VGA hardware."
                  },
                  "virtio[n]": {
                    "type": "string",
                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "virtiofs[n]": {
                    "type": "string",
                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs."
                  },
                  "vmgenid": {
                    "type": "string",
                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                    "default": "1 (autogenerated)"
                  },
                  "vmstatestorage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Default storage for VM state volumes/files."
                  },
                  "watchdog": {
                    "type": "string",
                    "format": "pve-qm-watchdog",
                    "description": "Create a virtual hardware watchdog device."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.",
        "description": "Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_config",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acpi": {
                    "type": "boolean",
                    "description": "Enable/disable ACPI.",
                    "default": true
                  },
                  "affinity": {
                    "type": "string",
                    "format": "pve-cpuset",
                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11"
                  },
                  "agent": {
                    "type": "string",
                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties."
                  },
                  "amd-sev": {
                    "type": "string",
                    "format": "pve-qemu-sev-fmt",
                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs"
                  },
                  "arch": {
                    "type": "string",
                    "description": "Virtual processor architecture. Defaults to the host.",
                    "enum": [
                      "x86_64",
                      "aarch64"
                    ]
                  },
                  "args": {
                    "type": "string",
                    "description": "Arbitrary arguments passed to kvm."
                  },
                  "audio0": {
                    "type": "string",
                    "description": "Configure a audio device, useful in combination with QXL/Spice."
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatic restart after crash (currently ignored).",
                    "default": false
                  },
                  "balloon": {
                    "type": "integer",
                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                    "minimum": 0
                  },
                  "bios": {
                    "type": "string",
                    "description": "Select BIOS implementation.",
                    "enum": [
                      "seabios",
                      "ovmf"
                    ],
                    "default": "seabios"
                  },
                  "boot": {
                    "type": "string",
                    "format": "pve-qm-boot",
                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated."
                  },
                  "bootdisk": {
                    "type": "string",
                    "format": "pve-qm-bootdisk",
                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                    "pattern": "(ide|sata|scsi|virtio)\\d+"
                  },
                  "cdrom": {
                    "type": "string",
                    "format": "pve-qm-ide",
                    "description": "This is an alias for option -ide2"
                  },
                  "cicustom": {
                    "type": "string",
                    "format": "pve-qm-cicustom",
                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start."
                  },
                  "cipassword": {
                    "type": "string",
                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords."
                  },
                  "citype": {
                    "type": "string",
                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                    "enum": [
                      "configdrive2",
                      "nocloud",
                      "opennebula"
                    ]
                  },
                  "ciupgrade": {
                    "type": "boolean",
                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                    "default": true
                  },
                  "ciuser": {
                    "type": "string",
                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user."
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores per socket.",
                    "minimum": 1,
                    "default": 1
                  },
                  "cpu": {
                    "type": "string",
                    "format": "pve-vm-cpu-conf",
                    "description": "Emulated CPU type."
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.",
                    "minimum": 0,
                    "maximum": 128,
                    "default": 0
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                    "minimum": 1,
                    "maximum": 262144,
                    "default": "cgroup v1: 1024, cgroup v2: 100"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "efidisk0": {
                    "type": "string",
                    "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal."
                  },
                  "freeze": {
                    "type": "boolean",
                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution)."
                  },
                  "hookscript": {
                    "type": "string",
                    "format": "pve-volume-id",
                    "description": "Script that will be executed during various steps in the vms lifetime."
                  },
                  "hostpci[n]": {
                    "type": "string",
                    "format": "pve-qm-hostpci",
                    "description": "Map host PCI devices into guest."
                  },
                  "hotplug": {
                    "type": "string",
                    "format": "pve-hotplug-features",
                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                    "default": "network,disk,usb"
                  },
                  "hugepages": {
                    "type": "string",
                    "description": "Enable/disable hugepages memory.",
                    "enum": [
                      "any",
                      "2",
                      "1024"
                    ]
                  },
                  "ide[n]": {
                    "type": "string",
                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "ipconfig[n]": {
                    "type": "string",
                    "format": "pve-qm-ipconfig",
                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n"
                  },
                  "ivshmem": {
                    "type": "string",
                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host."
                  },
                  "keephugepages": {
                    "type": "boolean",
                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                    "default": false
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ]
                  },
                  "kvm": {
                    "type": "boolean",
                    "description": "Enable/disable KVM hardware virtualization.",
                    "default": true
                  },
                  "localtime": {
                    "type": "boolean",
                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS."
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the VM.",
                    "enum": [
                      "backup",
                      "clone",
                      "create",
                      "migrate",
                      "rollback",
                      "snapshot",
                      "snapshot-delete",
                      "suspending",
                      "suspended"
                    ]
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine."
                  },
                  "memory": {
                    "type": "string",
                    "description": "Memory properties."
                  },
                  "migrate_downtime": {
                    "type": "number",
                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                    "minimum": 0,
                    "default": 0.1
                  },
                  "migrate_speed": {
                    "type": "integer",
                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                    "minimum": 0,
                    "default": 0
                  },
                  "name": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a name for the VM. Only used on the configuration web interface."
                  },
                  "nameserver": {
                    "type": "string",
                    "format": "address-list",
                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specify network devices."
                  },
                  "numa": {
                    "type": "boolean",
                    "description": "Enable/disable NUMA.",
                    "default": false
                  },
                  "numa[n]": {
                    "type": "string",
                    "description": "NUMA topology."
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a VM will be started during system bootup.",
                    "default": false
                  },
                  "ostype": {
                    "type": "string",
                    "description": "Specify guest operating system.",
                    "enum": [
                      "other",
                      "wxp",
                      "w2k",
                      "w2k3",
                      "w2k8",
                      "wvista",
                      "win7",
                      "win8",
                      "win10",
                      "win11",
                      "l24",
                      "l26",
                      "solaris"
                    ]
                  },
                  "parallel[n]": {
                    "type": "string",
                    "description": "Map host parallel devices (n is 0 to 2).",
                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                    "default": false
                  },
                  "reboot": {
                    "type": "boolean",
                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                    "default": true
                  },
                  "revert": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "Revert a pending change."
                  },
                  "rng0": {
                    "type": "string",
                    "format": "pve-qm-rng",
                    "description": "Configure a VirtIO-based Random Number Generator."
                  },
                  "sata[n]": {
                    "type": "string",
                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "scsi[n]": {
                    "type": "string",
                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "scsihw": {
                    "type": "string",
                    "description": "SCSI controller model",
                    "enum": [
                      "lsi",
                      "lsi53c810",
                      "virtio-scsi-pci",
                      "virtio-scsi-single",
                      "megasas",
                      "pvscsi"
                    ],
                    "default": "lsi"
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set."
                  },
                  "serial[n]": {
                    "type": "string",
                    "description": "Create a serial device inside the VM (n is 0 to 3)",
                    "pattern": "(/dev/.+|socket)"
                  },
                  "shares": {
                    "type": "integer",
                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                    "minimum": 0,
                    "maximum": 50000,
                    "default": 1000
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  },
                  "smbios1": {
                    "type": "string",
                    "format": "pve-qm-smbios1",
                    "description": "Specify SMBIOS type 1 fields.",
                    "maxLength": 512
                  },
                  "smp": {
                    "type": "integer",
                    "description": "The number of CPUs. Please use option -sockets instead.",
                    "minimum": 1,
                    "default": 1
                  },
                  "sockets": {
                    "type": "integer",
                    "description": "The number of CPU sockets.",
                    "minimum": 1,
                    "default": 1
                  },
                  "spice_enhancements": {
                    "type": "string",
                    "description": "Configure additional enhancements for SPICE."
                  },
                  "sshkeys": {
                    "type": "string",
                    "format": "urlencoded",
                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format)."
                  },
                  "startdate": {
                    "type": "string",
                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                    "default": "now"
                  },
                  "startup": {
                    "type": "string",
                    "format": "pve-startup-order",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                  },
                  "tablet": {
                    "type": "boolean",
                    "description": "Enable/disable the USB tablet device.",
                    "default": true
                  },
                  "tags": {
                    "type": "string",
                    "format": "pve-tag-list",
                    "description": "Tags of the VM. This is only meta information."
                  },
                  "tdf": {
                    "type": "boolean",
                    "description": "Enable/disable time drift fix.",
                    "default": false
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false
                  },
                  "tpmstate0": {
                    "type": "string",
                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                  },
                  "usb[n]": {
                    "type": "string",
                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14)."
                  },
                  "vcpus": {
                    "type": "integer",
                    "description": "Number of hotplugged vcpus.",
                    "minimum": 1,
                    "default": 0
                  },
                  "vga": {
                    "type": "string",
                    "description": "Configure the VGA hardware."
                  },
                  "virtio[n]": {
                    "type": "string",
                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume."
                  },
                  "virtiofs[n]": {
                    "type": "string",
                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs."
                  },
                  "vmgenid": {
                    "type": "string",
                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                    "default": "1 (autogenerated)"
                  },
                  "vmstatestorage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Default storage for VM state volumes/files."
                  },
                  "watchdog": {
                    "type": "string",
                    "format": "pve-qm-watchdog",
                    "description": "Create a virtual hardware watchdog device."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/pending": {
      "get": {
        "summary": "Get the virtual machine configuration with both current and pending values.",
        "description": "Get the virtual machine configuration with both current and pending values.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_pending",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "integer",
                        "description": "Indicates a pending delete request if present and not 0. The value 2 indicates a force-delete request."
                      },
                      "key": {
                        "type": "string",
                        "description": "Configuration option name."
                      },
                      "pending": {
                        "type": "string",
                        "description": "Pending value."
                      },
                      "value": {
                        "type": "string",
                        "description": "Current value."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/cloudinit": {
      "get": {
        "summary": "Get the cloudinit configuration with both current and pending values.",
        "description": "Get the cloudinit configuration with both current and pending values.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_cloudinit",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "integer",
                        "description": "Indicates a pending delete request if present and not 0. "
                      },
                      "key": {
                        "type": "string",
                        "description": "Configuration option name."
                      },
                      "pending": {
                        "type": "string",
                        "description": "The new pending value."
                      },
                      "value": {
                        "type": "string",
                        "description": "Value as it was used to generate the current cloudinit image."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Regenerate and change cloudinit config drive.",
        "description": "Regenerate and change cloudinit config drive.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_cloudinit",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/cloudinit/nodes/{node}/qemu/{vmid}/cloudinit/dump": {
      "get": {
        "summary": "Get automatically generated cloudinit config.",
        "description": "Get automatically generated cloudinit config.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_cloudinit_nodes_node_qemu_vmid_cloudinit_dump",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Config type.",
              "enum": [
                "user",
                "network",
                "meta"
              ]
            },
            "description": "Config type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/unlink": {
      "put": {
        "summary": "Unlink/delete disk images.",
        "description": "Unlink/delete disk images.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_unlink",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal."
                  },
                  "idlist": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of disk IDs you want to delete."
                  }
                },
                "required": [
                  "idlist"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/vncproxy": {
      "post": {
        "summary": "Creates a TCP VNC proxy connections.",
        "description": "Creates a TCP VNC proxy connections.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_vncproxy",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "generate-password": {
                    "type": "boolean",
                    "description": "Generates a random password to be used as ticket instead of the API ticket.",
                    "default": false
                  },
                  "websocket": {
                    "type": "boolean",
                    "description": "Prepare for websocket upgrade (only required when using serial terminal, otherwise upgrade is always possible)."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/termproxy": {
      "post": {
        "summary": "Creates a TCP proxy connections.",
        "description": "Creates a TCP proxy connections.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_termproxy",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "serial": {
                    "type": "string",
                    "description": "opens a serial terminal (defaults to display)",
                    "enum": [
                      "serial0",
                      "serial1",
                      "serial2",
                      "serial3"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/vncwebsocket": {
      "get": {
        "summary": "Opens a weksocket for VNC traffic.",
        "description": "Opens a weksocket for VNC traffic.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_vncwebsocket",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "port",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Port number returned by previous vncproxy call.",
              "minimum": 5900,
              "maximum": 5999
            },
            "description": "Port number returned by previous vncproxy call."
          },
          {
            "name": "vncticket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Ticket from previous call to vncproxy.",
              "maxLength": 512
            },
            "description": "Ticket from previous call to vncproxy."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/spiceproxy": {
      "post": {
        "summary": "Returns a SPICE configuration to connect to the VM.",
        "description": "Returns a SPICE configuration to connect to the VM.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_spiceproxy",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "proxy": {
                    "type": "string",
                    "format": "address",
                    "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI)."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned values can be directly passed to the 'remote-viewer' application.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returned values can be directly passed to the 'remote-viewer' application."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status": {
      "get": {
        "summary": "Directory index",
        "description": "Directory index",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/current": {
      "get": {
        "summary": "Get virtual machine status.",
        "description": "Get virtual machine status.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_current",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "type": "boolean",
                      "description": "QEMU Guest Agent is enabled in config."
                    },
                    "clipboard": {
                      "type": "string",
                      "description": "Enable a specific clipboard. If not set, depending on the display type the SPICE one will be added."
                    },
                    "cpu": {
                      "type": "number",
                      "description": "Current CPU usage."
                    },
                    "cpus": {
                      "type": "number",
                      "description": "Maximum usable CPUs."
                    },
                    "diskread": {
                      "type": "integer",
                      "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                    },
                    "diskwrite": {
                      "type": "integer",
                      "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                    },
                    "ha": {
                      "type": "object",
                      "description": "HA manager service status."
                    },
                    "lock": {
                      "type": "string",
                      "description": "The current config lock, if any."
                    },
                    "maxdisk": {
                      "type": "integer",
                      "description": "Root disk size in bytes."
                    },
                    "maxmem": {
                      "type": "integer",
                      "description": "Maximum memory in bytes."
                    },
                    "mem": {
                      "type": "integer",
                      "description": "Currently used memory in bytes."
                    },
                    "name": {
                      "type": "string",
                      "description": "VM (host)name."
                    },
                    "netin": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started."
                    },
                    "netout": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started."
                    },
                    "pid": {
                      "type": "integer",
                      "description": "PID of the QEMU process, if the VM is running."
                    },
                    "qmpstatus": {
                      "type": "string",
                      "description": "VM run state from the 'query-status' QMP monitor command."
                    },
                    "running-machine": {
                      "type": "string",
                      "description": "The currently running machine type (if running)."
                    },
                    "running-qemu": {
                      "type": "string",
                      "description": "The QEMU version the VM is currently using (if running)."
                    },
                    "serial": {
                      "type": "boolean",
                      "description": "Guest has serial device configured."
                    },
                    "spice": {
                      "type": "boolean",
                      "description": "QEMU VGA configuration supports spice."
                    },
                    "status": {
                      "type": "string",
                      "description": "QEMU process status."
                    },
                    "tags": {
                      "type": "string",
                      "description": "The current configured tags, if any"
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Determines if the guest is a template."
                    },
                    "uptime": {
                      "type": "integer",
                      "description": "Uptime in seconds."
                    },
                    "vmid": {
                      "type": "integer",
                      "format": "pve-vmid",
                      "description": "The (unique) ID of the VM."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/start": {
      "post": {
        "summary": "Start virtual machine.",
        "description": "Start virtual machine.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_start",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force-cpu": {
                    "type": "string",
                    "description": "Override QEMU's -cpu argument with the given string."
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine."
                  },
                  "migratedfrom": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "The cluster node name."
                  },
                  "migration_network": {
                    "type": "string",
                    "format": "CIDR",
                    "description": "CIDR of the (sub) network that is used for migration."
                  },
                  "migration_type": {
                    "type": "string",
                    "description": "Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.",
                    "enum": [
                      "secure",
                      "insecure"
                    ]
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  },
                  "stateuri": {
                    "type": "string",
                    "description": "Some command save/restore state from this location.",
                    "maxLength": 128
                  },
                  "targetstorage": {
                    "type": "string",
                    "format": "storage-pair-list",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself."
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "minimum": 0,
                    "default": "max(30, vm memory in GiB)"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/stop": {
      "post": {
        "summary": "Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.",
        "description": "Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_stop",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "keepActive": {
                    "type": "boolean",
                    "description": "Do not deactivate storage volumes.",
                    "default": false
                  },
                  "migratedfrom": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "The cluster node name."
                  },
                  "overrule-shutdown": {
                    "type": "boolean",
                    "description": "Try to abort active 'qmshutdown' tasks before stopping.",
                    "default": false
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/reset": {
      "post": {
        "summary": "Reset virtual machine.",
        "description": "Reset virtual machine.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_reset",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/shutdown": {
      "post": {
        "summary": "Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.",
        "description": "Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_shutdown",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forceStop": {
                    "type": "boolean",
                    "description": "Make sure the VM stops.",
                    "default": false
                  },
                  "keepActive": {
                    "type": "boolean",
                    "description": "Do not deactivate storage volumes.",
                    "default": false
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/reboot": {
      "post": {
        "summary": "Reboot the VM by shutting it down, and starting it again. Applies pending changes.",
        "description": "Reboot the VM by shutting it down, and starting it again. Applies pending changes.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_reboot",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds for the shutdown.",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/suspend": {
      "post": {
        "summary": "Suspend virtual machine.",
        "description": "Suspend virtual machine.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_suspend",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  },
                  "statestorage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage for the VM state"
                  },
                  "todisk": {
                    "type": "boolean",
                    "description": "If set, suspends the VM to disk. Will be resumed on next VM start.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/resume": {
      "post": {
        "summary": "Resume virtual machine.",
        "description": "Resume virtual machine.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_resume",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nocheck": {
                    "type": "boolean"
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/sendkey": {
      "put": {
        "summary": "Send key event to virtual machine.",
        "description": "Send key event to virtual machine.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_sendkey",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key (qemu monitor encoding)."
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/feature": {
      "get": {
        "summary": "Check if feature for virtual machine is available.",
        "description": "Check if feature for virtual machine is available.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_feature",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "feature",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Feature to check.",
              "enum": [
                "snapshot",
                "clone",
                "copy"
              ]
            },
            "description": "Feature to check."
          },
          {
            "name": "snapname",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "description": "The name of the snapshot.",
              "maxLength": 40
            },
            "description": "The name of the snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasFeature": {
                      "type": "boolean"
                    },
                    "nodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/clone": {
      "post": {
        "summary": "Create a copy of virtual machine/template.",
        "description": "Create a copy of virtual machine/template.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_clone",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "clone limit from datacenter or storage config"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the new VM."
                  },
                  "format": {
                    "type": "string",
                    "description": "Target format for file storage. Only valid for full clone.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "vmdk"
                    ]
                  },
                  "full": {
                    "type": "boolean",
                    "description": "Create a full copy of all disks. This is always done when you clone a normal VM. For VM templates, we try to create a linked clone by default."
                  },
                  "name": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a name for the new VM."
                  },
                  "newid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "VMID for the clone.",
                    "minimum": 100,
                    "maximum": 999999999
                  },
                  "pool": {
                    "type": "string",
                    "format": "pve-poolid",
                    "description": "Add the new VM to the specified pool."
                  },
                  "snapname": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the snapshot.",
                    "maxLength": 40
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Target storage for full clone."
                  },
                  "target": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node. Only allowed if the original VM is on shared storage."
                  }
                },
                "required": [
                  "newid"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/move_disk": {
      "post": {
        "summary": "Move volume to different storage or to a different VM.",
        "description": "Move volume to different storage or to a different VM.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_move_disk",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "move limit from datacenter or storage config"
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original disk after successful copy. By default the original disk is kept as unused disk.",
                    "default": false
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1\"\n\t\t    .\" digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "disk": {
                    "type": "string",
                    "description": "The disk you want to move.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Target Format.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "vmdk"
                    ]
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Target storage."
                  },
                  "target-digest": {
                    "type": "string",
                    "description": "Prevent changes if the current config file of the target VM has a\"\n\t\t    .\" different SHA1 digest. This can be used to detect concurrent modifications.",
                    "maxLength": 40
                  },
                  "target-disk": {
                    "type": "string",
                    "description": "The config key the disk will be moved to on the target VM (for example, ide0 or scsi1). Default is the source disk key.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ]
                  },
                  "target-vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  }
                },
                "required": [
                  "disk"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/migrate": {
      "get": {
        "summary": "Get preconditions for migration.",
        "description": "Get preconditions for migration.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_migrate",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-node",
              "description": "Target node."
            },
            "description": "Target node."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowed_nodes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "An allowed node"
                      },
                      "description": "List of nodes allowed for migration."
                    },
                    "local_disks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdrom": {
                            "type": "boolean",
                            "description": "True if the disk is a cdrom."
                          },
                          "is_unused": {
                            "type": "boolean",
                            "description": "True if the disk is unused."
                          },
                          "size": {
                            "type": "integer",
                            "description": "The size of the disk in bytes."
                          },
                          "volid": {
                            "type": "string",
                            "description": "The volid of the disk."
                          }
                        }
                      },
                      "description": "List local disks including CD-Rom, unused and not referenced disks"
                    },
                    "local_resources": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A local resource"
                      },
                      "description": "List local resources (e.g. pci, usb) that block migration."
                    },
                    "mapped-resource-info": {
                      "type": "object",
                      "description": "Object of mapped resources with additional information such if they're live migratable."
                    },
                    "mapped-resources": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A mapped resource"
                      },
                      "description": "List of mapped resources e.g. pci, usb. Deprecated, use 'mapped-resource-info' instead."
                    },
                    "not_allowed_nodes": {
                      "type": "object",
                      "properties": {
                        "unavailable_storages": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A storage"
                          },
                          "description": "A list of not available storages."
                        }
                      },
                      "description": "List of not allowed nodes with additional information."
                    },
                    "running": {
                      "type": "boolean",
                      "description": "Determines if the VM is running."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Migrate virtual machine. Creates a new migration task.",
        "description": "Migrate virtual machine. Creates a new migration task.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_migrate",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "migrate limit from datacenter or storage config"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Allow to migrate VMs which use local devices. Only root may use this option."
                  },
                  "migration_network": {
                    "type": "string",
                    "format": "CIDR",
                    "description": "CIDR of the (sub) network that is used for migration."
                  },
                  "migration_type": {
                    "type": "string",
                    "description": "Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.",
                    "enum": [
                      "secure",
                      "insecure"
                    ]
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration if VM is running. Ignored if VM is stopped."
                  },
                  "target": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node."
                  },
                  "targetstorage": {
                    "type": "string",
                    "format": "storage-pair-list",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself."
                  },
                  "with-local-disks": {
                    "type": "boolean",
                    "description": "Enable live storage migration for local disk"
                  }
                },
                "required": [
                  "target"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/remote_migrate": {
      "post": {
        "summary": "Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!",
        "description": "Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_remote_migrate",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "migrate limit from datacenter or storage config"
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original VM and related data after successful migration. By default the original VM is kept on the source cluster in a stopped state.",
                    "default": false
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration if VM is running. Ignored if VM is stopped."
                  },
                  "target-bridge": {
                    "type": "string",
                    "format": "bridge-pair-list",
                    "description": "Mapping from source to target bridges. Providing only a single bridge ID maps all source bridges to that bridge. Providing the special value '1' will map each source bridge to itself."
                  },
                  "target-endpoint": {
                    "type": "string",
                    "format": "proxmox-remote",
                    "description": "Remote target endpoint"
                  },
                  "target-storage": {
                    "type": "string",
                    "format": "storage-pair-list",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself."
                  },
                  "target-vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  }
                },
                "required": [
                  "target-bridge",
                  "target-endpoint",
                  "target-storage"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/monitor": {
      "post": {
        "summary": "Execute QEMU monitor commands.",
        "description": "Execute QEMU monitor commands.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_monitor",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "The monitor command."
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/resize": {
      "put": {
        "summary": "Extend volume size.",
        "description": "Extend volume size.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_resize",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "disk": {
                    "type": "string",
                    "description": "The disk you want to resize.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0"
                    ]
                  },
                  "size": {
                    "type": "string",
                    "description": "The new size. With the `+` sign the value is added to the actual size of the volume and without it, the value is taken as an absolute one. Shrinking disk size is not supported.",
                    "pattern": "\\+?\\d+(\\.\\d+)?[KMGT]?"
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  }
                },
                "required": [
                  "disk",
                  "size"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot": {
      "get": {
        "summary": "List all snapshots.",
        "description": "List all snapshots.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Snapshot description."
                      },
                      "name": {
                        "type": "string",
                        "description": "Snapshot identifier. Value 'current' identifies the current VM."
                      },
                      "parent": {
                        "type": "string",
                        "description": "Parent snapshot identifier."
                      },
                      "snaptime": {
                        "type": "integer",
                        "description": "Snapshot creation time"
                      },
                      "vmstate": {
                        "type": "boolean",
                        "description": "Snapshot includes RAM."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Snapshot a VM.",
        "description": "Snapshot a VM.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment."
                  },
                  "snapname": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the snapshot.",
                    "maxLength": 40
                  },
                  "vmstate": {
                    "type": "boolean",
                    "description": "Save the vmstate"
                  }
                },
                "required": [
                  "snapname"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot/nodes/{node}/qemu/{vmid}/snapshot/{snapname}": {
      "delete": {
        "summary": "Delete a VM snapshot.",
        "description": "Delete a VM snapshot.",
        "operationId": "delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "For removal from config file, even if removing disk snapshots fails."
            },
            "description": "For removal from config file, even if removing disk snapshots fails."
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "",
        "description": "",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config": {
      "get": {
        "summary": "Get snapshot configuration",
        "description": "Get snapshot configuration",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname_nodes_node_qemu_vmid_snapshot_snapname_config",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update snapshot metadata.",
        "description": "Update snapshot metadata.",
        "operationId": "put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname_nodes_node_qemu_vmid_snapshot_snapname_config",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback": {
      "post": {
        "summary": "Rollback VM state to specified snapshot.",
        "description": "Rollback VM state to specified snapshot.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname_nodes_node_qemu_vmid_snapshot_snapname_rollback",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "boolean",
                    "description": "Whether the VM should get started after rolling back successfully. (Note: VMs will be automatically started if the snapshot includes RAM.)",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/template": {
      "post": {
        "summary": "Create a Template.",
        "description": "Create a Template.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_template",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "If you want to convert only 1 disk to base image.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/mtunnel": {
      "post": {
        "summary": "Migration tunnel endpoint - only for internal use by VM migration.",
        "description": "Migration tunnel endpoint - only for internal use by VM migration.",
        "operationId": "post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_mtunnel",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bridges": {
                    "type": "string",
                    "format": "pve-bridge-id-list",
                    "description": "List of network bridges to check availability. Will be checked again for actually used bridges during migration."
                  },
                  "storages": {
                    "type": "string",
                    "format": "pve-storage-id-list",
                    "description": "List of storages to check permission and availability. Will be checked again for all actually used storages during migration."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/mtunnelwebsocket": {
      "get": {
        "summary": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
        "description": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
        "operationId": "get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_mtunnelwebsocket",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "socket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "unix socket to forward to"
            },
            "description": "unix socket to forward to"
          },
          {
            "name": "ticket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command"
            },
            "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    },
                    "socket": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc": {
      "get": {
        "summary": "LXC container index (per node).",
        "description": "LXC container index (per node).",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "number",
                        "description": "Current CPU usage."
                      },
                      "cpus": {
                        "type": "number",
                        "description": "Maximum usable CPUs."
                      },
                      "disk": {
                        "type": "integer",
                        "description": "Root disk image space-usage in bytes."
                      },
                      "diskread": {
                        "type": "integer",
                        "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                      },
                      "diskwrite": {
                        "type": "integer",
                        "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                      },
                      "lock": {
                        "type": "string",
                        "description": "The current config lock, if any."
                      },
                      "maxdisk": {
                        "type": "integer",
                        "description": "Root disk image size in bytes."
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Maximum memory in bytes."
                      },
                      "maxswap": {
                        "type": "integer",
                        "description": "Maximum SWAP memory in bytes."
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Currently used memory in bytes."
                      },
                      "name": {
                        "type": "string",
                        "description": "Container name."
                      },
                      "netin": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started."
                      },
                      "netout": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started."
                      },
                      "status": {
                        "type": "string",
                        "description": "LXC Container status."
                      },
                      "tags": {
                        "type": "string",
                        "description": "The current configured tags, if any."
                      },
                      "template": {
                        "type": "boolean",
                        "description": "Determines if the guest is a template."
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Uptime in seconds."
                      },
                      "vmid": {
                        "type": "integer",
                        "format": "pve-vmid",
                        "description": "The (unique) ID of the VM."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create or restore a container.",
        "description": "Create or restore a container.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arch": {
                    "type": "string",
                    "description": "OS architecture type.",
                    "enum": [
                      "amd64",
                      "i386",
                      "arm64",
                      "armhf",
                      "riscv32",
                      "riscv64"
                    ],
                    "default": "amd64"
                  },
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "restore limit from datacenter or storage config"
                  },
                  "cmode": {
                    "type": "string",
                    "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                    "enum": [
                      "shell",
                      "console",
                      "tty"
                    ],
                    "default": "tty"
                  },
                  "console": {
                    "type": "boolean",
                    "description": "Attach a console device (/dev/console) to the container.",
                    "default": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                    "minimum": 1,
                    "maximum": 8192
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "minimum": 0,
                    "maximum": 8192,
                    "default": 0
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.",
                    "minimum": 0,
                    "maximum": 500000,
                    "default": "cgroup v1: 1024, cgroup v2: 100"
                  },
                  "debug": {
                    "type": "boolean",
                    "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                    "default": false
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192
                  },
                  "dev[n]": {
                    "type": "string",
                    "description": "Device to pass through to the container"
                  },
                  "features": {
                    "type": "string",
                    "description": "Allow containers access to advanced features."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Allow to overwrite existing container."
                  },
                  "hookscript": {
                    "type": "string",
                    "format": "pve-volume-id",
                    "description": "Script that will be executed during various steps in the containers lifetime."
                  },
                  "hostname": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a host name for the container.",
                    "maxLength": 255
                  },
                  "ignore-unpack-errors": {
                    "type": "boolean",
                    "description": "Ignore errors when extracting the template."
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the container.",
                    "enum": [
                      "backup",
                      "create",
                      "destroyed",
                      "disk",
                      "fstrim",
                      "migrate",
                      "mounted",
                      "rollback",
                      "snapshot",
                      "snapshot-delete"
                    ]
                  },
                  "memory": {
                    "type": "integer",
                    "description": "Amount of RAM for the container in MB.",
                    "minimum": 16,
                    "default": 512
                  },
                  "mp[n]": {
                    "type": "string",
                    "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume."
                  },
                  "nameserver": {
                    "type": "string",
                    "format": "lxc-ip-with-ll-iface-list",
                    "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver."
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specifies network interfaces for the container."
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a container will be started during system bootup.",
                    "default": false
                  },
                  "ostemplate": {
                    "type": "string",
                    "description": "The OS template or backup file.",
                    "maxLength": 255
                  },
                  "ostype": {
                    "type": "string",
                    "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                    "enum": [
                      "debian",
                      "devuan",
                      "ubuntu",
                      "centos",
                      "fedora",
                      "opensuse",
                      "archlinux",
                      "alpine",
                      "gentoo",
                      "nixos",
                      "unmanaged"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "description": "Sets root password inside container.",
                    "minLength": 5
                  },
                  "pool": {
                    "type": "string",
                    "format": "pve-poolid",
                    "description": "Add the VM to the specified pool."
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                    "default": false
                  },
                  "restore": {
                    "type": "boolean",
                    "description": "Mark this as restore task."
                  },
                  "rootfs": {
                    "type": "string",
                    "description": "Use volume as container root."
                  },
                  "searchdomain": {
                    "type": "string",
                    "format": "dns-name-list",
                    "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver."
                  },
                  "ssh-public-keys": {
                    "type": "string",
                    "description": "Setup public SSH keys (one key per line, OpenSSH format)."
                  },
                  "start": {
                    "type": "boolean",
                    "description": "Start the CT after its creation finished successfully.",
                    "default": false
                  },
                  "startup": {
                    "type": "string",
                    "format": "pve-startup-order",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Default Storage.",
                    "default": "local"
                  },
                  "swap": {
                    "type": "integer",
                    "description": "Amount of SWAP for the container in MB.",
                    "minimum": 0,
                    "default": 512
                  },
                  "tags": {
                    "type": "string",
                    "format": "pve-tag-list",
                    "description": "Tags of the Container. This is only meta information."
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false
                  },
                  "timezone": {
                    "type": "string",
                    "format": "pve-ct-timezone",
                    "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab"
                  },
                  "tty": {
                    "type": "integer",
                    "description": "Specify the number of tty available to the container",
                    "minimum": 0,
                    "maximum": 6,
                    "default": 2
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Assign a unique random ethernet address."
                  },
                  "unprivileged": {
                    "type": "boolean",
                    "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                    "default": false
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                  },
                  "vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  }
                },
                "required": [
                  "ostemplate",
                  "vmid"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}": {
      "delete": {
        "summary": "Destroy the container (also delete all uses files).",
        "description": "Destroy the container (also delete all uses files).",
        "operationId": "delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "destroy-unreferenced-disks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set, destroy additionally all disks with the VMID from all enabled storages which are not referenced in the config."
            },
            "description": "If set, destroy additionally all disks with the VMID from all enabled storages which are not referenced in the config."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force destroy, even if running.",
              "default": false
            },
            "description": "Force destroy, even if running."
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Remove container from all related configurations. For example, backup jobs, replication jobs or HA. Related ACLs and Firewall entries will *always* be removed.",
              "default": false
            },
            "description": "Remove container from all related configurations. For example, backup jobs, replication jobs or HA. Related ACLs and Firewall entries will *always* be removed."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Directory index",
        "description": "Directory index",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/config": {
      "get": {
        "summary": "Get container configuration.",
        "description": "Get container configuration.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_config",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "current",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Get current values (instead of pending values).",
              "default": false
            },
            "description": "Get current values (instead of pending values)."
          },
          {
            "name": "snapshot",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "description": "Fetch config values from given snapshot.",
              "maxLength": 40
            },
            "description": "Fetch config values from given snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "arch": {
                      "type": "string",
                      "description": "OS architecture type."
                    },
                    "cmode": {
                      "type": "string",
                      "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login)."
                    },
                    "console": {
                      "type": "boolean",
                      "description": "Attach a console device (/dev/console) to the container."
                    },
                    "cores": {
                      "type": "integer",
                      "description": "The number of cores assigned to the container. A container can use all available cores by default."
                    },
                    "cpulimit": {
                      "type": "number",
                      "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit."
                    },
                    "cpuunits": {
                      "type": "integer",
                      "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2."
                    },
                    "debug": {
                      "type": "boolean",
                      "description": "Try to be more verbose. For now this only enables debug log-level on start."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file."
                    },
                    "dev[n]": {
                      "type": "string",
                      "description": "Device to pass through to the container"
                    },
                    "digest": {
                      "type": "string",
                      "description": "SHA1 digest of configuration file. This can be used to prevent concurrent modifications."
                    },
                    "features": {
                      "type": "string",
                      "description": "Allow containers access to advanced features."
                    },
                    "hookscript": {
                      "type": "string",
                      "format": "pve-volume-id",
                      "description": "Script that will be executed during various steps in the containers lifetime."
                    },
                    "hostname": {
                      "type": "string",
                      "format": "dns-name",
                      "description": "Set a host name for the container."
                    },
                    "lock": {
                      "type": "string",
                      "description": "Lock/unlock the container."
                    },
                    "lxc": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "description": "Array of lxc low-level configurations ([[key1, value1], [key2, value2] ...])."
                    },
                    "memory": {
                      "type": "integer",
                      "description": "Amount of RAM for the container in MB."
                    },
                    "mp[n]": {
                      "type": "string",
                      "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume."
                    },
                    "nameserver": {
                      "type": "string",
                      "format": "lxc-ip-with-ll-iface-list",
                      "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver."
                    },
                    "net[n]": {
                      "type": "string",
                      "description": "Specifies network interfaces for the container."
                    },
                    "onboot": {
                      "type": "boolean",
                      "description": "Specifies whether a container will be started during system bootup."
                    },
                    "ostype": {
                      "type": "string",
                      "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup."
                    },
                    "protection": {
                      "type": "boolean",
                      "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation."
                    },
                    "rootfs": {
                      "type": "string",
                      "description": "Use volume as container root."
                    },
                    "searchdomain": {
                      "type": "string",
                      "format": "dns-name-list",
                      "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver."
                    },
                    "startup": {
                      "type": "string",
                      "format": "pve-startup-order",
                      "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                    },
                    "swap": {
                      "type": "integer",
                      "description": "Amount of SWAP for the container in MB."
                    },
                    "tags": {
                      "type": "string",
                      "format": "pve-tag-list",
                      "description": "Tags of the Container. This is only meta information."
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Enable/disable Template."
                    },
                    "timezone": {
                      "type": "string",
                      "format": "pve-ct-timezone",
                      "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab"
                    },
                    "tty": {
                      "type": "integer",
                      "description": "Specify the number of tty available to the container"
                    },
                    "unprivileged": {
                      "type": "boolean",
                      "description": "Makes the container run as unprivileged user. (Should not be modified manually.)"
                    },
                    "unused[n]": {
                      "type": "string",
                      "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set container options.",
        "description": "Set container options.",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_config",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arch": {
                    "type": "string",
                    "description": "OS architecture type.",
                    "enum": [
                      "amd64",
                      "i386",
                      "arm64",
                      "armhf",
                      "riscv32",
                      "riscv64"
                    ],
                    "default": "amd64"
                  },
                  "cmode": {
                    "type": "string",
                    "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                    "enum": [
                      "shell",
                      "console",
                      "tty"
                    ],
                    "default": "tty"
                  },
                  "console": {
                    "type": "boolean",
                    "description": "Attach a console device (/dev/console) to the container.",
                    "default": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                    "minimum": 1,
                    "maximum": 8192
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "minimum": 0,
                    "maximum": 8192,
                    "default": 0
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.",
                    "minimum": 0,
                    "maximum": 500000,
                    "default": "cgroup v1: 1024, cgroup v2: 100"
                  },
                  "debug": {
                    "type": "boolean",
                    "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                    "default": false
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192
                  },
                  "dev[n]": {
                    "type": "string",
                    "description": "Device to pass through to the container"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "features": {
                    "type": "string",
                    "description": "Allow containers access to advanced features."
                  },
                  "hookscript": {
                    "type": "string",
                    "format": "pve-volume-id",
                    "description": "Script that will be executed during various steps in the containers lifetime."
                  },
                  "hostname": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a host name for the container.",
                    "maxLength": 255
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the container.",
                    "enum": [
                      "backup",
                      "create",
                      "destroyed",
                      "disk",
                      "fstrim",
                      "migrate",
                      "mounted",
                      "rollback",
                      "snapshot",
                      "snapshot-delete"
                    ]
                  },
                  "memory": {
                    "type": "integer",
                    "description": "Amount of RAM for the container in MB.",
                    "minimum": 16,
                    "default": 512
                  },
                  "mp[n]": {
                    "type": "string",
                    "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume."
                  },
                  "nameserver": {
                    "type": "string",
                    "format": "lxc-ip-with-ll-iface-list",
                    "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver."
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specifies network interfaces for the container."
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a container will be started during system bootup.",
                    "default": false
                  },
                  "ostype": {
                    "type": "string",
                    "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                    "enum": [
                      "debian",
                      "devuan",
                      "ubuntu",
                      "centos",
                      "fedora",
                      "opensuse",
                      "archlinux",
                      "alpine",
                      "gentoo",
                      "nixos",
                      "unmanaged"
                    ]
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                    "default": false
                  },
                  "revert": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "Revert a pending change."
                  },
                  "rootfs": {
                    "type": "string",
                    "description": "Use volume as container root."
                  },
                  "searchdomain": {
                    "type": "string",
                    "format": "dns-name-list",
                    "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver."
                  },
                  "startup": {
                    "type": "string",
                    "format": "pve-startup-order",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped."
                  },
                  "swap": {
                    "type": "integer",
                    "description": "Amount of SWAP for the container in MB.",
                    "minimum": 0,
                    "default": 512
                  },
                  "tags": {
                    "type": "string",
                    "format": "pve-tag-list",
                    "description": "Tags of the Container. This is only meta information."
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false
                  },
                  "timezone": {
                    "type": "string",
                    "format": "pve-ct-timezone",
                    "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab"
                  },
                  "tty": {
                    "type": "integer",
                    "description": "Specify the number of tty available to the container",
                    "minimum": 0,
                    "maximum": 6,
                    "default": 2
                  },
                  "unprivileged": {
                    "type": "boolean",
                    "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                    "default": false
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status": {
      "get": {
        "summary": "Directory index",
        "description": "Directory index",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/current": {
      "get": {
        "summary": "Get virtual machine status.",
        "description": "Get virtual machine status.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_current",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "number",
                      "description": "Current CPU usage."
                    },
                    "cpus": {
                      "type": "number",
                      "description": "Maximum usable CPUs."
                    },
                    "disk": {
                      "type": "integer",
                      "description": "Root disk image space-usage in bytes."
                    },
                    "diskread": {
                      "type": "integer",
                      "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                    },
                    "diskwrite": {
                      "type": "integer",
                      "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)"
                    },
                    "ha": {
                      "type": "object",
                      "description": "HA manager service status."
                    },
                    "lock": {
                      "type": "string",
                      "description": "The current config lock, if any."
                    },
                    "maxdisk": {
                      "type": "integer",
                      "description": "Root disk image size in bytes."
                    },
                    "maxmem": {
                      "type": "integer",
                      "description": "Maximum memory in bytes."
                    },
                    "maxswap": {
                      "type": "integer",
                      "description": "Maximum SWAP memory in bytes."
                    },
                    "mem": {
                      "type": "integer",
                      "description": "Currently used memory in bytes."
                    },
                    "name": {
                      "type": "string",
                      "description": "Container name."
                    },
                    "netin": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started."
                    },
                    "netout": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started."
                    },
                    "status": {
                      "type": "string",
                      "description": "LXC Container status."
                    },
                    "tags": {
                      "type": "string",
                      "description": "The current configured tags, if any."
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Determines if the guest is a template."
                    },
                    "uptime": {
                      "type": "integer",
                      "description": "Uptime in seconds."
                    },
                    "vmid": {
                      "type": "integer",
                      "format": "pve-vmid",
                      "description": "The (unique) ID of the VM."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/start": {
      "post": {
        "summary": "Start the container.",
        "description": "Start the container.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_start",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "debug": {
                    "type": "boolean",
                    "description": "If set, enables very verbose debug log-level on start.",
                    "default": false
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/stop": {
      "post": {
        "summary": "Stop the container. This will abruptly stop all processes running in the container.",
        "description": "Stop the container. This will abruptly stop all processes running in the container.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_stop",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "overrule-shutdown": {
                    "type": "boolean",
                    "description": "Try to abort active 'vzshutdown' tasks before stopping.",
                    "default": false
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/shutdown": {
      "post": {
        "summary": "Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.",
        "description": "Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_shutdown",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forceStop": {
                    "type": "boolean",
                    "description": "Make sure the Container stops.",
                    "default": false
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "minimum": 0,
                    "default": 60
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/suspend": {
      "post": {
        "summary": "Suspend the container. This is experimental.",
        "description": "Suspend the container. This is experimental.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_suspend",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/resume": {
      "post": {
        "summary": "Resume the container.",
        "description": "Resume the container.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_resume",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/reboot": {
      "post": {
        "summary": "Reboot the container by shutting it down, and starting it again. Applies pending changes.",
        "description": "Reboot the container by shutting it down, and starting it again. Applies pending changes.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_reboot",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds for the shutdown.",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot": {
      "get": {
        "summary": "List all snapshots.",
        "description": "List all snapshots.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Snapshot description."
                      },
                      "name": {
                        "type": "string",
                        "description": "Snapshot identifier. Value 'current' identifies the current VM."
                      },
                      "parent": {
                        "type": "string",
                        "description": "Parent snapshot identifier."
                      },
                      "snaptime": {
                        "type": "integer",
                        "description": "Snapshot creation time"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Snapshot a container.",
        "description": "Snapshot a container.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment."
                  },
                  "snapname": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the snapshot.",
                    "maxLength": 40
                  }
                },
                "required": [
                  "snapname"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot/nodes/{node}/lxc/{vmid}/snapshot/{snapname}": {
      "delete": {
        "summary": "Delete a LXC snapshot.",
        "description": "Delete a LXC snapshot.",
        "operationId": "delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "For removal from config file, even if removing disk snapshots fails."
            },
            "description": "For removal from config file, even if removing disk snapshots fails."
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "",
        "description": "",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback": {
      "post": {
        "summary": "Rollback LXC state to specified snapshot.",
        "description": "Rollback LXC state to specified snapshot.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname_nodes_node_lxc_vmid_snapshot_snapname_rollback",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "boolean",
                    "description": "Whether the container should get started after rolling back successfully",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config": {
      "get": {
        "summary": "Get snapshot configuration",
        "description": "Get snapshot configuration",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname_nodes_node_lxc_vmid_snapshot_snapname_config",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update snapshot metadata.",
        "description": "Update snapshot metadata.",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname_nodes_node_lxc_vmid_snapshot_snapname_config",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The snapname parameter"
            },
            "description": "The snapname parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/rules": {
      "get": {
        "summary": "List rules.",
        "description": "List rules.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new rule.",
        "description": "Create new rule.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                },
                "required": [
                  "action",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/rules/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}": {
      "delete": {
        "summary": "Delete rule.",
        "description": "Delete rule.",
        "operationId": "delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules_nodes_node_lxc_vmid_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get single rule data.",
        "description": "Get single rule data.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules_nodes_node_lxc_vmid_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "dest": {
                      "type": "string"
                    },
                    "dport": {
                      "type": "string"
                    },
                    "enable": {
                      "type": "integer"
                    },
                    "icmp-type": {
                      "type": "string"
                    },
                    "iface": {
                      "type": "string"
                    },
                    "ipversion": {
                      "type": "integer"
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule"
                    },
                    "macro": {
                      "type": "string"
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sport": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Modify rule data.",
        "description": "Modify rule data.",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules_nodes_node_lxc_vmid_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/aliases": {
      "get": {
        "summary": "List aliases",
        "description": "List aliases",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create IP or Network Alias.",
        "description": "Create IP or Network Alias.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDR",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Alias name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr",
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/aliases/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}": {
      "delete": {
        "summary": "Remove IP or Network alias.",
        "description": "Remove IP or Network alias.",
        "operationId": "delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases_nodes_node_lxc_vmid_firewall_aliases_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read alias.",
        "description": "Read alias.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases_nodes_node_lxc_vmid_firewall_aliases_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP or Network alias.",
        "description": "Update IP or Network alias.",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases_nodes_node_lxc_vmid_firewall_aliases_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDR",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing alias.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/ipset": {
      "get": {
        "summary": "List IPSets",
        "description": "List IPSets",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "name": {
                        "type": "string",
                        "description": "IP set name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new IPSet",
        "description": "Create new IPSet",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "name": {
                    "type": "string",
                    "description": "IP set name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/ipset/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}": {
      "delete": {
        "summary": "Delete IPSet",
        "description": "Delete IPSet",
        "operationId": "delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Delete all members of the IPSet, if there are any."
            },
            "description": "Delete all members of the IPSet, if there are any."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "List IPSet content",
        "description": "List IPSet content",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                      },
                      "nomatch": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Add IP or Network to IPSet.",
        "description": "Add IP or Network to IPSet.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cidr": {
                    "type": "string",
                    "format": "IPorCIDRorAlias",
                    "description": "Network/IP specification in CIDR format."
                  },
                  "comment": {
                    "type": "string"
                  },
                  "nomatch": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "cidr"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/ipset/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}": {
      "delete": {
        "summary": "Remove IP or Network from IPSet.",
        "description": "Remove IP or Network from IPSet.",
        "operationId": "delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name_nodes_node_lxc_vmid_firewall_ipset_name_cidr",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read IP or Network settings from IPSet.",
        "description": "Read IP or Network settings from IPSet.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name_nodes_node_lxc_vmid_firewall_ipset_name_cidr",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update IP or Network settings",
        "description": "Update IP or Network settings",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name_nodes_node_lxc_vmid_firewall_ipset_name_cidr",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "nomatch": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The cidr parameter"
            },
            "description": "The cidr parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/options": {
      "get": {
        "summary": "Get VM firewall options.",
        "description": "Get VM firewall options.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_options",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dhcp": {
                      "type": "boolean",
                      "description": "Enable DHCP."
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Enable/disable firewall rules."
                    },
                    "ipfilter": {
                      "type": "boolean",
                      "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added."
                    },
                    "log_level_in": {
                      "type": "string",
                      "description": "Log level for incoming traffic."
                    },
                    "log_level_out": {
                      "type": "string",
                      "description": "Log level for outgoing traffic."
                    },
                    "macfilter": {
                      "type": "boolean",
                      "description": "Enable/disable MAC address filter."
                    },
                    "ndp": {
                      "type": "boolean",
                      "description": "Enable NDP (Neighbor Discovery Protocol)."
                    },
                    "policy_in": {
                      "type": "string",
                      "description": "Input policy."
                    },
                    "policy_out": {
                      "type": "string",
                      "description": "Output policy."
                    },
                    "radv": {
                      "type": "boolean",
                      "description": "Allow sending Router Advertisement."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set Firewall options.",
        "description": "Set Firewall options.",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_options",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.",
                    "default": false
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/disable firewall rules.",
                    "default": false
                  },
                  "ipfilter": {
                    "type": "boolean",
                    "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added."
                  },
                  "log_level_in": {
                    "type": "string",
                    "description": "Log level for incoming traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "log_level_out": {
                    "type": "string",
                    "description": "Log level for outgoing traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macfilter": {
                    "type": "boolean",
                    "description": "Enable/disable MAC address filter.",
                    "default": true
                  },
                  "ndp": {
                    "type": "boolean",
                    "description": "Enable NDP (Neighbor Discovery Protocol).",
                    "default": false
                  },
                  "policy_in": {
                    "type": "string",
                    "description": "Input policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ]
                  },
                  "policy_out": {
                    "type": "string",
                    "description": "Output policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ]
                  },
                  "radv": {
                    "type": "boolean",
                    "description": "Allow sending Router Advertisement."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/log": {
      "get": {
        "summary": "Read firewall log",
        "description": "Read firewall log",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_log",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display log since this UNIX epoch.",
              "minimum": 0
            },
            "description": "Display log since this UNIX epoch."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display log until this UNIX epoch.",
              "minimum": 0
            },
            "description": "Display log until this UNIX epoch."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/refs": {
      "get": {
        "summary": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_refs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list references of specified type.",
              "enum": [
                "alias",
                "ipset"
              ]
            },
            "description": "Only list references of specified type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/rrd": {
      "get": {
        "summary": "Read VM RRD statistics (returns PNG)",
        "description": "Read VM RRD statistics (returns PNG)",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_rrd",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid-list",
              "description": "The list of datasources you want to display."
            },
            "description": "The list of datasources you want to display."
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/rrddata": {
      "get": {
        "summary": "Read VM RRD statistics",
        "description": "Read VM RRD statistics",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_rrddata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/vncproxy": {
      "post": {
        "summary": "Creates a TCP VNC proxy connections.",
        "description": "Creates a TCP VNC proxy connections.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_vncproxy",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "height": {
                    "type": "integer",
                    "description": "sets the height of the console in pixels.",
                    "minimum": 16,
                    "maximum": 2160
                  },
                  "websocket": {
                    "type": "boolean",
                    "description": "use websocket instead of standard VNC."
                  },
                  "width": {
                    "type": "integer",
                    "description": "sets the width of the console in pixels.",
                    "minimum": 16,
                    "maximum": 4096
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/termproxy": {
      "post": {
        "summary": "Creates a TCP proxy connection.",
        "description": "Creates a TCP proxy connection.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_termproxy",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/vncwebsocket": {
      "get": {
        "summary": "Opens a weksocket for VNC traffic.",
        "description": "Opens a weksocket for VNC traffic.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_vncwebsocket",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "port",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Port number returned by previous vncproxy call.",
              "minimum": 5900,
              "maximum": 5999
            },
            "description": "Port number returned by previous vncproxy call."
          },
          {
            "name": "vncticket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Ticket from previous call to vncproxy.",
              "maxLength": 512
            },
            "description": "Ticket from previous call to vncproxy."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/spiceproxy": {
      "post": {
        "summary": "Returns a SPICE configuration to connect to the CT.",
        "description": "Returns a SPICE configuration to connect to the CT.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_spiceproxy",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "proxy": {
                    "type": "string",
                    "format": "address",
                    "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI)."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned values can be directly passed to the 'remote-viewer' application.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returned values can be directly passed to the 'remote-viewer' application."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/remote_migrate": {
      "post": {
        "summary": "Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!",
        "description": "Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_remote_migrate",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "migrate limit from datacenter or storage config"
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original CT and related data after successful migration. By default the original CT is kept on the source cluster in a stopped state.",
                    "default": false
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration."
                  },
                  "restart": {
                    "type": "boolean",
                    "description": "Use restart migration"
                  },
                  "target-bridge": {
                    "type": "string",
                    "format": "bridge-pair-list",
                    "description": "Mapping from source to target bridges. Providing only a single bridge ID maps all source bridges to that bridge. Providing the special value '1' will map each source bridge to itself."
                  },
                  "target-endpoint": {
                    "type": "string",
                    "format": "proxmox-remote",
                    "description": "Remote target endpoint"
                  },
                  "target-storage": {
                    "type": "string",
                    "format": "storage-pair-list",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself."
                  },
                  "target-vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for shutdown for restart migration",
                    "default": 180
                  }
                },
                "required": [
                  "target-bridge",
                  "target-endpoint",
                  "target-storage"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/migrate": {
      "post": {
        "summary": "Migrate the container to another node. Creates a new migration task.",
        "description": "Migrate the container to another node. Creates a new migration task.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_migrate",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "migrate limit from datacenter or storage config"
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration."
                  },
                  "restart": {
                    "type": "boolean",
                    "description": "Use restart migration"
                  },
                  "target": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node."
                  },
                  "target-storage": {
                    "type": "string",
                    "format": "storage-pair-list",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself."
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for shutdown for restart migration",
                    "default": 180
                  }
                },
                "required": [
                  "target"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/feature": {
      "get": {
        "summary": "Check if feature for virtual machine is available.",
        "description": "Check if feature for virtual machine is available.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_feature",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "feature",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Feature to check.",
              "enum": [
                "snapshot",
                "clone",
                "copy"
              ]
            },
            "description": "Feature to check."
          },
          {
            "name": "snapname",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "description": "The name of the snapshot.",
              "maxLength": 40
            },
            "description": "The name of the snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasFeature": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/template": {
      "post": {
        "summary": "Create a Template.",
        "description": "Create a Template.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_template",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/clone": {
      "post": {
        "summary": "Create a container clone/copy",
        "description": "Create a container clone/copy",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_clone",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "clone limit from datacenter or storage config"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the new CT."
                  },
                  "full": {
                    "type": "boolean",
                    "description": "Create a full copy of all disks. This is always done when you clone a normal CT. For CT templates, we try to create a linked clone by default."
                  },
                  "hostname": {
                    "type": "string",
                    "format": "dns-name",
                    "description": "Set a hostname for the new CT."
                  },
                  "newid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "VMID for the clone.",
                    "minimum": 100,
                    "maximum": 999999999
                  },
                  "pool": {
                    "type": "string",
                    "format": "pve-poolid",
                    "description": "Add the new CT to the specified pool."
                  },
                  "snapname": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The name of the snapshot.",
                    "maxLength": 40
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Target storage for full clone."
                  },
                  "target": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node. Only allowed if the original VM is on shared storage."
                  }
                },
                "required": [
                  "newid"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/resize": {
      "put": {
        "summary": "Resize a container mount point.",
        "description": "Resize a container mount point.",
        "operationId": "put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_resize",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "disk": {
                    "type": "string",
                    "description": "The disk you want to resize.",
                    "enum": [
                      "rootfs",
                      "mp0",
                      "mp1",
                      "mp2",
                      "mp3",
                      "mp4",
                      "mp5",
                      "mp6",
                      "mp7",
                      "mp8",
                      "mp9",
                      "mp10",
                      "mp11",
                      "mp12",
                      "mp13",
                      "mp14",
                      "mp15",
                      "mp16",
                      "mp17",
                      "mp18",
                      "mp19",
                      "mp20",
                      "mp21",
                      "mp22",
                      "mp23",
                      "mp24",
                      "mp25",
                      "mp26",
                      "mp27",
                      "mp28",
                      "mp29",
                      "mp30",
                      "mp31",
                      "mp32",
                      "mp33",
                      "mp34",
                      "mp35",
                      "mp36",
                      "mp37",
                      "mp38",
                      "mp39",
                      "mp40",
                      "mp41",
                      "mp42",
                      "mp43",
                      "mp44",
                      "mp45",
                      "mp46",
                      "mp47",
                      "mp48",
                      "mp49",
                      "mp50",
                      "mp51",
                      "mp52",
                      "mp53",
                      "mp54",
                      "mp55",
                      "mp56",
                      "mp57",
                      "mp58",
                      "mp59",
                      "mp60",
                      "mp61",
                      "mp62",
                      "mp63",
                      "mp64",
                      "mp65",
                      "mp66",
                      "mp67",
                      "mp68",
                      "mp69",
                      "mp70",
                      "mp71",
                      "mp72",
                      "mp73",
                      "mp74",
                      "mp75",
                      "mp76",
                      "mp77",
                      "mp78",
                      "mp79",
                      "mp80",
                      "mp81",
                      "mp82",
                      "mp83",
                      "mp84",
                      "mp85",
                      "mp86",
                      "mp87",
                      "mp88",
                      "mp89",
                      "mp90",
                      "mp91",
                      "mp92",
                      "mp93",
                      "mp94",
                      "mp95",
                      "mp96",
                      "mp97",
                      "mp98",
                      "mp99",
                      "mp100",
                      "mp101",
                      "mp102",
                      "mp103",
                      "mp104",
                      "mp105",
                      "mp106",
                      "mp107",
                      "mp108",
                      "mp109",
                      "mp110",
                      "mp111",
                      "mp112",
                      "mp113",
                      "mp114",
                      "mp115",
                      "mp116",
                      "mp117",
                      "mp118",
                      "mp119",
                      "mp120",
                      "mp121",
                      "mp122",
                      "mp123",
                      "mp124",
                      "mp125",
                      "mp126",
                      "mp127",
                      "mp128",
                      "mp129",
                      "mp130",
                      "mp131",
                      "mp132",
                      "mp133",
                      "mp134",
                      "mp135",
                      "mp136",
                      "mp137",
                      "mp138",
                      "mp139",
                      "mp140",
                      "mp141",
                      "mp142",
                      "mp143",
                      "mp144",
                      "mp145",
                      "mp146",
                      "mp147",
                      "mp148",
                      "mp149",
                      "mp150",
                      "mp151",
                      "mp152",
                      "mp153",
                      "mp154",
                      "mp155",
                      "mp156",
                      "mp157",
                      "mp158",
                      "mp159",
                      "mp160",
                      "mp161",
                      "mp162",
                      "mp163",
                      "mp164",
                      "mp165",
                      "mp166",
                      "mp167",
                      "mp168",
                      "mp169",
                      "mp170",
                      "mp171",
                      "mp172",
                      "mp173",
                      "mp174",
                      "mp175",
                      "mp176",
                      "mp177",
                      "mp178",
                      "mp179",
                      "mp180",
                      "mp181",
                      "mp182",
                      "mp183",
                      "mp184",
                      "mp185",
                      "mp186",
                      "mp187",
                      "mp188",
                      "mp189",
                      "mp190",
                      "mp191",
                      "mp192",
                      "mp193",
                      "mp194",
                      "mp195",
                      "mp196",
                      "mp197",
                      "mp198",
                      "mp199",
                      "mp200",
                      "mp201",
                      "mp202",
                      "mp203",
                      "mp204",
                      "mp205",
                      "mp206",
                      "mp207",
                      "mp208",
                      "mp209",
                      "mp210",
                      "mp211",
                      "mp212",
                      "mp213",
                      "mp214",
                      "mp215",
                      "mp216",
                      "mp217",
                      "mp218",
                      "mp219",
                      "mp220",
                      "mp221",
                      "mp222",
                      "mp223",
                      "mp224",
                      "mp225",
                      "mp226",
                      "mp227",
                      "mp228",
                      "mp229",
                      "mp230",
                      "mp231",
                      "mp232",
                      "mp233",
                      "mp234",
                      "mp235",
                      "mp236",
                      "mp237",
                      "mp238",
                      "mp239",
                      "mp240",
                      "mp241",
                      "mp242",
                      "mp243",
                      "mp244",
                      "mp245",
                      "mp246",
                      "mp247",
                      "mp248",
                      "mp249",
                      "mp250",
                      "mp251",
                      "mp252",
                      "mp253",
                      "mp254",
                      "mp255"
                    ]
                  },
                  "size": {
                    "type": "string",
                    "description": "The new size. With the '+' sign the value is added to the actual size of the volume and without it, the value is taken as an absolute one. Shrinking disk size is not supported.",
                    "pattern": "\\+?\\d+(\\.\\d+)?[KMGT]?"
                  }
                },
                "required": [
                  "disk",
                  "size"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/move_volume": {
      "post": {
        "summary": "Move a rootfs-/mp-volume to a different storage or to a different container.",
        "description": "Move a rootfs-/mp-volume to a different storage or to a different container.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_move_volume",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "minimum": 0,
                    "default": "clone limit from datacenter or storage config"
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original volume after successful copy. By default the original is kept as an unused volume entry.",
                    "default": false
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 \" .\n\t\t    \"digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Target Storage."
                  },
                  "target-digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file of the target \" .\n\t\t    \"container has a different SHA1 digest. This can be used to prevent \" .\n\t\t    \"concurrent modifications.",
                    "maxLength": 40
                  },
                  "target-vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999
                  },
                  "target-volume": {
                    "type": "string",
                    "description": "The config key the volume will be moved to. Default is the source volume key.",
                    "enum": [
                      "rootfs",
                      "mp0",
                      "mp1",
                      "mp2",
                      "mp3",
                      "mp4",
                      "mp5",
                      "mp6",
                      "mp7",
                      "mp8",
                      "mp9",
                      "mp10",
                      "mp11",
                      "mp12",
                      "mp13",
                      "mp14",
                      "mp15",
                      "mp16",
                      "mp17",
                      "mp18",
                      "mp19",
                      "mp20",
                      "mp21",
                      "mp22",
                      "mp23",
                      "mp24",
                      "mp25",
                      "mp26",
                      "mp27",
                      "mp28",
                      "mp29",
                      "mp30",
                      "mp31",
                      "mp32",
                      "mp33",
                      "mp34",
                      "mp35",
                      "mp36",
                      "mp37",
                      "mp38",
                      "mp39",
                      "mp40",
                      "mp41",
                      "mp42",
                      "mp43",
                      "mp44",
                      "mp45",
                      "mp46",
                      "mp47",
                      "mp48",
                      "mp49",
                      "mp50",
                      "mp51",
                      "mp52",
                      "mp53",
                      "mp54",
                      "mp55",
                      "mp56",
                      "mp57",
                      "mp58",
                      "mp59",
                      "mp60",
                      "mp61",
                      "mp62",
                      "mp63",
                      "mp64",
                      "mp65",
                      "mp66",
                      "mp67",
                      "mp68",
                      "mp69",
                      "mp70",
                      "mp71",
                      "mp72",
                      "mp73",
                      "mp74",
                      "mp75",
                      "mp76",
                      "mp77",
                      "mp78",
                      "mp79",
                      "mp80",
                      "mp81",
                      "mp82",
                      "mp83",
                      "mp84",
                      "mp85",
                      "mp86",
                      "mp87",
                      "mp88",
                      "mp89",
                      "mp90",
                      "mp91",
                      "mp92",
                      "mp93",
                      "mp94",
                      "mp95",
                      "mp96",
                      "mp97",
                      "mp98",
                      "mp99",
                      "mp100",
                      "mp101",
                      "mp102",
                      "mp103",
                      "mp104",
                      "mp105",
                      "mp106",
                      "mp107",
                      "mp108",
                      "mp109",
                      "mp110",
                      "mp111",
                      "mp112",
                      "mp113",
                      "mp114",
                      "mp115",
                      "mp116",
                      "mp117",
                      "mp118",
                      "mp119",
                      "mp120",
                      "mp121",
                      "mp122",
                      "mp123",
                      "mp124",
                      "mp125",
                      "mp126",
                      "mp127",
                      "mp128",
                      "mp129",
                      "mp130",
                      "mp131",
                      "mp132",
                      "mp133",
                      "mp134",
                      "mp135",
                      "mp136",
                      "mp137",
                      "mp138",
                      "mp139",
                      "mp140",
                      "mp141",
                      "mp142",
                      "mp143",
                      "mp144",
                      "mp145",
                      "mp146",
                      "mp147",
                      "mp148",
                      "mp149",
                      "mp150",
                      "mp151",
                      "mp152",
                      "mp153",
                      "mp154",
                      "mp155",
                      "mp156",
                      "mp157",
                      "mp158",
                      "mp159",
                      "mp160",
                      "mp161",
                      "mp162",
                      "mp163",
                      "mp164",
                      "mp165",
                      "mp166",
                      "mp167",
                      "mp168",
                      "mp169",
                      "mp170",
                      "mp171",
                      "mp172",
                      "mp173",
                      "mp174",
                      "mp175",
                      "mp176",
                      "mp177",
                      "mp178",
                      "mp179",
                      "mp180",
                      "mp181",
                      "mp182",
                      "mp183",
                      "mp184",
                      "mp185",
                      "mp186",
                      "mp187",
                      "mp188",
                      "mp189",
                      "mp190",
                      "mp191",
                      "mp192",
                      "mp193",
                      "mp194",
                      "mp195",
                      "mp196",
                      "mp197",
                      "mp198",
                      "mp199",
                      "mp200",
                      "mp201",
                      "mp202",
                      "mp203",
                      "mp204",
                      "mp205",
                      "mp206",
                      "mp207",
                      "mp208",
                      "mp209",
                      "mp210",
                      "mp211",
                      "mp212",
                      "mp213",
                      "mp214",
                      "mp215",
                      "mp216",
                      "mp217",
                      "mp218",
                      "mp219",
                      "mp220",
                      "mp221",
                      "mp222",
                      "mp223",
                      "mp224",
                      "mp225",
                      "mp226",
                      "mp227",
                      "mp228",
                      "mp229",
                      "mp230",
                      "mp231",
                      "mp232",
                      "mp233",
                      "mp234",
                      "mp235",
                      "mp236",
                      "mp237",
                      "mp238",
                      "mp239",
                      "mp240",
                      "mp241",
                      "mp242",
                      "mp243",
                      "mp244",
                      "mp245",
                      "mp246",
                      "mp247",
                      "mp248",
                      "mp249",
                      "mp250",
                      "mp251",
                      "mp252",
                      "mp253",
                      "mp254",
                      "mp255",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ]
                  },
                  "volume": {
                    "type": "string",
                    "description": "Volume which will be moved.",
                    "enum": [
                      "rootfs",
                      "mp0",
                      "mp1",
                      "mp2",
                      "mp3",
                      "mp4",
                      "mp5",
                      "mp6",
                      "mp7",
                      "mp8",
                      "mp9",
                      "mp10",
                      "mp11",
                      "mp12",
                      "mp13",
                      "mp14",
                      "mp15",
                      "mp16",
                      "mp17",
                      "mp18",
                      "mp19",
                      "mp20",
                      "mp21",
                      "mp22",
                      "mp23",
                      "mp24",
                      "mp25",
                      "mp26",
                      "mp27",
                      "mp28",
                      "mp29",
                      "mp30",
                      "mp31",
                      "mp32",
                      "mp33",
                      "mp34",
                      "mp35",
                      "mp36",
                      "mp37",
                      "mp38",
                      "mp39",
                      "mp40",
                      "mp41",
                      "mp42",
                      "mp43",
                      "mp44",
                      "mp45",
                      "mp46",
                      "mp47",
                      "mp48",
                      "mp49",
                      "mp50",
                      "mp51",
                      "mp52",
                      "mp53",
                      "mp54",
                      "mp55",
                      "mp56",
                      "mp57",
                      "mp58",
                      "mp59",
                      "mp60",
                      "mp61",
                      "mp62",
                      "mp63",
                      "mp64",
                      "mp65",
                      "mp66",
                      "mp67",
                      "mp68",
                      "mp69",
                      "mp70",
                      "mp71",
                      "mp72",
                      "mp73",
                      "mp74",
                      "mp75",
                      "mp76",
                      "mp77",
                      "mp78",
                      "mp79",
                      "mp80",
                      "mp81",
                      "mp82",
                      "mp83",
                      "mp84",
                      "mp85",
                      "mp86",
                      "mp87",
                      "mp88",
                      "mp89",
                      "mp90",
                      "mp91",
                      "mp92",
                      "mp93",
                      "mp94",
                      "mp95",
                      "mp96",
                      "mp97",
                      "mp98",
                      "mp99",
                      "mp100",
                      "mp101",
                      "mp102",
                      "mp103",
                      "mp104",
                      "mp105",
                      "mp106",
                      "mp107",
                      "mp108",
                      "mp109",
                      "mp110",
                      "mp111",
                      "mp112",
                      "mp113",
                      "mp114",
                      "mp115",
                      "mp116",
                      "mp117",
                      "mp118",
                      "mp119",
                      "mp120",
                      "mp121",
                      "mp122",
                      "mp123",
                      "mp124",
                      "mp125",
                      "mp126",
                      "mp127",
                      "mp128",
                      "mp129",
                      "mp130",
                      "mp131",
                      "mp132",
                      "mp133",
                      "mp134",
                      "mp135",
                      "mp136",
                      "mp137",
                      "mp138",
                      "mp139",
                      "mp140",
                      "mp141",
                      "mp142",
                      "mp143",
                      "mp144",
                      "mp145",
                      "mp146",
                      "mp147",
                      "mp148",
                      "mp149",
                      "mp150",
                      "mp151",
                      "mp152",
                      "mp153",
                      "mp154",
                      "mp155",
                      "mp156",
                      "mp157",
                      "mp158",
                      "mp159",
                      "mp160",
                      "mp161",
                      "mp162",
                      "mp163",
                      "mp164",
                      "mp165",
                      "mp166",
                      "mp167",
                      "mp168",
                      "mp169",
                      "mp170",
                      "mp171",
                      "mp172",
                      "mp173",
                      "mp174",
                      "mp175",
                      "mp176",
                      "mp177",
                      "mp178",
                      "mp179",
                      "mp180",
                      "mp181",
                      "mp182",
                      "mp183",
                      "mp184",
                      "mp185",
                      "mp186",
                      "mp187",
                      "mp188",
                      "mp189",
                      "mp190",
                      "mp191",
                      "mp192",
                      "mp193",
                      "mp194",
                      "mp195",
                      "mp196",
                      "mp197",
                      "mp198",
                      "mp199",
                      "mp200",
                      "mp201",
                      "mp202",
                      "mp203",
                      "mp204",
                      "mp205",
                      "mp206",
                      "mp207",
                      "mp208",
                      "mp209",
                      "mp210",
                      "mp211",
                      "mp212",
                      "mp213",
                      "mp214",
                      "mp215",
                      "mp216",
                      "mp217",
                      "mp218",
                      "mp219",
                      "mp220",
                      "mp221",
                      "mp222",
                      "mp223",
                      "mp224",
                      "mp225",
                      "mp226",
                      "mp227",
                      "mp228",
                      "mp229",
                      "mp230",
                      "mp231",
                      "mp232",
                      "mp233",
                      "mp234",
                      "mp235",
                      "mp236",
                      "mp237",
                      "mp238",
                      "mp239",
                      "mp240",
                      "mp241",
                      "mp242",
                      "mp243",
                      "mp244",
                      "mp245",
                      "mp246",
                      "mp247",
                      "mp248",
                      "mp249",
                      "mp250",
                      "mp251",
                      "mp252",
                      "mp253",
                      "mp254",
                      "mp255",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ]
                  }
                },
                "required": [
                  "volume"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/pending": {
      "get": {
        "summary": "Get container configuration, including pending changes.",
        "description": "Get container configuration, including pending changes.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_pending",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "integer",
                        "description": "Indicates a pending delete request if present and not 0."
                      },
                      "key": {
                        "type": "string",
                        "description": "Configuration option name."
                      },
                      "pending": {
                        "type": "string",
                        "description": "Pending value."
                      },
                      "value": {
                        "type": "string",
                        "description": "Current value."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/interfaces": {
      "get": {
        "summary": "Get IP addresses of the specified container interface.",
        "description": "Get IP addresses of the specified container interface.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_interfaces",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hardware-address": {
                        "type": "string",
                        "description": "The MAC address of the interface"
                      },
                      "hwaddr": {
                        "type": "string",
                        "description": "The MAC address of the interface"
                      },
                      "inet": {
                        "type": "string",
                        "description": "The IPv4 address of the interface"
                      },
                      "inet6": {
                        "type": "string",
                        "description": "The IPv6 address of the interface"
                      },
                      "ip-addresses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ip-address": {
                              "type": "string",
                              "description": "IP-Address"
                            },
                            "ip-address-type": {
                              "type": "string",
                              "description": "IP-Family"
                            },
                            "prefix": {
                              "type": "integer",
                              "description": "IP-Prefix"
                            }
                          }
                        },
                        "description": "The addresses of the interface"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the interface"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/mtunnel": {
      "post": {
        "summary": "Migration tunnel endpoint - only for internal use by CT migration.",
        "description": "Migration tunnel endpoint - only for internal use by CT migration.",
        "operationId": "post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_mtunnel",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bridges": {
                    "type": "string",
                    "format": "pve-bridge-id-list",
                    "description": "List of network bridges to check availability. Will be checked again for actually used bridges during migration."
                  },
                  "storages": {
                    "type": "string",
                    "format": "pve-storage-id-list",
                    "description": "List of storages to check permission and availability. Will be checked again for all actually used storages during migration."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/mtunnelwebsocket": {
      "get": {
        "summary": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
        "description": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
        "operationId": "get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_mtunnelwebsocket",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxVmId"
            },
            "description": "The vmid parameter"
          },
          {
            "name": "socket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "unix socket to forward to"
            },
            "description": "unix socket to forward to"
          },
          {
            "name": "ticket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command"
            },
            "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    },
                    "socket": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg/nodes/{node}/ceph/cfg/raw": {
      "get": {
        "summary": "Get the Ceph configuration file.",
        "description": "Get the Ceph configuration file.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg_nodes_node_ceph_cfg_raw",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg/nodes/{node}/ceph/cfg/db": {
      "get": {
        "summary": "Get the Ceph configuration database.",
        "description": "Get the Ceph configuration database.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg_nodes_node_ceph_cfg_db",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "can_update_at_runtime": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "string"
                      },
                      "mask": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "section": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg/nodes/{node}/ceph/cfg/value": {
      "get": {
        "summary": "Get configured values from either the config file or config DB.",
        "description": "Get configured values from either the config file or config DB.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg_nodes_node_ceph_cfg_value",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "config-keys",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "List of <section>:<config key> items."
            },
            "description": "List of <section>:<config key> items."
          }
        ],
        "responses": {
          "200": {
            "description": "Contains {section}->{key} children with the values",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Contains {section}->{key} children with the values"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd": {
      "get": {
        "summary": "Get Ceph osd list/tree.",
        "description": "Get Ceph osd list/tree.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create OSD",
        "description": "Create OSD",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "crush-device-class": {
                    "type": "string",
                    "description": "Set the device class of the OSD in crush."
                  },
                  "db_dev": {
                    "type": "string",
                    "description": "Block device name for block.db."
                  },
                  "db_dev_size": {
                    "type": "number",
                    "description": "Size in GiB for block.db.",
                    "minimum": 1,
                    "default": "bluestore_block_db_size or 10% of OSD size"
                  },
                  "dev": {
                    "type": "string",
                    "description": "Block device name."
                  },
                  "encrypted": {
                    "type": "boolean",
                    "description": "Enables encryption of the OSD.",
                    "default": false
                  },
                  "osds-per-device": {
                    "type": "integer",
                    "description": "OSD services per physical device. Only useful for fast NVMe devices\"\n\t\t    .\" to utilize their performance better.",
                    "minimum": 1
                  },
                  "wal_dev": {
                    "type": "string",
                    "description": "Block device name for block.wal."
                  },
                  "wal_dev_size": {
                    "type": "number",
                    "description": "Size in GiB for block.wal.",
                    "minimum": 0.5,
                    "default": "bluestore_block_wal_size or 1% of OSD size"
                  }
                },
                "required": [
                  "dev"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}": {
      "delete": {
        "summary": "Destroy OSD",
        "description": "Destroy OSD",
        "operationId": "delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          },
          {
            "name": "cleanup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set, we remove partition table entries.",
              "default": false
            },
            "description": "If set, we remove partition table entries."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "OSD index.",
        "description": "OSD index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/metadata": {
      "get": {
        "summary": "Get OSD details",
        "description": "Get OSD details",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_metadata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dev_node": {
                            "type": "string",
                            "description": "Device node"
                          },
                          "device": {
                            "type": "string",
                            "description": "Kind of OSD device"
                          },
                          "devices": {
                            "type": "string",
                            "description": "Physical disks used"
                          },
                          "size": {
                            "type": "integer",
                            "description": "Size in bytes"
                          },
                          "support_discard": {
                            "type": "boolean",
                            "description": "Discard support of the physical device"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of device. For example, hdd or ssd"
                          }
                        }
                      },
                      "description": "Array containing data about devices"
                    },
                    "osd": {
                      "type": "object",
                      "properties": {
                        "back_addr": {
                          "type": "string",
                          "description": "Address and port used to talk to other OSDs."
                        },
                        "front_addr": {
                          "type": "string",
                          "description": "Address and port used to talk to clients and monitors."
                        },
                        "hb_back_addr": {
                          "type": "string",
                          "description": "Heartbeat address and port for other OSDs."
                        },
                        "hb_front_addr": {
                          "type": "string",
                          "description": "Heartbeat address and port for clients and monitors."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "Name of the host containing the OSD."
                        },
                        "id": {
                          "type": "integer",
                          "description": "ID of the OSD."
                        },
                        "mem_usage": {
                          "type": "integer",
                          "description": "Memory usage of the OSD service."
                        },
                        "osd_data": {
                          "type": "string",
                          "description": "Path to the OSD's data directory."
                        },
                        "osd_objectstore": {
                          "type": "string",
                          "description": "The type of object store used."
                        },
                        "pid": {
                          "type": "integer",
                          "description": "OSD process ID."
                        },
                        "version": {
                          "type": "string",
                          "description": "Ceph version of the OSD service."
                        }
                      },
                      "description": "General information about the OSD"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/lv-info": {
      "get": {
        "summary": "Get OSD volume details",
        "description": "Get OSD volume details",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_lv-info",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "OSD device type",
              "enum": [
                "block",
                "db",
                "wal"
              ],
              "default": "block"
            },
            "description": "OSD device type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creation_time": {
                      "type": "string",
                      "description": "Creation time as reported by `lvs`."
                    },
                    "lv_name": {
                      "type": "string",
                      "description": "Name of the logical volume (LV)."
                    },
                    "lv_path": {
                      "type": "string",
                      "description": "Path to the logical volume (LV)."
                    },
                    "lv_size": {
                      "type": "integer",
                      "description": "Size of the logical volume (LV)."
                    },
                    "lv_uuid": {
                      "type": "string",
                      "description": "UUID of the logical volume (LV)."
                    },
                    "vg_name": {
                      "type": "string",
                      "description": "Name of the volume group (VG)."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/in": {
      "post": {
        "summary": "ceph osd in",
        "description": "ceph osd in",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_in",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/out": {
      "post": {
        "summary": "ceph osd out",
        "description": "ceph osd out",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_out",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/scrub": {
      "post": {
        "summary": "Instruct the OSD to scrub.",
        "description": "Instruct the OSD to scrub.",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_scrub",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deep": {
                    "type": "boolean",
                    "description": "If set, instructs a deep scrub instead of a normal one.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The osdid parameter"
            },
            "description": "The osdid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mds": {
      "get": {
        "summary": "MDS directory index.",
        "description": "MDS directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mds",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addr": {
                        "type": "string"
                      },
                      "host": {
                        "type": "string"
                      },
                      "name": {
                        "type": "object",
                        "description": "The name (ID) for the MDS"
                      },
                      "rank": {
                        "type": "integer"
                      },
                      "standby_replay": {
                        "type": "boolean",
                        "description": "If true, the standby MDS is polling the active MDS for faster recovery (hot standby)."
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the MDS"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mds/nodes/{node}/ceph/mds/{name}": {
      "delete": {
        "summary": "Destroy Ceph Metadata Server",
        "description": "Destroy Ceph Metadata Server",
        "operationId": "delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mds_nodes_node_ceph_mds_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create Ceph Metadata Server (MDS)",
        "description": "Create Ceph Metadata Server (MDS)",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mds_nodes_node_ceph_mds_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hotstandby": {
                    "type": "boolean",
                    "description": "Determines whether a ceph-mds daemon should poll and replay the log of an active MDS. Faster switch on MDS failure, but needs more idle resources.",
                    "default": "0"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mgr": {
      "get": {
        "summary": "MGR directory index.",
        "description": "MGR directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mgr",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addr": {
                        "type": "string"
                      },
                      "host": {
                        "type": "string"
                      },
                      "name": {
                        "type": "object",
                        "description": "The name (ID) for the MGR"
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the MGR"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mgr/nodes/{node}/ceph/mgr/{id}": {
      "delete": {
        "summary": "Destroy Ceph Manager.",
        "description": "Destroy Ceph Manager.",
        "operationId": "delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mgr_nodes_node_ceph_mgr_id",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create Ceph Manager",
        "description": "Create Ceph Manager",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mgr_nodes_node_ceph_mgr_id",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mon": {
      "get": {
        "summary": "Get Ceph monitor list.",
        "description": "Get Ceph monitor list.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mon",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addr": {
                        "type": "string"
                      },
                      "ceph_version": {
                        "type": "string"
                      },
                      "ceph_version_short": {
                        "type": "string"
                      },
                      "direxists": {
                        "type": "string"
                      },
                      "host": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "quorum": {
                        "type": "boolean"
                      },
                      "rank": {
                        "type": "integer"
                      },
                      "service": {
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mon/nodes/{node}/ceph/mon/{monid}": {
      "delete": {
        "summary": "Destroy Ceph Monitor and Manager.",
        "description": "Destroy Ceph Monitor and Manager.",
        "operationId": "delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mon_nodes_node_ceph_mon_monid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "monid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The monid parameter"
            },
            "description": "The monid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create Ceph Monitor and Manager",
        "description": "Create Ceph Monitor and Manager",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mon_nodes_node_ceph_mon_monid",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mon-address": {
                    "type": "string",
                    "format": "ip-list",
                    "description": "Overwrites autodetected monitor IP address(es). Must be in the public network(s) of Ceph."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "monid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The monid parameter"
            },
            "description": "The monid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/fs": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_fs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "data_pool": {
                        "type": "string",
                        "description": "The name of the data pool."
                      },
                      "metadata_pool": {
                        "type": "string",
                        "description": "The name of the metadata pool."
                      },
                      "name": {
                        "type": "string",
                        "description": "The ceph filesystem name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/fs/nodes/{node}/ceph/fs/{name}": {
      "post": {
        "summary": "Create a Ceph filesystem",
        "description": "Create a Ceph filesystem",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_fs_nodes_node_ceph_fs_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add-storage": {
                    "type": "boolean",
                    "description": "Configure the created CephFS as storage for this cluster.",
                    "default": false
                  },
                  "pg_num": {
                    "type": "integer",
                    "description": "Number of placement groups for the backing data pool. The metadata pool will use a quarter of this.",
                    "minimum": 8,
                    "maximum": 32768,
                    "default": 128
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/pool": {
      "get": {
        "summary": "List all pools and their settings (which are settable by the POST/PUT endpoints).",
        "description": "List all pools and their settings (which are settable by the POST/PUT endpoints).",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "application_metadata": {
                        "type": "object"
                      },
                      "autoscale_status": {
                        "type": "object"
                      },
                      "bytes_used": {
                        "type": "integer"
                      },
                      "crush_rule": {
                        "type": "integer"
                      },
                      "crush_rule_name": {
                        "type": "string"
                      },
                      "min_size": {
                        "type": "integer"
                      },
                      "percent_used": {
                        "type": "number"
                      },
                      "pg_autoscale_mode": {
                        "type": "string"
                      },
                      "pg_num": {
                        "type": "integer"
                      },
                      "pg_num_final": {
                        "type": "integer"
                      },
                      "pg_num_min": {
                        "type": "integer"
                      },
                      "pool": {
                        "type": "integer"
                      },
                      "pool_name": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "target_size": {
                        "type": "integer"
                      },
                      "target_size_ratio": {
                        "type": "number"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create Ceph pool",
        "description": "Create Ceph pool",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_storages": {
                    "type": "boolean",
                    "description": "Configure VM and CT storage using the new pool.",
                    "default": "0; for erasure coded pools: 1"
                  },
                  "application": {
                    "type": "string",
                    "description": "The application of the pool.",
                    "enum": [
                      "rbd",
                      "cephfs",
                      "rgw"
                    ],
                    "default": "rbd"
                  },
                  "crush_rule": {
                    "type": "string",
                    "description": "The rule to use for mapping object placement in the cluster."
                  },
                  "erasure-coding": {
                    "type": "string",
                    "description": "Create an erasure coded pool for RBD with an accompaning replicated pool for metadata storage. With EC, the common ceph options 'size', 'min_size' and 'crush_rule' parameters will be applied to the metadata pool."
                  },
                  "min_size": {
                    "type": "integer",
                    "description": "Minimum number of replicas per object",
                    "minimum": 1,
                    "maximum": 7,
                    "default": 2
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the pool. It must be unique."
                  },
                  "pg_autoscale_mode": {
                    "type": "string",
                    "description": "The automatic PG scaling mode of the pool.",
                    "enum": [
                      "on",
                      "off",
                      "warn"
                    ],
                    "default": "warn"
                  },
                  "pg_num": {
                    "type": "integer",
                    "description": "Number of placement groups.",
                    "minimum": 1,
                    "maximum": 32768,
                    "default": 128
                  },
                  "pg_num_min": {
                    "type": "integer",
                    "description": "Minimal number of placement groups.",
                    "maximum": 32768
                  },
                  "size": {
                    "type": "integer",
                    "description": "Number of replicas per object",
                    "minimum": 1,
                    "maximum": 7,
                    "default": 3
                  },
                  "target_size": {
                    "type": "string",
                    "description": "The estimated target size of the pool for the PG autoscaler.",
                    "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$"
                  },
                  "target_size_ratio": {
                    "type": "number",
                    "description": "The estimated target ratio of the pool for the PG autoscaler."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/pool/nodes/{node}/ceph/pool/{name}": {
      "delete": {
        "summary": "Destroy pool",
        "description": "Destroy pool",
        "operationId": "delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true, destroys pool even if in use",
              "default": false
            },
            "description": "If true, destroys pool even if in use"
          },
          {
            "name": "remove_ecprofile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Remove the erasure code profile. Defaults to true, if applicable.",
              "default": true
            },
            "description": "Remove the erasure code profile. Defaults to true, if applicable."
          },
          {
            "name": "remove_storages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Remove all pveceph-managed storages configured for this pool",
              "default": false
            },
            "description": "Remove all pveceph-managed storages configured for this pool"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Pool index.",
        "description": "Pool index.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Change POOL settings",
        "description": "Change POOL settings",
        "operationId": "put_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "application": {
                    "type": "string",
                    "description": "The application of the pool.",
                    "enum": [
                      "rbd",
                      "cephfs",
                      "rgw"
                    ]
                  },
                  "crush_rule": {
                    "type": "string",
                    "description": "The rule to use for mapping object placement in the cluster."
                  },
                  "min_size": {
                    "type": "integer",
                    "description": "Minimum number of replicas per object",
                    "minimum": 1,
                    "maximum": 7
                  },
                  "pg_autoscale_mode": {
                    "type": "string",
                    "description": "The automatic PG scaling mode of the pool.",
                    "enum": [
                      "on",
                      "off",
                      "warn"
                    ]
                  },
                  "pg_num": {
                    "type": "integer",
                    "description": "Number of placement groups.",
                    "minimum": 1,
                    "maximum": 32768
                  },
                  "pg_num_min": {
                    "type": "integer",
                    "description": "Minimal number of placement groups.",
                    "maximum": 32768
                  },
                  "size": {
                    "type": "integer",
                    "description": "Number of replicas per object",
                    "minimum": 1,
                    "maximum": 7
                  },
                  "target_size": {
                    "type": "string",
                    "description": "The estimated target size of the pool for the PG autoscaler.",
                    "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$"
                  },
                  "target_size_ratio": {
                    "type": "number",
                    "description": "The estimated target ratio of the pool for the PG autoscaler."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/pool/nodes/{node}/ceph/pool/{name}/nodes/{node}/ceph/pool/{name}/status": {
      "get": {
        "summary": "Show the current pool status.",
        "description": "Show the current pool status.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name_nodes_node_ceph_pool_name_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If enabled, will display additional data(eg. statistics).",
              "default": false
            },
            "description": "If enabled, will display additional data(eg. statistics)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "application": {
                      "type": "string",
                      "description": "The application of the pool."
                    },
                    "application_list": {
                      "type": "array"
                    },
                    "autoscale_status": {
                      "type": "object"
                    },
                    "crush_rule": {
                      "type": "string",
                      "description": "The rule to use for mapping object placement in the cluster."
                    },
                    "fast_read": {
                      "type": "boolean"
                    },
                    "hashpspool": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "min_size": {
                      "type": "integer",
                      "description": "Minimum number of replicas per object"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the pool. It must be unique."
                    },
                    "nodeep-scrub": {
                      "type": "boolean"
                    },
                    "nodelete": {
                      "type": "boolean"
                    },
                    "nopgchange": {
                      "type": "boolean"
                    },
                    "noscrub": {
                      "type": "boolean"
                    },
                    "nosizechange": {
                      "type": "boolean"
                    },
                    "pg_autoscale_mode": {
                      "type": "string",
                      "description": "The automatic PG scaling mode of the pool."
                    },
                    "pg_num": {
                      "type": "integer",
                      "description": "Number of placement groups."
                    },
                    "pg_num_min": {
                      "type": "integer",
                      "description": "Minimal number of placement groups."
                    },
                    "pgp_num": {
                      "type": "integer"
                    },
                    "size": {
                      "type": "integer",
                      "description": "Number of replicas per object"
                    },
                    "statistics": {
                      "type": "object"
                    },
                    "target_size": {
                      "type": "string",
                      "description": "The estimated target size of the pool for the PG autoscaler."
                    },
                    "target_size_ratio": {
                      "type": "number",
                      "description": "The estimated target ratio of the pool for the PG autoscaler."
                    },
                    "use_gmt_hitset": {
                      "type": "boolean"
                    },
                    "write_fadvise_dontneed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/init": {
      "post": {
        "summary": "Create initial ceph default configuration and setup symlinks.",
        "description": "Create initial ceph default configuration and setup symlinks.",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_init",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cluster-network": {
                    "type": "string",
                    "format": "CIDR",
                    "description": "Declare a separate cluster network, OSDs will routeheartbeat, object replication and recovery traffic over it",
                    "maxLength": 128
                  },
                  "disable_cephx": {
                    "type": "boolean",
                    "description": "Disable cephx authentication.\n\nWARNING: cephx is a security feature protecting against man-in-the-middle attacks. Only consider disabling cephx if your network is private!",
                    "default": false
                  },
                  "min_size": {
                    "type": "integer",
                    "description": "Minimum number of available replicas per object to allow I/O",
                    "minimum": 1,
                    "maximum": 7,
                    "default": 2
                  },
                  "network": {
                    "type": "string",
                    "format": "CIDR",
                    "description": "Use specific network for all ceph related traffic",
                    "maxLength": 128
                  },
                  "pg_bits": {
                    "type": "integer",
                    "description": "Placement group bits, used to specify the default number of placement groups.\n\nDepreacted. This setting was deprecated in recent Ceph versions.",
                    "minimum": 6,
                    "maximum": 14,
                    "default": 6
                  },
                  "size": {
                    "type": "integer",
                    "description": "Targeted number of replicas per object",
                    "minimum": 1,
                    "maximum": 7,
                    "default": 3
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/stop": {
      "post": {
        "summary": "Stop ceph services.",
        "description": "Stop ceph services.",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_stop",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Ceph service name.",
                    "pattern": "(ceph|mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?",
                    "default": "ceph.target"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/start": {
      "post": {
        "summary": "Start ceph services.",
        "description": "Start ceph services.",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_start",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Ceph service name.",
                    "pattern": "(ceph|mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?",
                    "default": "ceph.target"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/restart": {
      "post": {
        "summary": "Restart ceph services.",
        "description": "Restart ceph services.",
        "operationId": "post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_restart",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Ceph service name.",
                    "pattern": "(mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?",
                    "default": "ceph.target"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/status": {
      "get": {
        "summary": "Get ceph status.",
        "description": "Get ceph status.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/crush": {
      "get": {
        "summary": "Get OSD crush map",
        "description": "Get OSD crush map",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_crush",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/log": {
      "get": {
        "summary": "Read ceph log",
        "description": "Read ceph log",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_log",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/rules": {
      "get": {
        "summary": "List ceph rules.",
        "description": "List ceph rules.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_rules",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the CRUSH rule."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cmd-safety": {
      "get": {
        "summary": "Heuristical check if it is safe to perform an action.",
        "description": "Heuristical check if it is safe to perform an action.",
        "operationId": "get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cmd-safety",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Action to check",
              "enum": [
                "stop",
                "destroy"
              ]
            },
            "description": "Action to check"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the service"
            },
            "description": "ID of the service"
          },
          {
            "name": "service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Service type",
              "enum": [
                "osd",
                "mon",
                "mds"
              ]
            },
            "description": "Service type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "safe": {
                      "type": "boolean",
                      "description": "If it is safe to run the command."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status message given by Ceph."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/vzdump": {
      "post": {
        "summary": "Create backup.",
        "description": "Create backup.",
        "operationId": "post_nodes_nodes_node_nodes_node_vzdump",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Backup all known guest systems on this host.",
                    "default": false
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Limit I/O bandwidth (in KiB/s).",
                    "minimum": 0,
                    "default": 0
                  },
                  "compress": {
                    "type": "string",
                    "description": "Compress dump file.",
                    "enum": [
                      "0",
                      "1",
                      "gzip",
                      "lzo",
                      "zstd"
                    ],
                    "default": "0"
                  },
                  "dumpdir": {
                    "type": "string",
                    "description": "Store resulting files to specified directory."
                  },
                  "exclude": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Exclude specified guest systems (assumes --all)"
                  },
                  "exclude-path": {
                    "type": "array",
                    "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fleecing": {
                    "type": "string",
                    "format": "backup-fleecing",
                    "description": "Options for backup fleecing (VM only)."
                  },
                  "ionice": {
                    "type": "integer",
                    "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                    "minimum": 0,
                    "maximum": 8,
                    "default": 7
                  },
                  "job-id": {
                    "type": "string",
                    "description": "The ID of the backup job. If set, the 'backup-job' metadata field of the backup notification will be set to this value. Only root@pam can set this parameter.",
                    "maxLength": 50,
                    "pattern": "\\S+"
                  },
                  "lockwait": {
                    "type": "integer",
                    "description": "Maximal time to wait for the global lock (minutes).",
                    "minimum": 0,
                    "default": 180
                  },
                  "mailnotification": {
                    "type": "string",
                    "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                    "enum": [
                      "always",
                      "failure"
                    ],
                    "default": "always"
                  },
                  "mailto": {
                    "type": "string",
                    "format": "email-or-username-list",
                    "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications."
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                    "minimum": 1
                  },
                  "mode": {
                    "type": "string",
                    "description": "Backup mode.",
                    "enum": [
                      "snapshot",
                      "suspend",
                      "stop"
                    ],
                    "default": "snapshot"
                  },
                  "notes-template": {
                    "type": "string",
                    "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                    "maxLength": 1024
                  },
                  "notification-mode": {
                    "type": "string",
                    "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                    "enum": [
                      "auto",
                      "legacy-sendmail",
                      "notification-system"
                    ],
                    "default": "auto"
                  },
                  "notification-policy": {
                    "type": "string",
                    "description": "Deprecated: Do not use",
                    "enum": [
                      "always",
                      "failure",
                      "never"
                    ],
                    "default": "always"
                  },
                  "notification-target": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "Deprecated: Do not use"
                  },
                  "pbs-change-detection-mode": {
                    "type": "string",
                    "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                    "enum": [
                      "legacy",
                      "data",
                      "metadata"
                    ]
                  },
                  "performance": {
                    "type": "string",
                    "format": "backup-performance",
                    "description": "Other performance-related settings."
                  },
                  "pigz": {
                    "type": "integer",
                    "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                    "default": 0
                  },
                  "pool": {
                    "type": "string",
                    "description": "Backup all known guest systems included in the specified pool."
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "If true, mark backup(s) as protected."
                  },
                  "prune-backups": {
                    "type": "string",
                    "format": "prune-backups",
                    "description": "Use these retention options instead of those from the storage configuration.",
                    "default": "keep-all=1"
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Be quiet.",
                    "default": false
                  },
                  "remove": {
                    "type": "boolean",
                    "description": "Prune older backups according to 'prune-backups'.",
                    "default": true
                  },
                  "script": {
                    "type": "string",
                    "description": "Use specified hook script."
                  },
                  "stdexcludes": {
                    "type": "boolean",
                    "description": "Exclude temporary files and logs.",
                    "default": true
                  },
                  "stdout": {
                    "type": "boolean",
                    "description": "Write tar to stdout, not to a file."
                  },
                  "stop": {
                    "type": "boolean",
                    "description": "Stop running backup jobs on this host.",
                    "default": false
                  },
                  "stopwait": {
                    "type": "integer",
                    "description": "Maximal time to wait until a guest system is stopped (minutes).",
                    "minimum": 0,
                    "default": 10
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "Store resulting file to this storage."
                  },
                  "tmpdir": {
                    "type": "string",
                    "description": "Store temporary files to specified directory."
                  },
                  "vmid": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "The ID of the guest system you want to backup."
                  },
                  "zstd": {
                    "type": "integer",
                    "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                    "default": 1
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/vzdump/nodes/{node}/vzdump/defaults": {
      "get": {
        "summary": "Get the currently configured vzdump defaults.",
        "description": "Get the currently configured vzdump defaults.",
        "operationId": "get_nodes_nodes_node_nodes_node_vzdump_nodes_node_vzdump_defaults",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-storage-id",
              "description": "The storage identifier."
            },
            "description": "The storage identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "boolean",
                      "description": "Backup all known guest systems on this host."
                    },
                    "bwlimit": {
                      "type": "integer",
                      "description": "Limit I/O bandwidth (in KiB/s)."
                    },
                    "compress": {
                      "type": "string",
                      "description": "Compress dump file."
                    },
                    "dumpdir": {
                      "type": "string",
                      "description": "Store resulting files to specified directory."
                    },
                    "exclude": {
                      "type": "string",
                      "format": "pve-vmid-list",
                      "description": "Exclude specified guest systems (assumes --all)"
                    },
                    "exclude-path": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory."
                    },
                    "fleecing": {
                      "type": "string",
                      "format": "backup-fleecing",
                      "description": "Options for backup fleecing (VM only)."
                    },
                    "ionice": {
                      "type": "integer",
                      "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value."
                    },
                    "lockwait": {
                      "type": "integer",
                      "description": "Maximal time to wait for the global lock (minutes)."
                    },
                    "mailnotification": {
                      "type": "string",
                      "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail"
                    },
                    "mailto": {
                      "type": "string",
                      "format": "email-or-username-list",
                      "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications."
                    },
                    "maxfiles": {
                      "type": "integer",
                      "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system."
                    },
                    "mode": {
                      "type": "string",
                      "description": "Backup mode."
                    },
                    "node": {
                      "type": "string",
                      "format": "pve-node",
                      "description": "Only run if executed on this node."
                    },
                    "notes-template": {
                      "type": "string",
                      "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively."
                    },
                    "notification-mode": {
                      "type": "string",
                      "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not."
                    },
                    "notification-policy": {
                      "type": "string",
                      "description": "Deprecated: Do not use"
                    },
                    "notification-target": {
                      "type": "string",
                      "format": "pve-configid",
                      "description": "Deprecated: Do not use"
                    },
                    "pbs-change-detection-mode": {
                      "type": "string",
                      "description": "PBS mode used to detect file changes and switch encoding format for container backups."
                    },
                    "performance": {
                      "type": "string",
                      "format": "backup-performance",
                      "description": "Other performance-related settings."
                    },
                    "pigz": {
                      "type": "integer",
                      "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count."
                    },
                    "pool": {
                      "type": "string",
                      "description": "Backup all known guest systems included in the specified pool."
                    },
                    "protected": {
                      "type": "boolean",
                      "description": "If true, mark backup(s) as protected."
                    },
                    "prune-backups": {
                      "type": "string",
                      "format": "prune-backups",
                      "description": "Use these retention options instead of those from the storage configuration."
                    },
                    "quiet": {
                      "type": "boolean",
                      "description": "Be quiet."
                    },
                    "remove": {
                      "type": "boolean",
                      "description": "Prune older backups according to 'prune-backups'."
                    },
                    "script": {
                      "type": "string",
                      "description": "Use specified hook script."
                    },
                    "stdexcludes": {
                      "type": "boolean",
                      "description": "Exclude temporary files and logs."
                    },
                    "stop": {
                      "type": "boolean",
                      "description": "Stop running backup jobs on this host."
                    },
                    "stopwait": {
                      "type": "integer",
                      "description": "Maximal time to wait until a guest system is stopped (minutes)."
                    },
                    "storage": {
                      "type": "string",
                      "format": "pve-storage-id",
                      "description": "Store resulting file to this storage."
                    },
                    "tmpdir": {
                      "type": "string",
                      "description": "Store temporary files to specified directory."
                    },
                    "vmid": {
                      "type": "string",
                      "format": "pve-vmid-list",
                      "description": "The ID of the guest system you want to backup."
                    },
                    "zstd": {
                      "type": "integer",
                      "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/vzdump/nodes/{node}/vzdump/extractconfig": {
      "get": {
        "summary": "Extract configuration from vzdump backup archive.",
        "description": "Extract configuration from vzdump backup archive.",
        "operationId": "get_nodes_nodes_node_nodes_node_vzdump_nodes_node_vzdump_extractconfig",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Volume identifier"
            },
            "description": "Volume identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services": {
      "get": {
        "summary": "Service list.",
        "description": "Service list.",
        "operationId": "get_nodes_nodes_node_nodes_node_services",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}": {
      "get": {
        "summary": "Directory index",
        "description": "Directory index",
        "operationId": "get_nodes_nodes_node_nodes_node_services_nodes_node_services_service",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service parameter"
            },
            "description": "The service parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/state": {
      "get": {
        "summary": "Read service properties",
        "description": "Read service properties",
        "operationId": "get_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_state",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service parameter"
            },
            "description": "The service parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/start": {
      "post": {
        "summary": "Start service.",
        "description": "Start service.",
        "operationId": "post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_start",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service parameter"
            },
            "description": "The service parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/stop": {
      "post": {
        "summary": "Stop service.",
        "description": "Stop service.",
        "operationId": "post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_stop",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service parameter"
            },
            "description": "The service parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/restart": {
      "post": {
        "summary": "Hard restart service. Use reload if you want to reduce interruptions.",
        "description": "Hard restart service. Use reload if you want to reduce interruptions.",
        "operationId": "post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_restart",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service parameter"
            },
            "description": "The service parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/reload": {
      "post": {
        "summary": "Reload service. Falls back to restart if service cannot be reloaded.",
        "description": "Reload service. Falls back to restart if service cannot be reloaded.",
        "operationId": "post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_reload",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The service parameter"
            },
            "description": "The service parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/subscription": {
      "delete": {
        "summary": "Delete subscription key of this node.",
        "description": "Delete subscription key of this node.",
        "operationId": "delete_nodes_nodes_node_nodes_node_subscription",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read subscription info.",
        "description": "Read subscription info.",
        "operationId": "get_nodes_nodes_node_nodes_node_subscription",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checktime": {
                      "type": "integer",
                      "description": "Timestamp of the last check done."
                    },
                    "key": {
                      "type": "string",
                      "description": "The subscription key, if set and permitted to access."
                    },
                    "level": {
                      "type": "string",
                      "description": "A short code for the subscription level."
                    },
                    "message": {
                      "type": "string",
                      "description": "A more human readable status message."
                    },
                    "nextduedate": {
                      "type": "string",
                      "description": "Next due date of the set subscription."
                    },
                    "productname": {
                      "type": "string",
                      "description": "Human readable productname of the set subscription."
                    },
                    "regdate": {
                      "type": "string",
                      "description": "Register date of the set subscription."
                    },
                    "serverid": {
                      "type": "string",
                      "description": "The server ID, if permitted to access."
                    },
                    "signature": {
                      "type": "string",
                      "description": "Signature for offline keys"
                    },
                    "sockets": {
                      "type": "integer",
                      "description": "The number of sockets for this host."
                    },
                    "status": {
                      "type": "string",
                      "description": "The current subscription status."
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to the web shop."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Update subscription info.",
        "description": "Update subscription info.",
        "operationId": "post_nodes_nodes_node_nodes_node_subscription",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Always connect to server, even if local cache is still valid.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set subscription key.",
        "description": "Set subscription key.",
        "operationId": "put_nodes_nodes_node_nodes_node_subscription",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Proxmox VE subscription key",
                    "maxLength": 32,
                    "pattern": "\\s*pve([1248])([cbsp])-[0-9a-f]{10}\\s*"
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/network": {
      "delete": {
        "summary": "Revert network configuration changes.",
        "description": "Revert network configuration changes.",
        "operationId": "delete_nodes_nodes_node_nodes_node_network",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "List available networks",
        "description": "List available networks",
        "operationId": "get_nodes_nodes_node_nodes_node_network",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list specific interface types.",
              "enum": [
                "bridge",
                "bond",
                "eth",
                "alias",
                "vlan",
                "OVSBridge",
                "OVSBond",
                "OVSPort",
                "OVSIntPort",
                "vnet",
                "any_bridge",
                "any_local_bridge"
              ]
            },
            "description": "Only list specific interface types."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "Set to true if the interface is active."
                      },
                      "address": {
                        "type": "string",
                        "format": "ipv4",
                        "description": "IP address."
                      },
                      "address6": {
                        "type": "string",
                        "format": "ipv6",
                        "description": "IP address."
                      },
                      "autostart": {
                        "type": "boolean",
                        "description": "Automatically start interface on boot."
                      },
                      "bond-primary": {
                        "type": "string",
                        "format": "pve-iface",
                        "description": "Specify the primary interface for active-backup bond."
                      },
                      "bond_mode": {
                        "type": "string",
                        "description": "Bonding mode."
                      },
                      "bond_xmit_hash_policy": {
                        "type": "string",
                        "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes."
                      },
                      "bridge-access": {
                        "type": "integer",
                        "description": "The bridge port access VLAN."
                      },
                      "bridge-arp-nd-suppress": {
                        "type": "boolean",
                        "description": "Bridge port ARP/ND suppress flag."
                      },
                      "bridge-learning": {
                        "type": "boolean",
                        "description": "Bridge port learning flag."
                      },
                      "bridge-multicast-flood": {
                        "type": "boolean",
                        "description": "Bridge port multicast flood flag."
                      },
                      "bridge-unicast-flood": {
                        "type": "boolean",
                        "description": "Bridge port unicast flood flag."
                      },
                      "bridge_ports": {
                        "type": "string",
                        "format": "pve-iface-list",
                        "description": "Specify the interfaces you want to add to your bridge."
                      },
                      "bridge_vids": {
                        "type": "string",
                        "format": "pve-vlan-id-or-range-list",
                        "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware."
                      },
                      "bridge_vlan_aware": {
                        "type": "boolean",
                        "description": "Enable bridge vlan support."
                      },
                      "cidr": {
                        "type": "string",
                        "format": "CIDRv4",
                        "description": "IPv4 CIDR."
                      },
                      "cidr6": {
                        "type": "string",
                        "format": "CIDRv6",
                        "description": "IPv6 CIDR."
                      },
                      "comments": {
                        "type": "string",
                        "description": "Comments"
                      },
                      "comments6": {
                        "type": "string",
                        "description": "Comments"
                      },
                      "exists": {
                        "type": "boolean",
                        "description": "Set to true if the interface physically exists."
                      },
                      "families": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A network family."
                        },
                        "description": "The network families."
                      },
                      "gateway": {
                        "type": "string",
                        "format": "ipv4",
                        "description": "Default gateway address."
                      },
                      "gateway6": {
                        "type": "string",
                        "format": "ipv6",
                        "description": "Default ipv6 gateway address."
                      },
                      "iface": {
                        "type": "string",
                        "format": "pve-iface",
                        "description": "Network interface name."
                      },
                      "link-type": {
                        "type": "string",
                        "description": "The link type."
                      },
                      "method": {
                        "type": "string",
                        "description": "The network configuration method for IPv4."
                      },
                      "method6": {
                        "type": "string",
                        "description": "The network configuration method for IPv6."
                      },
                      "mtu": {
                        "type": "integer",
                        "description": "MTU."
                      },
                      "netmask": {
                        "type": "string",
                        "format": "ipv4mask",
                        "description": "Network mask."
                      },
                      "netmask6": {
                        "type": "integer",
                        "description": "Network mask."
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "An interface property."
                        },
                        "description": "A list of additional interface options for IPv4."
                      },
                      "options6": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "An interface property."
                        },
                        "description": "A list of additional interface options for IPv6."
                      },
                      "ovs_bonds": {
                        "type": "string",
                        "format": "pve-iface-list",
                        "description": "Specify the interfaces used by the bonding device."
                      },
                      "ovs_bridge": {
                        "type": "string",
                        "format": "pve-iface",
                        "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port."
                      },
                      "ovs_options": {
                        "type": "string",
                        "description": "OVS interface options."
                      },
                      "ovs_ports": {
                        "type": "string",
                        "format": "pve-iface-list",
                        "description": "Specify the interfaces you want to add to your bridge."
                      },
                      "ovs_tag": {
                        "type": "integer",
                        "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)"
                      },
                      "priority": {
                        "type": "integer",
                        "description": "The order of the interface."
                      },
                      "slaves": {
                        "type": "string",
                        "format": "pve-iface-list",
                        "description": "Specify the interfaces used by the bonding device."
                      },
                      "type": {
                        "type": "string",
                        "description": "Network interface type"
                      },
                      "uplink-id": {
                        "type": "string",
                        "description": "The uplink ID."
                      },
                      "vlan-id": {
                        "type": "integer",
                        "description": "vlan-id for a custom named vlan interface (ifupdown2 only)."
                      },
                      "vlan-protocol": {
                        "type": "string",
                        "description": "The VLAN protocol."
                      },
                      "vlan-raw-device": {
                        "type": "string",
                        "format": "pve-iface",
                        "description": "Specify the raw interface for the vlan interface."
                      },
                      "vxlan-id": {
                        "type": "integer",
                        "description": "The VXLAN ID."
                      },
                      "vxlan-local-tunnelip": {
                        "type": "string",
                        "description": "The VXLAN local tunnel IP."
                      },
                      "vxlan-physdev": {
                        "type": "string",
                        "description": "The physical device for the VXLAN tunnel."
                      },
                      "vxlan-svcnodeip": {
                        "type": "string",
                        "description": "The VXLAN SVC node IP."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create network device configuration",
        "description": "Create network device configuration",
        "operationId": "post_nodes_nodes_node_nodes_node_network",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "format": "ipv4",
                    "description": "IP address."
                  },
                  "address6": {
                    "type": "string",
                    "format": "ipv6",
                    "description": "IP address."
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatically start interface on boot."
                  },
                  "bond-primary": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Specify the primary interface for active-backup bond."
                  },
                  "bond_mode": {
                    "type": "string",
                    "description": "Bonding mode.",
                    "enum": [
                      "balance-rr",
                      "active-backup",
                      "balance-xor",
                      "broadcast",
                      "802.3ad",
                      "balance-tlb",
                      "balance-alb",
                      "balance-slb",
                      "lacp-balance-slb",
                      "lacp-balance-tcp"
                    ]
                  },
                  "bond_xmit_hash_policy": {
                    "type": "string",
                    "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                    "enum": [
                      "layer2",
                      "layer2+3",
                      "layer3+4"
                    ]
                  },
                  "bridge_ports": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces you want to add to your bridge."
                  },
                  "bridge_vids": {
                    "type": "string",
                    "format": "pve-vlan-id-or-range-list",
                    "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware."
                  },
                  "bridge_vlan_aware": {
                    "type": "boolean",
                    "description": "Enable bridge vlan support."
                  },
                  "cidr": {
                    "type": "string",
                    "format": "CIDRv4",
                    "description": "IPv4 CIDR."
                  },
                  "cidr6": {
                    "type": "string",
                    "format": "CIDRv6",
                    "description": "IPv6 CIDR."
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments"
                  },
                  "comments6": {
                    "type": "string",
                    "description": "Comments"
                  },
                  "gateway": {
                    "type": "string",
                    "format": "ipv4",
                    "description": "Default gateway address."
                  },
                  "gateway6": {
                    "type": "string",
                    "format": "ipv6",
                    "description": "Default ipv6 gateway address."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU.",
                    "minimum": 1280,
                    "maximum": 65520
                  },
                  "netmask": {
                    "type": "string",
                    "format": "ipv4mask",
                    "description": "Network mask."
                  },
                  "netmask6": {
                    "type": "integer",
                    "description": "Network mask.",
                    "minimum": 0,
                    "maximum": 128
                  },
                  "ovs_bonds": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces used by the bonding device."
                  },
                  "ovs_bridge": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port."
                  },
                  "ovs_options": {
                    "type": "string",
                    "description": "OVS interface options.",
                    "maxLength": 1024
                  },
                  "ovs_ports": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces you want to add to your bridge."
                  },
                  "ovs_tag": {
                    "type": "integer",
                    "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                    "minimum": 1,
                    "maximum": 4094
                  },
                  "slaves": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces used by the bonding device."
                  },
                  "type": {
                    "type": "string",
                    "description": "Network interface type",
                    "enum": [
                      "bridge",
                      "bond",
                      "eth",
                      "alias",
                      "vlan",
                      "OVSBridge",
                      "OVSBond",
                      "OVSPort",
                      "OVSIntPort",
                      "vnet",
                      "unknown"
                    ]
                  },
                  "vlan-id": {
                    "type": "integer",
                    "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                    "minimum": 1,
                    "maximum": 4094
                  },
                  "vlan-raw-device": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Specify the raw interface for the vlan interface."
                  }
                },
                "required": [
                  "iface",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Reload network configuration",
        "description": "Reload network configuration",
        "operationId": "put_nodes_nodes_node_nodes_node_network",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/network/nodes/{node}/network/{iface}": {
      "delete": {
        "summary": "Delete network device configuration",
        "description": "Delete network device configuration",
        "operationId": "delete_nodes_nodes_node_nodes_node_network_nodes_node_network_iface",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "iface",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The iface parameter"
            },
            "description": "The iface parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read network device configuration",
        "description": "Read network device configuration",
        "operationId": "get_nodes_nodes_node_nodes_node_network_nodes_node_network_iface",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "iface",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The iface parameter"
            },
            "description": "The iface parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "method": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update network device configuration",
        "description": "Update network device configuration",
        "operationId": "put_nodes_nodes_node_nodes_node_network_nodes_node_network_iface",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "format": "ipv4",
                    "description": "IP address."
                  },
                  "address6": {
                    "type": "string",
                    "format": "ipv6",
                    "description": "IP address."
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatically start interface on boot."
                  },
                  "bond-primary": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Specify the primary interface for active-backup bond."
                  },
                  "bond_mode": {
                    "type": "string",
                    "description": "Bonding mode.",
                    "enum": [
                      "balance-rr",
                      "active-backup",
                      "balance-xor",
                      "broadcast",
                      "802.3ad",
                      "balance-tlb",
                      "balance-alb",
                      "balance-slb",
                      "lacp-balance-slb",
                      "lacp-balance-tcp"
                    ]
                  },
                  "bond_xmit_hash_policy": {
                    "type": "string",
                    "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                    "enum": [
                      "layer2",
                      "layer2+3",
                      "layer3+4"
                    ]
                  },
                  "bridge_ports": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces you want to add to your bridge."
                  },
                  "bridge_vids": {
                    "type": "string",
                    "format": "pve-vlan-id-or-range-list",
                    "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware."
                  },
                  "bridge_vlan_aware": {
                    "type": "boolean",
                    "description": "Enable bridge vlan support."
                  },
                  "cidr": {
                    "type": "string",
                    "format": "CIDRv4",
                    "description": "IPv4 CIDR."
                  },
                  "cidr6": {
                    "type": "string",
                    "format": "CIDRv6",
                    "description": "IPv6 CIDR."
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments"
                  },
                  "comments6": {
                    "type": "string",
                    "description": "Comments"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "gateway": {
                    "type": "string",
                    "format": "ipv4",
                    "description": "Default gateway address."
                  },
                  "gateway6": {
                    "type": "string",
                    "format": "ipv6",
                    "description": "Default ipv6 gateway address."
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU.",
                    "minimum": 1280,
                    "maximum": 65520
                  },
                  "netmask": {
                    "type": "string",
                    "format": "ipv4mask",
                    "description": "Network mask."
                  },
                  "netmask6": {
                    "type": "integer",
                    "description": "Network mask.",
                    "minimum": 0,
                    "maximum": 128
                  },
                  "ovs_bonds": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces used by the bonding device."
                  },
                  "ovs_bridge": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port."
                  },
                  "ovs_options": {
                    "type": "string",
                    "description": "OVS interface options.",
                    "maxLength": 1024
                  },
                  "ovs_ports": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces you want to add to your bridge."
                  },
                  "ovs_tag": {
                    "type": "integer",
                    "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                    "minimum": 1,
                    "maximum": 4094
                  },
                  "slaves": {
                    "type": "string",
                    "format": "pve-iface-list",
                    "description": "Specify the interfaces used by the bonding device."
                  },
                  "type": {
                    "type": "string",
                    "description": "Network interface type",
                    "enum": [
                      "bridge",
                      "bond",
                      "eth",
                      "alias",
                      "vlan",
                      "OVSBridge",
                      "OVSBond",
                      "OVSPort",
                      "OVSIntPort",
                      "vnet",
                      "unknown"
                    ]
                  },
                  "vlan-id": {
                    "type": "integer",
                    "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                    "minimum": 1,
                    "maximum": 4094
                  },
                  "vlan-raw-device": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Specify the raw interface for the vlan interface."
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "iface",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The iface parameter"
            },
            "description": "The iface parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/tasks": {
      "get": {
        "summary": "Read task list for one node (finished tasks).",
        "description": "Read task list for one node (finished tasks).",
        "operationId": "get_nodes_nodes_node_nodes_node_tasks",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "errors",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only list tasks with a status of ERROR.",
              "default": false
            },
            "description": "Only list tasks with a status of ERROR."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Only list this amount of tasks.",
              "minimum": 0,
              "default": 50
            },
            "description": "Only list this amount of tasks."
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Only list tasks since this UNIX epoch."
            },
            "description": "Only list tasks since this UNIX epoch."
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "List archived, active or all tasks.",
              "enum": [
                "archive",
                "active",
                "all"
              ],
              "default": "archive"
            },
            "description": "List archived, active or all tasks."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "List tasks beginning from this offset.",
              "minimum": 0,
              "default": 0
            },
            "description": "List tasks beginning from this offset."
          },
          {
            "name": "statusfilter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-task-status-type-list",
              "description": "List of Task States that should be returned."
            },
            "description": "List of Task States that should be returned."
          },
          {
            "name": "typefilter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list tasks of this type (e.g., vzstart, vzdump)."
            },
            "description": "Only list tasks of this type (e.g., vzstart, vzdump)."
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Only list tasks until this UNIX epoch."
            },
            "description": "Only list tasks until this UNIX epoch."
          },
          {
            "name": "userfilter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list tasks from this user."
            },
            "description": "Only list tasks from this user."
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "pve-vmid",
              "description": "Only list tasks for this VM.",
              "minimum": 100,
              "maximum": 999999999
            },
            "description": "Only list tasks for this VM."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "endtime": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "string"
                      },
                      "node": {
                        "type": "string"
                      },
                      "pid": {
                        "type": "integer"
                      },
                      "pstart": {
                        "type": "integer"
                      },
                      "starttime": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "upid": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}": {
      "delete": {
        "summary": "Stop a task.",
        "description": "Stop a task.",
        "operationId": "delete_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The upid parameter"
            },
            "description": "The upid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "",
        "description": "",
        "operationId": "get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The upid parameter"
            },
            "description": "The upid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}/nodes/{node}/tasks/{upid}/log": {
      "get": {
        "summary": "Read task log.",
        "description": "Read task log.",
        "operationId": "get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid_nodes_node_tasks_upid_log",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The upid parameter"
            },
            "description": "The upid parameter"
          },
          {
            "name": "download",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether the tasklog file should be downloaded. This parameter can't be used in conjunction with other parameters"
            },
            "description": "Whether the tasklog file should be downloaded. This parameter can't be used in conjunction with other parameters"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The amount of lines to read from the tasklog.",
              "minimum": 0,
              "default": 50
            },
            "description": "The amount of lines to read from the tasklog."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Start at this line when reading the tasklog",
              "minimum": 0,
              "default": 0
            },
            "description": "Start at this line when reading the tasklog"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}/nodes/{node}/tasks/{upid}/status": {
      "get": {
        "summary": "Read task status.",
        "description": "Read task status.",
        "operationId": "get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid_nodes_node_tasks_upid_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The upid parameter"
            },
            "description": "The upid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exitstatus": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "node": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "integer"
                    },
                    "pstart": {
                      "type": "integer"
                    },
                    "starttime": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan": {
      "get": {
        "summary": "Index of available scan methods",
        "description": "Index of available scan methods",
        "operationId": "get_nodes_nodes_node_nodes_node_scan",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/nfs": {
      "get": {
        "summary": "Scan remote NFS server.",
        "description": "Scan remote NFS server.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_nfs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-storage-server",
              "description": "The server address (name or IP)."
            },
            "description": "The server address (name or IP)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "options": {
                        "type": "string",
                        "description": "NFS export options."
                      },
                      "path": {
                        "type": "string",
                        "description": "The exported path."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/cifs": {
      "get": {
        "summary": "Scan remote CIFS server.",
        "description": "Scan remote CIFS server.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_cifs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "SMB domain (Workgroup)."
            },
            "description": "SMB domain (Workgroup)."
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User password."
            },
            "description": "User password."
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-storage-server",
              "description": "The server address (name or IP)."
            },
            "description": "The server address (name or IP)."
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User name."
            },
            "description": "User name."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Descriptive text from server."
                      },
                      "share": {
                        "type": "string",
                        "description": "The cifs share name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/pbs": {
      "get": {
        "summary": "Scan remote Proxmox Backup Server.",
        "description": "Scan remote Proxmox Backup Server.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_pbs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "fingerprint",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Certificate SHA 256 fingerprint.",
              "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
            },
            "description": "Certificate SHA 256 fingerprint."
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User password or API token secret."
            },
            "description": "User password or API token secret."
          },
          {
            "name": "port",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Optional port.",
              "minimum": 1,
              "maximum": 65535,
              "default": 8007
            },
            "description": "Optional port."
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-storage-server",
              "description": "The server address (name or IP)."
            },
            "description": "The server address (name or IP)."
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User-name or API token-ID."
            },
            "description": "User-name or API token-ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment from server."
                      },
                      "store": {
                        "type": "string",
                        "description": "The datastore name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/glusterfs": {
      "get": {
        "summary": "Scan remote GlusterFS server.",
        "description": "Scan remote GlusterFS server.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_glusterfs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-storage-server",
              "description": "The server address (name or IP)."
            },
            "description": "The server address (name or IP)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "volname": {
                        "type": "string",
                        "description": "The volume name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/iscsi": {
      "get": {
        "summary": "Scan remote iSCSI server.",
        "description": "Scan remote iSCSI server.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_iscsi",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "portal",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-storage-portal-dns",
              "description": "The iSCSI portal (IP or DNS name with optional port)."
            },
            "description": "The iSCSI portal (IP or DNS name with optional port)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "portal": {
                        "type": "string",
                        "description": "The iSCSI portal name."
                      },
                      "target": {
                        "type": "string",
                        "description": "The iSCSI target name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/lvm": {
      "get": {
        "summary": "List local LVM volume groups.",
        "description": "List local LVM volume groups.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_lvm",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vg": {
                        "type": "string",
                        "description": "The LVM logical volume group name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/lvmthin": {
      "get": {
        "summary": "List local LVM Thin Pools.",
        "description": "List local LVM Thin Pools.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_lvmthin",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "vg",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 100,
              "pattern": "[a-zA-Z0-9\\.\\+\\_][a-zA-Z0-9\\.\\+\\_\\-]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lv": {
                        "type": "string",
                        "description": "The LVM Thin Pool name (LVM logical volume)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/zfs": {
      "get": {
        "summary": "Scan zfs pool list on local node.",
        "description": "Scan zfs pool list on local node.",
        "operationId": "get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_zfs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pool": {
                        "type": "string",
                        "description": "ZFS pool name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/hardware": {
      "get": {
        "summary": "Index of hardware types",
        "description": "Index of hardware types",
        "operationId": "get_nodes_nodes_node_nodes_node_hardware",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/pci": {
      "get": {
        "summary": "List local PCI devices.",
        "description": "List local PCI devices.",
        "operationId": "get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_pci",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "pci-class-blacklist",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string-list",
              "description": "A list of blacklisted PCI classes, which will not be returned. Following are filtered by default: Memory Controller (05), Bridge (06) and Processor (0b).",
              "default": "05;06;0b"
            },
            "description": "A list of blacklisted PCI classes, which will not be returned. Following are filtered by default: Memory Controller (05), Bridge (06) and Processor (0b)."
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If disabled, does only print the PCI IDs. Otherwise, additional information like vendor and device will be returned.",
              "default": true
            },
            "description": "If disabled, does only print the PCI IDs. Otherwise, additional information like vendor and device will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "class": {
                        "type": "string",
                        "description": "The PCI Class of the device."
                      },
                      "device": {
                        "type": "string",
                        "description": "The Device ID."
                      },
                      "device_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string",
                        "description": "The PCI ID."
                      },
                      "iommugroup": {
                        "type": "integer",
                        "description": "The IOMMU group in which the device is in. If no IOMMU group is detected, it is set to -1."
                      },
                      "mdev": {
                        "type": "boolean",
                        "description": "If set, marks that the device is capable of creating mediated devices."
                      },
                      "subsystem_device": {
                        "type": "string",
                        "description": "The Subsystem Device ID."
                      },
                      "subsystem_device_name": {
                        "type": "string"
                      },
                      "subsystem_vendor": {
                        "type": "string",
                        "description": "The Subsystem Vendor ID."
                      },
                      "subsystem_vendor_name": {
                        "type": "string"
                      },
                      "vendor": {
                        "type": "string",
                        "description": "The Vendor ID."
                      },
                      "vendor_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/pci/nodes/{node}/hardware/pci/{pci-id-or-mapping}": {
      "get": {
        "summary": "Index of available pci methods",
        "description": "Index of available pci methods",
        "operationId": "get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_pci_nodes_node_hardware_pci_pci-id-or-mapping",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "pci-id-or-mapping",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pci-id-or-mapping parameter"
            },
            "description": "The pci-id-or-mapping parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/pci/nodes/{node}/hardware/pci/{pci-id-or-mapping}/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev": {
      "get": {
        "summary": "List mediated device types for given PCI device.",
        "description": "List mediated device types for given PCI device.",
        "operationId": "get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_pci_nodes_node_hardware_pci_pci-id-or-mapping_nodes_node_hardware_pci_pci-id-or-mapping_mdev",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "pci-id-or-mapping",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pci-id-or-mapping parameter"
            },
            "description": "The pci-id-or-mapping parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "integer",
                        "description": "The number of still available instances of this type."
                      },
                      "description": {
                        "type": "string",
                        "description": "Additional description of the type."
                      },
                      "name": {
                        "type": "string",
                        "description": "A human readable name for the type."
                      },
                      "type": {
                        "type": "string",
                        "description": "The name of the mdev type."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/usb": {
      "get": {
        "summary": "List local USB devices.",
        "description": "List local USB devices.",
        "operationId": "get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_usb",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "busnum": {
                        "type": "integer"
                      },
                      "class": {
                        "type": "integer"
                      },
                      "devnum": {
                        "type": "integer"
                      },
                      "level": {
                        "type": "integer"
                      },
                      "manufacturer": {
                        "type": "string"
                      },
                      "port": {
                        "type": "integer"
                      },
                      "prodid": {
                        "type": "string"
                      },
                      "product": {
                        "type": "string"
                      },
                      "serial": {
                        "type": "string"
                      },
                      "speed": {
                        "type": "string"
                      },
                      "usbpath": {
                        "type": "string"
                      },
                      "vendid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/capabilities": {
      "get": {
        "summary": "Node capabilities index.",
        "description": "Node capabilities index.",
        "operationId": "get_nodes_nodes_node_nodes_node_capabilities",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/capabilities/nodes/{node}/capabilities/qemu": {
      "get": {
        "summary": "QEMU capabilities index.",
        "description": "QEMU capabilities index.",
        "operationId": "get_nodes_nodes_node_nodes_node_capabilities_nodes_node_capabilities_qemu",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/capabilities/nodes/{node}/capabilities/qemu/nodes/{node}/capabilities/qemu/cpu": {
      "get": {
        "summary": "List all custom and default CPU models.",
        "description": "List all custom and default CPU models.",
        "operationId": "get_nodes_nodes_node_nodes_node_capabilities_nodes_node_capabilities_qemu_nodes_node_capabilities_qemu_cpu",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "custom": {
                        "type": "boolean",
                        "description": "True if this is a custom CPU model."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the CPU model. Identifies it for subsequent API calls. Prefixed with 'custom-' for custom models."
                      },
                      "vendor": {
                        "type": "string",
                        "description": "CPU vendor visible to the guest when this model is selected. Vendor of 'reported-model' in case of custom models."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/capabilities/nodes/{node}/capabilities/qemu/nodes/{node}/capabilities/qemu/machines": {
      "get": {
        "summary": "Get available QEMU/KVM machine types.",
        "description": "Get available QEMU/KVM machine types.",
        "operationId": "get_nodes_nodes_node_nodes_node_capabilities_nodes_node_capabilities_qemu_nodes_node_capabilities_qemu_machines",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "changes": {
                        "type": "string",
                        "description": "Notable changes of a version, currently only set for +pveX versions."
                      },
                      "id": {
                        "type": "string",
                        "description": "Full name of machine type and version."
                      },
                      "type": {
                        "type": "string",
                        "description": "The machine type."
                      },
                      "version": {
                        "type": "string",
                        "description": "The machine version."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage": {
      "get": {
        "summary": "Get status for all datastores.",
        "description": "Get status for all datastores.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-storage-content-list",
              "description": "Only list stores which support this content type."
            },
            "description": "Only list stores which support this content type."
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only list stores which are enabled (not disabled in config).",
              "default": false
            },
            "description": "Only list stores which are enabled (not disabled in config)."
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include information about formats",
              "default": false
            },
            "description": "Include information about formats"
          },
          {
            "name": "storage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-storage-id",
              "description": "Only list status for  specified storage"
            },
            "description": "Only list status for  specified storage"
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-node",
              "description": "If target is different to 'node', we only lists shared storages which content is accessible on this 'node' and the specified 'target' node."
            },
            "description": "If target is different to 'node', we only lists shared storages which content is accessible on this 'node' and the specified 'target' node."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "Set when storage is accessible."
                      },
                      "avail": {
                        "type": "integer",
                        "description": "Available storage space in bytes."
                      },
                      "content": {
                        "type": "string",
                        "format": "pve-storage-content-list",
                        "description": "Allowed storage content types."
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Set when storage is enabled (not disabled)."
                      },
                      "shared": {
                        "type": "boolean",
                        "description": "Shared flag from storage configuration."
                      },
                      "storage": {
                        "type": "string",
                        "format": "pve-storage-id",
                        "description": "The storage identifier."
                      },
                      "total": {
                        "type": "integer",
                        "description": "Total storage space in bytes."
                      },
                      "type": {
                        "type": "string",
                        "description": "Storage type."
                      },
                      "used": {
                        "type": "integer",
                        "description": "Used storage space in bytes."
                      },
                      "used_fraction": {
                        "type": "number",
                        "description": "Used fraction (used/total)."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/prunebackups": {
      "delete": {
        "summary": "Prune backups. Only those using the standard naming scheme are considered.",
        "description": "Prune backups. Only those using the standard naming scheme are considered.",
        "operationId": "delete_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_prunebackups",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "prune-backups",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "prune-backups",
              "description": "Use these retention options instead of those from the storage configuration."
            },
            "description": "Use these retention options instead of those from the storage configuration."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
              "enum": [
                "qemu",
                "lxc"
              ]
            },
            "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type."
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "pve-vmid",
              "description": "Only prune backups for this VM.",
              "minimum": 100,
              "maximum": 999999999
            },
            "description": "Only prune backups for this VM."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.",
        "description": "Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_prunebackups",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "prune-backups",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "prune-backups",
              "description": "Use these retention options instead of those from the storage configuration."
            },
            "description": "Use these retention options instead of those from the storage configuration."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
              "enum": [
                "qemu",
                "lxc"
              ]
            },
            "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type."
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "pve-vmid",
              "description": "Only consider backups for this guest.",
              "minimum": 100,
              "maximum": 999999999
            },
            "description": "Only consider backups for this guest."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ctime": {
                        "type": "integer",
                        "description": "Creation time of the backup (seconds since the UNIX epoch)."
                      },
                      "mark": {
                        "type": "string",
                        "description": "Whether the backup would be kept or removed. Backups that are protected or don't use the standard naming scheme are not removed."
                      },
                      "type": {
                        "type": "string",
                        "description": "One of 'qemu', 'lxc', 'openvz' or 'unknown'."
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "The VM the backup belongs to."
                      },
                      "volid": {
                        "type": "string",
                        "description": "Backup volume ID."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/content": {
      "get": {
        "summary": "List storage content.",
        "description": "List storage content.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-storage-content",
              "description": "Only list content of this type."
            },
            "description": "Only list content of this type."
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "pve-vmid",
              "description": "Only list images for this VM",
              "minimum": 100,
              "maximum": 999999999
            },
            "description": "Only list images for this VM"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ctime": {
                        "type": "integer",
                        "description": "Creation time (seconds since the UNIX Epoch)."
                      },
                      "encrypted": {
                        "type": "string",
                        "description": "If whole backup is encrypted, value is the fingerprint or '1'  if encrypted. Only useful for the Proxmox Backup Server storage type."
                      },
                      "format": {
                        "type": "string",
                        "description": "Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Optional notes. If they contain multiple lines, only the first one is returned here."
                      },
                      "parent": {
                        "type": "string",
                        "description": "Volume identifier of parent (for linked cloned)."
                      },
                      "protected": {
                        "type": "boolean",
                        "description": "Protection status. Currently only supported for backups."
                      },
                      "size": {
                        "type": "integer",
                        "description": "Volume size in bytes."
                      },
                      "used": {
                        "type": "integer",
                        "description": "Used space. Please note that most storage plugins do not report anything useful here."
                      },
                      "verification": {
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "description": "Last backup verification state."
                          },
                          "upid": {
                            "type": "string",
                            "description": "Last backup verification UPID."
                          }
                        },
                        "description": "Last backup verification result, only useful for PBS storages."
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "Associated Owner VMID."
                      },
                      "volid": {
                        "type": "string",
                        "description": "Volume identifier."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Allocate disk images.",
        "description": "Allocate disk images.",
        "operationId": "post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string",
                    "description": "The name of the file to create."
                  },
                  "format": {
                    "type": "string",
                    "description": "Format of the image.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "subvol",
                      "vmdk"
                    ]
                  },
                  "size": {
                    "type": "string",
                    "description": "Size in kilobyte (1024 bytes). Optional suffixes 'M' (megabyte, 1024K) and 'G' (gigabyte, 1024M)",
                    "pattern": "\\d+[MG]?"
                  },
                  "vmid": {
                    "type": "integer",
                    "format": "pve-vmid",
                    "description": "Specify owner VM",
                    "minimum": 100,
                    "maximum": 999999999
                  }
                },
                "required": [
                  "filename",
                  "size",
                  "vmid"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Volume identifier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Volume identifier"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/content/nodes/{node}/storage/{storage}/content/{volume}": {
      "delete": {
        "summary": "Delete volume",
        "description": "Delete volume",
        "operationId": "delete_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The volume parameter"
            },
            "description": "The volume parameter"
          },
          {
            "name": "delay",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
              "minimum": 1,
              "maximum": 30
            },
            "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get volume attributes",
        "description": "Get volume attributes",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The volume parameter"
            },
            "description": "The volume parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "format": {
                      "type": "string",
                      "description": "Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Optional notes."
                    },
                    "path": {
                      "type": "string",
                      "description": "The Path"
                    },
                    "protected": {
                      "type": "boolean",
                      "description": "Protection status. Currently only supported for backups."
                    },
                    "size": {
                      "type": "integer",
                      "description": "Volume size in bytes."
                    },
                    "used": {
                      "type": "integer",
                      "description": "Used space. Please note that most storage plugins do not report anything useful here."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Copy a volume. This is experimental code - do not use.",
        "description": "Copy a volume. This is experimental code - do not use.",
        "operationId": "post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "target": {
                    "type": "string",
                    "description": "Target volume identifier"
                  },
                  "target_node": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node. Default is local node."
                  }
                },
                "required": [
                  "target"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The volume parameter"
            },
            "description": "The volume parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update volume attributes",
        "description": "Update volume attributes",
        "operationId": "put_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "description": "The new notes."
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "Protection status. Currently only supported for backups."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The volume parameter"
            },
            "description": "The volume parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/file-restore/nodes/{node}/storage/{storage}/file-restore/list": {
      "get": {
        "summary": "List files and directories for single file restore under the given path.",
        "description": "List files and directories for single file restore under the given path.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_file-restore_nodes_node_storage_storage_file-restore_list",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "filepath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "base64-path to the directory or file being listed, or \"/\"."
            },
            "description": "base64-path to the directory or file being listed, or \"/\"."
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Backup volume ID or name. Currently only PBS snapshots are supported."
            },
            "description": "Backup volume ID or name. Currently only PBS snapshots are supported."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filepath": {
                        "type": "string",
                        "description": "base64 path of the current entry"
                      },
                      "leaf": {
                        "type": "boolean",
                        "description": "If this entry is a leaf in the directory graph."
                      },
                      "mtime": {
                        "type": "integer",
                        "description": "Entry last-modified time (unix timestamp)."
                      },
                      "size": {
                        "type": "integer",
                        "description": "Entry file size."
                      },
                      "text": {
                        "type": "string",
                        "description": "Entry display text."
                      },
                      "type": {
                        "type": "string",
                        "description": "Entry type."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/file-restore/nodes/{node}/storage/{storage}/file-restore/download": {
      "get": {
        "summary": "Extract a file or directory (as zip archive) from a PBS backup.",
        "description": "Extract a file or directory (as zip archive) from a PBS backup.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_file-restore_nodes_node_storage_storage_file-restore_download",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "filepath",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "base64-path to the directory or file to download."
            },
            "description": "base64-path to the directory or file to download."
          },
          {
            "name": "tar",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Download dirs as 'tar.zst' instead of 'zip'.",
              "default": false
            },
            "description": "Download dirs as 'tar.zst' instead of 'zip'."
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Backup volume ID or name. Currently only PBS snapshots are supported."
            },
            "description": "Backup volume ID or name. Currently only PBS snapshots are supported."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Type: any"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/status": {
      "get": {
        "summary": "Read storage status.",
        "description": "Read storage status.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/rrd": {
      "get": {
        "summary": "Read storage RRD statistics (returns PNG).",
        "description": "Read storage RRD statistics (returns PNG).",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_rrd",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid-list",
              "description": "The list of datasources you want to display."
            },
            "description": "The list of datasources you want to display."
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/rrddata": {
      "get": {
        "summary": "Read storage RRD statistics.",
        "description": "Read storage RRD statistics.",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_rrddata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/upload": {
      "post": {
        "summary": "Upload templates, ISO images, OVAs and VM images.",
        "description": "Upload templates, ISO images, OVAs and VM images.",
        "operationId": "post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_upload",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checksum": {
                    "type": "string",
                    "description": "The expected checksum of the file."
                  },
                  "checksum-algorithm": {
                    "type": "string",
                    "description": "The algorithm to calculate the checksum of the file.",
                    "enum": [
                      "md5",
                      "sha1",
                      "sha224",
                      "sha256",
                      "sha384",
                      "sha512"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "format": "pve-storage-content",
                    "description": "Content type.",
                    "enum": [
                      "iso",
                      "vztmpl",
                      "import"
                    ]
                  },
                  "filename": {
                    "type": "string",
                    "description": "The name of the file to create. Caution: This will be normalized!",
                    "maxLength": 255
                  },
                  "tmpfilename": {
                    "type": "string",
                    "description": "The source file name. This parameter is usually set by the REST handler. You can only overwrite it when connecting to the trusted port on localhost.",
                    "pattern": "/var/tmp/pveupload-[0-9a-f]+"
                  }
                },
                "required": [
                  "content",
                  "filename"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/download-url": {
      "post": {
        "summary": "Download templates, ISO images, OVAs and VM images by using an URL.",
        "description": "Download templates, ISO images, OVAs and VM images by using an URL.",
        "operationId": "post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_download-url",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checksum": {
                    "type": "string",
                    "description": "The expected checksum of the file."
                  },
                  "checksum-algorithm": {
                    "type": "string",
                    "description": "The algorithm to calculate the checksum of the file.",
                    "enum": [
                      "md5",
                      "sha1",
                      "sha224",
                      "sha256",
                      "sha384",
                      "sha512"
                    ]
                  },
                  "compression": {
                    "type": "string",
                    "description": "Decompress the downloaded file using the specified compression algorithm."
                  },
                  "content": {
                    "type": "string",
                    "format": "pve-storage-content",
                    "description": "Content type.",
                    "enum": [
                      "iso",
                      "vztmpl",
                      "import"
                    ]
                  },
                  "filename": {
                    "type": "string",
                    "description": "The name of the file to create. Caution: This will be normalized!",
                    "maxLength": 255
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL to download the file from.",
                    "pattern": "https?://.*"
                  },
                  "verify-certificates": {
                    "type": "boolean",
                    "description": "If false, no SSL/TLS certificates will be verified.",
                    "default": true
                  }
                },
                "required": [
                  "content",
                  "filename",
                  "url"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/import-metadata": {
      "get": {
        "summary": "Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM",
        "description": "Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM",
        "operationId": "get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_import-metadata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Volume identifier for the guest archive/entry."
            },
            "description": "Volume identifier for the guest archive/entry."
          }
        ],
        "responses": {
          "200": {
            "description": "Information about how to import a guest.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "create-args": {
                      "type": "object",
                      "description": "Parameters which can be used in a call to create a VM or container."
                    },
                    "disks": {
                      "type": "object",
                      "description": "Recognised disk volumes as `$bus$id` => `$storeid:$path` map."
                    },
                    "net": {
                      "type": "object",
                      "description": "Recognised network interfaces as `net$id` => { ...params } object."
                    },
                    "source": {
                      "type": "string",
                      "description": "The type of the import-source of this guest volume."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of guest this is going to produce."
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Related subject (config) key of warning."
                          },
                          "type": {
                            "type": "string",
                            "description": "What this warning is about."
                          },
                          "value": {
                            "type": "string",
                            "description": "Related subject (config) value of warning."
                          }
                        }
                      },
                      "description": "List of known issues that can affect the import of a guest. Note that lack of warning does not imply that there cannot be any problems."
                    }
                  },
                  "description": "Information about how to import a guest."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks": {
      "get": {
        "summary": "Node index.",
        "description": "Node index.",
        "operationId": "get_nodes_nodes_node_nodes_node_disks",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvm": {
      "get": {
        "summary": "List LVM Volume Groups",
        "description": "List LVM Volume Groups",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvm",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "children": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "free": {
                                  "type": "integer",
                                  "description": "The free bytes in the physical volume"
                                },
                                "leaf": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the physical volume"
                                },
                                "size": {
                                  "type": "integer",
                                  "description": "The size of the physical volume in bytes"
                                }
                              }
                            },
                            "description": "The underlying physical volumes"
                          },
                          "free": {
                            "type": "integer",
                            "description": "The free bytes in the volume group"
                          },
                          "leaf": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the volume group"
                          },
                          "size": {
                            "type": "integer",
                            "description": "The size of the volume group in bytes"
                          }
                        }
                      }
                    },
                    "leaf": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create an LVM Volume Group",
        "description": "Create an LVM Volume Group",
        "operationId": "post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvm",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the Volume Group",
                    "default": false
                  },
                  "device": {
                    "type": "string",
                    "description": "The block device you want to create the volume group on"
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage identifier."
                  }
                },
                "required": [
                  "device",
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvm/nodes/{node}/disks/lvm/{name}": {
      "delete": {
        "summary": "Remove an LVM Volume Group.",
        "description": "Remove an LVM Volume Group.",
        "operationId": "delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvm_nodes_node_disks_lvm_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false
            },
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only)."
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also wipe disks so they can be repurposed afterwards.",
              "default": false
            },
            "description": "Also wipe disks so they can be repurposed afterwards."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvmthin": {
      "get": {
        "summary": "List LVM thinpools",
        "description": "List LVM thinpools",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvmthin",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lv": {
                        "type": "string",
                        "description": "The name of the thinpool."
                      },
                      "lv_size": {
                        "type": "integer",
                        "description": "The size of the thinpool in bytes."
                      },
                      "metadata_size": {
                        "type": "integer",
                        "description": "The size of the metadata lv in bytes."
                      },
                      "metadata_used": {
                        "type": "integer",
                        "description": "The used bytes of the metadata lv."
                      },
                      "used": {
                        "type": "integer",
                        "description": "The used bytes of the thinpool."
                      },
                      "vg": {
                        "type": "string",
                        "description": "The associated volume group."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create an LVM thinpool",
        "description": "Create an LVM thinpool",
        "operationId": "post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvmthin",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the thinpool.",
                    "default": false
                  },
                  "device": {
                    "type": "string",
                    "description": "The block device you want to create the thinpool on."
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage identifier."
                  }
                },
                "required": [
                  "device",
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvmthin/nodes/{node}/disks/lvmthin/{name}": {
      "delete": {
        "summary": "Remove an LVM thin pool.",
        "description": "Remove an LVM thin pool.",
        "operationId": "delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvmthin_nodes_node_disks_lvmthin_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false
            },
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only)."
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also wipe disks so they can be repurposed afterwards.",
              "default": false
            },
            "description": "Also wipe disks so they can be repurposed afterwards."
          },
          {
            "name": "volume-group",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-storage-id",
              "description": "The storage identifier."
            },
            "description": "The storage identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/directory": {
      "get": {
        "summary": "PVE Managed Directory storages.",
        "description": "PVE Managed Directory storages.",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "device": {
                        "type": "string",
                        "description": "The mounted device."
                      },
                      "options": {
                        "type": "string",
                        "description": "The mount options."
                      },
                      "path": {
                        "type": "string",
                        "description": "The mount path."
                      },
                      "type": {
                        "type": "string",
                        "description": "The filesystem type."
                      },
                      "unitfile": {
                        "type": "string",
                        "description": "The path of the mount unit."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.",
        "description": "Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.",
        "operationId": "post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the directory.",
                    "default": false
                  },
                  "device": {
                    "type": "string",
                    "description": "The block device you want to create the filesystem on."
                  },
                  "filesystem": {
                    "type": "string",
                    "description": "The desired filesystem.",
                    "enum": [
                      "ext4",
                      "xfs"
                    ],
                    "default": "ext4"
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage identifier."
                  }
                },
                "required": [
                  "device",
                  "name"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/directory/nodes/{node}/disks/directory/{name}": {
      "delete": {
        "summary": "Unmounts the storage and removes the mount unit.",
        "description": "Unmounts the storage and removes the mount unit.",
        "operationId": "delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory_nodes_node_disks_directory_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false
            },
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only)."
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also wipe disk so it can be repurposed afterwards.",
              "default": false
            },
            "description": "Also wipe disk so it can be repurposed afterwards."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/zfs": {
      "get": {
        "summary": "List Zpools.",
        "description": "List Zpools.",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "alloc": {
                        "type": "integer",
                        "description": ""
                      },
                      "dedup": {
                        "type": "number",
                        "description": ""
                      },
                      "frag": {
                        "type": "integer",
                        "description": ""
                      },
                      "free": {
                        "type": "integer",
                        "description": ""
                      },
                      "health": {
                        "type": "string",
                        "description": ""
                      },
                      "name": {
                        "type": "string",
                        "description": ""
                      },
                      "size": {
                        "type": "integer",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a ZFS pool.",
        "description": "Create a ZFS pool.",
        "operationId": "post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the zpool.",
                    "default": false
                  },
                  "ashift": {
                    "type": "integer",
                    "description": "Pool sector size exponent.",
                    "minimum": 9,
                    "maximum": 16,
                    "default": 12
                  },
                  "compression": {
                    "type": "string",
                    "description": "The compression algorithm to use.",
                    "enum": [
                      "on",
                      "off",
                      "gzip",
                      "lz4",
                      "lzjb",
                      "zle",
                      "zstd"
                    ],
                    "default": "on"
                  },
                  "devices": {
                    "type": "string",
                    "format": "string-list",
                    "description": "The block devices you want to create the zpool on."
                  },
                  "draid-config": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage identifier."
                  },
                  "raidlevel": {
                    "type": "string",
                    "description": "The RAID level to use.",
                    "enum": [
                      "single",
                      "mirror",
                      "raid10",
                      "raidz",
                      "raidz2",
                      "raidz3",
                      "draid",
                      "draid2",
                      "draid3"
                    ]
                  }
                },
                "required": [
                  "devices",
                  "name",
                  "raidlevel"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/zfs/nodes/{node}/disks/zfs/{name}": {
      "delete": {
        "summary": "Destroy a ZFS pool.",
        "description": "Destroy a ZFS pool.",
        "operationId": "delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs_nodes_node_disks_zfs_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          },
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false
            },
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only)."
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also wipe disks so they can be repurposed afterwards.",
              "default": false
            },
            "description": "Also wipe disks so they can be repurposed afterwards."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get details about a zpool.",
        "description": "Get details about a zpool.",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs_nodes_node_disks_zfs_name",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name parameter"
            },
            "description": "The name parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "Information about the recommended action to fix the state."
                    },
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cksum": {
                            "type": "number"
                          },
                          "msg": {
                            "type": "string",
                            "description": "An optional message about the vdev."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the vdev or section."
                          },
                          "read": {
                            "type": "number"
                          },
                          "state": {
                            "type": "string",
                            "description": "The state of the vdev."
                          },
                          "write": {
                            "type": "number"
                          }
                        }
                      },
                      "description": "The pool configuration information, including the vdevs for each section (e.g. spares, cache), may be nested."
                    },
                    "errors": {
                      "type": "string",
                      "description": "Information about the errors on the zpool."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the zpool."
                    },
                    "scan": {
                      "type": "string",
                      "description": "Information about the last/current scrub."
                    },
                    "state": {
                      "type": "string",
                      "description": "The state of the zpool."
                    },
                    "status": {
                      "type": "string",
                      "description": "Information about the state of the zpool."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/list": {
      "get": {
        "summary": "List local disks.",
        "description": "List local disks.",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_list",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "include-partitions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also include partitions.",
              "default": false
            },
            "description": "Also include partitions."
          },
          {
            "name": "skipsmart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Skip smart checks.",
              "default": false
            },
            "description": "Skip smart checks."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list specific types of disks.",
              "enum": [
                "unused",
                "journal_disks"
              ]
            },
            "description": "Only list specific types of disks."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "devpath": {
                        "type": "string",
                        "description": "The device path"
                      },
                      "gpt": {
                        "type": "boolean"
                      },
                      "health": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      },
                      "mounted": {
                        "type": "boolean"
                      },
                      "osdid": {
                        "type": "integer"
                      },
                      "osdid-list": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "parent": {
                        "type": "string",
                        "description": "For partitions only. The device path of the disk the partition resides on."
                      },
                      "serial": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "used": {
                        "type": "string"
                      },
                      "vendor": {
                        "type": "string"
                      },
                      "wwn": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/smart": {
      "get": {
        "summary": "Get SMART Health of a disk.",
        "description": "Get SMART Health of a disk.",
        "operationId": "get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_smart",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "disk",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block device name",
              "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
            },
            "description": "Block device name"
          },
          {
            "name": "healthonly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If true returns only the health status"
            },
            "description": "If true returns only the health status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "array"
                    },
                    "health": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/initgpt": {
      "post": {
        "summary": "Initialize Disk with GPT",
        "description": "Initialize Disk with GPT",
        "operationId": "post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_initgpt",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "Block device name",
                    "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                  },
                  "uuid": {
                    "type": "string",
                    "description": "UUID for the GPT table",
                    "maxLength": 36,
                    "pattern": "[a-fA-F0-9\\-]+"
                  }
                },
                "required": [
                  "disk"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/wipedisk": {
      "put": {
        "summary": "Wipe a disk or partition.",
        "description": "Wipe a disk or partition.",
        "operationId": "put_nodes_nodes_node_nodes_node_disks_nodes_node_disks_wipedisk",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "Block device name",
                    "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                  }
                },
                "required": [
                  "disk"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/apt": {
      "get": {
        "summary": "Directory index for apt (Advanced Package Tool).",
        "description": "Directory index for apt (Advanced Package Tool).",
        "operationId": "get_nodes_nodes_node_nodes_node_apt",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/update": {
      "get": {
        "summary": "List available updates.",
        "description": "List available updates.",
        "operationId": "get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_update",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "This is used to resynchronize the package index files from their sources (apt-get update).",
        "description": "This is used to resynchronize the package index files from their sources (apt-get update).",
        "operationId": "post_nodes_nodes_node_nodes_node_apt_nodes_node_apt_update",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notify": {
                    "type": "boolean",
                    "description": "Send notification about new packages.",
                    "default": false
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Only produces output suitable for logging, omitting progress indicators.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/changelog": {
      "get": {
        "summary": "Get package changelogs.",
        "description": "Get package changelogs.",
        "operationId": "get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_changelog",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Package name."
            },
            "description": "Package name."
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Package version."
            },
            "description": "Package version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/repositories": {
      "get": {
        "summary": "Get APT repository information.",
        "description": "Get APT repository information.",
        "operationId": "get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Result from parsing the APT repository files in /etc/apt/.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "digest": {
                      "type": "string",
                      "description": "Common digest of all files."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "description": "The error message"
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the problematic file."
                          }
                        }
                      },
                      "description": "List of problematic repository files."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "digest": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "description": "Digest of the file as bytes."
                          },
                          "file-type": {
                            "type": "string",
                            "description": "Format of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the problematic file."
                          },
                          "repositories": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Comment": {
                                  "type": "string",
                                  "description": "Associated comment"
                                },
                                "Components": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of repository components"
                                },
                                "Enabled": {
                                  "type": "boolean",
                                  "description": "Whether the repository is enabled or not"
                                },
                                "FileType": {
                                  "type": "string",
                                  "description": "Format of the defining file."
                                },
                                "Options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "Key": {
                                        "type": "string"
                                      },
                                      "Values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "description": "Additional options"
                                },
                                "Suites": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of package distribuitions"
                                },
                                "Types": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of package types."
                                },
                                "URIs": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of repository URIs."
                                }
                              }
                            },
                            "description": "The parsed repositories."
                          }
                        }
                      },
                      "description": "List of parsed repository files."
                    },
                    "infos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "string",
                            "description": "Index of the associated repository within the file."
                          },
                          "kind": {
                            "type": "string",
                            "description": "Kind of the information (e.g. warning)."
                          },
                          "message": {
                            "type": "string",
                            "description": "Information message."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the associated file."
                          },
                          "property": {
                            "type": "string",
                            "description": "Property from which the info originates."
                          }
                        }
                      },
                      "description": "Additional information/warnings for APT repositories."
                    },
                    "standard-repos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "handle": {
                            "type": "string",
                            "description": "Handle to identify the repository."
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the repository."
                          },
                          "status": {
                            "type": "boolean",
                            "description": "Indicating enabled/disabled status, if the repository is configured."
                          }
                        }
                      },
                      "description": "List of standard repositories and their configuration status"
                    }
                  },
                  "description": "Result from parsing the APT repository files in /etc/apt/."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Change the properties of a repository. Currently only allows enabling/disabling.",
        "description": "Change the properties of a repository. Currently only allows enabling/disabling.",
        "operationId": "post_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Digest to detect modifications.",
                    "maxLength": 80
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the repository should be enabled or not."
                  },
                  "index": {
                    "type": "integer",
                    "description": "Index within the file (starting from 0)."
                  },
                  "path": {
                    "type": "string",
                    "description": "Path to the containing file."
                  }
                },
                "required": [
                  "index",
                  "path"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Add a standard repository to the configuration",
        "description": "Add a standard repository to the configuration",
        "operationId": "put_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Digest to detect modifications.",
                    "maxLength": 80
                  },
                  "handle": {
                    "type": "string",
                    "description": "Handle that identifies a repository."
                  }
                },
                "required": [
                  "handle"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/versions": {
      "get": {
        "summary": "Get package information for important Proxmox packages.",
        "description": "Get package information for important Proxmox packages.",
        "operationId": "get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_versions",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/firewall": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_firewall",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/rules": {
      "get": {
        "summary": "List rules.",
        "description": "List rules.",
        "operationId": "get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new rule.",
        "description": "Create new rule.",
        "operationId": "post_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                },
                "required": [
                  "action",
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/rules/nodes/{node}/firewall/rules/{pos}": {
      "delete": {
        "summary": "Delete rule.",
        "description": "Delete rule.",
        "operationId": "delete_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules_nodes_node_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64
            },
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get single rule data.",
        "description": "Get single rule data.",
        "operationId": "get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules_nodes_node_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "dest": {
                      "type": "string"
                    },
                    "dport": {
                      "type": "string"
                    },
                    "enable": {
                      "type": "integer"
                    },
                    "icmp-type": {
                      "type": "string"
                    },
                    "iface": {
                      "type": "string"
                    },
                    "ipversion": {
                      "type": "integer"
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule"
                    },
                    "macro": {
                      "type": "string"
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "sport": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Modify rule data.",
        "description": "Modify rule data.",
        "operationId": "put_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules_nodes_node_firewall_rules_pos",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment."
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "dest": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "dport": {
                    "type": "string",
                    "format": "pve-fw-dport-spec",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0
                  },
                  "icmp-type": {
                    "type": "string",
                    "format": "pve-fw-icmp-type-spec",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'."
                  },
                  "iface": {
                    "type": "string",
                    "format": "pve-iface",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0
                  },
                  "proto": {
                    "type": "string",
                    "format": "pve-fw-protocol-spec",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'."
                  },
                  "source": {
                    "type": "string",
                    "format": "pve-fw-addr-spec",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512
                  },
                  "sport": {
                    "type": "string",
                    "format": "pve-fw-sport-spec",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges."
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The pos parameter"
            },
            "description": "The pos parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/options": {
      "get": {
        "summary": "Get host firewall options.",
        "description": "Get host firewall options.",
        "operationId": "get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_options",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "description": "Enable host firewall rules."
                    },
                    "log_level_forward": {
                      "type": "string",
                      "description": "Log level for forwarded traffic."
                    },
                    "log_level_in": {
                      "type": "string",
                      "description": "Log level for incoming traffic."
                    },
                    "log_level_out": {
                      "type": "string",
                      "description": "Log level for outgoing traffic."
                    },
                    "log_nf_conntrack": {
                      "type": "boolean",
                      "description": "Enable logging of conntrack information."
                    },
                    "ndp": {
                      "type": "boolean",
                      "description": "Enable NDP (Neighbor Discovery Protocol)."
                    },
                    "nf_conntrack_allow_invalid": {
                      "type": "boolean",
                      "description": "Allow invalid packets on connection tracking."
                    },
                    "nf_conntrack_helpers": {
                      "type": "string",
                      "format": "pve-fw-conntrack-helper",
                      "description": "Enable conntrack helpers for specific protocols. Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp, tftp"
                    },
                    "nf_conntrack_max": {
                      "type": "integer",
                      "description": "Maximum number of tracked connections."
                    },
                    "nf_conntrack_tcp_timeout_established": {
                      "type": "integer",
                      "description": "Conntrack established timeout."
                    },
                    "nf_conntrack_tcp_timeout_syn_recv": {
                      "type": "integer",
                      "description": "Conntrack syn recv timeout."
                    },
                    "nftables": {
                      "type": "boolean",
                      "description": "Enable nftables based firewall (tech preview)"
                    },
                    "nosmurfs": {
                      "type": "boolean",
                      "description": "Enable SMURFS filter."
                    },
                    "protection_synflood": {
                      "type": "boolean",
                      "description": "Enable synflood protection"
                    },
                    "protection_synflood_burst": {
                      "type": "integer",
                      "description": "Synflood protection rate burst by ip src."
                    },
                    "protection_synflood_rate": {
                      "type": "integer",
                      "description": "Synflood protection rate syn/sec by ip src."
                    },
                    "smurf_log_level": {
                      "type": "string",
                      "description": "Log level for SMURFS filter."
                    },
                    "tcp_flags_log_level": {
                      "type": "string",
                      "description": "Log level for illegal tcp flags filter."
                    },
                    "tcpflags": {
                      "type": "boolean",
                      "description": "Filter illegal combinations of TCP flags."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set Firewall options.",
        "description": "Set Firewall options.",
        "operationId": "put_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_options",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable host firewall rules."
                  },
                  "log_level_forward": {
                    "type": "string",
                    "description": "Log level for forwarded traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "log_level_in": {
                    "type": "string",
                    "description": "Log level for incoming traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "log_level_out": {
                    "type": "string",
                    "description": "Log level for outgoing traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "log_nf_conntrack": {
                    "type": "boolean",
                    "description": "Enable logging of conntrack information.",
                    "default": false
                  },
                  "ndp": {
                    "type": "boolean",
                    "description": "Enable NDP (Neighbor Discovery Protocol).",
                    "default": false
                  },
                  "nf_conntrack_allow_invalid": {
                    "type": "boolean",
                    "description": "Allow invalid packets on connection tracking.",
                    "default": false
                  },
                  "nf_conntrack_helpers": {
                    "type": "string",
                    "format": "pve-fw-conntrack-helper",
                    "description": "Enable conntrack helpers for specific protocols. Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp, tftp",
                    "default": ""
                  },
                  "nf_conntrack_max": {
                    "type": "integer",
                    "description": "Maximum number of tracked connections.",
                    "minimum": 32768,
                    "default": 262144
                  },
                  "nf_conntrack_tcp_timeout_established": {
                    "type": "integer",
                    "description": "Conntrack established timeout.",
                    "minimum": 7875,
                    "default": 432000
                  },
                  "nf_conntrack_tcp_timeout_syn_recv": {
                    "type": "integer",
                    "description": "Conntrack syn recv timeout.",
                    "minimum": 30,
                    "maximum": 60,
                    "default": 60
                  },
                  "nftables": {
                    "type": "boolean",
                    "description": "Enable nftables based firewall (tech preview)",
                    "default": false
                  },
                  "nosmurfs": {
                    "type": "boolean",
                    "description": "Enable SMURFS filter."
                  },
                  "protection_synflood": {
                    "type": "boolean",
                    "description": "Enable synflood protection",
                    "default": false
                  },
                  "protection_synflood_burst": {
                    "type": "integer",
                    "description": "Synflood protection rate burst by ip src.",
                    "default": 1000
                  },
                  "protection_synflood_rate": {
                    "type": "integer",
                    "description": "Synflood protection rate syn/sec by ip src.",
                    "default": 200
                  },
                  "smurf_log_level": {
                    "type": "string",
                    "description": "Log level for SMURFS filter.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "tcp_flags_log_level": {
                    "type": "string",
                    "description": "Log level for illegal tcp flags filter.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ]
                  },
                  "tcpflags": {
                    "type": "boolean",
                    "description": "Filter illegal combinations of TCP flags.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/log": {
      "get": {
        "summary": "Read firewall log",
        "description": "Read firewall log",
        "operationId": "get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_log",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display log since this UNIX epoch.",
              "minimum": 0
            },
            "description": "Display log since this UNIX epoch."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display log until this UNIX epoch.",
              "minimum": 0
            },
            "description": "Display log until this UNIX epoch."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/replication": {
      "get": {
        "summary": "List status of all replication jobs on this node.",
        "description": "List status of all replication jobs on this node.",
        "operationId": "get_nodes_nodes_node_nodes_node_replication",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "guest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "pve-vmid",
              "description": "Only list replication jobs for this guest.",
              "minimum": 100,
              "maximum": 999999999
            },
            "description": "Only list replication jobs for this guest."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}/nodes/{node}/replication/{id}/status": {
      "get": {
        "summary": "Get replication job status.",
        "description": "Get replication job status.",
        "operationId": "get_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id_nodes_node_replication_id_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}/nodes/{node}/replication/{id}/log": {
      "get": {
        "summary": "Read replication job log.",
        "description": "Read replication job log.",
        "operationId": "get_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id_nodes_node_replication_id_log",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}/nodes/{node}/replication/{id}/schedule_now": {
      "post": {
        "summary": "Schedule replication job to start as soon as possible.",
        "description": "Schedule replication job to start as soon as possible.",
        "operationId": "post_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id_nodes_node_replication_id_schedule_now",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/certificates": {
      "get": {
        "summary": "Node index.",
        "description": "Node index.",
        "operationId": "get_nodes_nodes_node_nodes_node_certificates",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/acme": {
      "get": {
        "summary": "ACME index.",
        "description": "ACME index.",
        "operationId": "get_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/acme/nodes/{node}/certificates/acme/certificate": {
      "delete": {
        "summary": "Revoke existing certificate from CA.",
        "description": "Revoke existing certificate from CA.",
        "operationId": "delete_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Order a new certificate from ACME-compatible CA.",
        "description": "Order a new certificate from ACME-compatible CA.",
        "operationId": "post_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Overwrite existing custom certificate.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Renew existing certificate from CA.",
        "description": "Renew existing certificate from CA.",
        "operationId": "put_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Force renewal even if expiry is more than 30 days away.",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/info": {
      "get": {
        "summary": "Get information about node's certificates.",
        "description": "Get information about node's certificates.",
        "operationId": "get_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_info",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string"
                      },
                      "fingerprint": {
                        "type": "string",
                        "description": "Certificate SHA 256 fingerprint."
                      },
                      "issuer": {
                        "type": "string",
                        "description": "Certificate issuer name."
                      },
                      "notafter": {
                        "type": "integer",
                        "description": "Certificate's notAfter timestamp (UNIX epoch)."
                      },
                      "notbefore": {
                        "type": "integer",
                        "description": "Certificate's notBefore timestamp (UNIX epoch)."
                      },
                      "pem": {
                        "type": "string",
                        "format": "pem-certificate",
                        "description": "Certificate in PEM format"
                      },
                      "public-key-bits": {
                        "type": "integer",
                        "description": "Certificate's public key size"
                      },
                      "public-key-type": {
                        "type": "string",
                        "description": "Certificate's public key algorithm"
                      },
                      "san": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of Certificate's SubjectAlternativeName entries."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Certificate subject name."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/custom": {
      "delete": {
        "summary": "DELETE custom certificate chain and key.",
        "description": "DELETE custom certificate chain and key.",
        "operationId": "delete_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_custom",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "restart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Restart pveproxy.",
              "default": false
            },
            "description": "Restart pveproxy."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Upload or update custom certificate chain and key.",
        "description": "Upload or update custom certificate chain and key.",
        "operationId": "post_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_custom",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "certificates": {
                    "type": "string",
                    "format": "pem-certificate-chain",
                    "description": "PEM encoded certificate (chain)."
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Overwrite existing custom or ACME certificate files.",
                    "default": false
                  },
                  "key": {
                    "type": "string",
                    "format": "pem-string",
                    "description": "PEM encoded private key."
                  },
                  "restart": {
                    "type": "boolean",
                    "description": "Restart pveproxy.",
                    "default": false
                  }
                },
                "required": [
                  "certificates"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "Certificate SHA 256 fingerprint."
                    },
                    "issuer": {
                      "type": "string",
                      "description": "Certificate issuer name."
                    },
                    "notafter": {
                      "type": "integer",
                      "description": "Certificate's notAfter timestamp (UNIX epoch)."
                    },
                    "notbefore": {
                      "type": "integer",
                      "description": "Certificate's notBefore timestamp (UNIX epoch)."
                    },
                    "pem": {
                      "type": "string",
                      "format": "pem-certificate",
                      "description": "Certificate in PEM format"
                    },
                    "public-key-bits": {
                      "type": "integer",
                      "description": "Certificate's public key size"
                    },
                    "public-key-type": {
                      "type": "string",
                      "description": "Certificate's public key algorithm"
                    },
                    "san": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of Certificate's SubjectAlternativeName entries."
                    },
                    "subject": {
                      "type": "string",
                      "description": "Certificate subject name."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/config": {
      "get": {
        "summary": "Get node configuration options.",
        "description": "Get node configuration options.",
        "operationId": "get_nodes_nodes_node_nodes_node_config",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "property",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return only a specific property from the node configuration.",
              "enum": [
                "acme",
                "acmedomain0",
                "acmedomain1",
                "acmedomain2",
                "acmedomain3",
                "acmedomain4",
                "acmedomain5",
                "ballooning-target",
                "description",
                "startall-onboot-delay",
                "wakeonlan"
              ]
            },
            "description": "Return only a specific property from the node configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acme": {
                      "type": "string",
                      "description": "Node specific ACME settings."
                    },
                    "acmedomain[n]": {
                      "type": "string",
                      "description": "ACME domain and validation plugin"
                    },
                    "ballooning-target": {
                      "type": "integer",
                      "description": "RAM usage target for ballooning (in percent of total memory)"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the Node. Shown in the web-interface node notes panel. This is saved as comment inside the configuration file."
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications."
                    },
                    "startall-onboot-delay": {
                      "type": "integer",
                      "description": "Initial delay in seconds, before starting all the Virtual Guests with on-boot enabled."
                    },
                    "wakeonlan": {
                      "type": "string",
                      "description": "Node specific wake on LAN settings."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set node configuration options.",
        "description": "Set node configuration options.",
        "operationId": "put_nodes_nodes_node_nodes_node_config",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acme": {
                    "type": "string",
                    "description": "Node specific ACME settings."
                  },
                  "acmedomain[n]": {
                    "type": "string",
                    "description": "ACME domain and validation plugin"
                  },
                  "ballooning-target": {
                    "type": "integer",
                    "description": "RAM usage target for ballooning (in percent of total memory)",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 80
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Node. Shown in the web-interface node notes panel. This is saved as comment inside the configuration file.",
                    "maxLength": 65536
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40
                  },
                  "startall-onboot-delay": {
                    "type": "integer",
                    "description": "Initial delay in seconds, before starting all the Virtual Guests with on-boot enabled.",
                    "minimum": 0,
                    "maximum": 300,
                    "default": 0
                  },
                  "wakeonlan": {
                    "type": "string",
                    "description": "Node specific wake on LAN settings."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/sdn": {
      "get": {
        "summary": "SDN index.",
        "description": "SDN index.",
        "operationId": "get_nodes_nodes_node_nodes_node_sdn",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/sdn/nodes/{node}/sdn/zones": {
      "get": {
        "summary": "Get status for all zones.",
        "description": "Get status for all zones.",
        "operationId": "get_nodes_nodes_node_nodes_node_sdn_nodes_node_sdn_zones",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Status of zone"
                      },
                      "zone": {
                        "type": "string",
                        "format": "pve-sdn-zone-id",
                        "description": "The SDN zone object identifier."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/sdn/nodes/{node}/sdn/zones/nodes/{node}/sdn/zones/{zone}": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "get_nodes_nodes_node_nodes_node_sdn_nodes_node_sdn_zones_nodes_node_sdn_zones_zone",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The zone parameter"
            },
            "description": "The zone parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/sdn/nodes/{node}/sdn/zones/nodes/{node}/sdn/zones/{zone}/nodes/{node}/sdn/zones/{zone}/content": {
      "get": {
        "summary": "List zone content.",
        "description": "List zone content.",
        "operationId": "get_nodes_nodes_node_nodes_node_sdn_nodes_node_sdn_zones_nodes_node_sdn_zones_zone_nodes_node_sdn_zones_zone_content",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The zone parameter"
            },
            "description": "The zone parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Status."
                      },
                      "statusmsg": {
                        "type": "string",
                        "description": "Status details"
                      },
                      "vnet": {
                        "type": "string",
                        "description": "Vnet identifier."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/version": {
      "get": {
        "summary": "API version details",
        "description": "API version details",
        "operationId": "get_nodes_nodes_node_nodes_node_version",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "release": {
                      "type": "string",
                      "description": "The current installed Proxmox VE Release"
                    },
                    "repoid": {
                      "type": "string",
                      "description": "The short git commit hash ID from which this version was build"
                    },
                    "version": {
                      "type": "string",
                      "description": "The current installed pve-manager package version"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/status": {
      "get": {
        "summary": "Read node status",
        "description": "Read node status",
        "operationId": "get_nodes_nodes_node_nodes_node_status",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "boot-info": {
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Through which firmware the system got booted."
                        },
                        "secureboot": {
                          "type": "boolean",
                          "description": "System is booted in secure mode, only applicable for the \"efi\" mode."
                        }
                      },
                      "description": "Meta-information about the boot mode."
                    },
                    "cpu": {
                      "type": "number",
                      "description": "The current cpu usage."
                    },
                    "cpuinfo": {
                      "type": "object",
                      "properties": {
                        "cores": {
                          "type": "integer",
                          "description": "The number of physical cores of the CPU."
                        },
                        "cpus": {
                          "type": "integer",
                          "description": "The number of logical threads of the CPU."
                        },
                        "model": {
                          "type": "string",
                          "description": "The CPU model"
                        },
                        "sockets": {
                          "type": "integer",
                          "description": "The number of logical threads of the CPU."
                        }
                      }
                    },
                    "current-kernel": {
                      "type": "object",
                      "properties": {
                        "machine": {
                          "type": "string",
                          "description": "Hardware (architecture) type"
                        },
                        "release": {
                          "type": "string",
                          "description": "OS kernel release (e.g., \"6.8.0\")"
                        },
                        "sysname": {
                          "type": "string",
                          "description": "OS kernel name (e.g., \"Linux\")"
                        },
                        "version": {
                          "type": "string",
                          "description": "OS kernel version with build info"
                        }
                      },
                      "description": "Meta-information about the currently booted kernel of this node."
                    },
                    "loadavg": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "The value of the load."
                      },
                      "description": "An array of load avg for 1, 5 and 15 minutes respectively."
                    },
                    "memory": {
                      "type": "object",
                      "properties": {
                        "free": {
                          "type": "integer",
                          "description": "The free memory in bytes."
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total memory in bytes."
                        },
                        "used": {
                          "type": "integer",
                          "description": "The used memory in bytes."
                        }
                      }
                    },
                    "pveversion": {
                      "type": "string",
                      "description": "The PVE version string."
                    },
                    "rootfs": {
                      "type": "object",
                      "properties": {
                        "avail": {
                          "type": "integer",
                          "description": "The available bytes in the root filesystem."
                        },
                        "free": {
                          "type": "integer",
                          "description": "The free bytes on the root filesystem."
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total size of the root filesystem in bytes."
                        },
                        "used": {
                          "type": "integer",
                          "description": "The used bytes in the root filesystem."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Reboot or shutdown a node.",
        "description": "Reboot or shutdown a node.",
        "operationId": "post_nodes_nodes_node_nodes_node_status",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "Specify the command.",
                    "enum": [
                      "reboot",
                      "shutdown"
                    ]
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/netstat": {
      "get": {
        "summary": "Read tap/vm network device interface counters",
        "description": "Read tap/vm network device interface counters",
        "operationId": "get_nodes_nodes_node_nodes_node_netstat",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/execute": {
      "post": {
        "summary": "Execute multiple commands in order, root only.",
        "description": "Execute multiple commands in order, root only.",
        "operationId": "post_nodes_nodes_node_nodes_node_execute",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commands": {
                    "type": "string",
                    "format": "pve-command-batch",
                    "description": "JSON encoded array of commands."
                  }
                },
                "required": [
                  "commands"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/wakeonlan": {
      "post": {
        "summary": "Try to wake a node via 'wake on LAN' network packet.",
        "description": "Try to wake a node via 'wake on LAN' network packet.",
        "operationId": "post_nodes_nodes_node_nodes_node_wakeonlan",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MAC address used to assemble the WoL magic packet.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "mac-addr",
                  "description": "MAC address used to assemble the WoL magic packet."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/rrd": {
      "get": {
        "summary": "Read node RRD statistics (returns PNG)",
        "description": "Read node RRD statistics (returns PNG)",
        "operationId": "get_nodes_nodes_node_nodes_node_rrd",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid-list",
              "description": "The list of datasources you want to display."
            },
            "description": "The list of datasources you want to display."
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/rrddata": {
      "get": {
        "summary": "Read node RRD statistics",
        "description": "Read node RRD statistics",
        "operationId": "get_nodes_nodes_node_nodes_node_rrddata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ]
            },
            "description": "The RRD consolidation function"
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "description": "Specify the time frame you are interested in."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/syslog": {
      "get": {
        "summary": "Read system log",
        "description": "Read system log",
        "operationId": "get_nodes_nodes_node_nodes_node_syslog",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Service ID",
              "maxLength": 128
            },
            "description": "Service ID"
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Display all log since this date-time string.",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}(:\\d{2})?)?$"
            },
            "description": "Display all log since this date-time string."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Display all log until this date-time string.",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}(:\\d{2})?)?$"
            },
            "description": "Display all log until this date-time string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/journal": {
      "get": {
        "summary": "Read Journal",
        "description": "Read Journal",
        "operationId": "get_nodes_nodes_node_nodes_node_journal",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "endcursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "End before the given Cursor. Conflicts with 'until'"
            },
            "description": "End before the given Cursor. Conflicts with 'until'"
          },
          {
            "name": "lastentries",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit to the last X lines. Conflicts with a range.",
              "minimum": 0
            },
            "description": "Limit to the last X lines. Conflicts with a range."
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display all log since this UNIX epoch. Conflicts with 'startcursor'.",
              "minimum": 0
            },
            "description": "Display all log since this UNIX epoch. Conflicts with 'startcursor'."
          },
          {
            "name": "startcursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start after the given Cursor. Conflicts with 'since'"
            },
            "description": "Start after the given Cursor. Conflicts with 'since'"
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Display all log until this UNIX epoch. Conflicts with 'endcursor'.",
              "minimum": 0
            },
            "description": "Display all log until this UNIX epoch. Conflicts with 'endcursor'."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/vncshell": {
      "post": {
        "summary": "Creates a VNC Shell proxy.",
        "description": "Creates a VNC Shell proxy.",
        "operationId": "post_nodes_nodes_node_nodes_node_vncshell",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cmd": {
                    "type": "string",
                    "description": "Run specific command or default to login (requires 'root@pam')",
                    "enum": [
                      "ceph_install",
                      "upgrade",
                      "login"
                    ],
                    "default": "login"
                  },
                  "cmd-opts": {
                    "type": "string",
                    "description": "Add parameters to a command. Encoded as null terminated strings.",
                    "default": ""
                  },
                  "height": {
                    "type": "integer",
                    "description": "sets the height of the console in pixels.",
                    "minimum": 16,
                    "maximum": 2160
                  },
                  "websocket": {
                    "type": "boolean",
                    "description": "use websocket instead of standard vnc."
                  },
                  "width": {
                    "type": "integer",
                    "description": "sets the width of the console in pixels.",
                    "minimum": 16,
                    "maximum": 4096
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/termproxy": {
      "post": {
        "summary": "Creates a VNC Shell proxy.",
        "description": "Creates a VNC Shell proxy.",
        "operationId": "post_nodes_nodes_node_nodes_node_termproxy",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cmd": {
                    "type": "string",
                    "description": "Run specific command or default to login (requires 'root@pam')",
                    "enum": [
                      "ceph_install",
                      "upgrade",
                      "login"
                    ],
                    "default": "login"
                  },
                  "cmd-opts": {
                    "type": "string",
                    "description": "Add parameters to a command. Encoded as null terminated strings.",
                    "default": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/vncwebsocket": {
      "get": {
        "summary": "Opens a websocket for VNC traffic.",
        "description": "Opens a websocket for VNC traffic.",
        "operationId": "get_nodes_nodes_node_nodes_node_vncwebsocket",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "port",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Port number returned by previous vncproxy call.",
              "minimum": 5900,
              "maximum": 5999
            },
            "description": "Port number returned by previous vncproxy call."
          },
          {
            "name": "vncticket",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Ticket from previous call to vncproxy.",
              "maxLength": 512
            },
            "description": "Ticket from previous call to vncproxy."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/spiceshell": {
      "post": {
        "summary": "Creates a SPICE shell.",
        "description": "Creates a SPICE shell.",
        "operationId": "post_nodes_nodes_node_nodes_node_spiceshell",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cmd": {
                    "type": "string",
                    "description": "Run specific command or default to login (requires 'root@pam')",
                    "enum": [
                      "ceph_install",
                      "upgrade",
                      "login"
                    ],
                    "default": "login"
                  },
                  "cmd-opts": {
                    "type": "string",
                    "description": "Add parameters to a command. Encoded as null terminated strings.",
                    "default": ""
                  },
                  "proxy": {
                    "type": "string",
                    "format": "address",
                    "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI)."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned values can be directly passed to the 'remote-viewer' application.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returned values can be directly passed to the 'remote-viewer' application."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/dns": {
      "get": {
        "summary": "Read DNS settings.",
        "description": "Read DNS settings.",
        "operationId": "get_nodes_nodes_node_nodes_node_dns",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dns1": {
                      "type": "string",
                      "description": "First name server IP address."
                    },
                    "dns2": {
                      "type": "string",
                      "description": "Second name server IP address."
                    },
                    "dns3": {
                      "type": "string",
                      "description": "Third name server IP address."
                    },
                    "search": {
                      "type": "string",
                      "description": "Search domain for host-name lookup."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Write DNS settings.",
        "description": "Write DNS settings.",
        "operationId": "put_nodes_nodes_node_nodes_node_dns",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dns1": {
                    "type": "string",
                    "format": "ip",
                    "description": "First name server IP address."
                  },
                  "dns2": {
                    "type": "string",
                    "format": "ip",
                    "description": "Second name server IP address."
                  },
                  "dns3": {
                    "type": "string",
                    "format": "ip",
                    "description": "Third name server IP address."
                  },
                  "search": {
                    "type": "string",
                    "description": "Search domain for host-name lookup."
                  }
                },
                "required": [
                  "search"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/time": {
      "get": {
        "summary": "Read server time and time zone settings.",
        "description": "Read server time and time zone settings.",
        "operationId": "get_nodes_nodes_node_nodes_node_time",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "localtime": {
                      "type": "integer",
                      "description": "Seconds since 1970-01-01 00:00:00 (local time)"
                    },
                    "time": {
                      "type": "integer",
                      "description": "Seconds since 1970-01-01 00:00:00 UTC."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Set time zone.",
        "description": "Set time zone.",
        "operationId": "put_nodes_nodes_node_nodes_node_time",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timezone": {
                    "type": "string",
                    "description": "Time zone. The file '/usr/share/zoneinfo/zone.tab' contains the list of valid names."
                  }
                },
                "required": [
                  "timezone"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/aplinfo": {
      "get": {
        "summary": "Get list of appliances.",
        "description": "Get list of appliances.",
        "operationId": "get_nodes_nodes_node_nodes_node_aplinfo",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Download appliance templates.",
        "description": "Download appliance templates.",
        "operationId": "post_nodes_nodes_node_nodes_node_aplinfo",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage where the template will be stored"
                  },
                  "template": {
                    "type": "string",
                    "description": "The template which will downloaded",
                    "maxLength": 255
                  }
                },
                "required": [
                  "storage",
                  "template"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/query-url-metadata": {
      "get": {
        "summary": "Query metadata of an URL: file size, file name and mime type.",
        "description": "Query metadata of an URL: file size, file name and mime type.",
        "operationId": "get_nodes_nodes_node_nodes_node_query-url-metadata",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The URL to query the metadata from.",
              "pattern": "https?://.*"
            },
            "description": "The URL to query the metadata from."
          },
          {
            "name": "verify-certificates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If false, no SSL/TLS certificates will be verified.",
              "default": true
            },
            "description": "If false, no SSL/TLS certificates will be verified."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    },
                    "mimetype": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/report": {
      "get": {
        "summary": "Gather various systems information about a node",
        "description": "Gather various systems information about a node",
        "operationId": "get_nodes_nodes_node_nodes_node_report",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/startall": {
      "post": {
        "summary": "Start all VMs and containers located on this node (by default only those with onboot=1).",
        "description": "Start all VMs and containers located on this node (by default only those with onboot=1).",
        "operationId": "post_nodes_nodes_node_nodes_node_startall",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Issue start command even if virtual guest have 'onboot' not set or set to off.",
                    "default": "off"
                  },
                  "vms": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Only consider guests from this comma separated list of VMIDs."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/stopall": {
      "post": {
        "summary": "Stop all VMs and Containers.",
        "description": "Stop all VMs and Containers.",
        "operationId": "post_nodes_nodes_node_nodes_node_stopall",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force-stop": {
                    "type": "boolean",
                    "description": "Force a hard-stop after the timeout.",
                    "default": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout for each guest shutdown task. Depending on `force-stop`, the shutdown gets then simply aborted or a hard-stop is forced.",
                    "minimum": 0,
                    "maximum": 7200,
                    "default": 180
                  },
                  "vms": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Only consider Guests with these IDs."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/suspendall": {
      "post": {
        "summary": "Suspend all VMs.",
        "description": "Suspend all VMs.",
        "operationId": "post_nodes_nodes_node_nodes_node_suspendall",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vms": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Only consider Guests with these IDs."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/migrateall": {
      "post": {
        "summary": "Migrate all VMs and Containers.",
        "description": "Migrate all VMs and Containers.",
        "operationId": "post_nodes_nodes_node_nodes_node_migrateall",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxworkers": {
                    "type": "integer",
                    "description": "Maximal number of parallel migration job. If not set, uses'max_workers' from datacenter.cfg. One of both must be set!",
                    "minimum": 1
                  },
                  "target": {
                    "type": "string",
                    "format": "pve-node",
                    "description": "Target node."
                  },
                  "vms": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "Only consider Guests with these IDs."
                  },
                  "with-local-disks": {
                    "type": "boolean",
                    "description": "Enable live storage migration for local disk"
                  }
                },
                "required": [
                  "target"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/nodes/nodes/{node}/nodes/{node}/hosts": {
      "get": {
        "summary": "Get the content of /etc/hosts.",
        "description": "Get the content of /etc/hosts.",
        "operationId": "get_nodes_nodes_node_nodes_node_hosts",
        "tags": [
          "Nodes"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The content of /etc/hosts."
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Write /etc/hosts.",
        "description": "Write /etc/hosts.",
        "operationId": "post_nodes_nodes_node_nodes_node_hosts",
        "tags": [
          "Nodes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "The target content of /etc/hosts."
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxNodeId"
            },
            "description": "The node parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/storage": {
      "get": {
        "summary": "Storage index.",
        "description": "Storage index.",
        "operationId": "get_storage",
        "tags": [
          "Storage"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only list storage of specific type",
              "enum": [
                "btrfs",
                "cephfs",
                "cifs",
                "dir",
                "esxi",
                "glusterfs",
                "iscsi",
                "iscsidirect",
                "lvm",
                "lvmthin",
                "nfs",
                "pbs",
                "rbd",
                "zfs",
                "zfspool"
              ]
            },
            "description": "Only list storage of specific type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "storage": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create a new storage.",
        "description": "Create a new storage.",
        "operationId": "post_storage",
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authsupported": {
                    "type": "string",
                    "description": "Authsupported."
                  },
                  "base": {
                    "type": "string",
                    "format": "pve-volume-id",
                    "description": "Base volume. This volume is automatically activated."
                  },
                  "blocksize": {
                    "type": "string",
                    "description": "block size"
                  },
                  "bwlimit": {
                    "type": "string",
                    "description": "Set I/O bandwidth limit for various operations (in KiB/s)."
                  },
                  "comstar_hg": {
                    "type": "string",
                    "description": "host group for comstar views"
                  },
                  "comstar_tg": {
                    "type": "string",
                    "description": "target group for comstar views"
                  },
                  "content": {
                    "type": "string",
                    "format": "pve-storage-content-list",
                    "description": "Allowed content types.\n\nNOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs.\n"
                  },
                  "content-dirs": {
                    "type": "string",
                    "format": "pve-dir-override-list",
                    "description": "Overrides for default content type directories."
                  },
                  "create-base-path": {
                    "type": "boolean",
                    "description": "Create the base directory if it doesn't exist.",
                    "default": "yes"
                  },
                  "create-subdirs": {
                    "type": "boolean",
                    "description": "Populate the directory with the default structure.",
                    "default": "yes"
                  },
                  "data-pool": {
                    "type": "string",
                    "description": "Data Pool (for erasure coding only)"
                  },
                  "datastore": {
                    "type": "string",
                    "description": "Proxmox Backup Server datastore name."
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the storage."
                  },
                  "domain": {
                    "type": "string",
                    "description": "CIFS domain.",
                    "maxLength": 256
                  },
                  "encryption-key": {
                    "type": "string",
                    "description": "Encryption key. Use 'autogen' to generate one automatically without passphrase."
                  },
                  "export": {
                    "type": "string",
                    "format": "pve-storage-path",
                    "description": "NFS export path."
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "format": {
                    "type": "string",
                    "description": "Default image format.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "subvol",
                      "vmdk"
                    ]
                  },
                  "fs-name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The Ceph filesystem name."
                  },
                  "fuse": {
                    "type": "boolean",
                    "description": "Mount CephFS through FUSE."
                  },
                  "is_mountpoint": {
                    "type": "string",
                    "description": "Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.",
                    "default": "no"
                  },
                  "iscsiprovider": {
                    "type": "string",
                    "description": "iscsi provider"
                  },
                  "keyring": {
                    "type": "string",
                    "description": "Client keyring contents (for external clusters)."
                  },
                  "krbd": {
                    "type": "boolean",
                    "description": "Always access rbd through krbd kernel module.",
                    "default": false
                  },
                  "lio_tpg": {
                    "type": "string",
                    "description": "target portal group for Linux LIO targets"
                  },
                  "master-pubkey": {
                    "type": "string",
                    "description": "Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup."
                  },
                  "max-protected-backups": {
                    "type": "integer",
                    "description": "Maximal number of protected backups per guest. Use '-1' for unlimited.",
                    "minimum": -1
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per VM. Use '0' for unlimited.",
                    "minimum": 0
                  },
                  "mkdir": {
                    "type": "boolean",
                    "description": "Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.",
                    "default": "yes"
                  },
                  "monhost": {
                    "type": "string",
                    "format": "pve-storage-portal-dns-list",
                    "description": "IP addresses of monitors (for external clusters)."
                  },
                  "mountpoint": {
                    "type": "string",
                    "format": "pve-storage-path",
                    "description": "mount point"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace."
                  },
                  "nocow": {
                    "type": "boolean",
                    "description": "Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.",
                    "default": false
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of nodes for which the storage configuration applies."
                  },
                  "nowritecache": {
                    "type": "boolean",
                    "description": "disable write caching on the target"
                  },
                  "options": {
                    "type": "string",
                    "format": "pve-storage-options",
                    "description": "NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for accessing the share/datastore.",
                    "maxLength": 256
                  },
                  "path": {
                    "type": "string",
                    "format": "pve-storage-path",
                    "description": "File system path."
                  },
                  "pool": {
                    "type": "string",
                    "description": "Pool."
                  },
                  "port": {
                    "type": "integer",
                    "description": "Use this port to connect to the storage instead of the default one (for example, with PBS or ESXi). For NFS and CIFS, use the 'options' option to configure the port via the mount options.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "portal": {
                    "type": "string",
                    "format": "pve-storage-portal-dns",
                    "description": "iSCSI portal (IP or DNS name with optional port)."
                  },
                  "preallocation": {
                    "type": "string",
                    "description": "Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.",
                    "enum": [
                      "off",
                      "metadata",
                      "falloc",
                      "full"
                    ],
                    "default": "metadata"
                  },
                  "prune-backups": {
                    "type": "string",
                    "format": "prune-backups",
                    "description": "The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups."
                  },
                  "saferemove": {
                    "type": "boolean",
                    "description": "Zero-out data when removing LVs."
                  },
                  "saferemove_throughput": {
                    "type": "string",
                    "description": "Wipe throughput (cstream -t parameter value)."
                  },
                  "server": {
                    "type": "string",
                    "format": "pve-storage-server",
                    "description": "Server IP or DNS name."
                  },
                  "server2": {
                    "type": "string",
                    "format": "pve-storage-server",
                    "description": "Backup volfile server IP or DNS name."
                  },
                  "share": {
                    "type": "string",
                    "description": "CIFS share."
                  },
                  "shared": {
                    "type": "boolean",
                    "description": "Indicate that this is a single storage with the same contents on all nodes (or all listed in the 'nodes' option). It will not make the contents of a local storage automatically accessible to other nodes, it just marks an already shared storage as such!"
                  },
                  "skip-cert-verification": {
                    "type": "boolean",
                    "description": "Disable TLS certificate verification, only enable on fully trusted networks!",
                    "default": "false"
                  },
                  "smbversion": {
                    "type": "string",
                    "description": "SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.",
                    "enum": [
                      "default",
                      "2.0",
                      "2.1",
                      "3",
                      "3.0",
                      "3.11"
                    ],
                    "default": "default"
                  },
                  "sparse": {
                    "type": "boolean",
                    "description": "use sparse volumes"
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id",
                    "description": "The storage identifier."
                  },
                  "subdir": {
                    "type": "string",
                    "format": "pve-storage-path",
                    "description": "Subdir to mount."
                  },
                  "tagged_only": {
                    "type": "boolean",
                    "description": "Only use logical volumes tagged with 'pve-vm-ID'."
                  },
                  "target": {
                    "type": "string",
                    "description": "iSCSI target."
                  },
                  "thinpool": {
                    "type": "string",
                    "format": "pve-storage-vgname",
                    "description": "LVM thin pool LV name."
                  },
                  "transport": {
                    "type": "string",
                    "description": "Gluster transport: tcp or rdma",
                    "enum": [
                      "tcp",
                      "rdma",
                      "unix"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "description": "Storage type.",
                    "enum": [
                      "btrfs",
                      "cephfs",
                      "cifs",
                      "dir",
                      "esxi",
                      "glusterfs",
                      "iscsi",
                      "iscsidirect",
                      "lvm",
                      "lvmthin",
                      "nfs",
                      "pbs",
                      "rbd",
                      "zfs",
                      "zfspool"
                    ]
                  },
                  "username": {
                    "type": "string",
                    "description": "RBD Id."
                  },
                  "vgname": {
                    "type": "string",
                    "format": "pve-storage-vgname",
                    "description": "Volume group name."
                  },
                  "volume": {
                    "type": "string",
                    "description": "Glusterfs Volume."
                  }
                },
                "required": [
                  "storage",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object",
                      "properties": {
                        "encryption-key": {
                          "type": "string",
                          "description": "The, possible auto-generated, encryption-key."
                        }
                      },
                      "description": "Partial, possible server generated, configuration properties."
                    },
                    "storage": {
                      "type": "string",
                      "description": "The ID of the created storage."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the created storage."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/storage/storage/{storage}": {
      "delete": {
        "summary": "Delete storage configuration.",
        "description": "Delete storage configuration.",
        "operationId": "delete_storage_storage_storage",
        "tags": [
          "Storage"
        ],
        "parameters": [
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Read storage configuration.",
        "description": "Read storage configuration.",
        "operationId": "get_storage_storage_storage",
        "tags": [
          "Storage"
        ],
        "parameters": [
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update storage configuration.",
        "description": "Update storage configuration.",
        "operationId": "put_storage_storage_storage",
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blocksize": {
                    "type": "string",
                    "description": "block size"
                  },
                  "bwlimit": {
                    "type": "string",
                    "description": "Set I/O bandwidth limit for various operations (in KiB/s)."
                  },
                  "comstar_hg": {
                    "type": "string",
                    "description": "host group for comstar views"
                  },
                  "comstar_tg": {
                    "type": "string",
                    "description": "target group for comstar views"
                  },
                  "content": {
                    "type": "string",
                    "format": "pve-storage-content-list",
                    "description": "Allowed content types.\n\nNOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs.\n"
                  },
                  "content-dirs": {
                    "type": "string",
                    "format": "pve-dir-override-list",
                    "description": "Overrides for default content type directories."
                  },
                  "create-base-path": {
                    "type": "boolean",
                    "description": "Create the base directory if it doesn't exist.",
                    "default": "yes"
                  },
                  "create-subdirs": {
                    "type": "boolean",
                    "description": "Populate the directory with the default structure.",
                    "default": "yes"
                  },
                  "data-pool": {
                    "type": "string",
                    "description": "Data Pool (for erasure coding only)"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the storage."
                  },
                  "domain": {
                    "type": "string",
                    "description": "CIFS domain.",
                    "maxLength": 256
                  },
                  "encryption-key": {
                    "type": "string",
                    "description": "Encryption key. Use 'autogen' to generate one automatically without passphrase."
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "format": {
                    "type": "string",
                    "description": "Default image format.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "subvol",
                      "vmdk"
                    ]
                  },
                  "fs-name": {
                    "type": "string",
                    "format": "pve-configid",
                    "description": "The Ceph filesystem name."
                  },
                  "fuse": {
                    "type": "boolean",
                    "description": "Mount CephFS through FUSE."
                  },
                  "is_mountpoint": {
                    "type": "string",
                    "description": "Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.",
                    "default": "no"
                  },
                  "keyring": {
                    "type": "string",
                    "description": "Client keyring contents (for external clusters)."
                  },
                  "krbd": {
                    "type": "boolean",
                    "description": "Always access rbd through krbd kernel module.",
                    "default": false
                  },
                  "lio_tpg": {
                    "type": "string",
                    "description": "target portal group for Linux LIO targets"
                  },
                  "master-pubkey": {
                    "type": "string",
                    "description": "Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup."
                  },
                  "max-protected-backups": {
                    "type": "integer",
                    "description": "Maximal number of protected backups per guest. Use '-1' for unlimited.",
                    "minimum": -1
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per VM. Use '0' for unlimited.",
                    "minimum": 0
                  },
                  "mkdir": {
                    "type": "boolean",
                    "description": "Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.",
                    "default": "yes"
                  },
                  "monhost": {
                    "type": "string",
                    "format": "pve-storage-portal-dns-list",
                    "description": "IP addresses of monitors (for external clusters)."
                  },
                  "mountpoint": {
                    "type": "string",
                    "format": "pve-storage-path",
                    "description": "mount point"
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace."
                  },
                  "nocow": {
                    "type": "boolean",
                    "description": "Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.",
                    "default": false
                  },
                  "nodes": {
                    "type": "string",
                    "format": "pve-node-list",
                    "description": "List of nodes for which the storage configuration applies."
                  },
                  "nowritecache": {
                    "type": "boolean",
                    "description": "disable write caching on the target"
                  },
                  "options": {
                    "type": "string",
                    "format": "pve-storage-options",
                    "description": "NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for accessing the share/datastore.",
                    "maxLength": 256
                  },
                  "pool": {
                    "type": "string",
                    "description": "Pool."
                  },
                  "port": {
                    "type": "integer",
                    "description": "Use this port to connect to the storage instead of the default one (for example, with PBS or ESXi). For NFS and CIFS, use the 'options' option to configure the port via the mount options.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "preallocation": {
                    "type": "string",
                    "description": "Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.",
                    "enum": [
                      "off",
                      "metadata",
                      "falloc",
                      "full"
                    ],
                    "default": "metadata"
                  },
                  "prune-backups": {
                    "type": "string",
                    "format": "prune-backups",
                    "description": "The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups."
                  },
                  "saferemove": {
                    "type": "boolean",
                    "description": "Zero-out data when removing LVs."
                  },
                  "saferemove_throughput": {
                    "type": "string",
                    "description": "Wipe throughput (cstream -t parameter value)."
                  },
                  "server": {
                    "type": "string",
                    "format": "pve-storage-server",
                    "description": "Server IP or DNS name."
                  },
                  "server2": {
                    "type": "string",
                    "format": "pve-storage-server",
                    "description": "Backup volfile server IP or DNS name."
                  },
                  "shared": {
                    "type": "boolean",
                    "description": "Indicate that this is a single storage with the same contents on all nodes (or all listed in the 'nodes' option). It will not make the contents of a local storage automatically accessible to other nodes, it just marks an already shared storage as such!"
                  },
                  "skip-cert-verification": {
                    "type": "boolean",
                    "description": "Disable TLS certificate verification, only enable on fully trusted networks!",
                    "default": "false"
                  },
                  "smbversion": {
                    "type": "string",
                    "description": "SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.",
                    "enum": [
                      "default",
                      "2.0",
                      "2.1",
                      "3",
                      "3.0",
                      "3.11"
                    ],
                    "default": "default"
                  },
                  "sparse": {
                    "type": "boolean",
                    "description": "use sparse volumes"
                  },
                  "subdir": {
                    "type": "string",
                    "format": "pve-storage-path",
                    "description": "Subdir to mount."
                  },
                  "tagged_only": {
                    "type": "boolean",
                    "description": "Only use logical volumes tagged with 'pve-vm-ID'."
                  },
                  "transport": {
                    "type": "string",
                    "description": "Gluster transport: tcp or rdma",
                    "enum": [
                      "tcp",
                      "rdma",
                      "unix"
                    ]
                  },
                  "username": {
                    "type": "string",
                    "description": "RBD Id."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxStorageId"
            },
            "description": "The storage parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object",
                      "properties": {
                        "encryption-key": {
                          "type": "string",
                          "description": "The, possible auto-generated, encryption-key."
                        }
                      },
                      "description": "Partial, possible server generated, configuration properties."
                    },
                    "storage": {
                      "type": "string",
                      "description": "The ID of the created storage."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the created storage."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_access",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/users": {
      "get": {
        "summary": "User index.",
        "description": "User index.",
        "operationId": "get_access_access_users",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Optional filter for enable property."
            },
            "description": "Optional filter for enable property."
          },
          {
            "name": "full",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include group and token information.",
              "default": false
            },
            "description": "Include group and token information."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email-opt"
                      },
                      "enable": {
                        "type": "boolean",
                        "description": "Enable the account (default). You can set this to '0' to disable the account"
                      },
                      "expire": {
                        "type": "integer",
                        "description": "Account expiration date (seconds since epoch). '0' means no expiration date."
                      },
                      "firstname": {
                        "type": "string"
                      },
                      "groups": {
                        "type": "string",
                        "format": "pve-groupid-list"
                      },
                      "keys": {
                        "type": "string",
                        "description": "Keys for two factor auth (yubico)."
                      },
                      "lastname": {
                        "type": "string"
                      },
                      "realm-type": {
                        "type": "string",
                        "format": "pve-realm",
                        "description": "The type of the users realm"
                      },
                      "tfa-locked-until": {
                        "type": "integer",
                        "description": "Contains a timestamp until when a user is locked out of 2nd factors."
                      },
                      "tokens": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string"
                            },
                            "expire": {
                              "type": "integer",
                              "description": "API token expiration date (seconds since epoch). '0' means no expiration date."
                            },
                            "privsep": {
                              "type": "boolean",
                              "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user."
                            },
                            "tokenid": {
                              "type": "string",
                              "description": "User-specific token identifier."
                            }
                          }
                        }
                      },
                      "totp-locked": {
                        "type": "boolean",
                        "description": "True if the user is currently locked out of TOTP factors."
                      },
                      "userid": {
                        "type": "string",
                        "format": "pve-userid",
                        "description": "Full User ID, in the `name@realm` format."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new user.",
        "description": "Create new user.",
        "operationId": "post_access_access_users",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "email": {
                    "type": "string",
                    "format": "email-opt",
                    "maxLength": 254
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable the account (default). You can set this to '0' to disable the account",
                    "default": true
                  },
                  "expire": {
                    "type": "integer",
                    "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                    "minimum": 0
                  },
                  "firstname": {
                    "type": "string",
                    "maxLength": 1024
                  },
                  "groups": {
                    "type": "string",
                    "format": "pve-groupid-list"
                  },
                  "keys": {
                    "type": "string",
                    "description": "Keys for two factor auth (yubico).",
                    "pattern": "[0-9a-zA-Z!=]{0,4096}"
                  },
                  "lastname": {
                    "type": "string",
                    "maxLength": 1024
                  },
                  "password": {
                    "type": "string",
                    "description": "Initial password.",
                    "minLength": 8,
                    "maxLength": 64
                  },
                  "userid": {
                    "type": "string",
                    "format": "pve-userid",
                    "description": "Full User ID, in the `name@realm` format.",
                    "maxLength": 64
                  }
                },
                "required": [
                  "userid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/users/access/users/{userid}": {
      "delete": {
        "summary": "Delete user.",
        "description": "Delete user.",
        "operationId": "delete_access_access_users_access_users_userid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get user configuration.",
        "description": "Get user configuration.",
        "operationId": "get_access_access_users_access_users_userid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email-opt"
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Enable the account (default). You can set this to '0' to disable the account"
                    },
                    "expire": {
                      "type": "integer",
                      "description": "Account expiration date (seconds since epoch). '0' means no expiration date."
                    },
                    "firstname": {
                      "type": "string"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "pve-groupid"
                      }
                    },
                    "keys": {
                      "type": "string",
                      "description": "Keys for two factor auth (yubico)."
                    },
                    "lastname": {
                      "type": "string"
                    },
                    "tokens": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update user configuration.",
        "description": "Update user configuration.",
        "operationId": "put_access_access_users_access_users_userid",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "append": {
                    "type": "boolean"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 2048
                  },
                  "email": {
                    "type": "string",
                    "format": "email-opt",
                    "maxLength": 254
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable the account (default). You can set this to '0' to disable the account",
                    "default": true
                  },
                  "expire": {
                    "type": "integer",
                    "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                    "minimum": 0
                  },
                  "firstname": {
                    "type": "string",
                    "maxLength": 1024
                  },
                  "groups": {
                    "type": "string",
                    "format": "pve-groupid-list"
                  },
                  "keys": {
                    "type": "string",
                    "description": "Keys for two factor auth (yubico).",
                    "pattern": "[0-9a-zA-Z!=]{0,4096}"
                  },
                  "lastname": {
                    "type": "string",
                    "maxLength": 1024
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/users/access/users/{userid}/access/users/{userid}/tfa": {
      "get": {
        "summary": "Get user TFA types (Personal and Realm).",
        "description": "Get user TFA types (Personal and Realm).",
        "operationId": "get_access_access_users_access_users_userid_access_users_userid_tfa",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "multiple",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Request all entries as an array.",
              "default": false
            },
            "description": "Request all entries as an array."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "realm": {
                      "type": "string",
                      "description": "The type of TFA the users realm has set, if any."
                    },
                    "types": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A TFA type."
                      },
                      "description": "Array of the user configured TFA types, if any. Only available if 'multiple' was not passed."
                    },
                    "user": {
                      "type": "string",
                      "description": "The type of TFA the user has set, if any. Only set if 'multiple' was not passed."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/users/access/users/{userid}/access/users/{userid}/unlock-tfa": {
      "put": {
        "summary": "Unlock a user's TFA authentication.",
        "description": "Unlock a user's TFA authentication.",
        "operationId": "put_access_access_users_access_users_userid_access_users_userid_unlock-tfa",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/users/access/users/{userid}/access/users/{userid}/token": {
      "get": {
        "summary": "Get user API tokens.",
        "description": "Get user API tokens.",
        "operationId": "get_access_access_users_access_users_userid_access_users_userid_token",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "expire": {
                        "type": "integer",
                        "description": "API token expiration date (seconds since epoch). '0' means no expiration date."
                      },
                      "privsep": {
                        "type": "boolean",
                        "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user."
                      },
                      "tokenid": {
                        "type": "string",
                        "description": "User-specific token identifier."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/users/access/users/{userid}/access/users/{userid}/token/access/users/{userid}/token/{tokenid}": {
      "delete": {
        "summary": "Remove API token for a specific user.",
        "description": "Remove API token for a specific user.",
        "operationId": "delete_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tokenid parameter"
            },
            "description": "The tokenid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get specific API token information.",
        "description": "Get specific API token information.",
        "operationId": "get_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tokenid parameter"
            },
            "description": "The tokenid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "expire": {
                      "type": "integer",
                      "description": "API token expiration date (seconds since epoch). '0' means no expiration date."
                    },
                    "privsep": {
                      "type": "boolean",
                      "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!",
        "description": "Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!",
        "operationId": "post_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "expire": {
                    "type": "integer",
                    "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                    "minimum": 0,
                    "default": "same as user"
                  },
                  "privsep": {
                    "type": "boolean",
                    "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tokenid parameter"
            },
            "description": "The tokenid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "full-tokenid": {
                      "type": "string",
                      "description": "The full token id."
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string"
                        },
                        "expire": {
                          "type": "integer",
                          "description": "API token expiration date (seconds since epoch). '0' means no expiration date."
                        },
                        "privsep": {
                          "type": "boolean",
                          "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user."
                        }
                      }
                    },
                    "value": {
                      "type": "string",
                      "description": "API token value used for authentication."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update API token for a specific user.",
        "description": "Update API token for a specific user.",
        "operationId": "put_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "expire": {
                    "type": "integer",
                    "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                    "minimum": 0,
                    "default": "same as user"
                  },
                  "privsep": {
                    "type": "boolean",
                    "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The tokenid parameter"
            },
            "description": "The tokenid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated token information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "expire": {
                      "type": "integer",
                      "description": "API token expiration date (seconds since epoch). '0' means no expiration date."
                    },
                    "privsep": {
                      "type": "boolean",
                      "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user."
                    }
                  },
                  "description": "Updated token information."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/groups": {
      "get": {
        "summary": "Group index.",
        "description": "Group index.",
        "operationId": "get_access_access_groups",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "groupid": {
                        "type": "string",
                        "format": "pve-groupid"
                      },
                      "users": {
                        "type": "string",
                        "format": "pve-userid-list",
                        "description": "list of users which form this group"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new group.",
        "description": "Create new group.",
        "operationId": "post_access_access_groups",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "groupid": {
                    "type": "string",
                    "format": "pve-groupid"
                  }
                },
                "required": [
                  "groupid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/groups/access/groups/{groupid}": {
      "delete": {
        "summary": "Delete group.",
        "description": "Delete group.",
        "operationId": "delete_access_access_groups_access_groups_groupid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The groupid parameter"
            },
            "description": "The groupid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get group configuration.",
        "description": "Get group configuration.",
        "operationId": "get_access_access_groups_access_groups_groupid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The groupid parameter"
            },
            "description": "The groupid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "pve-userid",
                        "description": "Full User ID, in the `name@realm` format."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update group data.",
        "description": "Update group data.",
        "operationId": "put_access_access_groups_access_groups_groupid",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The groupid parameter"
            },
            "description": "The groupid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/roles": {
      "get": {
        "summary": "Role index.",
        "description": "Role index.",
        "operationId": "get_access_access_roles",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "privs": {
                        "type": "string",
                        "format": "pve-priv-list"
                      },
                      "roleid": {
                        "type": "string",
                        "format": "pve-roleid"
                      },
                      "special": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new role.",
        "description": "Create new role.",
        "operationId": "post_access_access_roles",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privs": {
                    "type": "string",
                    "format": "pve-priv-list"
                  },
                  "roleid": {
                    "type": "string",
                    "format": "pve-roleid"
                  }
                },
                "required": [
                  "roleid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/roles/access/roles/{roleid}": {
      "delete": {
        "summary": "Delete role.",
        "description": "Delete role.",
        "operationId": "delete_access_access_roles_access_roles_roleid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "roleid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The roleid parameter"
            },
            "description": "The roleid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get role configuration.",
        "description": "Get role configuration.",
        "operationId": "get_access_access_roles_access_roles_roleid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "roleid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The roleid parameter"
            },
            "description": "The roleid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Datastore.Allocate": {
                      "type": "boolean"
                    },
                    "Datastore.AllocateSpace": {
                      "type": "boolean"
                    },
                    "Datastore.AllocateTemplate": {
                      "type": "boolean"
                    },
                    "Datastore.Audit": {
                      "type": "boolean"
                    },
                    "Group.Allocate": {
                      "type": "boolean"
                    },
                    "Mapping.Audit": {
                      "type": "boolean"
                    },
                    "Mapping.Modify": {
                      "type": "boolean"
                    },
                    "Mapping.Use": {
                      "type": "boolean"
                    },
                    "Permissions.Modify": {
                      "type": "boolean"
                    },
                    "Pool.Allocate": {
                      "type": "boolean"
                    },
                    "Pool.Audit": {
                      "type": "boolean"
                    },
                    "Realm.Allocate": {
                      "type": "boolean"
                    },
                    "Realm.AllocateUser": {
                      "type": "boolean"
                    },
                    "SDN.Allocate": {
                      "type": "boolean"
                    },
                    "SDN.Audit": {
                      "type": "boolean"
                    },
                    "SDN.Use": {
                      "type": "boolean"
                    },
                    "Sys.AccessNetwork": {
                      "type": "boolean"
                    },
                    "Sys.Audit": {
                      "type": "boolean"
                    },
                    "Sys.Console": {
                      "type": "boolean"
                    },
                    "Sys.Incoming": {
                      "type": "boolean"
                    },
                    "Sys.Modify": {
                      "type": "boolean"
                    },
                    "Sys.PowerMgmt": {
                      "type": "boolean"
                    },
                    "Sys.Syslog": {
                      "type": "boolean"
                    },
                    "User.Modify": {
                      "type": "boolean"
                    },
                    "VM.Allocate": {
                      "type": "boolean"
                    },
                    "VM.Audit": {
                      "type": "boolean"
                    },
                    "VM.Backup": {
                      "type": "boolean"
                    },
                    "VM.Clone": {
                      "type": "boolean"
                    },
                    "VM.Config.CDROM": {
                      "type": "boolean"
                    },
                    "VM.Config.CPU": {
                      "type": "boolean"
                    },
                    "VM.Config.Cloudinit": {
                      "type": "boolean"
                    },
                    "VM.Config.Disk": {
                      "type": "boolean"
                    },
                    "VM.Config.HWType": {
                      "type": "boolean"
                    },
                    "VM.Config.Memory": {
                      "type": "boolean"
                    },
                    "VM.Config.Network": {
                      "type": "boolean"
                    },
                    "VM.Config.Options": {
                      "type": "boolean"
                    },
                    "VM.Console": {
                      "type": "boolean"
                    },
                    "VM.Migrate": {
                      "type": "boolean"
                    },
                    "VM.Monitor": {
                      "type": "boolean"
                    },
                    "VM.PowerMgmt": {
                      "type": "boolean"
                    },
                    "VM.Snapshot": {
                      "type": "boolean"
                    },
                    "VM.Snapshot.Rollback": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update an existing role.",
        "description": "Update an existing role.",
        "operationId": "put_access_access_roles_access_roles_roleid",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "append": {
                    "type": "boolean"
                  },
                  "privs": {
                    "type": "string",
                    "format": "pve-priv-list"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "roleid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The roleid parameter"
            },
            "description": "The roleid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/acl": {
      "get": {
        "summary": "Get Access Control List (ACLs).",
        "description": "Get Access Control List (ACLs).",
        "operationId": "get_access_access_acl",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "Access control path"
                      },
                      "propagate": {
                        "type": "boolean",
                        "description": "Allow to propagate (inherit) permissions."
                      },
                      "roleid": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "ugid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update Access Control List (add or remove permissions).",
        "description": "Update Access Control List (add or remove permissions).",
        "operationId": "put_access_access_acl",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "boolean",
                    "description": "Remove permissions (instead of adding it)."
                  },
                  "groups": {
                    "type": "string",
                    "format": "pve-groupid-list",
                    "description": "List of groups."
                  },
                  "path": {
                    "type": "string",
                    "description": "Access control path"
                  },
                  "propagate": {
                    "type": "boolean",
                    "description": "Allow to propagate (inherit) permissions.",
                    "default": true
                  },
                  "roles": {
                    "type": "string",
                    "format": "pve-roleid-list",
                    "description": "List of roles."
                  },
                  "tokens": {
                    "type": "string",
                    "format": "pve-tokenid-list",
                    "description": "List of API tokens."
                  },
                  "users": {
                    "type": "string",
                    "format": "pve-userid-list",
                    "description": "List of users."
                  }
                },
                "required": [
                  "path",
                  "roles"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/domains": {
      "get": {
        "summary": "Authentication domain index.",
        "description": "Authentication domain index.",
        "operationId": "get_access_access_domains",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment. The GUI use this text when you select a domain (Realm) on the login window."
                      },
                      "realm": {
                        "type": "string"
                      },
                      "tfa": {
                        "type": "string",
                        "description": "Two-factor authentication provider."
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Add an authentication server.",
        "description": "Add an authentication server.",
        "operationId": "post_access_access_domains",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acr-values": {
                    "type": "string",
                    "description": "Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.",
                    "pattern": "^[^\\x00-\\x1F\\x7F <>#\"]*$"
                  },
                  "autocreate": {
                    "type": "boolean",
                    "description": "Automatically create users if they do not exist.",
                    "default": false
                  },
                  "base_dn": {
                    "type": "string",
                    "description": "LDAP base domain name",
                    "maxLength": 256
                  },
                  "bind_dn": {
                    "type": "string",
                    "description": "LDAP bind domain name",
                    "maxLength": 256
                  },
                  "capath": {
                    "type": "string",
                    "description": "Path to the CA certificate store",
                    "default": "/etc/ssl/certs"
                  },
                  "case-sensitive": {
                    "type": "boolean",
                    "description": "username is case-sensitive",
                    "default": true
                  },
                  "cert": {
                    "type": "string",
                    "description": "Path to the client certificate"
                  },
                  "certkey": {
                    "type": "string",
                    "description": "Path to the client certificate key"
                  },
                  "check-connection": {
                    "type": "boolean",
                    "description": "Check bind connection to the server.",
                    "default": false
                  },
                  "client-id": {
                    "type": "string",
                    "description": "OpenID Client ID",
                    "maxLength": 256
                  },
                  "client-key": {
                    "type": "string",
                    "description": "OpenID Client Key",
                    "maxLength": 256
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Use this as default realm"
                  },
                  "domain": {
                    "type": "string",
                    "description": "AD domain name",
                    "maxLength": 256,
                    "pattern": "\\S+"
                  },
                  "filter": {
                    "type": "string",
                    "description": "LDAP filter for user sync.",
                    "maxLength": 2048
                  },
                  "group_classes": {
                    "type": "string",
                    "format": "ldap-simple-attr-list",
                    "description": "The objectclasses for groups."
                  },
                  "group_dn": {
                    "type": "string",
                    "description": "LDAP base domain name for group sync. If not set, the base_dn will be used.",
                    "maxLength": 256
                  },
                  "group_filter": {
                    "type": "string",
                    "description": "LDAP filter for group sync.",
                    "maxLength": 2048
                  },
                  "group_name_attr": {
                    "type": "string",
                    "format": "ldap-simple-attr",
                    "description": "LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.",
                    "maxLength": 256
                  },
                  "groups-autocreate": {
                    "type": "boolean",
                    "description": "Automatically create groups if they do not exist.",
                    "default": false
                  },
                  "groups-claim": {
                    "type": "string",
                    "description": "OpenID claim used to retrieve groups with.",
                    "maxLength": 256
                  },
                  "groups-overwrite": {
                    "type": "boolean",
                    "description": "All groups will be overwritten for the user on login.",
                    "default": false
                  },
                  "issuer-url": {
                    "type": "string",
                    "description": "OpenID Issuer Url",
                    "maxLength": 256
                  },
                  "mode": {
                    "type": "string",
                    "description": "LDAP protocol mode.",
                    "enum": [
                      "ldap",
                      "ldaps",
                      "ldap+starttls"
                    ],
                    "default": "ldap"
                  },
                  "password": {
                    "type": "string",
                    "description": "LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'."
                  },
                  "port": {
                    "type": "integer",
                    "description": "Server port.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "prompt": {
                    "type": "string",
                    "description": "Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.",
                    "pattern": "(?:none|login|consent|select_account|\\S+)"
                  },
                  "query-userinfo": {
                    "type": "boolean",
                    "description": "Enables querying the userinfo endpoint for claims values.",
                    "default": true
                  },
                  "realm": {
                    "type": "string",
                    "format": "pve-realm",
                    "description": "Authentication domain ID",
                    "maxLength": 32
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.",
                    "default": "email profile"
                  },
                  "secure": {
                    "type": "boolean",
                    "description": "Use secure LDAPS protocol. DEPRECATED: use 'mode' instead."
                  },
                  "server1": {
                    "type": "string",
                    "format": "address",
                    "description": "Server IP address (or DNS name)",
                    "maxLength": 256
                  },
                  "server2": {
                    "type": "string",
                    "format": "address",
                    "description": "Fallback Server IP address (or DNS name)",
                    "maxLength": 256
                  },
                  "sslversion": {
                    "type": "string",
                    "description": "LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!",
                    "enum": [
                      "tlsv1",
                      "tlsv1_1",
                      "tlsv1_2",
                      "tlsv1_3"
                    ]
                  },
                  "sync-defaults-options": {
                    "type": "string",
                    "format": "realm-sync-options",
                    "description": "The default options for behavior of synchronizations."
                  },
                  "sync_attributes": {
                    "type": "string",
                    "description": "Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.",
                    "pattern": "\\w+=[^,]+(,\\s*\\w+=[^,]+)*"
                  },
                  "tfa": {
                    "type": "string",
                    "format": "pve-tfa-config",
                    "description": "Use Two-factor authentication.",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "description": "Realm type.",
                    "enum": [
                      "ad",
                      "ldap",
                      "openid",
                      "pam",
                      "pve"
                    ]
                  },
                  "user_attr": {
                    "type": "string",
                    "description": "LDAP user attribute name",
                    "maxLength": 256,
                    "pattern": "\\S{2,}"
                  },
                  "user_classes": {
                    "type": "string",
                    "format": "ldap-simple-attr-list",
                    "description": "The objectclasses for users.",
                    "default": "inetorgperson, posixaccount, person, user"
                  },
                  "username-claim": {
                    "type": "string",
                    "description": "OpenID claim used to generate the unique username."
                  },
                  "verify": {
                    "type": "boolean",
                    "description": "Verify the server's SSL certificate",
                    "default": false
                  }
                },
                "required": [
                  "realm",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/domains/access/domains/{realm}": {
      "delete": {
        "summary": "Delete an authentication server.",
        "description": "Delete an authentication server.",
        "operationId": "delete_access_access_domains_access_domains_realm",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The realm parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get auth server configuration.",
        "description": "Get auth server configuration.",
        "operationId": "get_access_access_domains_access_domains_realm",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The realm parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update authentication server settings.",
        "description": "Update authentication server settings.",
        "operationId": "put_access_access_domains_access_domains_realm",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acr-values": {
                    "type": "string",
                    "description": "Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.",
                    "pattern": "^[^\\x00-\\x1F\\x7F <>#\"]*$"
                  },
                  "autocreate": {
                    "type": "boolean",
                    "description": "Automatically create users if they do not exist.",
                    "default": false
                  },
                  "base_dn": {
                    "type": "string",
                    "description": "LDAP base domain name",
                    "maxLength": 256
                  },
                  "bind_dn": {
                    "type": "string",
                    "description": "LDAP bind domain name",
                    "maxLength": 256
                  },
                  "capath": {
                    "type": "string",
                    "description": "Path to the CA certificate store",
                    "default": "/etc/ssl/certs"
                  },
                  "case-sensitive": {
                    "type": "boolean",
                    "description": "username is case-sensitive",
                    "default": true
                  },
                  "cert": {
                    "type": "string",
                    "description": "Path to the client certificate"
                  },
                  "certkey": {
                    "type": "string",
                    "description": "Path to the client certificate key"
                  },
                  "check-connection": {
                    "type": "boolean",
                    "description": "Check bind connection to the server.",
                    "default": false
                  },
                  "client-id": {
                    "type": "string",
                    "description": "OpenID Client ID",
                    "maxLength": 256
                  },
                  "client-key": {
                    "type": "string",
                    "description": "OpenID Client Key",
                    "maxLength": 256
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Use this as default realm"
                  },
                  "delete": {
                    "type": "string",
                    "format": "pve-configid-list",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64
                  },
                  "domain": {
                    "type": "string",
                    "description": "AD domain name",
                    "maxLength": 256,
                    "pattern": "\\S+"
                  },
                  "filter": {
                    "type": "string",
                    "description": "LDAP filter for user sync.",
                    "maxLength": 2048
                  },
                  "group_classes": {
                    "type": "string",
                    "format": "ldap-simple-attr-list",
                    "description": "The objectclasses for groups."
                  },
                  "group_dn": {
                    "type": "string",
                    "description": "LDAP base domain name for group sync. If not set, the base_dn will be used.",
                    "maxLength": 256
                  },
                  "group_filter": {
                    "type": "string",
                    "description": "LDAP filter for group sync.",
                    "maxLength": 2048
                  },
                  "group_name_attr": {
                    "type": "string",
                    "format": "ldap-simple-attr",
                    "description": "LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.",
                    "maxLength": 256
                  },
                  "groups-autocreate": {
                    "type": "boolean",
                    "description": "Automatically create groups if they do not exist.",
                    "default": false
                  },
                  "groups-claim": {
                    "type": "string",
                    "description": "OpenID claim used to retrieve groups with.",
                    "maxLength": 256
                  },
                  "groups-overwrite": {
                    "type": "boolean",
                    "description": "All groups will be overwritten for the user on login.",
                    "default": false
                  },
                  "issuer-url": {
                    "type": "string",
                    "description": "OpenID Issuer Url",
                    "maxLength": 256
                  },
                  "mode": {
                    "type": "string",
                    "description": "LDAP protocol mode.",
                    "enum": [
                      "ldap",
                      "ldaps",
                      "ldap+starttls"
                    ],
                    "default": "ldap"
                  },
                  "password": {
                    "type": "string",
                    "description": "LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'."
                  },
                  "port": {
                    "type": "integer",
                    "description": "Server port.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "prompt": {
                    "type": "string",
                    "description": "Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.",
                    "pattern": "(?:none|login|consent|select_account|\\S+)"
                  },
                  "query-userinfo": {
                    "type": "boolean",
                    "description": "Enables querying the userinfo endpoint for claims values.",
                    "default": true
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.",
                    "default": "email profile"
                  },
                  "secure": {
                    "type": "boolean",
                    "description": "Use secure LDAPS protocol. DEPRECATED: use 'mode' instead."
                  },
                  "server1": {
                    "type": "string",
                    "format": "address",
                    "description": "Server IP address (or DNS name)",
                    "maxLength": 256
                  },
                  "server2": {
                    "type": "string",
                    "format": "address",
                    "description": "Fallback Server IP address (or DNS name)",
                    "maxLength": 256
                  },
                  "sslversion": {
                    "type": "string",
                    "description": "LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!",
                    "enum": [
                      "tlsv1",
                      "tlsv1_1",
                      "tlsv1_2",
                      "tlsv1_3"
                    ]
                  },
                  "sync-defaults-options": {
                    "type": "string",
                    "format": "realm-sync-options",
                    "description": "The default options for behavior of synchronizations."
                  },
                  "sync_attributes": {
                    "type": "string",
                    "description": "Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.",
                    "pattern": "\\w+=[^,]+(,\\s*\\w+=[^,]+)*"
                  },
                  "tfa": {
                    "type": "string",
                    "format": "pve-tfa-config",
                    "description": "Use Two-factor authentication.",
                    "maxLength": 128
                  },
                  "user_attr": {
                    "type": "string",
                    "description": "LDAP user attribute name",
                    "maxLength": 256,
                    "pattern": "\\S{2,}"
                  },
                  "user_classes": {
                    "type": "string",
                    "format": "ldap-simple-attr-list",
                    "description": "The objectclasses for users.",
                    "default": "inetorgperson, posixaccount, person, user"
                  },
                  "verify": {
                    "type": "boolean",
                    "description": "Verify the server's SSL certificate",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The realm parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/domains/access/domains/{realm}/access/domains/{realm}/sync": {
      "post": {
        "summary": "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting.",
        "description": "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting.",
        "operationId": "post_access_access_domains_access_domains_realm_access_domains_realm_sync",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dry-run": {
                    "type": "boolean",
                    "description": "If set, does not write anything.",
                    "default": false
                  },
                  "enable-new": {
                    "type": "boolean",
                    "description": "Enable newly synced users immediately.",
                    "default": "1"
                  },
                  "full": {
                    "type": "boolean",
                    "description": "DEPRECATED: use 'remove-vanished' instead. If set, uses the LDAP Directory as source of truth, deleting users or groups not returned from the sync and removing all locally modified properties of synced users. If not set, only syncs information which is present in the synced data, and does not delete or modify anything else."
                  },
                  "purge": {
                    "type": "boolean",
                    "description": "DEPRECATED: use 'remove-vanished' instead. Remove ACLs for users or groups which were removed from the config during a sync."
                  },
                  "remove-vanished": {
                    "type": "string",
                    "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                    "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                    "default": "none"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Select what to sync.",
                    "enum": [
                      "users",
                      "groups",
                      "both"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The realm parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Worker Task-UPID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Worker Task-UPID"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/openid": {
      "get": {
        "summary": "Directory index.",
        "description": "Directory index.",
        "operationId": "get_access_access_openid",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/openid/access/openid/auth-url": {
      "post": {
        "summary": "Get the OpenId Authorization Url for the specified realm.",
        "description": "Get the OpenId Authorization Url for the specified realm.",
        "operationId": "post_access_access_openid_access_openid_auth-url",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "realm": {
                    "type": "string",
                    "format": "pve-realm",
                    "description": "Authentication domain ID",
                    "maxLength": 32
                  },
                  "redirect-url": {
                    "type": "string",
                    "description": "Redirection Url. The client should set this to the used server url (location.origin).",
                    "maxLength": 255
                  }
                },
                "required": [
                  "realm",
                  "redirect-url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Redirection URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Redirection URL."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/openid/access/openid/login": {
      "post": {
        "summary": " Verify OpenID authorization code and create a ticket.",
        "description": " Verify OpenID authorization code and create a ticket.",
        "operationId": "post_access_access_openid_access_openid_login",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "OpenId authorization code.",
                    "maxLength": 4096
                  },
                  "redirect-url": {
                    "type": "string",
                    "description": "Redirection Url. The client should set this to the used server url (location.origin).",
                    "maxLength": 255
                  },
                  "state": {
                    "type": "string",
                    "description": "OpenId state.",
                    "maxLength": 1024
                  }
                },
                "required": [
                  "code",
                  "redirect-url",
                  "state"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/tfa": {
      "get": {
        "summary": "List TFA configurations of users.",
        "description": "List TFA configurations of users.",
        "operationId": "get_access_access_tfa",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "The list tuples of user and TFA entries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "created": {
                              "type": "integer",
                              "description": "Creation time of this entry as unix epoch."
                            },
                            "description": {
                              "type": "string",
                              "description": "User chosen description for this entry."
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether this TFA entry is currently enabled."
                            },
                            "id": {
                              "type": "string",
                              "description": "The id used to reference this entry."
                            },
                            "type": {
                              "type": "string",
                              "description": "TFA Entry Type."
                            }
                          },
                          "description": "TFA Entry."
                        }
                      },
                      "tfa-locked-until": {
                        "type": "integer",
                        "description": "Contains a timestamp until when a user is locked out of 2nd factors."
                      },
                      "totp-locked": {
                        "type": "boolean",
                        "description": "True if the user is currently locked out of TOTP factors."
                      },
                      "userid": {
                        "type": "string",
                        "description": "User this entry belongs to."
                      }
                    }
                  },
                  "description": "The list tuples of user and TFA entries."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/tfa/access/tfa/{userid}": {
      "get": {
        "summary": "List TFA configurations of users.",
        "description": "List TFA configurations of users.",
        "operationId": "get_access_access_tfa_access_tfa_userid",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the user's TFA entries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "integer",
                        "description": "Creation time of this entry as unix epoch."
                      },
                      "description": {
                        "type": "string",
                        "description": "User chosen description for this entry."
                      },
                      "enable": {
                        "type": "boolean",
                        "description": "Whether this TFA entry is currently enabled."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id used to reference this entry."
                      },
                      "type": {
                        "type": "string",
                        "description": "TFA Entry Type."
                      }
                    },
                    "description": "TFA Entry."
                  },
                  "description": "A list of the user's TFA entries."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Add a TFA entry for a user.",
        "description": "Add a TFA entry for a user.",
        "operationId": "post_access_access_tfa_access_tfa_userid",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "challenge": {
                    "type": "string",
                    "description": "When responding to a u2f challenge: the original challenge string"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description to distinguish multiple entries from one another",
                    "maxLength": 255
                  },
                  "password": {
                    "type": "string",
                    "description": "The current password of the user performing the change.",
                    "minLength": 5,
                    "maxLength": 64
                  },
                  "totp": {
                    "type": "string",
                    "description": "A totp URI."
                  },
                  "type": {
                    "type": "string",
                    "description": "TFA Entry Type.",
                    "enum": [
                      "totp",
                      "u2f",
                      "webauthn",
                      "recovery",
                      "yubico"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "description": "The current value for the provided totp URI, or a Webauthn/U2F challenge response"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "challenge": {
                      "type": "string",
                      "description": "When adding u2f entries, this contains a challenge the user must respond to in order to finish the registration."
                    },
                    "id": {
                      "type": "string",
                      "description": "The id of a newly added TFA entry."
                    },
                    "recovery": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A recovery entry."
                      },
                      "description": "When adding recovery codes, this contains the list of codes to be displayed to the user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/tfa/access/tfa/{userid}/access/tfa/{userid}/{id}": {
      "delete": {
        "summary": "Delete a TFA entry by ID.",
        "description": "Delete a TFA entry by ID.",
        "operationId": "delete_access_access_tfa_access_tfa_userid_access_tfa_userid_id",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The current password of the user performing the change.",
              "minLength": 5,
              "maxLength": 64
            },
            "description": "The current password of the user performing the change."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Fetch a requested TFA entry if present.",
        "description": "Fetch a requested TFA entry if present.",
        "operationId": "get_access_access_tfa_access_tfa_userid_access_tfa_userid_id",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "TFA Entry.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "integer",
                      "description": "Creation time of this entry as unix epoch."
                    },
                    "description": {
                      "type": "string",
                      "description": "User chosen description for this entry."
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Whether this TFA entry is currently enabled."
                    },
                    "id": {
                      "type": "string",
                      "description": "The id used to reference this entry."
                    },
                    "type": {
                      "type": "string",
                      "description": "TFA Entry Type."
                    }
                  },
                  "description": "TFA Entry."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Add a TFA entry for a user.",
        "description": "Add a TFA entry for a user.",
        "operationId": "put_access_access_tfa_access_tfa_userid_access_tfa_userid_id",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description to distinguish multiple entries from one another",
                    "maxLength": 255
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Whether the entry should be enabled for login."
                  },
                  "password": {
                    "type": "string",
                    "description": "The current password of the user performing the change.",
                    "minLength": 5,
                    "maxLength": 64
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxUserId"
            },
            "description": "The userid parameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id parameter"
            },
            "description": "The id parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/ticket": {
      "get": {
        "summary": "Dummy. Useful for formatters which want to provide a login page.",
        "description": "Dummy. Useful for formatters which want to provide a login page.",
        "operationId": "get_access_access_ticket",
        "tags": [
          "Access Control"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create or verify authentication ticket.",
        "description": "Create or verify authentication ticket.",
        "operationId": "post_access_access_ticket",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new-format": {
                    "type": "boolean",
                    "description": "This parameter is now ignored and assumed to be 1.",
                    "default": true
                  },
                  "otp": {
                    "type": "string",
                    "description": "One-time password for Two-factor authentication."
                  },
                  "password": {
                    "type": "string",
                    "description": "The secret password. This can also be a valid ticket."
                  },
                  "path": {
                    "type": "string",
                    "description": "Verify ticket, and check if user have access 'privs' on 'path'",
                    "maxLength": 64
                  },
                  "privs": {
                    "type": "string",
                    "format": "pve-priv-list",
                    "description": "Verify ticket, and check if user have access 'privs' on 'path'",
                    "maxLength": 64
                  },
                  "realm": {
                    "type": "string",
                    "format": "pve-realm",
                    "description": "You can optionally pass the realm using this parameter. Normally the realm is simply added to the username <username>@<realm>.",
                    "maxLength": 32
                  },
                  "tfa-challenge": {
                    "type": "string",
                    "description": "The signed TFA challenge string the user wants to respond to."
                  },
                  "username": {
                    "type": "string",
                    "description": "User name",
                    "maxLength": 64
                  }
                },
                "required": [
                  "password",
                  "username"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "CSRFPreventionToken": {
                      "type": "string"
                    },
                    "clustername": {
                      "type": "string"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/password": {
      "put": {
        "summary": "Change user password.",
        "description": "Change user password.",
        "operationId": "put_access_access_password",
        "tags": [
          "Access Control"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmation-password": {
                    "type": "string",
                    "description": "The current password of the user performing the change.",
                    "minLength": 5,
                    "maxLength": 64
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password.",
                    "minLength": 8,
                    "maxLength": 64
                  },
                  "userid": {
                    "type": "string",
                    "format": "pve-userid",
                    "description": "Full User ID, in the `name@realm` format.",
                    "maxLength": 64
                  }
                },
                "required": [
                  "password",
                  "userid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/access/access/permissions": {
      "get": {
        "summary": "Retrieve effective permissions of given user/token.",
        "description": "Retrieve effective permissions of given user/token.",
        "operationId": "get_access_access_permissions",
        "tags": [
          "Access Control"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Only dump this specific path, not the whole tree."
            },
            "description": "Only dump this specific path, not the whole tree."
          },
          {
            "name": "userid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "User ID or full API token ID"
            },
            "description": "User ID or full API token ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Map of \"path\" => (Map of \"privilege\" => \"propagate boolean\").",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Map of \"path\" => (Map of \"privilege\" => \"propagate boolean\")."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/pools": {
      "delete": {
        "summary": "Delete pool.",
        "description": "Delete pool.",
        "operationId": "delete_pools",
        "tags": [
          "Resource Pools"
        ],
        "parameters": [
          {
            "name": "poolid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-poolid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "List pools or get pool configuration.",
        "description": "List pools or get pool configuration.",
        "operationId": "get_pools",
        "tags": [
          "Resource Pools"
        ],
        "parameters": [
          {
            "name": "poolid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-poolid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "qemu",
                "lxc",
                "storage"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "node": {
                              "type": "string"
                            },
                            "storage": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "vmid": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "poolid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "post": {
        "summary": "Create new pool.",
        "description": "Create new pool.",
        "operationId": "post_pools",
        "tags": [
          "Resource Pools"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "poolid": {
                    "type": "string",
                    "format": "pve-poolid"
                  }
                },
                "required": [
                  "poolid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update pool.",
        "description": "Update pool.",
        "operationId": "put_pools",
        "tags": [
          "Resource Pools"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allow-move": {
                    "type": "boolean",
                    "description": "Allow adding a guest even if already in another pool. The guest will be removed from its current pool and added to this one.",
                    "default": false
                  },
                  "comment": {
                    "type": "string"
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Remove the passed VMIDs and/or storage IDs instead of adding them.",
                    "default": false
                  },
                  "poolid": {
                    "type": "string",
                    "format": "pve-poolid"
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id-list",
                    "description": "List of storage IDs to add or remove from this pool."
                  },
                  "vms": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "List of guest VMIDs to add or remove from this pool."
                  }
                },
                "required": [
                  "poolid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/pools/pools/{poolid}": {
      "delete": {
        "summary": "Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').",
        "description": "Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').",
        "operationId": "delete_pools_pools_poolid",
        "tags": [
          "Resource Pools"
        ],
        "parameters": [
          {
            "name": "poolid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The poolid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "get": {
        "summary": "Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').",
        "description": "Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').",
        "operationId": "get_pools_pools_poolid",
        "tags": [
          "Resource Pools"
        ],
        "parameters": [
          {
            "name": "poolid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The poolid parameter"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "qemu",
                "lxc",
                "storage"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "node": {
                            "type": "string"
                          },
                          "storage": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "vmid": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      },
      "put": {
        "summary": "Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).",
        "description": "Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).",
        "operationId": "put_pools_pools_poolid",
        "tags": [
          "Resource Pools"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allow-move": {
                    "type": "boolean",
                    "description": "Allow adding a guest even if already in another pool. The guest will be removed from its current pool and added to this one.",
                    "default": false
                  },
                  "comment": {
                    "type": "string"
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Remove the passed VMIDs and/or storage IDs instead of adding them.",
                    "default": false
                  },
                  "storage": {
                    "type": "string",
                    "format": "pve-storage-id-list",
                    "description": "List of storage IDs to add or remove from this pool."
                  },
                  "vms": {
                    "type": "string",
                    "format": "pve-vmid-list",
                    "description": "List of guest VMIDs to add or remove from this pool."
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "poolid",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProxmoxResourceName"
            },
            "description": "The poolid parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    },
    "/version": {
      "get": {
        "summary": "API version details, including some parts of the global datacenter config.",
        "description": "API version details, including some parts of the global datacenter config.",
        "operationId": "get_version",
        "tags": [
          "System Info"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "console": {
                      "type": "string",
                      "description": "The default console viewer to use."
                    },
                    "release": {
                      "type": "string",
                      "description": "The current Proxmox VE point release in `x.y` format."
                    },
                    "repoid": {
                      "type": "string",
                      "description": "The short git revision from which this version was build."
                    },
                    "version": {
                      "type": "string",
                      "description": "The full pve-manager package version of this node."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions for the requested operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Request is well-formed but contains semantic errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable - Service temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxmoxError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ProxmoxApiToken": []
          },
          {
            "ProxmoxSessionCookie": [],
            "ProxmoxCSRFToken": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ProxmoxApiToken": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API token authentication. Format: PVEAPIToken=USER@REALM!TOKENID=UUID"
      },
      "ProxmoxSessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "PVEAuthCookie",
        "description": "Session cookie authentication obtained from /access/ticket"
      },
      "ProxmoxCSRFToken": {
        "type": "apiKey",
        "in": "header",
        "name": "CSRFPreventionToken",
        "description": "CSRF prevention token required for state-changing operations when using cookie auth"
      }
    },
    "schemas": {
      "ProxmoxError": {
        "type": "object",
        "description": "Standard Proxmox API error response",
        "properties": {
          "data": {
            "type": "object",
            "nullable": true,
            "description": "Additional error context data"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Detailed error messages keyed by field or error type"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          }
        }
      },
      "ProxmoxTask": {
        "type": "object",
        "description": "Proxmox async task response",
        "properties": {
          "data": {
            "type": "string",
            "description": "Task ID for tracking async operations",
            "pattern": "^UPID:[^:]+:[0-9A-F]+:[^:]*:[^:]+:[^:]*:[^:]*:$"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProxmoxSuccess": {
        "type": "object",
        "description": "Standard success response",
        "properties": {
          "data": {
            "description": "Response data (varies by endpoint)"
          },
          "success": {
            "type": "boolean",
            "description": "Operation success indicator"
          }
        }
      },
      "ProxmoxNodeId": {
        "type": "string",
        "description": "Proxmox node identifier following DNS hostname standards",
        "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?$",
        "minLength": 1,
        "maxLength": 63,
        "example": "pve-node-01"
      },
      "ProxmoxVmId": {
        "type": "integer",
        "description": "Virtual machine or container ID",
        "minimum": 1,
        "maximum": 999999999,
        "example": 100
      },
      "ProxmoxStorageId": {
        "type": "string",
        "description": "Storage identifier",
        "pattern": "^[A-Za-z][A-Za-z0-9\\-\\_]+$",
        "minLength": 1,
        "maxLength": 64,
        "example": "local-lvm"
      },
      "ProxmoxEmail": {
        "type": "string",
        "description": "Email address format",
        "pattern": "^[^@]+@[^@]+$",
        "format": "email",
        "example": "admin@example.com"
      },
      "ProxmoxUserId": {
        "type": "string",
        "description": "User ID in format user@realm",
        "pattern": "^[^@]+@[^@]+$",
        "example": "admin@pve"
      },
      "ProxmoxResourceName": {
        "type": "string",
        "description": "General resource name following Proxmox naming conventions",
        "pattern": "^[A-Za-z0-9_][A-Za-z0-9._\\-]*$",
        "minLength": 1,
        "maxLength": 64,
        "example": "my-resource"
      }
    }
  },
  "security": [
    {
      "ProxmoxApiToken": []
    },
    {
      "ProxmoxSessionCookie": [],
      "ProxmoxCSRFToken": []
    }
  ]
}