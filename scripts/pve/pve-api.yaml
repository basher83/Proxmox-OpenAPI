components:
  schemas:
    ProxmoxEmail:
      description: Email address format
      example: admin@example.com
      format: email
      pattern: ^[^@]+@[^@]+$
      type: string
    ProxmoxError:
      description: Standard Proxmox API error response
      properties:
        data:
          description: Additional error context data
          nullable: true
          type: object
        errors:
          additionalProperties:
            type: string
          description: Detailed error messages keyed by field or error type
          type: object
        message:
          description: Human-readable error message
          type: string
      type: object
    ProxmoxNodeId:
      description: Proxmox node identifier following DNS hostname standards
      example: pve-node-01
      maxLength: 63
      minLength: 1
      pattern: ^[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?$
      type: string
    ProxmoxResourceName:
      description: General resource name following Proxmox naming conventions
      example: my-resource
      maxLength: 64
      minLength: 1
      pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
      type: string
    ProxmoxStorageId:
      description: Storage identifier
      example: local-lvm
      maxLength: 64
      minLength: 1
      pattern: ^[A-Za-z][A-Za-z0-9\-\_]+$
      type: string
    ProxmoxSuccess:
      description: Standard success response
      properties:
        data:
          description: Response data (varies by endpoint)
        success:
          description: Operation success indicator
          type: boolean
      type: object
    ProxmoxTask:
      description: Proxmox async task response
      properties:
        data:
          description: Task ID for tracking async operations
          pattern: ^UPID:[^:]+:[0-9A-F]+:[^:]*:[^:]+:[^:]*:[^:]*:$
          type: string
      required:
      - data
      type: object
    ProxmoxUserId:
      description: User ID in format user@realm
      example: admin@pve
      pattern: ^[^@]+@[^@]+$
      type: string
    ProxmoxVmId:
      description: Virtual machine or container ID
      example: 100
      maximum: 999999999
      minimum: 1
      type: integer
  securitySchemes:
    ProxmoxApiToken:
      description: 'API token authentication. Format: PVEAPIToken=USER@REALM!TOKENID=UUID'
      in: header
      name: Authorization
      type: apiKey
    ProxmoxCSRFToken:
      description: CSRF prevention token required for state-changing operations when
        using cookie auth
      in: header
      name: CSRFPreventionToken
      type: apiKey
    ProxmoxSessionCookie:
      description: Session cookie authentication obtained from /access/ticket
      in: cookie
      name: PVEAuthCookie
      type: apiKey
info:
  contact:
    email: support@proxmox.com
    name: Proxmox Support
    url: https://www.proxmox.com
  description: 'Complete Proxmox Virtual Environment API specification for managing
    virtualized infrastructure.


    This specification covers all aspects of Proxmox VE management including:

    - **Virtual Machine Management**: Create, configure, and manage VMs

    - **Container Management**: LXC container lifecycle management

    - **Storage Management**: Configure and manage storage backends

    - **Network Configuration**: Virtual networks and firewall rules

    - **Cluster Operations**: Multi-node cluster management

    - **User Management**: Authentication, authorization, and access control

    - **Backup & Restore**: Data protection and recovery

    - **Monitoring**: System status and performance metrics


    The API supports both token-based authentication and session-based authentication
    with CSRF protection.'
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.html
  title: Proxmox VE API
  version: 8.0.0
openapi: 3.0.3
paths:
  /access:
    get:
      description: Directory index.
      operationId: get_access
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: &id001
      - ProxmoxApiToken: []
      - ProxmoxCSRFToken: []
        ProxmoxSessionCookie: []
      summary: Directory index.
      tags:
      - Access Control
  /access/access/acl:
    get:
      description: Get Access Control List (ACLs).
      operationId: get_access_access_acl
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    path:
                      description: Access control path
                      type: string
                    propagate:
                      description: Allow to propagate (inherit) permissions.
                      type: boolean
                    roleid:
                      type: string
                    type:
                      type: string
                    ugid:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get Access Control List (ACLs).
      tags:
      - Access Control
    put:
      description: Update Access Control List (add or remove permissions).
      operationId: put_access_access_acl
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: Remove permissions (instead of adding it).
                  type: boolean
                groups:
                  description: List of groups.
                  format: pve-groupid-list
                  type: string
                path:
                  description: Access control path
                  type: string
                propagate:
                  default: 1
                  description: Allow to propagate (inherit) permissions.
                  type: boolean
                roles:
                  description: List of roles.
                  format: pve-roleid-list
                  type: string
                tokens:
                  description: List of API tokens.
                  format: pve-tokenid-list
                  type: string
                users:
                  description: List of users.
                  format: pve-userid-list
                  type: string
              required:
              - path
              - roles
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update Access Control List (add or remove permissions).
      tags:
      - Access Control
  /access/access/domains:
    get:
      description: Authentication domain index.
      operationId: get_access_access_domains
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: A comment. The GUI use this text when you select
                        a domain (Realm) on the login window.
                      type: string
                    realm:
                      type: string
                    tfa:
                      description: Two-factor authentication provider.
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Authentication domain index.
      tags:
      - Access Control
    post:
      description: Add an authentication server.
      operationId: post_access_access_domains
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acr-values:
                  description: Specifies the Authentication Context Class Reference
                    values that theAuthorization Server is being requested to use
                    for the Auth Request.
                  pattern: ^[^\x00-\x1F\x7F <>#"]*$
                  type: string
                autocreate:
                  default: 0
                  description: Automatically create users if they do not exist.
                  type: boolean
                base_dn:
                  description: LDAP base domain name
                  maxLength: 256
                  type: string
                bind_dn:
                  description: LDAP bind domain name
                  maxLength: 256
                  type: string
                capath:
                  default: /etc/ssl/certs
                  description: Path to the CA certificate store
                  type: string
                case-sensitive:
                  default: 1
                  description: username is case-sensitive
                  type: boolean
                cert:
                  description: Path to the client certificate
                  type: string
                certkey:
                  description: Path to the client certificate key
                  type: string
                check-connection:
                  default: 0
                  description: Check bind connection to the server.
                  type: boolean
                client-id:
                  description: OpenID Client ID
                  maxLength: 256
                  type: string
                client-key:
                  description: OpenID Client Key
                  maxLength: 256
                  type: string
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                default:
                  description: Use this as default realm
                  type: boolean
                domain:
                  description: AD domain name
                  maxLength: 256
                  pattern: \S+
                  type: string
                filter:
                  description: LDAP filter for user sync.
                  maxLength: 2048
                  type: string
                group_classes:
                  default: groupOfNames, group, univentionGroup, ipausergroup
                  description: The objectclasses for groups.
                  format: ldap-simple-attr-list
                  type: string
                group_dn:
                  description: LDAP base domain name for group sync. If not set, the
                    base_dn will be used.
                  maxLength: 256
                  type: string
                group_filter:
                  description: LDAP filter for group sync.
                  maxLength: 2048
                  type: string
                group_name_attr:
                  description: LDAP attribute representing a groups name. If not set
                    or found, the first value of the DN will be used as name.
                  format: ldap-simple-attr
                  maxLength: 256
                  type: string
                groups-autocreate:
                  default: 0
                  description: Automatically create groups if they do not exist.
                  type: boolean
                groups-claim:
                  description: OpenID claim used to retrieve groups with.
                  maxLength: 256
                  type: string
                groups-overwrite:
                  default: 0
                  description: All groups will be overwritten for the user on login.
                  type: boolean
                issuer-url:
                  description: OpenID Issuer Url
                  maxLength: 256
                  type: string
                mode:
                  default: ldap
                  description: LDAP protocol mode.
                  enum:
                  - ldap
                  - ldaps
                  - ldap+starttls
                  type: string
                password:
                  description: LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.
                  type: string
                port:
                  description: Server port.
                  maximum: 65535
                  minimum: 1
                  type: integer
                prompt:
                  description: Specifies whether the Authorization Server prompts
                    the End-User for reauthentication and consent.
                  pattern: (?:none|login|consent|select_account|\S+)
                  type: string
                query-userinfo:
                  default: 1
                  description: Enables querying the userinfo endpoint for claims values.
                  type: boolean
                realm:
                  description: Authentication domain ID
                  format: pve-realm
                  maxLength: 32
                  type: string
                scopes:
                  default: email profile
                  description: Specifies the scopes (user details) that should be
                    authorized and returned, for example 'email' or 'profile'.
                  type: string
                secure:
                  description: 'Use secure LDAPS protocol. DEPRECATED: use ''mode''
                    instead.'
                  type: boolean
                server1:
                  description: Server IP address (or DNS name)
                  format: address
                  maxLength: 256
                  type: string
                server2:
                  description: Fallback Server IP address (or DNS name)
                  format: address
                  maxLength: 256
                  type: string
                sslversion:
                  description: LDAPS TLS/SSL version. It's not recommended to use
                    version older than 1.2!
                  enum:
                  - tlsv1
                  - tlsv1_1
                  - tlsv1_2
                  - tlsv1_3
                  type: string
                sync-defaults-options:
                  description: The default options for behavior of synchronizations.
                  format: realm-sync-options
                  type: string
                sync_attributes:
                  description: Comma separated list of key=value pairs for specifying
                    which LDAP attributes map to which PVE user field. For example,
                    to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'.
                    By default, each PVE user field is represented  by an LDAP attribute
                    of the same name.
                  pattern: \w+=[^,]+(,\s*\w+=[^,]+)*
                  type: string
                tfa:
                  description: Use Two-factor authentication.
                  format: pve-tfa-config
                  maxLength: 128
                  type: string
                type:
                  description: Realm type.
                  enum:
                  - ad
                  - ldap
                  - openid
                  - pam
                  - pve
                  type: string
                user_attr:
                  description: LDAP user attribute name
                  maxLength: 256
                  pattern: \S{2,}
                  type: string
                user_classes:
                  default: inetorgperson, posixaccount, person, user
                  description: The objectclasses for users.
                  format: ldap-simple-attr-list
                  type: string
                username-claim:
                  description: OpenID claim used to generate the unique username.
                  type: string
                verify:
                  default: 0
                  description: Verify the server's SSL certificate
                  type: boolean
              required:
              - realm
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add an authentication server.
      tags:
      - Access Control
  /access/access/domains/access/domains/{realm}:
    delete:
      description: Delete an authentication server.
      operationId: delete_access_access_domains_access_domains_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete an authentication server.
      tags:
      - Access Control
    get:
      description: Get auth server configuration.
      operationId: get_access_access_domains_access_domains_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxSuccess'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get auth server configuration.
      tags:
      - Access Control
    put:
      description: Update authentication server settings.
      operationId: put_access_access_domains_access_domains_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acr-values:
                  description: Specifies the Authentication Context Class Reference
                    values that theAuthorization Server is being requested to use
                    for the Auth Request.
                  pattern: ^[^\x00-\x1F\x7F <>#"]*$
                  type: string
                autocreate:
                  default: 0
                  description: Automatically create users if they do not exist.
                  type: boolean
                base_dn:
                  description: LDAP base domain name
                  maxLength: 256
                  type: string
                bind_dn:
                  description: LDAP bind domain name
                  maxLength: 256
                  type: string
                capath:
                  default: /etc/ssl/certs
                  description: Path to the CA certificate store
                  type: string
                case-sensitive:
                  default: 1
                  description: username is case-sensitive
                  type: boolean
                cert:
                  description: Path to the client certificate
                  type: string
                certkey:
                  description: Path to the client certificate key
                  type: string
                check-connection:
                  default: 0
                  description: Check bind connection to the server.
                  type: boolean
                client-id:
                  description: OpenID Client ID
                  maxLength: 256
                  type: string
                client-key:
                  description: OpenID Client Key
                  maxLength: 256
                  type: string
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                default:
                  description: Use this as default realm
                  type: boolean
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                domain:
                  description: AD domain name
                  maxLength: 256
                  pattern: \S+
                  type: string
                filter:
                  description: LDAP filter for user sync.
                  maxLength: 2048
                  type: string
                group_classes:
                  default: groupOfNames, group, univentionGroup, ipausergroup
                  description: The objectclasses for groups.
                  format: ldap-simple-attr-list
                  type: string
                group_dn:
                  description: LDAP base domain name for group sync. If not set, the
                    base_dn will be used.
                  maxLength: 256
                  type: string
                group_filter:
                  description: LDAP filter for group sync.
                  maxLength: 2048
                  type: string
                group_name_attr:
                  description: LDAP attribute representing a groups name. If not set
                    or found, the first value of the DN will be used as name.
                  format: ldap-simple-attr
                  maxLength: 256
                  type: string
                groups-autocreate:
                  default: 0
                  description: Automatically create groups if they do not exist.
                  type: boolean
                groups-claim:
                  description: OpenID claim used to retrieve groups with.
                  maxLength: 256
                  type: string
                groups-overwrite:
                  default: 0
                  description: All groups will be overwritten for the user on login.
                  type: boolean
                issuer-url:
                  description: OpenID Issuer Url
                  maxLength: 256
                  type: string
                mode:
                  default: ldap
                  description: LDAP protocol mode.
                  enum:
                  - ldap
                  - ldaps
                  - ldap+starttls
                  type: string
                password:
                  description: LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.
                  type: string
                port:
                  description: Server port.
                  maximum: 65535
                  minimum: 1
                  type: integer
                prompt:
                  description: Specifies whether the Authorization Server prompts
                    the End-User for reauthentication and consent.
                  pattern: (?:none|login|consent|select_account|\S+)
                  type: string
                query-userinfo:
                  default: 1
                  description: Enables querying the userinfo endpoint for claims values.
                  type: boolean
                scopes:
                  default: email profile
                  description: Specifies the scopes (user details) that should be
                    authorized and returned, for example 'email' or 'profile'.
                  type: string
                secure:
                  description: 'Use secure LDAPS protocol. DEPRECATED: use ''mode''
                    instead.'
                  type: boolean
                server1:
                  description: Server IP address (or DNS name)
                  format: address
                  maxLength: 256
                  type: string
                server2:
                  description: Fallback Server IP address (or DNS name)
                  format: address
                  maxLength: 256
                  type: string
                sslversion:
                  description: LDAPS TLS/SSL version. It's not recommended to use
                    version older than 1.2!
                  enum:
                  - tlsv1
                  - tlsv1_1
                  - tlsv1_2
                  - tlsv1_3
                  type: string
                sync-defaults-options:
                  description: The default options for behavior of synchronizations.
                  format: realm-sync-options
                  type: string
                sync_attributes:
                  description: Comma separated list of key=value pairs for specifying
                    which LDAP attributes map to which PVE user field. For example,
                    to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'.
                    By default, each PVE user field is represented  by an LDAP attribute
                    of the same name.
                  pattern: \w+=[^,]+(,\s*\w+=[^,]+)*
                  type: string
                tfa:
                  description: Use Two-factor authentication.
                  format: pve-tfa-config
                  maxLength: 128
                  type: string
                user_attr:
                  description: LDAP user attribute name
                  maxLength: 256
                  pattern: \S{2,}
                  type: string
                user_classes:
                  default: inetorgperson, posixaccount, person, user
                  description: The objectclasses for users.
                  format: ldap-simple-attr-list
                  type: string
                verify:
                  default: 0
                  description: Verify the server's SSL certificate
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update authentication server settings.
      tags:
      - Access Control
  /access/access/domains/access/domains/{realm}/access/domains/{realm}/sync:
    post:
      description: 'Syncs users and/or groups from the configured LDAP to user.cfg.
        NOTE: Synced groups will have the name ''name-$realm'', so make sure those
        groups do not exist to prevent overwriting.'
      operationId: post_access_access_domains_access_domains_realm_access_domains_realm_sync
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dry-run:
                  default: 0
                  description: If set, does not write anything.
                  type: boolean
                enable-new:
                  default: '1'
                  description: Enable newly synced users immediately.
                  type: boolean
                full:
                  description: 'DEPRECATED: use ''remove-vanished'' instead. If set,
                    uses the LDAP Directory as source of truth, deleting users or
                    groups not returned from the sync and removing all locally modified
                    properties of synced users. If not set, only syncs information
                    which is present in the synced data, and does not delete or modify
                    anything else.'
                  type: boolean
                purge:
                  description: 'DEPRECATED: use ''remove-vanished'' instead. Remove
                    ACLs for users or groups which were removed from the config during
                    a sync.'
                  type: boolean
                remove-vanished:
                  default: none
                  description: 'A semicolon-separated list of things to remove when
                    they or the user vanishes during a sync. The following values
                    are possible: ''entry'' removes the user/group when not returned
                    from the sync. ''properties'' removes the set properties on existing
                    user/group that do not appear in the source (even custom ones).
                    ''acl'' removes acls when the user/group is not returned from
                    the sync. Instead of a list it also can be ''none'' (the default).'
                  pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
                  type: string
                scope:
                  description: Select what to sync.
                  enum:
                  - users
                  - groups
                  - both
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Worker Task-UPID
                type: string
          description: Worker Task-UPID
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Syncs users and/or groups from the configured LDAP to user.cfg. NOTE:
        Synced groups will have the name ''name-$realm'', so make sure those groups
        do not exist to prevent overwriting.'
      tags:
      - Access Control
  /access/access/groups:
    get:
      description: Group index.
      operationId: get_access_access_groups
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    groupid:
                      format: pve-groupid
                      type: string
                    users:
                      description: list of users which form this group
                      format: pve-userid-list
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Group index.
      tags:
      - Access Control
    post:
      description: Create new group.
      operationId: post_access_access_groups
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                groupid:
                  format: pve-groupid
                  type: string
              required:
              - groupid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new group.
      tags:
      - Access Control
  /access/access/groups/access/groups/{groupid}:
    delete:
      description: Delete group.
      operationId: delete_access_access_groups_access_groups_groupid
      parameters:
      - description: The groupid parameter
        in: path
        name: groupid
        required: true
        schema:
          description: The groupid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete group.
      tags:
      - Access Control
    get:
      description: Get group configuration.
      operationId: get_access_access_groups_access_groups_groupid
      parameters:
      - description: The groupid parameter
        in: path
        name: groupid
        required: true
        schema:
          description: The groupid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    type: string
                  members:
                    items:
                      description: Full User ID, in the `name@realm` format.
                      format: pve-userid
                      type: string
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get group configuration.
      tags:
      - Access Control
    put:
      description: Update group data.
      operationId: put_access_access_groups_access_groups_groupid
      parameters:
      - description: The groupid parameter
        in: path
        name: groupid
        required: true
        schema:
          description: The groupid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update group data.
      tags:
      - Access Control
  /access/access/openid:
    get:
      description: Directory index.
      operationId: get_access_access_openid
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Access Control
  /access/access/openid/access/openid/auth-url:
    post:
      description: Get the OpenId Authorization Url for the specified realm.
      operationId: post_access_access_openid_access_openid_auth-url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                realm:
                  description: Authentication domain ID
                  format: pve-realm
                  maxLength: 32
                  type: string
                redirect-url:
                  description: Redirection Url. The client should set this to the
                    used server url (location.origin).
                  maxLength: 255
                  type: string
              required:
              - realm
              - redirect-url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Redirection URL.
                type: string
          description: Redirection URL.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the OpenId Authorization Url for the specified realm.
      tags:
      - Access Control
  /access/access/openid/access/openid/login:
    post:
      description: ' Verify OpenID authorization code and create a ticket.'
      operationId: post_access_access_openid_access_openid_login
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  description: OpenId authorization code.
                  maxLength: 4096
                  type: string
                redirect-url:
                  description: Redirection Url. The client should set this to the
                    used server url (location.origin).
                  maxLength: 255
                  type: string
                state:
                  description: OpenId state.
                  maxLength: 1024
                  type: string
              required:
              - code
              - redirect-url
              - state
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ' Verify OpenID authorization code and create a ticket.'
      tags:
      - Access Control
  /access/access/password:
    put:
      description: Change user password.
      operationId: put_access_access_password
      requestBody:
        content:
          application/json:
            schema:
              properties:
                confirmation-password:
                  description: The current password of the user performing the change.
                  maxLength: 64
                  minLength: 5
                  type: string
                password:
                  description: The new password.
                  maxLength: 64
                  minLength: 8
                  type: string
                userid:
                  description: Full User ID, in the `name@realm` format.
                  format: pve-userid
                  maxLength: 64
                  type: string
              required:
              - password
              - userid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Change user password.
      tags:
      - Access Control
  /access/access/permissions:
    get:
      description: Retrieve effective permissions of given user/token.
      operationId: get_access_access_permissions
      parameters:
      - description: Only dump this specific path, not the whole tree.
        in: query
        name: path
        required: false
        schema:
          description: Only dump this specific path, not the whole tree.
          type: string
      - description: User ID or full API token ID
        in: query
        name: userid
        required: false
        schema:
          description: User ID or full API token ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Map of "path" => (Map of "privilege" => "propagate boolean").
                type: object
          description: Map of "path" => (Map of "privilege" => "propagate boolean").
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Retrieve effective permissions of given user/token.
      tags:
      - Access Control
  /access/access/roles:
    get:
      description: Role index.
      operationId: get_access_access_roles
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    privs:
                      format: pve-priv-list
                      type: string
                    roleid:
                      format: pve-roleid
                      type: string
                    special:
                      type: boolean
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Role index.
      tags:
      - Access Control
    post:
      description: Create new role.
      operationId: post_access_access_roles
      requestBody:
        content:
          application/json:
            schema:
              properties:
                privs:
                  format: pve-priv-list
                  type: string
                roleid:
                  format: pve-roleid
                  type: string
              required:
              - roleid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new role.
      tags:
      - Access Control
  /access/access/roles/access/roles/{roleid}:
    delete:
      description: Delete role.
      operationId: delete_access_access_roles_access_roles_roleid
      parameters:
      - description: The roleid parameter
        in: path
        name: roleid
        required: true
        schema:
          description: The roleid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete role.
      tags:
      - Access Control
    get:
      description: Get role configuration.
      operationId: get_access_access_roles_access_roles_roleid
      parameters:
      - description: The roleid parameter
        in: path
        name: roleid
        required: true
        schema:
          description: The roleid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  Datastore.Allocate:
                    type: boolean
                  Datastore.AllocateSpace:
                    type: boolean
                  Datastore.AllocateTemplate:
                    type: boolean
                  Datastore.Audit:
                    type: boolean
                  Group.Allocate:
                    type: boolean
                  Mapping.Audit:
                    type: boolean
                  Mapping.Modify:
                    type: boolean
                  Mapping.Use:
                    type: boolean
                  Permissions.Modify:
                    type: boolean
                  Pool.Allocate:
                    type: boolean
                  Pool.Audit:
                    type: boolean
                  Realm.Allocate:
                    type: boolean
                  Realm.AllocateUser:
                    type: boolean
                  SDN.Allocate:
                    type: boolean
                  SDN.Audit:
                    type: boolean
                  SDN.Use:
                    type: boolean
                  Sys.AccessNetwork:
                    type: boolean
                  Sys.Audit:
                    type: boolean
                  Sys.Console:
                    type: boolean
                  Sys.Incoming:
                    type: boolean
                  Sys.Modify:
                    type: boolean
                  Sys.PowerMgmt:
                    type: boolean
                  Sys.Syslog:
                    type: boolean
                  User.Modify:
                    type: boolean
                  VM.Allocate:
                    type: boolean
                  VM.Audit:
                    type: boolean
                  VM.Backup:
                    type: boolean
                  VM.Clone:
                    type: boolean
                  VM.Config.CDROM:
                    type: boolean
                  VM.Config.CPU:
                    type: boolean
                  VM.Config.Cloudinit:
                    type: boolean
                  VM.Config.Disk:
                    type: boolean
                  VM.Config.HWType:
                    type: boolean
                  VM.Config.Memory:
                    type: boolean
                  VM.Config.Network:
                    type: boolean
                  VM.Config.Options:
                    type: boolean
                  VM.Console:
                    type: boolean
                  VM.Migrate:
                    type: boolean
                  VM.Monitor:
                    type: boolean
                  VM.PowerMgmt:
                    type: boolean
                  VM.Snapshot:
                    type: boolean
                  VM.Snapshot.Rollback:
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get role configuration.
      tags:
      - Access Control
    put:
      description: Update an existing role.
      operationId: put_access_access_roles_access_roles_roleid
      parameters:
      - description: The roleid parameter
        in: path
        name: roleid
        required: true
        schema:
          description: The roleid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                append:
                  type: boolean
                privs:
                  format: pve-priv-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an existing role.
      tags:
      - Access Control
  /access/access/tfa:
    get:
      description: List TFA configurations of users.
      operationId: get_access_access_tfa
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list tuples of user and TFA entries.
                items:
                  properties:
                    entries:
                      items:
                        description: TFA Entry.
                        properties:
                          created:
                            description: Creation time of this entry as unix epoch.
                            type: integer
                          description:
                            description: User chosen description for this entry.
                            type: string
                          enable:
                            description: Whether this TFA entry is currently enabled.
                            type: boolean
                          id:
                            description: The id used to reference this entry.
                            type: string
                          type:
                            description: TFA Entry Type.
                            type: string
                        type: object
                      type: array
                    tfa-locked-until:
                      description: Contains a timestamp until when a user is locked
                        out of 2nd factors.
                      type: integer
                    totp-locked:
                      description: True if the user is currently locked out of TOTP
                        factors.
                      type: boolean
                    userid:
                      description: User this entry belongs to.
                      type: string
                  type: object
                type: array
          description: The list tuples of user and TFA entries.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List TFA configurations of users.
      tags:
      - Access Control
  /access/access/tfa/access/tfa/{userid}:
    get:
      description: List TFA configurations of users.
      operationId: get_access_access_tfa_access_tfa_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list of the user's TFA entries.
                items:
                  description: TFA Entry.
                  properties:
                    created:
                      description: Creation time of this entry as unix epoch.
                      type: integer
                    description:
                      description: User chosen description for this entry.
                      type: string
                    enable:
                      description: Whether this TFA entry is currently enabled.
                      type: boolean
                    id:
                      description: The id used to reference this entry.
                      type: string
                    type:
                      description: TFA Entry Type.
                      type: string
                  type: object
                type: array
          description: A list of the user's TFA entries.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List TFA configurations of users.
      tags:
      - Access Control
    post:
      description: Add a TFA entry for a user.
      operationId: post_access_access_tfa_access_tfa_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                challenge:
                  description: 'When responding to a u2f challenge: the original challenge
                    string'
                  type: string
                description:
                  description: A description to distinguish multiple entries from
                    one another
                  maxLength: 255
                  type: string
                password:
                  description: The current password of the user performing the change.
                  maxLength: 64
                  minLength: 5
                  type: string
                totp:
                  description: A totp URI.
                  type: string
                type:
                  description: TFA Entry Type.
                  enum:
                  - totp
                  - u2f
                  - webauthn
                  - recovery
                  - yubico
                  type: string
                value:
                  description: The current value for the provided totp URI, or a Webauthn/U2F
                    challenge response
                  type: string
              required:
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  challenge:
                    description: When adding u2f entries, this contains a challenge
                      the user must respond to in order to finish the registration.
                    type: string
                  id:
                    description: The id of a newly added TFA entry.
                    type: string
                  recovery:
                    description: When adding recovery codes, this contains the list
                      of codes to be displayed to the user
                    items:
                      description: A recovery entry.
                      type: string
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a TFA entry for a user.
      tags:
      - Access Control
  /access/access/tfa/access/tfa/{userid}/access/tfa/{userid}/{id}:
    delete:
      description: Delete a TFA entry by ID.
      operationId: delete_access_access_tfa_access_tfa_userid_access_tfa_userid_id
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: The current password of the user performing the change.
        in: query
        name: password
        required: false
        schema:
          description: The current password of the user performing the change.
          maxLength: 64
          minLength: 5
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a TFA entry by ID.
      tags:
      - Access Control
    get:
      description: Fetch a requested TFA entry if present.
      operationId: get_access_access_tfa_access_tfa_userid_access_tfa_userid_id
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: TFA Entry.
                properties:
                  created:
                    description: Creation time of this entry as unix epoch.
                    type: integer
                  description:
                    description: User chosen description for this entry.
                    type: string
                  enable:
                    description: Whether this TFA entry is currently enabled.
                    type: boolean
                  id:
                    description: The id used to reference this entry.
                    type: string
                  type:
                    description: TFA Entry Type.
                    type: string
                type: object
          description: TFA Entry.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Fetch a requested TFA entry if present.
      tags:
      - Access Control
    put:
      description: Add a TFA entry for a user.
      operationId: put_access_access_tfa_access_tfa_userid_access_tfa_userid_id
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A description to distinguish multiple entries from
                    one another
                  maxLength: 255
                  type: string
                enable:
                  description: Whether the entry should be enabled for login.
                  type: boolean
                password:
                  description: The current password of the user performing the change.
                  maxLength: 64
                  minLength: 5
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a TFA entry for a user.
      tags:
      - Access Control
  /access/access/ticket:
    get:
      description: Dummy. Useful for formatters which want to provide a login page.
      operationId: get_access_access_ticket
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Dummy. Useful for formatters which want to provide a login page.
      tags:
      - Access Control
    post:
      description: Create or verify authentication ticket.
      operationId: post_access_access_ticket
      requestBody:
        content:
          application/json:
            schema:
              properties:
                new-format:
                  default: 1
                  description: This parameter is now ignored and assumed to be 1.
                  type: boolean
                otp:
                  description: One-time password for Two-factor authentication.
                  type: string
                password:
                  description: The secret password. This can also be a valid ticket.
                  type: string
                path:
                  description: Verify ticket, and check if user have access 'privs'
                    on 'path'
                  maxLength: 64
                  type: string
                privs:
                  description: Verify ticket, and check if user have access 'privs'
                    on 'path'
                  format: pve-priv-list
                  maxLength: 64
                  type: string
                realm:
                  description: You can optionally pass the realm using this parameter.
                    Normally the realm is simply added to the username <username>@<realm>.
                  format: pve-realm
                  maxLength: 32
                  type: string
                tfa-challenge:
                  description: The signed TFA challenge string the user wants to respond
                    to.
                  type: string
                username:
                  description: User name
                  maxLength: 64
                  type: string
              required:
              - password
              - username
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  CSRFPreventionToken:
                    type: string
                  clustername:
                    type: string
                  ticket:
                    type: string
                  username:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create or verify authentication ticket.
      tags:
      - Access Control
  /access/access/users:
    get:
      description: User index.
      operationId: get_access_access_users
      parameters:
      - description: Optional filter for enable property.
        in: query
        name: enabled
        required: false
        schema:
          description: Optional filter for enable property.
          type: boolean
      - description: Include group and token information.
        in: query
        name: full
        required: false
        schema:
          default: 0
          description: Include group and token information.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    email:
                      format: email-opt
                      type: string
                    enable:
                      description: Enable the account (default). You can set this
                        to '0' to disable the account
                      type: boolean
                    expire:
                      description: Account expiration date (seconds since epoch).
                        '0' means no expiration date.
                      type: integer
                    firstname:
                      type: string
                    groups:
                      format: pve-groupid-list
                      type: string
                    keys:
                      description: Keys for two factor auth (yubico).
                      type: string
                    lastname:
                      type: string
                    realm-type:
                      description: The type of the users realm
                      format: pve-realm
                      type: string
                    tfa-locked-until:
                      description: Contains a timestamp until when a user is locked
                        out of 2nd factors.
                      type: integer
                    tokens:
                      items:
                        properties:
                          comment:
                            type: string
                          expire:
                            description: API token expiration date (seconds since
                              epoch). '0' means no expiration date.
                            type: integer
                          privsep:
                            description: Restrict API token privileges with separate
                              ACLs (default), or give full privileges of corresponding
                              user.
                            type: boolean
                          tokenid:
                            description: User-specific token identifier.
                            type: string
                        type: object
                      type: array
                    totp-locked:
                      description: True if the user is currently locked out of TOTP
                        factors.
                      type: boolean
                    userid:
                      description: Full User ID, in the `name@realm` format.
                      format: pve-userid
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: User index.
      tags:
      - Access Control
    post:
      description: Create new user.
      operationId: post_access_access_users
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  maxLength: 2048
                  type: string
                email:
                  format: email-opt
                  maxLength: 254
                  type: string
                enable:
                  default: 1
                  description: Enable the account (default). You can set this to '0'
                    to disable the account
                  type: boolean
                expire:
                  description: Account expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                firstname:
                  maxLength: 1024
                  type: string
                groups:
                  format: pve-groupid-list
                  type: string
                keys:
                  description: Keys for two factor auth (yubico).
                  pattern: '[0-9a-zA-Z!=]{0,4096}'
                  type: string
                lastname:
                  maxLength: 1024
                  type: string
                password:
                  description: Initial password.
                  maxLength: 64
                  minLength: 8
                  type: string
                userid:
                  description: Full User ID, in the `name@realm` format.
                  format: pve-userid
                  maxLength: 64
                  type: string
              required:
              - userid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new user.
      tags:
      - Access Control
  /access/access/users/access/users/{userid}:
    delete:
      description: Delete user.
      operationId: delete_access_access_users_access_users_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete user.
      tags:
      - Access Control
    get:
      description: Get user configuration.
      operationId: get_access_access_users_access_users_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    type: string
                  email:
                    format: email-opt
                    type: string
                  enable:
                    description: Enable the account (default). You can set this to
                      '0' to disable the account
                    type: boolean
                  expire:
                    description: Account expiration date (seconds since epoch). '0'
                      means no expiration date.
                    type: integer
                  firstname:
                    type: string
                  groups:
                    items:
                      format: pve-groupid
                      type: string
                    type: array
                  keys:
                    description: Keys for two factor auth (yubico).
                    type: string
                  lastname:
                    type: string
                  tokens:
                    type: object
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get user configuration.
      tags:
      - Access Control
    put:
      description: Update user configuration.
      operationId: put_access_access_users_access_users_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                append:
                  type: boolean
                comment:
                  maxLength: 2048
                  type: string
                email:
                  format: email-opt
                  maxLength: 254
                  type: string
                enable:
                  default: 1
                  description: Enable the account (default). You can set this to '0'
                    to disable the account
                  type: boolean
                expire:
                  description: Account expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                firstname:
                  maxLength: 1024
                  type: string
                groups:
                  format: pve-groupid-list
                  type: string
                keys:
                  description: Keys for two factor auth (yubico).
                  pattern: '[0-9a-zA-Z!=]{0,4096}'
                  type: string
                lastname:
                  maxLength: 1024
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update user configuration.
      tags:
      - Access Control
  /access/access/users/access/users/{userid}/access/users/{userid}/tfa:
    get:
      description: Get user TFA types (Personal and Realm).
      operationId: get_access_access_users_access_users_userid_access_users_userid_tfa
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: Request all entries as an array.
        in: query
        name: multiple
        required: false
        schema:
          default: 0
          description: Request all entries as an array.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  realm:
                    description: The type of TFA the users realm has set, if any.
                    type: string
                  types:
                    description: Array of the user configured TFA types, if any. Only
                      available if 'multiple' was not passed.
                    items:
                      description: A TFA type.
                      type: string
                    type: array
                  user:
                    description: The type of TFA the user has set, if any. Only set
                      if 'multiple' was not passed.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get user TFA types (Personal and Realm).
      tags:
      - Access Control
  /access/access/users/access/users/{userid}/access/users/{userid}/token:
    get:
      description: Get user API tokens.
      operationId: get_access_access_users_access_users_userid_access_users_userid_token
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    expire:
                      description: API token expiration date (seconds since epoch).
                        '0' means no expiration date.
                      type: integer
                    privsep:
                      description: Restrict API token privileges with separate ACLs
                        (default), or give full privileges of corresponding user.
                      type: boolean
                    tokenid:
                      description: User-specific token identifier.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get user API tokens.
      tags:
      - Access Control
  /access/access/users/access/users/{userid}/access/users/{userid}/token/access/users/{userid}/token/{tokenid}:
    delete:
      description: Remove API token for a specific user.
      operationId: delete_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The tokenid parameter
        in: path
        name: tokenid
        required: true
        schema:
          description: The tokenid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove API token for a specific user.
      tags:
      - Access Control
    get:
      description: Get specific API token information.
      operationId: get_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The tokenid parameter
        in: path
        name: tokenid
        required: true
        schema:
          description: The tokenid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    type: string
                  expire:
                    description: API token expiration date (seconds since epoch).
                      '0' means no expiration date.
                    type: integer
                  privsep:
                    description: Restrict API token privileges with separate ACLs
                      (default), or give full privileges of corresponding user.
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get specific API token information.
      tags:
      - Access Control
    post:
      description: 'Generate a new API token for a specific user. NOTE: returns API
        token value, which needs to be stored as it cannot be retrieved afterwards!'
      operationId: post_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The tokenid parameter
        in: path
        name: tokenid
        required: true
        schema:
          description: The tokenid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                expire:
                  default: same as user
                  description: API token expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                privsep:
                  default: 1
                  description: Restrict API token privileges with separate ACLs (default),
                    or give full privileges of corresponding user.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  full-tokenid:
                    description: The full token id.
                    type: string
                  info:
                    properties:
                      comment:
                        type: string
                      expire:
                        description: API token expiration date (seconds since epoch).
                          '0' means no expiration date.
                        type: integer
                      privsep:
                        description: Restrict API token privileges with separate ACLs
                          (default), or give full privileges of corresponding user.
                        type: boolean
                    type: object
                  value:
                    description: API token value used for authentication.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Generate a new API token for a specific user. NOTE: returns API token
        value, which needs to be stored as it cannot be retrieved afterwards!'
      tags:
      - Access Control
    put:
      description: Update API token for a specific user.
      operationId: put_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_tokenid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The tokenid parameter
        in: path
        name: tokenid
        required: true
        schema:
          description: The tokenid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                expire:
                  default: same as user
                  description: API token expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                privsep:
                  default: 1
                  description: Restrict API token privileges with separate ACLs (default),
                    or give full privileges of corresponding user.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Updated token information.
                properties:
                  comment:
                    type: string
                  expire:
                    description: API token expiration date (seconds since epoch).
                      '0' means no expiration date.
                    type: integer
                  privsep:
                    description: Restrict API token privileges with separate ACLs
                      (default), or give full privileges of corresponding user.
                    type: boolean
                type: object
          description: Updated token information.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update API token for a specific user.
      tags:
      - Access Control
  /access/access/users/access/users/{userid}/access/users/{userid}/unlock-tfa:
    put:
      description: Unlock a user's TFA authentication.
      operationId: put_access_access_users_access_users_userid_access_users_userid_unlock-tfa
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Unlock a user's TFA authentication.
      tags:
      - Access Control
  /cluster:
    get:
      description: Cluster index.
      operationId: get_cluster
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Cluster index.
      tags:
      - Cluster
  /cluster/cluster/acme:
    get:
      description: ACMEAccount index.
      operationId: get_cluster_cluster_acme
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ACMEAccount index.
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/account:
    get:
      description: ACMEAccount index.
      operationId: get_cluster_cluster_acme_cluster_acme_account
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ACMEAccount index.
      tags:
      - Cluster
    post:
      description: Register a new ACME account with CA.
      operationId: post_cluster_cluster_acme_cluster_acme_account
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact:
                  description: Contact email addresses.
                  format: email-list
                  type: string
                directory:
                  default: https://acme-v02.api.letsencrypt.org/directory
                  description: URL of ACME CA directory endpoint.
                  pattern: ^https?://.*
                  type: string
                eab-hmac-key:
                  description: HMAC key for External Account Binding.
                  type: string
                eab-kid:
                  description: Key Identifier for External Account Binding.
                  type: string
                name:
                  default: default
                  description: ACME account config file name.
                  format: pve-configid
                  type: string
                tos_url:
                  description: URL of CA TermsOfService - setting this indicates agreement.
                  type: string
              required:
              - contact
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Register a new ACME account with CA.
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/account/cluster/acme/account/{name}:
    delete:
      description: Deactivate existing ACME account at CA.
      operationId: delete_cluster_cluster_acme_cluster_acme_account_cluster_acme_account_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Deactivate existing ACME account at CA.
      tags:
      - Cluster
    get:
      description: Return existing ACME account information.
      operationId: get_cluster_cluster_acme_cluster_acme_account_cluster_acme_account_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  account:
                    type: object
                  directory:
                    description: URL of ACME CA directory endpoint.
                    type: string
                  location:
                    type: string
                  tos:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return existing ACME account information.
      tags:
      - Cluster
    put:
      description: 'Update existing ACME account information with CA. Note: not specifying
        any new account information triggers a refresh.'
      operationId: put_cluster_cluster_acme_cluster_acme_account_cluster_acme_account_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact:
                  description: Contact email addresses.
                  format: email-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Update existing ACME account information with CA. Note: not specifying
        any new account information triggers a refresh.'
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/challenge-schema:
    get:
      description: Get schema of ACME challenge types.
      operationId: get_cluster_cluster_acme_cluster_acme_challenge-schema
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: string
                    name:
                      description: Human readable name, falls back to id
                      type: string
                    schema:
                      type: object
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get schema of ACME challenge types.
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/directories:
    get:
      description: Get named known ACME directory endpoints.
      operationId: get_cluster_cluster_acme_cluster_acme_directories
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      type: string
                    url:
                      description: URL of ACME CA directory endpoint.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get named known ACME directory endpoints.
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/meta:
    get:
      description: Retrieve ACME Directory Meta Information
      operationId: get_cluster_cluster_acme_cluster_acme_meta
      parameters:
      - description: URL of ACME CA directory endpoint.
        in: query
        name: directory
        required: false
        schema:
          default: https://acme-v02.api.letsencrypt.org/directory
          description: URL of ACME CA directory endpoint.
          pattern: ^https?://.*
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  caaIdentities:
                    description: Hostnames referring to the ACME servers.
                    items:
                      type: string
                    type: array
                  externalAccountRequired:
                    description: EAB Required
                    type: boolean
                  termsOfService:
                    description: ACME TermsOfService URL.
                    type: string
                  website:
                    description: URL to more information about the ACME server.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Retrieve ACME Directory Meta Information
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/plugins:
    get:
      description: ACME plugin index.
      operationId: get_cluster_cluster_acme_cluster_acme_plugins
      parameters:
      - description: Only list ACME plugins of a specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list ACME plugins of a specific type
          enum:
          - dns
          - standalone
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    plugin:
                      description: Unique identifier for ACME plugin instance.
                      format: pve-configid
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ACME plugin index.
      tags:
      - Cluster
    post:
      description: Add ACME plugin configuration.
      operationId: post_cluster_cluster_acme_cluster_acme_plugins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                api:
                  description: API plugin name
                  enum:
                  - 1984hosting
                  - acmedns
                  - acmeproxy
                  - active24
                  - ad
                  - ali
                  - alviy
                  - anx
                  - artfiles
                  - arvan
                  - aurora
                  - autodns
                  - aws
                  - azion
                  - azure
                  - bookmyname
                  - bunny
                  - cf
                  - clouddns
                  - cloudns
                  - cn
                  - conoha
                  - constellix
                  - cpanel
                  - curanet
                  - cyon
                  - da
                  - ddnss
                  - desec
                  - df
                  - dgon
                  - dnsexit
                  - dnshome
                  - dnsimple
                  - dnsservices
                  - doapi
                  - domeneshop
                  - dp
                  - dpi
                  - dreamhost
                  - duckdns
                  - durabledns
                  - dyn
                  - dynu
                  - dynv6
                  - easydns
                  - edgedns
                  - euserv
                  - exoscale
                  - fornex
                  - freedns
                  - gandi_livedns
                  - gcloud
                  - gcore
                  - gd
                  - geoscaling
                  - googledomains
                  - he
                  - hetzner
                  - hexonet
                  - hostingde
                  - huaweicloud
                  - infoblox
                  - infomaniak
                  - internetbs
                  - inwx
                  - ionos
                  - ionos_cloud
                  - ipv64
                  - ispconfig
                  - jd
                  - joker
                  - kappernet
                  - kas
                  - kinghost
                  - knot
                  - la
                  - leaseweb
                  - lexicon
                  - limacity
                  - linode
                  - linode_v4
                  - loopia
                  - lua
                  - maradns
                  - me
                  - miab
                  - misaka
                  - myapi
                  - mydevil
                  - mydnsjp
                  - mythic_beasts
                  - namecheap
                  - namecom
                  - namesilo
                  - nanelo
                  - nederhost
                  - neodigit
                  - netcup
                  - netlify
                  - nic
                  - njalla
                  - nm
                  - nsd
                  - nsone
                  - nsupdate
                  - nw
                  - oci
                  - omglol
                  - one
                  - online
                  - openprovider
                  - openstack
                  - opnsense
                  - ovh
                  - pdns
                  - pleskxml
                  - pointhq
                  - porkbun
                  - rackcorp
                  - rackspace
                  - rage4
                  - rcode0
                  - regru
                  - scaleway
                  - schlundtech
                  - selectel
                  - selfhost
                  - servercow
                  - simply
                  - technitium
                  - tele3
                  - tencent
                  - timeweb
                  - transip
                  - udr
                  - ultra
                  - unoeuro
                  - variomedia
                  - veesp
                  - vercel
                  - vscale
                  - vultr
                  - websupport
                  - west_cn
                  - world4you
                  - yandex360
                  - yc
                  - zilore
                  - zone
                  - zoneedit
                  - zonomi
                  type: string
                data:
                  description: DNS plugin data. (base64 encoded)
                  type: string
                disable:
                  description: Flag to disable the config.
                  type: boolean
                id:
                  description: ACME Plugin ID name
                  format: pve-configid
                  type: string
                nodes:
                  description: List of cluster node names.
                  format: pve-node-list
                  type: string
                type:
                  description: ACME challenge type.
                  enum:
                  - dns
                  - standalone
                  type: string
                validation-delay:
                  default: 30
                  description: Extra delay in seconds to wait before requesting validation.
                    Allows to cope with a long TTL of DNS records.
                  maximum: 172800
                  minimum: 0
                  type: integer
              required:
              - id
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add ACME plugin configuration.
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/plugins/cluster/acme/plugins/{id}:
    delete:
      description: Delete ACME plugin configuration.
      operationId: delete_cluster_cluster_acme_cluster_acme_plugins_cluster_acme_plugins_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete ACME plugin configuration.
      tags:
      - Cluster
    get:
      description: Get ACME plugin configuration.
      operationId: get_cluster_cluster_acme_cluster_acme_plugins_cluster_acme_plugins_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get ACME plugin configuration.
      tags:
      - Cluster
    put:
      description: Update ACME plugin configuration.
      operationId: put_cluster_cluster_acme_cluster_acme_plugins_cluster_acme_plugins_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                api:
                  description: API plugin name
                  enum:
                  - 1984hosting
                  - acmedns
                  - acmeproxy
                  - active24
                  - ad
                  - ali
                  - alviy
                  - anx
                  - artfiles
                  - arvan
                  - aurora
                  - autodns
                  - aws
                  - azion
                  - azure
                  - bookmyname
                  - bunny
                  - cf
                  - clouddns
                  - cloudns
                  - cn
                  - conoha
                  - constellix
                  - cpanel
                  - curanet
                  - cyon
                  - da
                  - ddnss
                  - desec
                  - df
                  - dgon
                  - dnsexit
                  - dnshome
                  - dnsimple
                  - dnsservices
                  - doapi
                  - domeneshop
                  - dp
                  - dpi
                  - dreamhost
                  - duckdns
                  - durabledns
                  - dyn
                  - dynu
                  - dynv6
                  - easydns
                  - edgedns
                  - euserv
                  - exoscale
                  - fornex
                  - freedns
                  - gandi_livedns
                  - gcloud
                  - gcore
                  - gd
                  - geoscaling
                  - googledomains
                  - he
                  - hetzner
                  - hexonet
                  - hostingde
                  - huaweicloud
                  - infoblox
                  - infomaniak
                  - internetbs
                  - inwx
                  - ionos
                  - ionos_cloud
                  - ipv64
                  - ispconfig
                  - jd
                  - joker
                  - kappernet
                  - kas
                  - kinghost
                  - knot
                  - la
                  - leaseweb
                  - lexicon
                  - limacity
                  - linode
                  - linode_v4
                  - loopia
                  - lua
                  - maradns
                  - me
                  - miab
                  - misaka
                  - myapi
                  - mydevil
                  - mydnsjp
                  - mythic_beasts
                  - namecheap
                  - namecom
                  - namesilo
                  - nanelo
                  - nederhost
                  - neodigit
                  - netcup
                  - netlify
                  - nic
                  - njalla
                  - nm
                  - nsd
                  - nsone
                  - nsupdate
                  - nw
                  - oci
                  - omglol
                  - one
                  - online
                  - openprovider
                  - openstack
                  - opnsense
                  - ovh
                  - pdns
                  - pleskxml
                  - pointhq
                  - porkbun
                  - rackcorp
                  - rackspace
                  - rage4
                  - rcode0
                  - regru
                  - scaleway
                  - schlundtech
                  - selectel
                  - selfhost
                  - servercow
                  - simply
                  - technitium
                  - tele3
                  - tencent
                  - timeweb
                  - transip
                  - udr
                  - ultra
                  - unoeuro
                  - variomedia
                  - veesp
                  - vercel
                  - vscale
                  - vultr
                  - websupport
                  - west_cn
                  - world4you
                  - yandex360
                  - yc
                  - zilore
                  - zone
                  - zoneedit
                  - zonomi
                  type: string
                data:
                  description: DNS plugin data. (base64 encoded)
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  description: Flag to disable the config.
                  type: boolean
                nodes:
                  description: List of cluster node names.
                  format: pve-node-list
                  type: string
                validation-delay:
                  default: 30
                  description: Extra delay in seconds to wait before requesting validation.
                    Allows to cope with a long TTL of DNS records.
                  maximum: 172800
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update ACME plugin configuration.
      tags:
      - Cluster
  /cluster/cluster/acme/cluster/acme/tos:
    get:
      description: Retrieve ACME TermsOfService URL from CA. Deprecated, please use
        /cluster/acme/meta.
      operationId: get_cluster_cluster_acme_cluster_acme_tos
      parameters:
      - description: URL of ACME CA directory endpoint.
        in: query
        name: directory
        required: false
        schema:
          default: https://acme-v02.api.letsencrypt.org/directory
          description: URL of ACME CA directory endpoint.
          pattern: ^https?://.*
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: ACME TermsOfService URL.
                type: string
          description: ACME TermsOfService URL.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.
      tags:
      - Cluster
  /cluster/cluster/backup:
    get:
      description: List vzdump backup schedule.
      operationId: get_cluster_cluster_backup
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: The job ID.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List vzdump backup schedule.
      tags:
      - Cluster
    post:
      description: Create new vzdump backup job.
      operationId: post_cluster_cluster_backup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                all:
                  default: 0
                  description: Backup all known guest systems on this host.
                  type: boolean
                bwlimit:
                  default: 0
                  description: Limit I/O bandwidth (in KiB/s).
                  minimum: 0
                  type: integer
                comment:
                  description: Description for the Job.
                  maxLength: 512
                  type: string
                compress:
                  default: '0'
                  description: Compress dump file.
                  enum:
                  - '0'
                  - '1'
                  - gzip
                  - lzo
                  - zstd
                  type: string
                dow:
                  default: mon,tue,wed,thu,fri,sat,sun
                  description: Day of week selection.
                  format: pve-day-of-week-list
                  type: string
                dumpdir:
                  description: Store resulting files to specified directory.
                  type: string
                enabled:
                  default: '1'
                  description: Enable or disable the job.
                  type: boolean
                exclude:
                  description: Exclude specified guest systems (assumes --all)
                  format: pve-vmid-list
                  type: string
                exclude-path:
                  description: Exclude certain files/directories (shell globs). Paths
                    starting with '/' are anchored to the container's root, other
                    paths match relative to each subdirectory.
                  items:
                    type: string
                  type: array
                fleecing:
                  description: Options for backup fleecing (VM only).
                  format: backup-fleecing
                  type: string
                id:
                  description: Job ID (will be autogenerated).
                  format: pve-configid
                  type: string
                ionice:
                  default: 7
                  description: Set IO priority when using the BFQ scheduler. For snapshot
                    and suspend mode backups of VMs, this only affects the compressor.
                    A value of 8 means the idle priority is used, otherwise the best-effort
                    priority is used with the specified value.
                  maximum: 8
                  minimum: 0
                  type: integer
                lockwait:
                  default: 180
                  description: Maximal time to wait for the global lock (minutes).
                  minimum: 0
                  type: integer
                mailnotification:
                  default: always
                  description: 'Deprecated: use notification targets/matchers instead.
                    Specify when to send a notification mail'
                  enum:
                  - always
                  - failure
                  type: string
                mailto:
                  description: 'Deprecated: Use notification targets/matchers instead.
                    Comma-separated list of email addresses or users that should receive
                    email notifications.'
                  format: email-or-username-list
                  type: string
                maxfiles:
                  description: 'Deprecated: use ''prune-backups'' instead. Maximal
                    number of backup files per guest system.'
                  minimum: 1
                  type: integer
                mode:
                  default: snapshot
                  description: Backup mode.
                  enum:
                  - snapshot
                  - suspend
                  - stop
                  type: string
                node:
                  description: Only run if executed on this node.
                  format: pve-node
                  type: string
                notes-template:
                  description: Template string for generating notes for the backup(s).
                    It can contain variables which will be replaced by their values.
                    Currently supported are {{cluster}}, {{guestname}}, {{node}},
                    and {{vmid}}, but more might be added in the future. Needs to
                    be a single line, newline and backslash need to be escaped as
                    '\n' and '\\' respectively.
                  maxLength: 1024
                  type: string
                notification-mode:
                  default: auto
                  description: Determine which notification system to use. If set
                    to 'legacy-sendmail', vzdump will consider the mailto/mailnotification
                    parameters and send emails to the specified address(es) via the
                    'sendmail' command. If set to 'notification-system', a notification
                    will be sent via PVE's notification system, and the mailto and
                    mailnotification will be ignored. If set to 'auto' (default setting),
                    an email will be sent if mailto is set, and the notification system
                    will be used if not.
                  enum:
                  - auto
                  - legacy-sendmail
                  - notification-system
                  type: string
                notification-policy:
                  default: always
                  description: 'Deprecated: Do not use'
                  enum:
                  - always
                  - failure
                  - never
                  type: string
                notification-target:
                  description: 'Deprecated: Do not use'
                  format: pve-configid
                  type: string
                pbs-change-detection-mode:
                  description: PBS mode used to detect file changes and switch encoding
                    format for container backups.
                  enum:
                  - legacy
                  - data
                  - metadata
                  type: string
                performance:
                  description: Other performance-related settings.
                  format: backup-performance
                  type: string
                pigz:
                  default: 0
                  description: Use pigz instead of gzip when N>0. N=1 uses half of
                    cores, N>1 uses N as thread count.
                  type: integer
                pool:
                  description: Backup all known guest systems included in the specified
                    pool.
                  type: string
                protected:
                  description: If true, mark backup(s) as protected.
                  type: boolean
                prune-backups:
                  default: keep-all=1
                  description: Use these retention options instead of those from the
                    storage configuration.
                  format: prune-backups
                  type: string
                quiet:
                  default: 0
                  description: Be quiet.
                  type: boolean
                remove:
                  default: 1
                  description: Prune older backups according to 'prune-backups'.
                  type: boolean
                repeat-missed:
                  default: 0
                  description: If true, the job will be run as soon as possible if
                    it was missed while the scheduler was not running.
                  type: boolean
                schedule:
                  description: Backup schedule. The format is a subset of `systemd`
                    calendar events.
                  format: pve-calendar-event
                  maxLength: 128
                  type: string
                script:
                  description: Use specified hook script.
                  type: string
                starttime:
                  description: Job Start time.
                  pattern: \d{1,2}:\d{1,2}
                  type: string
                stdexcludes:
                  default: 1
                  description: Exclude temporary files and logs.
                  type: boolean
                stop:
                  default: 0
                  description: Stop running backup jobs on this host.
                  type: boolean
                stopwait:
                  default: 10
                  description: Maximal time to wait until a guest system is stopped
                    (minutes).
                  minimum: 0
                  type: integer
                storage:
                  description: Store resulting file to this storage.
                  format: pve-storage-id
                  type: string
                tmpdir:
                  description: Store temporary files to specified directory.
                  type: string
                vmid:
                  description: The ID of the guest system you want to backup.
                  format: pve-vmid-list
                  type: string
                zstd:
                  default: 1
                  description: Zstd threads. N=0 uses half of the available cores,
                    if N is set to a value bigger than 0, N is used as thread count.
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new vzdump backup job.
      tags:
      - Cluster
  /cluster/cluster/backup-info:
    get:
      description: Index for backup info related endpoints
      operationId: get_cluster_cluster_backup-info
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Directory index.
                items:
                  properties:
                    subdir:
                      description: API sub-directory endpoint
                      type: string
                  type: object
                type: array
          description: Directory index.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index for backup info related endpoints
      tags:
      - Cluster
  /cluster/cluster/backup-info/cluster/backup-info/not-backed-up:
    get:
      description: Shows all guests which are not covered by any backup job.
      operationId: get_cluster_cluster_backup-info_cluster_backup-info_not-backed-up
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Contains the guest objects.
                items:
                  properties:
                    name:
                      description: Name of the guest
                      type: string
                    type:
                      description: Type of the guest.
                      type: string
                    vmid:
                      description: VMID of the guest.
                      type: integer
                  type: object
                type: array
          description: Contains the guest objects.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Shows all guests which are not covered by any backup job.
      tags:
      - Cluster
  /cluster/cluster/backup/cluster/backup/{id}:
    delete:
      description: Delete vzdump backup job definition.
      operationId: delete_cluster_cluster_backup_cluster_backup_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete vzdump backup job definition.
      tags:
      - Cluster
    get:
      description: Read vzdump backup job definition.
      operationId: get_cluster_cluster_backup_cluster_backup_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read vzdump backup job definition.
      tags:
      - Cluster
    put:
      description: Update vzdump backup job definition.
      operationId: put_cluster_cluster_backup_cluster_backup_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                all:
                  default: 0
                  description: Backup all known guest systems on this host.
                  type: boolean
                bwlimit:
                  default: 0
                  description: Limit I/O bandwidth (in KiB/s).
                  minimum: 0
                  type: integer
                comment:
                  description: Description for the Job.
                  maxLength: 512
                  type: string
                compress:
                  default: '0'
                  description: Compress dump file.
                  enum:
                  - '0'
                  - '1'
                  - gzip
                  - lzo
                  - zstd
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dow:
                  description: Day of week selection.
                  format: pve-day-of-week-list
                  type: string
                dumpdir:
                  description: Store resulting files to specified directory.
                  type: string
                enabled:
                  default: '1'
                  description: Enable or disable the job.
                  type: boolean
                exclude:
                  description: Exclude specified guest systems (assumes --all)
                  format: pve-vmid-list
                  type: string
                exclude-path:
                  description: Exclude certain files/directories (shell globs). Paths
                    starting with '/' are anchored to the container's root, other
                    paths match relative to each subdirectory.
                  items:
                    type: string
                  type: array
                fleecing:
                  description: Options for backup fleecing (VM only).
                  format: backup-fleecing
                  type: string
                ionice:
                  default: 7
                  description: Set IO priority when using the BFQ scheduler. For snapshot
                    and suspend mode backups of VMs, this only affects the compressor.
                    A value of 8 means the idle priority is used, otherwise the best-effort
                    priority is used with the specified value.
                  maximum: 8
                  minimum: 0
                  type: integer
                lockwait:
                  default: 180
                  description: Maximal time to wait for the global lock (minutes).
                  minimum: 0
                  type: integer
                mailnotification:
                  default: always
                  description: 'Deprecated: use notification targets/matchers instead.
                    Specify when to send a notification mail'
                  enum:
                  - always
                  - failure
                  type: string
                mailto:
                  description: 'Deprecated: Use notification targets/matchers instead.
                    Comma-separated list of email addresses or users that should receive
                    email notifications.'
                  format: email-or-username-list
                  type: string
                maxfiles:
                  description: 'Deprecated: use ''prune-backups'' instead. Maximal
                    number of backup files per guest system.'
                  minimum: 1
                  type: integer
                mode:
                  default: snapshot
                  description: Backup mode.
                  enum:
                  - snapshot
                  - suspend
                  - stop
                  type: string
                node:
                  description: Only run if executed on this node.
                  format: pve-node
                  type: string
                notes-template:
                  description: Template string for generating notes for the backup(s).
                    It can contain variables which will be replaced by their values.
                    Currently supported are {{cluster}}, {{guestname}}, {{node}},
                    and {{vmid}}, but more might be added in the future. Needs to
                    be a single line, newline and backslash need to be escaped as
                    '\n' and '\\' respectively.
                  maxLength: 1024
                  type: string
                notification-mode:
                  default: auto
                  description: Determine which notification system to use. If set
                    to 'legacy-sendmail', vzdump will consider the mailto/mailnotification
                    parameters and send emails to the specified address(es) via the
                    'sendmail' command. If set to 'notification-system', a notification
                    will be sent via PVE's notification system, and the mailto and
                    mailnotification will be ignored. If set to 'auto' (default setting),
                    an email will be sent if mailto is set, and the notification system
                    will be used if not.
                  enum:
                  - auto
                  - legacy-sendmail
                  - notification-system
                  type: string
                notification-policy:
                  default: always
                  description: 'Deprecated: Do not use'
                  enum:
                  - always
                  - failure
                  - never
                  type: string
                notification-target:
                  description: 'Deprecated: Do not use'
                  format: pve-configid
                  type: string
                pbs-change-detection-mode:
                  description: PBS mode used to detect file changes and switch encoding
                    format for container backups.
                  enum:
                  - legacy
                  - data
                  - metadata
                  type: string
                performance:
                  description: Other performance-related settings.
                  format: backup-performance
                  type: string
                pigz:
                  default: 0
                  description: Use pigz instead of gzip when N>0. N=1 uses half of
                    cores, N>1 uses N as thread count.
                  type: integer
                pool:
                  description: Backup all known guest systems included in the specified
                    pool.
                  type: string
                protected:
                  description: If true, mark backup(s) as protected.
                  type: boolean
                prune-backups:
                  default: keep-all=1
                  description: Use these retention options instead of those from the
                    storage configuration.
                  format: prune-backups
                  type: string
                quiet:
                  default: 0
                  description: Be quiet.
                  type: boolean
                remove:
                  default: 1
                  description: Prune older backups according to 'prune-backups'.
                  type: boolean
                repeat-missed:
                  default: 0
                  description: If true, the job will be run as soon as possible if
                    it was missed while the scheduler was not running.
                  type: boolean
                schedule:
                  description: Backup schedule. The format is a subset of `systemd`
                    calendar events.
                  format: pve-calendar-event
                  maxLength: 128
                  type: string
                script:
                  description: Use specified hook script.
                  type: string
                starttime:
                  description: Job Start time.
                  pattern: \d{1,2}:\d{1,2}
                  type: string
                stdexcludes:
                  default: 1
                  description: Exclude temporary files and logs.
                  type: boolean
                stop:
                  default: 0
                  description: Stop running backup jobs on this host.
                  type: boolean
                stopwait:
                  default: 10
                  description: Maximal time to wait until a guest system is stopped
                    (minutes).
                  minimum: 0
                  type: integer
                storage:
                  description: Store resulting file to this storage.
                  format: pve-storage-id
                  type: string
                tmpdir:
                  description: Store temporary files to specified directory.
                  type: string
                vmid:
                  description: The ID of the guest system you want to backup.
                  format: pve-vmid-list
                  type: string
                zstd:
                  default: 1
                  description: Zstd threads. N=0 uses half of the available cores,
                    if N is set to a value bigger than 0, N is used as thread count.
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update vzdump backup job definition.
      tags:
      - Cluster
  /cluster/cluster/backup/cluster/backup/{id}/cluster/backup/{id}/included_volumes:
    get:
      description: Returns included guests and the backup status of their disks. Optimized
        to be used in ExtJS tree views.
      operationId: get_cluster_cluster_backup_cluster_backup_id_cluster_backup_id_included_volumes
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Root node of the tree object. Children represent guests,
                  grandchildren represent volumes of that guest.
                properties:
                  children:
                    items:
                      properties:
                        children:
                          description: The volumes of the guest with the information
                            if they will be included in backups.
                          items:
                            properties:
                              id:
                                description: Configuration key of the volume.
                                type: string
                              included:
                                description: Whether the volume is included in the
                                  backup or not.
                                type: boolean
                              name:
                                description: Name of the volume.
                                type: string
                              reason:
                                description: The reason why the volume is included
                                  (or excluded).
                                type: string
                            type: object
                          type: array
                        id:
                          description: VMID of the guest.
                          type: integer
                        name:
                          description: Name of the guest
                          type: string
                        type:
                          description: Type of the guest, VM, CT or unknown for removed
                            but not purged guests.
                          type: string
                      type: object
                    type: array
                type: object
          description: Root node of the tree object. Children represent guests, grandchildren
            represent volumes of that guest.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns included guests and the backup status of their disks. Optimized
        to be used in ExtJS tree views.
      tags:
      - Cluster
  /cluster/cluster/ceph:
    get:
      description: Cluster ceph index.
      operationId: get_cluster_cluster_ceph
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Cluster ceph index.
      tags:
      - Cluster
  /cluster/cluster/ceph/cluster/ceph/flags:
    get:
      description: get the status of all ceph flags
      operationId: get_cluster_cluster_ceph_cluster_ceph_flags
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    description:
                      description: Flag description.
                      type: string
                    name:
                      description: Flag name.
                      type: string
                    value:
                      description: Flag value.
                      type: boolean
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: get the status of all ceph flags
      tags:
      - Cluster
    put:
      description: Set/Unset multiple ceph flags at once.
      operationId: put_cluster_cluster_ceph_cluster_ceph_flags
      requestBody:
        content:
          application/json:
            schema:
              properties:
                nobackfill:
                  description: Backfilling of PGs is suspended.
                  type: boolean
                nodeep-scrub:
                  description: Deep Scrubbing is disabled.
                  type: boolean
                nodown:
                  description: OSD failure reports are being ignored, such that the
                    monitors will not mark OSDs down.
                  type: boolean
                noin:
                  description: OSDs that were previously marked out will not be marked
                    back in when they start.
                  type: boolean
                noout:
                  description: OSDs will not automatically be marked out after the
                    configured interval.
                  type: boolean
                norebalance:
                  description: Rebalancing of PGs is suspended.
                  type: boolean
                norecover:
                  description: Recovery of PGs is suspended.
                  type: boolean
                noscrub:
                  description: Scrubbing is disabled.
                  type: boolean
                notieragent:
                  description: Cache tiering activity is suspended.
                  type: boolean
                noup:
                  description: OSDs are not allowed to start.
                  type: boolean
                pause:
                  description: Pauses read and writes.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set/Unset multiple ceph flags at once.
      tags:
      - Cluster
  /cluster/cluster/ceph/cluster/ceph/flags/cluster/ceph/flags/{flag}:
    get:
      description: Get the status of a specific ceph flag.
      operationId: get_cluster_cluster_ceph_cluster_ceph_flags_cluster_ceph_flags_flag
      parameters:
      - description: The flag parameter
        in: path
        name: flag
        required: true
        schema:
          description: The flag parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the status of a specific ceph flag.
      tags:
      - Cluster
    put:
      description: Set or clear (unset) a specific ceph flag
      operationId: put_cluster_cluster_ceph_cluster_ceph_flags_cluster_ceph_flags_flag
      parameters:
      - description: The flag parameter
        in: path
        name: flag
        required: true
        schema:
          description: The flag parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  description: The new value of the flag
                  type: boolean
              required:
              - value
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set or clear (unset) a specific ceph flag
      tags:
      - Cluster
  /cluster/cluster/ceph/cluster/ceph/metadata:
    get:
      description: Get ceph metadata.
      operationId: get_cluster_cluster_ceph_cluster_ceph_metadata
      parameters:
      - in: query
        name: scope
        required: false
        schema:
          default: all
          enum:
          - all
          - versions
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Items for each type of service containing objects for
                  each instance.
                properties:
                  mds:
                    description: Metadata servers configured in the cluster and their
                      properties.
                    properties:
                      '{id}':
                        description: Useful properties are listed, but not the full
                          list.
                        properties:
                          addr:
                            description: Bind addresses and ports.
                            type: string
                          ceph_release:
                            description: Ceph release codename currently used.
                            type: string
                          ceph_version:
                            description: Version info currently used by the service.
                            type: string
                          ceph_version_short:
                            description: Short version (numerical) info currently
                              used by the service.
                            type: string
                          hostname:
                            description: Hostname on which the service is running.
                            type: string
                          mem_swap_kb:
                            description: Memory of the service currently in swap.
                            type: integer
                          mem_total_kb:
                            description: Memory consumption of the service.
                            type: integer
                          name:
                            description: Name of the service instance.
                            type: string
                        type: object
                    type: object
                  mgr:
                    description: Managers configured in the cluster and their properties.
                    properties:
                      '{id}':
                        description: Useful properties are listed, but not the full
                          list.
                        properties:
                          addr:
                            description: Bind address
                            type: string
                          ceph_release:
                            description: Ceph release codename currently used.
                            type: string
                          ceph_version:
                            description: Version info currently used by the service.
                            type: string
                          ceph_version_short:
                            description: Short version (numerical) info currently
                              used by the service.
                            type: string
                          hostname:
                            description: Hostname on which the service is running.
                            type: string
                          mem_swap_kb:
                            description: Memory of the service currently in swap.
                            type: integer
                          mem_total_kb:
                            description: Memory consumption of the service.
                            type: integer
                          name:
                            description: Name of the service instance.
                            type: string
                        type: object
                    type: object
                  mon:
                    description: Monitors configured in the cluster and their properties.
                    properties:
                      '{id}':
                        description: Useful properties are listed, but not the full
                          list.
                        properties:
                          addrs:
                            description: Bind addresses and ports.
                            type: string
                          ceph_release:
                            description: Ceph release codename currently used.
                            type: string
                          ceph_version:
                            description: Version info currently used by the service.
                            type: string
                          ceph_version_short:
                            description: Short version (numerical) info currently
                              used by the service.
                            type: string
                          hostname:
                            description: Hostname on which the service is running.
                            type: string
                          mem_swap_kb:
                            description: Memory of the service currently in swap.
                            type: integer
                          mem_total_kb:
                            description: Memory consumption of the service.
                            type: integer
                          name:
                            description: Name of the service instance.
                            type: string
                        type: object
                    type: object
                  node:
                    description: Ceph version installed on the nodes.
                    properties:
                      '{node}':
                        properties:
                          buildcommit:
                            description: GIT commit used for the build.
                            type: string
                          version:
                            description: Version info.
                            properties:
                              parts:
                                description: major, minor & patch
                                type: array
                              str:
                                description: Version as single string.
                                type: string
                            type: object
                        type: object
                    type: object
                  osd:
                    description: OSDs configured in the cluster and their properties.
                    type: array
                type: object
          description: Items for each type of service containing objects for each
            instance.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get ceph metadata.
      tags:
      - Cluster
  /cluster/cluster/ceph/cluster/ceph/status:
    get:
      description: Get ceph status.
      operationId: get_cluster_cluster_ceph_cluster_ceph_status
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get ceph status.
      tags:
      - Cluster
  /cluster/cluster/config:
    get:
      description: Directory index.
      operationId: get_cluster_cluster_config
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Cluster
    post:
      description: Generate new cluster configuration. If no links given, default
        to local IP address as link0.
      operationId: post_cluster_cluster_config
      requestBody:
        content:
          application/json:
            schema:
              properties:
                clustername:
                  description: The name of the cluster.
                  format: pve-node
                  maxLength: 15
                  type: string
                link[n]:
                  description: Address and priority information of a single corosync
                    link. (up to 8 links supported; link0..link7)
                  format:
                    address:
                      default_key: 1
                      description: Hostname (or IP) of this corosync link address.
                      format: address
                      format_description: IP
                      type: string
                    priority:
                      default: 0
                      description: The priority for the link when knet is used in
                        'passive' mode (default). Lower value means higher priority.
                        Only valid for cluster create, ignored on node add.
                      maximum: 255
                      minimum: 0
                      optional: 1
                      type: integer
                  type: string
                nodeid:
                  description: Node id for this node.
                  minimum: 1
                  type: integer
                votes:
                  description: Number of votes for this node.
                  minimum: 1
                  type: integer
              required:
              - clustername
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Generate new cluster configuration. If no links given, default to local
        IP address as link0.
      tags:
      - Cluster
  /cluster/cluster/config/cluster/config/apiversion:
    get:
      description: Return the version of the cluster join API available on this node.
      operationId: get_cluster_cluster_config_cluster_config_apiversion
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Cluster Join API version, currently 1
                type: integer
          description: Cluster Join API version, currently 1
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return the version of the cluster join API available on this node.
      tags:
      - Cluster
  /cluster/cluster/config/cluster/config/join:
    get:
      description: Get information needed to join this cluster over the connected
        node.
      operationId: get_cluster_cluster_config_cluster_config_join
      parameters:
      - description: 'The node for which the joinee gets the nodeinfo. '
        in: query
        name: node
        required: false
        schema:
          default: current connected node
          description: 'The node for which the joinee gets the nodeinfo. '
          format: pve-node
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  config_digest:
                    type: string
                  nodelist:
                    items:
                      properties:
                        name:
                          description: The cluster node name.
                          format: pve-node
                          type: string
                        nodeid:
                          description: Node id for this node.
                          type: integer
                        pve_addr:
                          format: ip
                          type: string
                        pve_fp:
                          description: Certificate SHA 256 fingerprint.
                          type: string
                        quorum_votes:
                          type: integer
                        ring0_addr:
                          description: Address and priority information of a single
                            corosync link. (up to 8 links supported; link0..link7)
                          format:
                            address:
                              default_key: 1
                              description: Hostname (or IP) of this corosync link
                                address.
                              format: address
                              format_description: IP
                              type: string
                            priority:
                              default: 0
                              description: The priority for the link when knet is
                                used in 'passive' mode (default). Lower value means
                                higher priority. Only valid for cluster create, ignored
                                on node add.
                              maximum: 255
                              minimum: 0
                              optional: 1
                              type: integer
                          type: string
                      type: object
                    type: array
                  preferred_node:
                    description: The cluster node name.
                    format: pve-node
                    type: string
                  totem:
                    type: object
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get information needed to join this cluster over the connected node.
      tags:
      - Cluster
    post:
      description: Joins this node into an existing cluster. If no links are given,
        default to IP resolved by node's hostname on single link (fallback fails for
        clusters with multiple links).
      operationId: post_cluster_cluster_config_cluster_config_join
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                force:
                  description: Do not throw error if node already exists.
                  type: boolean
                hostname:
                  description: Hostname (or IP) of an existing cluster member.
                  type: string
                link[n]:
                  description: Address and priority information of a single corosync
                    link. (up to 8 links supported; link0..link7)
                  format:
                    address:
                      default_key: 1
                      description: Hostname (or IP) of this corosync link address.
                      format: address
                      format_description: IP
                      type: string
                    priority:
                      default: 0
                      description: The priority for the link when knet is used in
                        'passive' mode (default). Lower value means higher priority.
                        Only valid for cluster create, ignored on node add.
                      maximum: 255
                      minimum: 0
                      optional: 1
                      type: integer
                  type: string
                nodeid:
                  description: Node id for this node.
                  minimum: 1
                  type: integer
                password:
                  description: Superuser (root) password of peer node.
                  maxLength: 128
                  type: string
                votes:
                  description: Number of votes for this node
                  minimum: 0
                  type: integer
              required:
              - fingerprint
              - hostname
              - password
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Joins this node into an existing cluster. If no links are given, default
        to IP resolved by node's hostname on single link (fallback fails for clusters
        with multiple links).
      tags:
      - Cluster
  /cluster/cluster/config/cluster/config/nodes:
    get:
      description: Corosync node list.
      operationId: get_cluster_cluster_config_cluster_config_nodes
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    node:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Corosync node list.
      tags:
      - Cluster
  /cluster/cluster/config/cluster/config/nodes/cluster/config/nodes/{node}:
    delete:
      description: Removes a node from the cluster configuration.
      operationId: delete_cluster_cluster_config_cluster_config_nodes_cluster_config_nodes_node
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Removes a node from the cluster configuration.
      tags:
      - Cluster
    post:
      description: Adds a node to the cluster configuration. This call is for internal
        use.
      operationId: post_cluster_cluster_config_cluster_config_nodes_cluster_config_nodes_node
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                apiversion:
                  description: The JOIN_API_VERSION of the new node.
                  type: integer
                force:
                  description: Do not throw error if node already exists.
                  type: boolean
                link[n]:
                  description: Address and priority information of a single corosync
                    link. (up to 8 links supported; link0..link7)
                  format:
                    address:
                      default_key: 1
                      description: Hostname (or IP) of this corosync link address.
                      format: address
                      format_description: IP
                      type: string
                    priority:
                      default: 0
                      description: The priority for the link when knet is used in
                        'passive' mode (default). Lower value means higher priority.
                        Only valid for cluster create, ignored on node add.
                      maximum: 255
                      minimum: 0
                      optional: 1
                      type: integer
                  type: string
                new_node_ip:
                  description: IP Address of node to add. Used as fallback if no links
                    are given.
                  format: ip
                  type: string
                nodeid:
                  description: Node id for this node.
                  minimum: 1
                  type: integer
                votes:
                  description: Number of votes for this node
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  corosync_authkey:
                    type: string
                  corosync_conf:
                    type: string
                  warnings:
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Adds a node to the cluster configuration. This call is for internal
        use.
      tags:
      - Cluster
  /cluster/cluster/config/cluster/config/qdevice:
    get:
      description: Get QDevice status
      operationId: get_cluster_cluster_config_cluster_config_qdevice
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get QDevice status
      tags:
      - Cluster
  /cluster/cluster/config/cluster/config/totem:
    get:
      description: Get corosync totem protocol settings.
      operationId: get_cluster_cluster_config_cluster_config_totem
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get corosync totem protocol settings.
      tags:
      - Cluster
  /cluster/cluster/firewall:
    get:
      description: Directory index.
      operationId: get_cluster_cluster_firewall
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/aliases:
    get:
      description: List aliases
      operationId: get_cluster_cluster_firewall_cluster_firewall_aliases
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cidr:
                      type: string
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    name:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List aliases
      tags:
      - Cluster
    post:
      description: Create IP or Network Alias.
      operationId: post_cluster_cluster_firewall_cluster_firewall_aliases
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDR
                  type: string
                comment:
                  type: string
                name:
                  description: Alias name.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - cidr
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create IP or Network Alias.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/aliases/cluster/firewall/aliases/{name}:
    delete:
      description: Remove IP or Network alias.
      operationId: delete_cluster_cluster_firewall_cluster_firewall_aliases_cluster_firewall_aliases_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove IP or Network alias.
      tags:
      - Cluster
    get:
      description: Read alias.
      operationId: get_cluster_cluster_firewall_cluster_firewall_aliases_cluster_firewall_aliases_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read alias.
      tags:
      - Cluster
    put:
      description: Update IP or Network alias.
      operationId: put_cluster_cluster_firewall_cluster_firewall_aliases_cluster_firewall_aliases_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDR
                  type: string
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                rename:
                  description: Rename an existing alias.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP or Network alias.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/groups:
    get:
      description: List security groups.
      operationId: get_cluster_cluster_firewall_cluster_firewall_groups
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    group:
                      description: Security Group name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List security groups.
      tags:
      - Cluster
    post:
      description: Create new security group.
      operationId: post_cluster_cluster_firewall_cluster_firewall_groups
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                group:
                  description: Security Group name.
                  maxLength: 18
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                rename:
                  description: Rename/update an existing security group. You can set
                    'rename' to the same value as 'name' to update the 'comment' of
                    an existing group.
                  maxLength: 18
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - group
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new security group.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/groups/cluster/firewall/groups/{group}:
    delete:
      description: Delete security group.
      operationId: delete_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete security group.
      tags:
      - Cluster
    get:
      description: List rules.
      operationId: get_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pos:
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List rules.
      tags:
      - Cluster
    post:
      description: Create new rule.
      operationId: post_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                pos:
                  description: Update rule at position <pos>.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              required:
              - action
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new rule.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/groups/cluster/firewall/groups/{group}/cluster/firewall/groups/{group}/{pos}:
    delete:
      description: Delete rule.
      operationId: delete_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group_cluster_firewall_groups_group_pos
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete rule.
      tags:
      - Cluster
    get:
      description: Get single rule data.
      operationId: get_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group_cluster_firewall_groups_group_pos
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    type: string
                  comment:
                    type: string
                  dest:
                    type: string
                  dport:
                    type: string
                  enable:
                    type: integer
                  icmp-type:
                    type: string
                  iface:
                    type: string
                  ipversion:
                    type: integer
                  log:
                    description: Log level for firewall rule
                    type: string
                  macro:
                    type: string
                  pos:
                    type: integer
                  proto:
                    type: string
                  source:
                    type: string
                  sport:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get single rule data.
      tags:
      - Cluster
    put:
      description: Modify rule data.
      operationId: put_cluster_cluster_firewall_cluster_firewall_groups_cluster_firewall_groups_group_cluster_firewall_groups_group_pos
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                moveto:
                  description: Move rule to new position <moveto>. Other arguments
                    are ignored.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Modify rule data.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/ipset:
    get:
      description: List IPSets
      operationId: get_cluster_cluster_firewall_cluster_firewall_ipset
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    name:
                      description: IP set name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List IPSets
      tags:
      - Cluster
    post:
      description: Create new IPSet
      operationId: post_cluster_cluster_firewall_cluster_firewall_ipset
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                name:
                  description: IP set name.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                rename:
                  description: Rename an existing IPSet. You can set 'rename' to the
                    same value as 'name' to update the 'comment' of an existing IPSet.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new IPSet
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/ipset/cluster/firewall/ipset/{name}:
    delete:
      description: Delete IPSet
      operationId: delete_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Delete all members of the IPSet, if there are any.
        in: query
        name: force
        required: false
        schema:
          description: Delete all members of the IPSet, if there are any.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete IPSet
      tags:
      - Cluster
    get:
      description: List IPSet content
      operationId: get_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cidr:
                      type: string
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    nomatch:
                      type: boolean
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List IPSet content
      tags:
      - Cluster
    post:
      description: Add IP or Network to IPSet.
      operationId: post_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDRorAlias
                  type: string
                comment:
                  type: string
                nomatch:
                  type: boolean
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add IP or Network to IPSet.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/ipset/cluster/firewall/ipset/{name}/cluster/firewall/ipset/{name}/{cidr}:
    delete:
      description: Remove IP or Network from IPSet.
      operationId: delete_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name_cluster_firewall_ipset_name_cidr
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove IP or Network from IPSet.
      tags:
      - Cluster
    get:
      description: Read IP or Network settings from IPSet.
      operationId: get_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name_cluster_firewall_ipset_name_cidr
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read IP or Network settings from IPSet.
      tags:
      - Cluster
    put:
      description: Update IP or Network settings
      operationId: put_cluster_cluster_firewall_cluster_firewall_ipset_cluster_firewall_ipset_name_cluster_firewall_ipset_name_cidr
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                nomatch:
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP or Network settings
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/macros:
    get:
      description: List available macros
      operationId: get_cluster_cluster_firewall_cluster_firewall_macros
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    descr:
                      description: More verbose description (if available).
                      type: string
                    macro:
                      description: Macro name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List available macros
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/options:
    get:
      description: Get Firewall options.
      operationId: get_cluster_cluster_firewall_cluster_firewall_options
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ebtables:
                    description: Enable ebtables rules cluster wide.
                    type: boolean
                  enable:
                    description: Enable or disable the firewall cluster wide.
                    type: integer
                  log_ratelimit:
                    description: Log ratelimiting settings
                    format:
                      burst:
                        default: 5
                        description: Initial burst of packages which will always get
                          logged before the rate is applied
                        minimum: 0
                        optional: 1
                        type: integer
                      enable:
                        default: '1'
                        default_key: 1
                        description: Enable or disable log rate limiting
                        type: boolean
                      rate:
                        default: 1/second
                        description: Frequency with which the burst bucket gets refilled
                        format_description: rate
                        optional: 1
                        pattern: '[1-9][0-9]*\/(second|minute|hour|day)'
                        type: string
                    type: string
                  policy_forward:
                    description: Forward policy.
                    type: string
                  policy_in:
                    description: Input policy.
                    type: string
                  policy_out:
                    description: Output policy.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get Firewall options.
      tags:
      - Cluster
    put:
      description: Set Firewall options.
      operationId: put_cluster_cluster_firewall_cluster_firewall_options
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                ebtables:
                  default: 1
                  description: Enable ebtables rules cluster wide.
                  type: boolean
                enable:
                  description: Enable or disable the firewall cluster wide.
                  minimum: 0
                  type: integer
                log_ratelimit:
                  description: Log ratelimiting settings
                  format:
                    burst:
                      default: 5
                      description: Initial burst of packages which will always get
                        logged before the rate is applied
                      minimum: 0
                      optional: 1
                      type: integer
                    enable:
                      default: '1'
                      default_key: 1
                      description: Enable or disable log rate limiting
                      type: boolean
                    rate:
                      default: 1/second
                      description: Frequency with which the burst bucket gets refilled
                      format_description: rate
                      optional: 1
                      pattern: '[1-9][0-9]*\/(second|minute|hour|day)'
                      type: string
                  type: string
                policy_forward:
                  description: Forward policy.
                  enum:
                  - ACCEPT
                  - DROP
                  type: string
                policy_in:
                  description: Input policy.
                  enum:
                  - ACCEPT
                  - REJECT
                  - DROP
                  type: string
                policy_out:
                  description: Output policy.
                  enum:
                  - ACCEPT
                  - REJECT
                  - DROP
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set Firewall options.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/refs:
    get:
      description: Lists possible IPSet/Alias reference which are allowed in source/dest
        properties.
      operationId: get_cluster_cluster_firewall_cluster_firewall_refs
      parameters:
      - description: Only list references of specified type.
        in: query
        name: type
        required: false
        schema:
          description: Only list references of specified type.
          enum:
          - alias
          - ipset
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    name:
                      type: string
                    ref:
                      type: string
                    scope:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest
        properties.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/rules:
    get:
      description: List rules.
      operationId: get_cluster_cluster_firewall_cluster_firewall_rules
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pos:
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List rules.
      tags:
      - Cluster
    post:
      description: Create new rule.
      operationId: post_cluster_cluster_firewall_cluster_firewall_rules
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                pos:
                  description: Update rule at position <pos>.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              required:
              - action
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new rule.
      tags:
      - Cluster
  /cluster/cluster/firewall/cluster/firewall/rules/cluster/firewall/rules/{pos}:
    delete:
      description: Delete rule.
      operationId: delete_cluster_cluster_firewall_cluster_firewall_rules_cluster_firewall_rules_pos
      parameters:
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete rule.
      tags:
      - Cluster
    get:
      description: Get single rule data.
      operationId: get_cluster_cluster_firewall_cluster_firewall_rules_cluster_firewall_rules_pos
      parameters:
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    type: string
                  comment:
                    type: string
                  dest:
                    type: string
                  dport:
                    type: string
                  enable:
                    type: integer
                  icmp-type:
                    type: string
                  iface:
                    type: string
                  ipversion:
                    type: integer
                  log:
                    description: Log level for firewall rule
                    type: string
                  macro:
                    type: string
                  pos:
                    type: integer
                  proto:
                    type: string
                  source:
                    type: string
                  sport:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get single rule data.
      tags:
      - Cluster
    put:
      description: Modify rule data.
      operationId: put_cluster_cluster_firewall_cluster_firewall_rules_cluster_firewall_rules_pos
      parameters:
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                moveto:
                  description: Move rule to new position <moveto>. Other arguments
                    are ignored.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Modify rule data.
      tags:
      - Cluster
  /cluster/cluster/ha:
    get:
      description: Directory index.
      operationId: get_cluster_cluster_ha
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/groups:
    get:
      description: Get HA groups.
      operationId: get_cluster_cluster_ha_cluster_ha_groups
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    group:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get HA groups.
      tags:
      - Cluster
    post:
      description: Create a new HA group.
      operationId: post_cluster_cluster_ha_cluster_ha_groups
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                group:
                  description: The HA group identifier.
                  format: pve-configid
                  type: string
                nodes:
                  description: List of cluster node names with optional priority.
                  format: pve-ha-group-node-list
                  type: string
                nofailback:
                  default: 0
                  description: The CRM tries to run services on the node with the
                    highest priority. If a node with higher priority comes online,
                    the CRM migrates the service to that node. Enabling nofailback
                    prevents that behavior.
                  type: boolean
                restricted:
                  default: 0
                  description: Resources bound to restricted groups may only run on
                    nodes defined by the group.
                  type: boolean
                type:
                  description: Group type.
                  enum:
                  - group
                  type: string
              required:
              - group
              - nodes
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new HA group.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/groups/cluster/ha/groups/{group}:
    delete:
      description: Delete ha group configuration.
      operationId: delete_cluster_cluster_ha_cluster_ha_groups_cluster_ha_groups_group
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete ha group configuration.
      tags:
      - Cluster
    get:
      description: Read ha group configuration.
      operationId: get_cluster_cluster_ha_cluster_ha_groups_cluster_ha_groups_group
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxSuccess'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read ha group configuration.
      tags:
      - Cluster
    put:
      description: Update ha group configuration.
      operationId: put_cluster_cluster_ha_cluster_ha_groups_cluster_ha_groups_group
      parameters:
      - description: The group parameter
        in: path
        name: group
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                nodes:
                  description: List of cluster node names with optional priority.
                  format: pve-ha-group-node-list
                  type: string
                nofailback:
                  default: 0
                  description: The CRM tries to run services on the node with the
                    highest priority. If a node with higher priority comes online,
                    the CRM migrates the service to that node. Enabling nofailback
                    prevents that behavior.
                  type: boolean
                restricted:
                  default: 0
                  description: Resources bound to restricted groups may only run on
                    nodes defined by the group.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update ha group configuration.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/resources:
    get:
      description: List HA resources.
      operationId: get_cluster_cluster_ha_cluster_ha_resources
      parameters:
      - description: Only list resources of specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list resources of specific type
          enum:
          - ct
          - vm
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    sid:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List HA resources.
      tags:
      - Cluster
    post:
      description: Create a new HA resource.
      operationId: post_cluster_cluster_ha_cluster_ha_resources
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                group:
                  description: The HA group identifier.
                  format: pve-configid
                  type: string
                max_relocate:
                  default: 1
                  description: Maximal number of service relocate tries when a service
                    failes to start.
                  minimum: 0
                  type: integer
                max_restart:
                  default: 1
                  description: Maximal number of tries to restart the service on a
                    node after its start failed.
                  minimum: 0
                  type: integer
                sid:
                  description: 'HA resource ID. This consists of a resource type followed
                    by a resource specific name, separated with colon (example: vm:100
                    / ct:100). For virtual machines and containers, you can simply
                    use the VM or CT id as a shortcut (example: 100).'
                  format: pve-ha-resource-or-vm-id
                  type: string
                state:
                  default: started
                  description: Requested resource state.
                  enum:
                  - started
                  - stopped
                  - enabled
                  - disabled
                  - ignored
                  type: string
                type:
                  description: Resource type.
                  enum:
                  - ct
                  - vm
                  type: string
              required:
              - sid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new HA resource.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/resources/cluster/ha/resources/{sid}:
    delete:
      description: Delete resource configuration.
      operationId: delete_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid
      parameters:
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete resource configuration.
      tags:
      - Cluster
    get:
      description: Read resource configuration.
      operationId: get_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid
      parameters:
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    description: Description.
                    type: string
                  digest:
                    description: Can be used to prevent concurrent modifications.
                    type: string
                  group:
                    description: The HA group identifier.
                    format: pve-configid
                    type: string
                  max_relocate:
                    description: Maximal number of service relocate tries when a service
                      failes to start.
                    type: integer
                  max_restart:
                    description: Maximal number of tries to restart the service on
                      a node after its start failed.
                    type: integer
                  sid:
                    description: 'HA resource ID. This consists of a resource type
                      followed by a resource specific name, separated with colon (example:
                      vm:100 / ct:100). For virtual machines and containers, you can
                      simply use the VM or CT id as a shortcut (example: 100).'
                    format: pve-ha-resource-or-vm-id
                    type: string
                  state:
                    description: Requested resource state.
                    type: string
                  type:
                    description: The type of the resources.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read resource configuration.
      tags:
      - Cluster
    put:
      description: Update resource configuration.
      operationId: put_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid
      parameters:
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                group:
                  description: The HA group identifier.
                  format: pve-configid
                  type: string
                max_relocate:
                  default: 1
                  description: Maximal number of service relocate tries when a service
                    failes to start.
                  minimum: 0
                  type: integer
                max_restart:
                  default: 1
                  description: Maximal number of tries to restart the service on a
                    node after its start failed.
                  minimum: 0
                  type: integer
                state:
                  default: started
                  description: Requested resource state.
                  enum:
                  - started
                  - stopped
                  - enabled
                  - disabled
                  - ignored
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update resource configuration.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/resources/cluster/ha/resources/{sid}/cluster/ha/resources/{sid}/migrate:
    post:
      description: Request resource migration (online) to another node.
      operationId: post_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid_cluster_ha_resources_sid_migrate
      parameters:
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                node:
                  description: Target node.
                  format: pve-node
                  type: string
              required:
              - node
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Request resource migration (online) to another node.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/resources/cluster/ha/resources/{sid}/cluster/ha/resources/{sid}/relocate:
    post:
      description: Request resource relocatzion to another node. This stops the service
        on the old node, and restarts it on the target node.
      operationId: post_cluster_cluster_ha_cluster_ha_resources_cluster_ha_resources_sid_cluster_ha_resources_sid_relocate
      parameters:
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      - description: The sid parameter
        in: path
        name: sid
        required: true
        schema:
          description: The sid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                node:
                  description: Target node.
                  format: pve-node
                  type: string
              required:
              - node
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Request resource relocatzion to another node. This stops the service
        on the old node, and restarts it on the target node.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/status:
    get:
      description: Directory index.
      operationId: get_cluster_cluster_ha_cluster_ha_status
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/status/cluster/ha/status/current:
    get:
      description: Get HA manger status.
      operationId: get_cluster_cluster_ha_cluster_ha_status_cluster_ha_status_current
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    crm_state:
                      description: For type 'service'. Service state as seen by the
                        CRM.
                      type: string
                    id:
                      description: Status entry ID (quorum, master, lrm:<node>, service:<sid>).
                      type: string
                    max_relocate:
                      description: For type 'service'.
                      type: integer
                    max_restart:
                      description: For type 'service'.
                      type: integer
                    node:
                      description: Node associated to status entry.
                      type: string
                    quorate:
                      description: For type 'quorum'. Whether the cluster is quorate
                        or not.
                      type: boolean
                    request_state:
                      description: For type 'service'. Requested service state.
                      type: string
                    sid:
                      description: For type 'service'. Service ID.
                      type: string
                    state:
                      description: For type 'service'. Verbose service state.
                      type: string
                    status:
                      description: Status of the entry (value depends on type).
                      type: string
                    timestamp:
                      description: For type 'lrm','master'. Timestamp of the status
                        information.
                      type: integer
                    type:
                      description: Type of status entry.
                      type: object
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get HA manger status.
      tags:
      - Cluster
  /cluster/cluster/ha/cluster/ha/status/cluster/ha/status/manager_status:
    get:
      description: Get full HA manger status, including LRM status.
      operationId: get_cluster_cluster_ha_cluster_ha_status_cluster_ha_status_manager_status
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get full HA manger status, including LRM status.
      tags:
      - Cluster
  /cluster/cluster/jobs:
    get:
      description: Index for jobs related endpoints.
      operationId: get_cluster_cluster_jobs
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Directory index.
                items:
                  properties:
                    subdir:
                      description: API sub-directory endpoint
                      type: string
                  type: object
                type: array
          description: Directory index.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index for jobs related endpoints.
      tags:
      - Cluster
  /cluster/cluster/jobs/cluster/jobs/realm-sync:
    get:
      description: List configured realm-sync-jobs.
      operationId: get_cluster_cluster_jobs_cluster_jobs_realm-sync
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: A comment for the job.
                      type: string
                    enabled:
                      description: If the job is enabled or not.
                      type: boolean
                    id:
                      description: The ID of the entry.
                      type: string
                    last-run:
                      description: Last execution time of the job in seconds since
                        the beginning of the UNIX epoch
                      type: integer
                    next-run:
                      description: Next planned execution time of the job in seconds
                        since the beginning of the UNIX epoch.
                      type: integer
                    realm:
                      description: Authentication domain ID
                      format: pve-realm
                      type: string
                    remove-vanished:
                      description: 'A semicolon-separated list of things to remove
                        when they or the user vanishes during a sync. The following
                        values are possible: ''entry'' removes the user/group when
                        not returned from the sync. ''properties'' removes the set
                        properties on existing user/group that do not appear in the
                        source (even custom ones). ''acl'' removes acls when the user/group
                        is not returned from the sync. Instead of a list it also can
                        be ''none'' (the default).'
                      type: string
                    schedule:
                      description: The configured sync schedule.
                      type: string
                    scope:
                      description: Select what to sync.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured realm-sync-jobs.
      tags:
      - Cluster
  /cluster/cluster/jobs/cluster/jobs/realm-sync/cluster/jobs/realm-sync/{id}:
    delete:
      description: Delete realm-sync job definition.
      operationId: delete_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete realm-sync job definition.
      tags:
      - Cluster
    get:
      description: Read realm-sync job definition.
      operationId: get_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read realm-sync job definition.
      tags:
      - Cluster
    post:
      description: Create new realm-sync job.
      operationId: post_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description for the Job.
                  maxLength: 512
                  type: string
                enable-new:
                  default: '1'
                  description: Enable newly synced users immediately.
                  type: boolean
                enabled:
                  default: 1
                  description: Determines if the job is enabled.
                  type: boolean
                realm:
                  description: Authentication domain ID
                  format: pve-realm
                  maxLength: 32
                  type: string
                remove-vanished:
                  default: none
                  description: 'A semicolon-separated list of things to remove when
                    they or the user vanishes during a sync. The following values
                    are possible: ''entry'' removes the user/group when not returned
                    from the sync. ''properties'' removes the set properties on existing
                    user/group that do not appear in the source (even custom ones).
                    ''acl'' removes acls when the user/group is not returned from
                    the sync. Instead of a list it also can be ''none'' (the default).'
                  pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
                  type: string
                schedule:
                  description: Backup schedule. The format is a subset of `systemd`
                    calendar events.
                  format: pve-calendar-event
                  maxLength: 128
                  type: string
                scope:
                  description: Select what to sync.
                  enum:
                  - users
                  - groups
                  - both
                  type: string
              required:
              - schedule
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new realm-sync job.
      tags:
      - Cluster
    put:
      description: Update realm-sync job definition.
      operationId: put_cluster_cluster_jobs_cluster_jobs_realm-sync_cluster_jobs_realm-sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description for the Job.
                  maxLength: 512
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                enable-new:
                  default: '1'
                  description: Enable newly synced users immediately.
                  type: boolean
                enabled:
                  default: 1
                  description: Determines if the job is enabled.
                  type: boolean
                remove-vanished:
                  default: none
                  description: 'A semicolon-separated list of things to remove when
                    they or the user vanishes during a sync. The following values
                    are possible: ''entry'' removes the user/group when not returned
                    from the sync. ''properties'' removes the set properties on existing
                    user/group that do not appear in the source (even custom ones).
                    ''acl'' removes acls when the user/group is not returned from
                    the sync. Instead of a list it also can be ''none'' (the default).'
                  pattern: (?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none
                  type: string
                schedule:
                  description: Backup schedule. The format is a subset of `systemd`
                    calendar events.
                  format: pve-calendar-event
                  maxLength: 128
                  type: string
                scope:
                  description: Select what to sync.
                  enum:
                  - users
                  - groups
                  - both
                  type: string
              required:
              - schedule
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update realm-sync job definition.
      tags:
      - Cluster
  /cluster/cluster/jobs/cluster/jobs/schedule-analyze:
    get:
      description: Returns a list of future schedule runtimes.
      operationId: get_cluster_cluster_jobs_cluster_jobs_schedule-analyze
      parameters:
      - description: Number of event-iteration to simulate and return.
        in: query
        name: iterations
        required: false
        schema:
          default: 10
          description: Number of event-iteration to simulate and return.
          maximum: 100
          minimum: 1
          type: integer
      - description: Job schedule. The format is a subset of `systemd` calendar events.
        in: query
        name: schedule
        required: true
        schema:
          description: Job schedule. The format is a subset of `systemd` calendar
            events.
          format: pve-calendar-event
          maxLength: 128
          type: string
      - description: UNIX timestamp to start the calculation from. Defaults to the
          current time.
        in: query
        name: starttime
        required: false
        schema:
          description: UNIX timestamp to start the calculation from. Defaults to the
            current time.
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: An array of the next <iterations> events since <starttime>.
                items:
                  properties:
                    timestamp:
                      description: UNIX timestamp for the run.
                      type: integer
                    utc:
                      description: UTC timestamp for the run.
                      type: string
                  type: object
                type: array
          description: An array of the next <iterations> events since <starttime>.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of future schedule runtimes.
      tags:
      - Cluster
  /cluster/cluster/log:
    get:
      description: Read cluster log
      operationId: get_cluster_cluster_log
      parameters:
      - description: Maximum number of entries.
        in: query
        name: max
        required: false
        schema:
          description: Maximum number of entries.
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read cluster log
      tags:
      - Cluster
  /cluster/cluster/mapping:
    get:
      description: List resource types.
      operationId: get_cluster_cluster_mapping
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List resource types.
      tags:
      - Cluster
  /cluster/cluster/mapping/cluster/mapping/dir:
    get:
      description: List directory mapping
      operationId: get_cluster_cluster_mapping_cluster_mapping_dir
      parameters:
      - description: If given, checks the configurations on the given node for correctness,
          and adds relevant diagnostics for the directory to the response.
        in: query
        name: check-node
        required: false
        schema:
          description: If given, checks the configurations on the given node for correctness,
            and adds relevant diagnostics for the directory to the response.
          format: pve-node
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    checks:
                      description: A list of checks, only present if 'check-node'
                        is set.
                      items:
                        properties:
                          message:
                            description: The message of the error
                            type: string
                          severity:
                            description: The severity of the error
                            type: string
                        type: object
                      type: array
                    description:
                      description: A description of the logical mapping.
                      type: string
                    id:
                      description: The logical ID of the mapping.
                      type: string
                    map:
                      description: The entries of the mapping.
                      items:
                        description: A mapping for a node.
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List directory mapping
      tags:
      - Cluster
    post:
      description: Create a new directory mapping.
      operationId: post_cluster_cluster_mapping_cluster_mapping_dir
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the directory mapping
                  maxLength: 4096
                  type: string
                id:
                  description: The ID of the directory mapping
                  format: pve-configid
                  type: string
                map:
                  description: A list of maps for the cluster nodes.
                  items:
                    format:
                      node:
                        description: The cluster node name.
                        format: pve-node
                        type: string
                      path:
                        description: Absolute directory path that should be shared
                          with the guest.
                        format: pve-storage-path-in-property-string
                        type: string
                    type: string
                  type: array
              required:
              - id
              - map
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new directory mapping.
      tags:
      - Cluster
  /cluster/cluster/mapping/cluster/mapping/dir/cluster/mapping/dir/{id}:
    delete:
      description: Remove directory mapping.
      operationId: delete_cluster_cluster_mapping_cluster_mapping_dir_cluster_mapping_dir_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove directory mapping.
      tags:
      - Cluster
    get:
      description: Get directory mapping.
      operationId: get_cluster_cluster_mapping_cluster_mapping_dir_cluster_mapping_dir_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get directory mapping.
      tags:
      - Cluster
    put:
      description: Update a directory mapping.
      operationId: put_cluster_cluster_mapping_cluster_mapping_dir_cluster_mapping_dir_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                description:
                  description: Description of the directory mapping
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                map:
                  description: A list of maps for the cluster nodes.
                  items:
                    format:
                      node:
                        description: The cluster node name.
                        format: pve-node
                        type: string
                      path:
                        description: Absolute directory path that should be shared
                          with the guest.
                        format: pve-storage-path-in-property-string
                        type: string
                    type: string
                  type: array
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update a directory mapping.
      tags:
      - Cluster
  /cluster/cluster/mapping/cluster/mapping/pci:
    get:
      description: List PCI Hardware Mapping
      operationId: get_cluster_cluster_mapping_cluster_mapping_pci
      parameters:
      - description: If given, checks the configurations on the given node for correctness,
          and adds relevant diagnostics for the devices to the response.
        in: query
        name: check-node
        required: false
        schema:
          description: If given, checks the configurations on the given node for correctness,
            and adds relevant diagnostics for the devices to the response.
          format: pve-node
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    checks:
                      description: A list of checks, only present if 'check_node'
                        is set.
                      items:
                        properties:
                          message:
                            description: The message of the error
                            type: string
                          severity:
                            description: The severity of the error
                            type: string
                        type: object
                      type: array
                    description:
                      description: A description of the logical mapping.
                      type: string
                    id:
                      description: The logical ID of the mapping.
                      type: string
                    map:
                      description: The entries of the mapping.
                      items:
                        description: A mapping for a node.
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List PCI Hardware Mapping
      tags:
      - Cluster
    post:
      description: Create a new hardware mapping.
      operationId: post_cluster_cluster_mapping_cluster_mapping_pci
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the logical PCI device.
                  maxLength: 4096
                  type: string
                id:
                  description: The ID of the logical PCI mapping.
                  format: pve-configid
                  type: string
                live-migration-capable:
                  default: 0
                  description: Marks the device(s) as being able to be live-migrated
                    (Experimental). This needs hardware and driver support to work.
                  type: boolean
                map:
                  description: A list of maps for the cluster nodes.
                  items:
                    format:
                      description:
                        description: Description of the node specific device.
                        maxLength: 4096
                        optional: 1
                        type: string
                      id:
                        description: The vendor and device ID that is expected. Used
                          for detecting hardware changes
                        pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                        type: string
                      iommugroup:
                        description: The IOMMU group in which the device is to be
                          expected in. Used for detecting hardware changes.
                        optional: 1
                        type: integer
                      node:
                        description: The cluster node name.
                        format: pve-node
                        type: string
                      path:
                        description: The path to the device. If the function is omitted,
                          the whole device is mapped. In that case use the attributes
                          of the first device. You can give multiple paths as a semicolon
                          seperated list, the first available will then be chosen
                          on guest start.
                        pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                        type: string
                      subsystem-id:
                        description: The subsystem vendor and device ID that is expected.
                          Used for detecting hardware changes.
                        optional: 1
                        pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                        type: string
                    type: string
                  type: array
                mdev:
                  default: 0
                  description: Marks the device(s) as being capable of providing mediated
                    devices.
                  type: boolean
              required:
              - id
              - map
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new hardware mapping.
      tags:
      - Cluster
  /cluster/cluster/mapping/cluster/mapping/pci/cluster/mapping/pci/{id}:
    delete:
      description: Remove Hardware Mapping.
      operationId: delete_cluster_cluster_mapping_cluster_mapping_pci_cluster_mapping_pci_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove Hardware Mapping.
      tags:
      - Cluster
    get:
      description: Get PCI Mapping.
      operationId: get_cluster_cluster_mapping_cluster_mapping_pci_cluster_mapping_pci_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get PCI Mapping.
      tags:
      - Cluster
    put:
      description: Update a hardware mapping.
      operationId: put_cluster_cluster_mapping_cluster_mapping_pci_cluster_mapping_pci_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                description:
                  description: Description of the logical PCI device.
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                live-migration-capable:
                  default: 0
                  description: Marks the device(s) as being able to be live-migrated
                    (Experimental). This needs hardware and driver support to work.
                  type: boolean
                map:
                  description: A list of maps for the cluster nodes.
                  items:
                    format:
                      description:
                        description: Description of the node specific device.
                        maxLength: 4096
                        optional: 1
                        type: string
                      id:
                        description: The vendor and device ID that is expected. Used
                          for detecting hardware changes
                        pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                        type: string
                      iommugroup:
                        description: The IOMMU group in which the device is to be
                          expected in. Used for detecting hardware changes.
                        optional: 1
                        type: integer
                      node:
                        description: The cluster node name.
                        format: pve-node
                        type: string
                      path:
                        description: The path to the device. If the function is omitted,
                          the whole device is mapped. In that case use the attributes
                          of the first device. You can give multiple paths as a semicolon
                          seperated list, the first available will then be chosen
                          on guest start.
                        pattern: (?:[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?;)*[a-f0-9]{4,}:[a-f0-9]{2}:[a-f0-9]{2}(?:.[a-f0-9])?
                        type: string
                      subsystem-id:
                        description: The subsystem vendor and device ID that is expected.
                          Used for detecting hardware changes.
                        optional: 1
                        pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                        type: string
                    type: string
                  type: array
                mdev:
                  default: 0
                  description: Marks the device(s) as being capable of providing mediated
                    devices.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update a hardware mapping.
      tags:
      - Cluster
  /cluster/cluster/mapping/cluster/mapping/usb:
    get:
      description: List USB Hardware Mappings
      operationId: get_cluster_cluster_mapping_cluster_mapping_usb
      parameters:
      - description: If given, checks the configurations on the given node for correctness,
          and adds relevant errors to the devices.
        in: query
        name: check-node
        required: false
        schema:
          description: If given, checks the configurations on the given node for correctness,
            and adds relevant errors to the devices.
          format: pve-node
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    description:
                      description: A description of the logical mapping.
                      type: string
                    error:
                      description: A list of errors when 'check_node' is given.
                      type: object
                    id:
                      description: The logical ID of the mapping.
                      type: string
                    map:
                      description: The entries of the mapping.
                      items:
                        description: A mapping for a node.
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List USB Hardware Mappings
      tags:
      - Cluster
    post:
      description: Create a new hardware mapping.
      operationId: post_cluster_cluster_mapping_cluster_mapping_usb
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the logical USB device.
                  maxLength: 4096
                  type: string
                id:
                  description: The ID of the logical USB mapping.
                  format: pve-configid
                  type: string
                map:
                  description: A list of maps for the cluster nodes.
                  items:
                    format:
                      description:
                        description: Description of the node specific device.
                        maxLength: 4096
                        optional: 1
                        type: string
                      id:
                        description: The vendor and device ID that is expected. If
                          a USB path is given, it is only used for detecting hardware
                          changes
                        pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                        type: string
                      node:
                        description: The cluster node name.
                        format: pve-node
                        type: string
                      path:
                        description: The path to the usb device.
                        optional: 1
                        pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                        type: string
                    type: string
                  type: array
              required:
              - id
              - map
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new hardware mapping.
      tags:
      - Cluster
  /cluster/cluster/mapping/cluster/mapping/usb/cluster/mapping/usb/{id}:
    delete:
      description: Remove Hardware Mapping.
      operationId: delete_cluster_cluster_mapping_cluster_mapping_usb_cluster_mapping_usb_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove Hardware Mapping.
      tags:
      - Cluster
    get:
      description: Get USB Mapping.
      operationId: get_cluster_cluster_mapping_cluster_mapping_usb_cluster_mapping_usb_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get USB Mapping.
      tags:
      - Cluster
    put:
      description: Update a hardware mapping.
      operationId: put_cluster_cluster_mapping_cluster_mapping_usb_cluster_mapping_usb_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                description:
                  description: Description of the logical USB device.
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                map:
                  description: A list of maps for the cluster nodes.
                  items:
                    format:
                      description:
                        description: Description of the node specific device.
                        maxLength: 4096
                        optional: 1
                        type: string
                      id:
                        description: The vendor and device ID that is expected. If
                          a USB path is given, it is only used for detecting hardware
                          changes
                        pattern: (?^:^[0-9A-Fa-f]{4}:[0-9A-Fa-f]{4}$)
                        type: string
                      node:
                        description: The cluster node name.
                        format: pve-node
                        type: string
                      path:
                        description: The path to the usb device.
                        optional: 1
                        pattern: (?^:^(\d+)\-(\d+(\.\d+)*)$)
                        type: string
                    type: string
                  type: array
              required:
              - map
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update a hardware mapping.
      tags:
      - Cluster
  /cluster/cluster/metrics:
    get:
      description: Metrics index.
      operationId: get_cluster_cluster_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Metrics index.
      tags:
      - Cluster
  /cluster/cluster/metrics/cluster/metrics/export:
    get:
      description: Retrieve metrics of the cluster.
      operationId: get_cluster_cluster_metrics_cluster_metrics_export
      parameters:
      - description: Also return historic values. Returns full available metric history
          unless `start-time` is also set
        in: query
        name: history
        required: false
        schema:
          default: 0
          description: Also return historic values. Returns full available metric
            history unless `start-time` is also set
          type: boolean
      - description: Only return metrics for the current node instead of the whole
          cluster
        in: query
        name: local-only
        required: false
        schema:
          default: 0
          description: Only return metrics for the current node instead of the whole
            cluster
          type: boolean
      - description: Only include metrics with a timestamp > start-time.
        in: query
        name: start-time
        required: false
        schema:
          default: 0
          description: Only include metrics with a timestamp > start-time.
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: Array of system metrics. Metrics are sorted by their
                      timestamp.
                    items:
                      properties:
                        id:
                          description: Unique identifier for this metric object, for
                            instance 'node/<nodename>' or 'qemu/<vmid>'.
                          type: string
                        metric:
                          description: Name of the metric.
                          type: string
                        timestamp:
                          description: Time at which this metric was observed
                          type: integer
                        type:
                          description: Type of the metric.
                          type: string
                        value:
                          description: Metric value.
                          type: number
                      type: object
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Retrieve metrics of the cluster.
      tags:
      - Cluster
  /cluster/cluster/metrics/cluster/metrics/server:
    get:
      description: List configured metric servers.
      operationId: get_cluster_cluster_metrics_cluster_metrics_server
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    disable:
                      description: Flag to disable the plugin.
                      type: boolean
                    id:
                      description: The ID of the entry.
                      type: string
                    port:
                      description: Server network port
                      type: integer
                    server:
                      description: Server dns name or IP address
                      type: string
                    type:
                      description: Plugin type.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured metric servers.
      tags:
      - Cluster
  /cluster/cluster/metrics/cluster/metrics/server/cluster/metrics/server/{id}:
    delete:
      description: Remove Metric server.
      operationId: delete_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove Metric server.
      tags:
      - Cluster
    get:
      description: Read metric server configuration.
      operationId: get_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read metric server configuration.
      tags:
      - Cluster
    post:
      description: Create a new external metric server config
      operationId: post_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                api-path-prefix:
                  description: An API path prefix inserted between '<host>:<port>/'
                    and '/api2/'. Can be useful if the InfluxDB service runs behind
                    a reverse proxy.
                  type: string
                bucket:
                  description: The InfluxDB bucket/db. Only necessary when using the
                    http v2 api.
                  type: string
                disable:
                  description: Flag to disable the plugin.
                  type: boolean
                influxdbproto:
                  default: udp
                  enum:
                  - udp
                  - http
                  - https
                  type: string
                max-body-size:
                  default: 25000000
                  description: InfluxDB max-body-size in bytes. Requests are batched
                    up to this size.
                  minimum: 1
                  type: integer
                mtu:
                  default: 1500
                  description: MTU for metrics transmission over UDP
                  maximum: 65536
                  minimum: 512
                  type: integer
                organization:
                  description: The InfluxDB organization. Only necessary when using
                    the http v2 api. Has no meaning when using v2 compatibility api.
                  type: string
                path:
                  description: 'root graphite path (ex: proxmox.mycluster.mykey)'
                  format: graphite-path
                  type: string
                port:
                  description: server network port
                  maximum: 65536
                  minimum: 1
                  type: integer
                proto:
                  description: Protocol to send graphite data. TCP or UDP (default)
                  enum:
                  - udp
                  - tcp
                  type: string
                server:
                  description: server dns name or IP address
                  format: address
                  type: string
                timeout:
                  default: 1
                  description: graphite TCP socket timeout (default=1)
                  minimum: 0
                  type: integer
                token:
                  description: The InfluxDB access token. Only necessary when using
                    the http v2 api. If the v2 compatibility api is used, use 'user:password'
                    instead.
                  type: string
                type:
                  description: Plugin type.
                  enum:
                  - graphite
                  - influxdb
                  format: pve-configid
                  type: string
                verify-certificate:
                  default: 1
                  description: Set to 0 to disable certificate verification for https
                    endpoints.
                  type: boolean
              required:
              - port
              - server
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new external metric server config
      tags:
      - Cluster
    put:
      description: Update metric server configuration.
      operationId: put_cluster_cluster_metrics_cluster_metrics_server_cluster_metrics_server_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                api-path-prefix:
                  description: An API path prefix inserted between '<host>:<port>/'
                    and '/api2/'. Can be useful if the InfluxDB service runs behind
                    a reverse proxy.
                  type: string
                bucket:
                  description: The InfluxDB bucket/db. Only necessary when using the
                    http v2 api.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  description: Flag to disable the plugin.
                  type: boolean
                influxdbproto:
                  default: udp
                  enum:
                  - udp
                  - http
                  - https
                  type: string
                max-body-size:
                  default: 25000000
                  description: InfluxDB max-body-size in bytes. Requests are batched
                    up to this size.
                  minimum: 1
                  type: integer
                mtu:
                  default: 1500
                  description: MTU for metrics transmission over UDP
                  maximum: 65536
                  minimum: 512
                  type: integer
                organization:
                  description: The InfluxDB organization. Only necessary when using
                    the http v2 api. Has no meaning when using v2 compatibility api.
                  type: string
                path:
                  description: 'root graphite path (ex: proxmox.mycluster.mykey)'
                  format: graphite-path
                  type: string
                port:
                  description: server network port
                  maximum: 65536
                  minimum: 1
                  type: integer
                proto:
                  description: Protocol to send graphite data. TCP or UDP (default)
                  enum:
                  - udp
                  - tcp
                  type: string
                server:
                  description: server dns name or IP address
                  format: address
                  type: string
                timeout:
                  default: 1
                  description: graphite TCP socket timeout (default=1)
                  minimum: 0
                  type: integer
                token:
                  description: The InfluxDB access token. Only necessary when using
                    the http v2 api. If the v2 compatibility api is used, use 'user:password'
                    instead.
                  type: string
                verify-certificate:
                  default: 1
                  description: Set to 0 to disable certificate verification for https
                    endpoints.
                  type: boolean
              required:
              - port
              - server
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update metric server configuration.
      tags:
      - Cluster
  /cluster/cluster/nextid:
    get:
      description: Get next free VMID. Pass a VMID to assert that its free (at time
        of check).
      operationId: get_cluster_cluster_nextid
      parameters:
      - description: The (unique) ID of the VM.
        in: query
        name: vmid
        required: false
        schema:
          description: The (unique) ID of the VM.
          format: pve-vmid
          maximum: 999999999
          minimum: 100
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The next free VMID.
                type: integer
          description: The next free VMID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get next free VMID. Pass a VMID to assert that its free (at time of
        check).
      tags:
      - Cluster
  /cluster/cluster/notifications:
    get:
      description: Index for notification-related API endpoints.
      operationId: get_cluster_cluster_notifications
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index for notification-related API endpoints.
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/endpoints:
    get:
      description: Index for all available endpoint types.
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index for all available endpoint types.
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/gotify:
    get:
      description: Returns a list of all gotify endpoints
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Disable this target
                      type: boolean
                    name:
                      description: The name of the endpoint.
                      format: pve-configid
                      type: string
                    origin:
                      description: Show if this entry was created by a user or was
                        built-in
                      type: string
                    server:
                      description: Server URL
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of all gotify endpoints
      tags:
      - Cluster
    post:
      description: Create a new gotify endpoint
      operationId: post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                name:
                  description: The name of the endpoint.
                  format: pve-configid
                  type: string
                server:
                  description: Server URL
                  type: string
                token:
                  description: Secret token
                  type: string
              required:
              - name
              - server
              - token
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new gotify endpoint
      tags:
      - Cluster
  ? /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/gotify/cluster/notifications/endpoints/gotify/{name}
  : delete:
      description: Remove gotify endpoint
      operationId: delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify_cluster_notifications_endpoints_gotify_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove gotify endpoint
      tags:
      - Cluster
    get:
      description: Return a specific gotify endpoint
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify_cluster_notifications_endpoints_gotify_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    description: Comment
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      a different digest. This can be used to prevent concurrent modifications.
                    type: string
                  disable:
                    description: Disable this target
                    type: boolean
                  name:
                    description: The name of the endpoint.
                    format: pve-configid
                    type: string
                  server:
                    description: Server URL
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return a specific gotify endpoint
      tags:
      - Cluster
    put:
      description: Update existing gotify endpoint
      operationId: put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_gotify_cluster_notifications_endpoints_gotify_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  items:
                    format: pve-configid
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                server:
                  description: Server URL
                  type: string
                token:
                  description: Secret token
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update existing gotify endpoint
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/sendmail:
    get:
      description: Returns a list of all sendmail endpoints
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    author:
                      description: Author of the mail
                      type: string
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Disable this target
                      type: boolean
                    from-address:
                      description: '`From` address for the mail'
                      type: string
                    mailto:
                      description: List of email recipients
                      items:
                        format: email-or-username
                        type: string
                      type: array
                    mailto-user:
                      description: List of users
                      items:
                        format: pve-userid
                        type: string
                      type: array
                    name:
                      description: The name of the endpoint.
                      format: pve-configid
                      type: string
                    origin:
                      description: Show if this entry was created by a user or was
                        built-in
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of all sendmail endpoints
      tags:
      - Cluster
    post:
      description: Create a new sendmail endpoint
      operationId: post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail
                  type: string
                comment:
                  description: Comment
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                from-address:
                  description: '`From` address for the mail'
                  type: string
                mailto:
                  description: List of email recipients
                  items:
                    format: email-or-username
                    type: string
                  type: array
                mailto-user:
                  description: List of users
                  items:
                    format: pve-userid
                    type: string
                  type: array
                name:
                  description: The name of the endpoint.
                  format: pve-configid
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sendmail endpoint
      tags:
      - Cluster
  ? /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/sendmail/cluster/notifications/endpoints/sendmail/{name}
  : delete:
      description: Remove sendmail endpoint
      operationId: delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail_cluster_notifications_endpoints_sendmail_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove sendmail endpoint
      tags:
      - Cluster
    get:
      description: Return a specific sendmail endpoint
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail_cluster_notifications_endpoints_sendmail_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  author:
                    description: Author of the mail
                    type: string
                  comment:
                    description: Comment
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      a different digest. This can be used to prevent concurrent modifications.
                    type: string
                  disable:
                    description: Disable this target
                    type: boolean
                  from-address:
                    description: '`From` address for the mail'
                    type: string
                  mailto:
                    description: List of email recipients
                    items:
                      format: email-or-username
                      type: string
                    type: array
                  mailto-user:
                    description: List of users
                    items:
                      format: pve-userid
                      type: string
                    type: array
                  name:
                    description: The name of the endpoint.
                    format: pve-configid
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return a specific sendmail endpoint
      tags:
      - Cluster
    put:
      description: Update existing sendmail endpoint
      operationId: put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_sendmail_cluster_notifications_endpoints_sendmail_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail
                  type: string
                comment:
                  description: Comment
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  items:
                    format: pve-configid
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                from-address:
                  description: '`From` address for the mail'
                  type: string
                mailto:
                  description: List of email recipients
                  items:
                    format: email-or-username
                    type: string
                  type: array
                mailto-user:
                  description: List of users
                  items:
                    format: pve-userid
                    type: string
                  type: array
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update existing sendmail endpoint
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/smtp:
    get:
      description: Returns a list of all smtp endpoints
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    author:
                      description: Author of the mail. Defaults to 'Proxmox VE'.
                      type: string
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Disable this target
                      type: boolean
                    from-address:
                      description: '`From` address for the mail'
                      type: string
                    mailto:
                      description: List of email recipients
                      items:
                        format: email-or-username
                        type: string
                      type: array
                    mailto-user:
                      description: List of users
                      items:
                        format: pve-userid
                        type: string
                      type: array
                    mode:
                      description: Determine which encryption method shall be used
                        for the connection.
                      type: string
                    name:
                      description: The name of the endpoint.
                      format: pve-configid
                      type: string
                    origin:
                      description: Show if this entry was created by a user or was
                        built-in
                      type: string
                    port:
                      description: The port to be used. Defaults to 465 for TLS based
                        connections, 587 for STARTTLS based connections and port 25
                        for insecure plain-text connections.
                      type: integer
                    server:
                      description: The address of the SMTP server.
                      type: string
                    username:
                      description: Username for SMTP authentication
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of all smtp endpoints
      tags:
      - Cluster
    post:
      description: Create a new smtp endpoint
      operationId: post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail. Defaults to 'Proxmox VE'.
                  type: string
                comment:
                  description: Comment
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                from-address:
                  description: '`From` address for the mail'
                  type: string
                mailto:
                  description: List of email recipients
                  items:
                    format: email-or-username
                    type: string
                  type: array
                mailto-user:
                  description: List of users
                  items:
                    format: pve-userid
                    type: string
                  type: array
                mode:
                  default: tls
                  description: Determine which encryption method shall be used for
                    the connection.
                  enum:
                  - insecure
                  - starttls
                  - tls
                  type: string
                name:
                  description: The name of the endpoint.
                  format: pve-configid
                  type: string
                password:
                  description: Password for SMTP authentication
                  type: string
                port:
                  description: The port to be used. Defaults to 465 for TLS based
                    connections, 587 for STARTTLS based connections and port 25 for
                    insecure plain-text connections.
                  type: integer
                server:
                  description: The address of the SMTP server.
                  type: string
                username:
                  description: Username for SMTP authentication
                  type: string
              required:
              - from-address
              - name
              - server
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new smtp endpoint
      tags:
      - Cluster
  ? /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/smtp/cluster/notifications/endpoints/smtp/{name}
  : delete:
      description: Remove smtp endpoint
      operationId: delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp_cluster_notifications_endpoints_smtp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove smtp endpoint
      tags:
      - Cluster
    get:
      description: Return a specific smtp endpoint
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp_cluster_notifications_endpoints_smtp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  author:
                    description: Author of the mail. Defaults to 'Proxmox VE'.
                    type: string
                  comment:
                    description: Comment
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      a different digest. This can be used to prevent concurrent modifications.
                    type: string
                  disable:
                    description: Disable this target
                    type: boolean
                  from-address:
                    description: '`From` address for the mail'
                    type: string
                  mailto:
                    description: List of email recipients
                    items:
                      format: email-or-username
                      type: string
                    type: array
                  mailto-user:
                    description: List of users
                    items:
                      format: pve-userid
                      type: string
                    type: array
                  mode:
                    description: Determine which encryption method shall be used for
                      the connection.
                    type: string
                  name:
                    description: The name of the endpoint.
                    format: pve-configid
                    type: string
                  port:
                    description: The port to be used. Defaults to 465 for TLS based
                      connections, 587 for STARTTLS based connections and port 25
                      for insecure plain-text connections.
                    type: integer
                  server:
                    description: The address of the SMTP server.
                    type: string
                  username:
                    description: Username for SMTP authentication
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return a specific smtp endpoint
      tags:
      - Cluster
    put:
      description: Update existing smtp endpoint
      operationId: put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_smtp_cluster_notifications_endpoints_smtp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail. Defaults to 'Proxmox VE'.
                  type: string
                comment:
                  description: Comment
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  items:
                    format: pve-configid
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                from-address:
                  description: '`From` address for the mail'
                  type: string
                mailto:
                  description: List of email recipients
                  items:
                    format: email-or-username
                    type: string
                  type: array
                mailto-user:
                  description: List of users
                  items:
                    format: pve-userid
                    type: string
                  type: array
                mode:
                  default: tls
                  description: Determine which encryption method shall be used for
                    the connection.
                  enum:
                  - insecure
                  - starttls
                  - tls
                  type: string
                password:
                  description: Password for SMTP authentication
                  type: string
                port:
                  description: The port to be used. Defaults to 465 for TLS based
                    connections, 587 for STARTTLS based connections and port 25 for
                    insecure plain-text connections.
                  type: integer
                server:
                  description: The address of the SMTP server.
                  type: string
                username:
                  description: Username for SMTP authentication
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update existing smtp endpoint
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/webhook:
    get:
      description: Returns a list of all webhook endpoints
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    body:
                      description: HTTP body, base64 encoded
                      type: string
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Disable this target
                      type: boolean
                    header:
                      description: HTTP headers to set. These have to be formatted
                        as a property string in the format name=<name>,value=<base64
                        of value>
                      items:
                        type: string
                      type: array
                    method:
                      description: HTTP method
                      type: string
                    name:
                      description: The name of the endpoint.
                      format: pve-configid
                      type: string
                    origin:
                      description: Show if this entry was created by a user or was
                        built-in
                      type: string
                    secret:
                      description: Secrets to set. These have to be formatted as a
                        property string in the format name=<name>,value=<base64 of
                        value>
                      items:
                        type: string
                      type: array
                    url:
                      description: Server URL
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of all webhook endpoints
      tags:
      - Cluster
    post:
      description: Create a new webhook endpoint
      operationId: post_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: HTTP body, base64 encoded
                  type: string
                comment:
                  description: Comment
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                header:
                  description: HTTP headers to set. These have to be formatted as
                    a property string in the format name=<name>,value=<base64 of value>
                  items:
                    type: string
                  type: array
                method:
                  description: HTTP method
                  enum:
                  - post
                  - put
                  - get
                  type: string
                name:
                  description: The name of the endpoint.
                  format: pve-configid
                  type: string
                secret:
                  description: Secrets to set. These have to be formatted as a property
                    string in the format name=<name>,value=<base64 of value>
                  items:
                    type: string
                  type: array
                url:
                  description: Server URL
                  type: string
              required:
              - method
              - name
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new webhook endpoint
      tags:
      - Cluster
  ? /cluster/cluster/notifications/cluster/notifications/endpoints/cluster/notifications/endpoints/webhook/cluster/notifications/endpoints/webhook/{name}
  : delete:
      description: Remove webhook endpoint
      operationId: delete_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook_cluster_notifications_endpoints_webhook_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove webhook endpoint
      tags:
      - Cluster
    get:
      description: Return a specific webhook endpoint
      operationId: get_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook_cluster_notifications_endpoints_webhook_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  body:
                    description: HTTP body, base64 encoded
                    type: string
                  comment:
                    description: Comment
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      a different digest. This can be used to prevent concurrent modifications.
                    type: string
                  disable:
                    description: Disable this target
                    type: boolean
                  header:
                    description: HTTP headers to set. These have to be formatted as
                      a property string in the format name=<name>,value=<base64 of
                      value>
                    items:
                      type: string
                    type: array
                  method:
                    description: HTTP method
                    type: string
                  name:
                    description: The name of the endpoint.
                    format: pve-configid
                    type: string
                  secret:
                    description: Secrets to set. These have to be formatted as a property
                      string in the format name=<name>,value=<base64 of value>
                    items:
                      type: string
                    type: array
                  url:
                    description: Server URL
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return a specific webhook endpoint
      tags:
      - Cluster
    put:
      description: Update existing webhook endpoint
      operationId: put_cluster_cluster_notifications_cluster_notifications_endpoints_cluster_notifications_endpoints_webhook_cluster_notifications_endpoints_webhook_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: HTTP body, base64 encoded
                  type: string
                comment:
                  description: Comment
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  items:
                    format: pve-configid
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  default: 0
                  description: Disable this target
                  type: boolean
                header:
                  description: HTTP headers to set. These have to be formatted as
                    a property string in the format name=<name>,value=<base64 of value>
                  items:
                    type: string
                  type: array
                method:
                  description: HTTP method
                  enum:
                  - post
                  - put
                  - get
                  type: string
                secret:
                  description: Secrets to set. These have to be formatted as a property
                    string in the format name=<name>,value=<base64 of value>
                  items:
                    type: string
                  type: array
                url:
                  description: Server URL
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update existing webhook endpoint
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/matcher-field-values:
    get:
      description: Returns known notification metadata fields and their known values
      operationId: get_cluster_cluster_notifications_cluster_notifications_matcher-field-values
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: Additional comment for this value.
                      type: string
                    field:
                      description: Field this value belongs to.
                      type: string
                    value:
                      description: Notification metadata value known by the system.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns known notification metadata fields and their known values
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/matcher-fields:
    get:
      description: Returns known notification metadata fields
      operationId: get_cluster_cluster_notifications_cluster_notifications_matcher-fields
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      description: Name of the field.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns known notification metadata fields
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/matchers:
    get:
      description: Returns a list of all matchers
      operationId: get_cluster_cluster_notifications_cluster_notifications_matchers
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Disable this matcher
                      type: boolean
                    invert-match:
                      description: Invert match of the whole matcher
                      type: boolean
                    match-calendar:
                      description: Match notification timestamp
                      items:
                        type: string
                      type: array
                    match-field:
                      description: Metadata fields to match (regex or exact match).
                        Must be in the form (regex|exact):<field>=<value>
                      items:
                        type: string
                      type: array
                    match-severity:
                      description: Notification severities to match
                      items:
                        type: string
                      type: array
                    mode:
                      description: Choose between 'all' and 'any' for when multiple
                        properties are specified
                      type: string
                    name:
                      description: Name of the matcher.
                      format: pve-configid
                      type: string
                    origin:
                      description: Show if this entry was created by a user or was
                        built-in
                      type: string
                    target:
                      description: Targets to notify on match
                      items:
                        format: pve-configid
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of all matchers
      tags:
      - Cluster
    post:
      description: Create a new matcher
      operationId: post_cluster_cluster_notifications_cluster_notifications_matchers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment
                  type: string
                disable:
                  default: 0
                  description: Disable this matcher
                  type: boolean
                invert-match:
                  description: Invert match of the whole matcher
                  type: boolean
                match-calendar:
                  description: Match notification timestamp
                  items:
                    type: string
                  type: array
                match-field:
                  description: Metadata fields to match (regex or exact match). Must
                    be in the form (regex|exact):<field>=<value>
                  items:
                    type: string
                  type: array
                match-severity:
                  description: Notification severities to match
                  items:
                    type: string
                  type: array
                mode:
                  default: all
                  description: Choose between 'all' and 'any' for when multiple properties
                    are specified
                  enum:
                  - all
                  - any
                  type: string
                name:
                  description: Name of the matcher.
                  format: pve-configid
                  type: string
                target:
                  description: Targets to notify on match
                  items:
                    format: pve-configid
                    type: string
                  type: array
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new matcher
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/matchers/cluster/notifications/matchers/{name}:
    delete:
      description: Remove matcher
      operationId: delete_cluster_cluster_notifications_cluster_notifications_matchers_cluster_notifications_matchers_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove matcher
      tags:
      - Cluster
    get:
      description: Return a specific matcher
      operationId: get_cluster_cluster_notifications_cluster_notifications_matchers_cluster_notifications_matchers_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    description: Comment
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      a different digest. This can be used to prevent concurrent modifications.
                    type: string
                  disable:
                    description: Disable this matcher
                    type: boolean
                  invert-match:
                    description: Invert match of the whole matcher
                    type: boolean
                  match-calendar:
                    description: Match notification timestamp
                    items:
                      type: string
                    type: array
                  match-field:
                    description: Metadata fields to match (regex or exact match).
                      Must be in the form (regex|exact):<field>=<value>
                    items:
                      type: string
                    type: array
                  match-severity:
                    description: Notification severities to match
                    items:
                      type: string
                    type: array
                  mode:
                    description: Choose between 'all' and 'any' for when multiple
                      properties are specified
                    type: string
                  name:
                    description: Name of the matcher.
                    format: pve-configid
                    type: string
                  target:
                    description: Targets to notify on match
                    items:
                      format: pve-configid
                      type: string
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return a specific matcher
      tags:
      - Cluster
    put:
      description: Update existing matcher
      operationId: put_cluster_cluster_notifications_cluster_notifications_matchers_cluster_notifications_matchers_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  items:
                    format: pve-configid
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  default: 0
                  description: Disable this matcher
                  type: boolean
                invert-match:
                  description: Invert match of the whole matcher
                  type: boolean
                match-calendar:
                  description: Match notification timestamp
                  items:
                    type: string
                  type: array
                match-field:
                  description: Metadata fields to match (regex or exact match). Must
                    be in the form (regex|exact):<field>=<value>
                  items:
                    type: string
                  type: array
                match-severity:
                  description: Notification severities to match
                  items:
                    type: string
                  type: array
                mode:
                  default: all
                  description: Choose between 'all' and 'any' for when multiple properties
                    are specified
                  enum:
                  - all
                  - any
                  type: string
                target:
                  description: Targets to notify on match
                  items:
                    format: pve-configid
                    type: string
                  type: array
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update existing matcher
      tags:
      - Cluster
  /cluster/cluster/notifications/cluster/notifications/targets:
    get:
      description: Returns a list of all entities that can be used as notification
        targets.
      operationId: get_cluster_cluster_notifications_cluster_notifications_targets
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Show if this target is disabled
                      type: boolean
                    name:
                      description: Name of the target.
                      format: pve-configid
                      type: string
                    origin:
                      description: Show if this entry was created by a user or was
                        built-in
                      type: string
                    type:
                      description: Type of the target.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a list of all entities that can be used as notification targets.
      tags:
      - Cluster
  ? /cluster/cluster/notifications/cluster/notifications/targets/cluster/notifications/targets/{name}/cluster/notifications/targets/{name}/test
  : post:
      description: Send a test notification to a provided target.
      operationId: post_cluster_cluster_notifications_cluster_notifications_targets_cluster_notifications_targets_name_cluster_notifications_targets_name_test
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Send a test notification to a provided target.
      tags:
      - Cluster
  /cluster/cluster/options:
    get:
      description: Get datacenter options. Without 'Sys.Audit' on '/' not all options
        are returned.
      operationId: get_cluster_cluster_options
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get datacenter options. Without 'Sys.Audit' on '/' not all options
        are returned.
      tags:
      - Cluster
    put:
      description: Set datacenter options.
      operationId: put_cluster_cluster_options
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  description: Set I/O bandwidth limit for various operations (in
                    KiB/s).
                  format:
                    clone:
                      description: bandwidth limit in KiB/s for cloning disks
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    default:
                      description: default bandwidth limit in KiB/s
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    migration:
                      description: bandwidth limit in KiB/s for migrating guests (including
                        moving local disks)
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    move:
                      description: bandwidth limit in KiB/s for moving disks
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    restore:
                      description: bandwidth limit in KiB/s for restoring guests from
                        backups
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                  type: string
                consent-text:
                  description: Consent text that is displayed before logging in.
                  maxLength: 65536
                  type: string
                console:
                  description: Select the default Console viewer. You can either use
                    the builtin java applet (VNC; deprecated and maps to html5), an
                    external virt-viewer comtatible application (SPICE), an HTML5
                    based vnc viewer (noVNC), or an HTML5 based console client (xtermjs).
                    If the selected viewer is not available (e.g. SPICE not activated
                    for the VM), the fallback is noVNC.
                  enum:
                  - applet
                  - vv
                  - html5
                  - xtermjs
                  type: string
                crs:
                  description: Cluster resource scheduling settings.
                  format:
                    ha:
                      default: basic
                      description: Use this resource scheduler mode for HA.
                      enum:
                      - basic
                      - static
                      optional: 1
                      type: string
                      verbose_description: Configures how the HA manager should select
                        nodes to start or recover services. With 'basic', only the
                        number of services is used, with 'static', static CPU and
                        memory configuration of services is considered.
                    ha-rebalance-on-start:
                      default: 0
                      description: Set to use CRS for selecting a suited node when
                        a HA services request-state changes from stop to start.
                      optional: 1
                      type: boolean
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                description:
                  description: Datacenter description. Shown in the web-interface
                    datacenter notes panel. This is saved as comment inside the configuration
                    file.
                  maxLength: 65536
                  type: string
                email_from:
                  description: Specify email address to send notification from (default
                    is root@$hostname)
                  format: email-opt
                  type: string
                fencing:
                  default: watchdog
                  description: 'Set the fencing mode of the HA cluster. Hardware mode
                    needs a valid configuration of fence devices in /etc/pve/ha/fence.cfg.
                    With both all two modes are used.


                    WARNING: ''hardware'' and ''both'' are EXPERIMENTAL & WIP'
                  enum:
                  - watchdog
                  - hardware
                  - both
                  type: string
                ha:
                  description: Cluster wide HA settings.
                  format:
                    shutdown_policy:
                      default: conditional
                      description: The policy for HA services on node shutdown. 'freeze'
                        disables auto-recovery, 'failover' ensures recovery, 'conditional'
                        recovers on poweroff and freezes on reboot. 'migrate' will
                        migrate running services to other nodes, if possible. With
                        'freeze' or 'failover', HA Services will always get stopped
                        first on shutdown.
                      enum:
                      - freeze
                      - failover
                      - conditional
                      - migrate
                      type: string
                      verbose_description: Describes the policy for handling HA services
                        on poweroff or reboot of a node. Freeze will always freeze
                        services which are still located on the node on shutdown,
                        those services won't be recovered by the HA manager. Failover
                        will not mark the services as frozen and thus the services
                        will get recovered to other nodes, if the shutdown node does
                        not come up again quickly (< 1min). 'conditional' chooses
                        automatically depending on the type of shutdown, i.e., on
                        a reboot the service will be frozen but on a poweroff the
                        service will stay as is, and thus get recovered after about
                        2 minutes. Migrate will try to move all running services to
                        another node when a reboot or shutdown was triggered. The
                        poweroff process will only continue once no running services
                        are located on the node anymore. If the node comes up again,
                        the service will be moved back to the previously powered-off
                        node, at least if no other migration, reloaction or recovery
                        took place.
                  type: string
                http_proxy:
                  description: 'Specify external http proxy which is used for downloads
                    (example: ''http://username:password@host:port/'')'
                  pattern: http://.*
                  type: string
                keyboard:
                  description: Default keybord layout for vnc server.
                  enum:
                  - de
                  - de-ch
                  - da
                  - en-gb
                  - en-us
                  - es
                  - fi
                  - fr
                  - fr-be
                  - fr-ca
                  - fr-ch
                  - hu
                  - is
                  - it
                  - ja
                  - lt
                  - mk
                  - nl
                  - 'no'
                  - pl
                  - pt
                  - pt-br
                  - sv
                  - sl
                  - tr
                  type: string
                language:
                  description: Default GUI language.
                  enum:
                  - ar
                  - ca
                  - da
                  - de
                  - en
                  - es
                  - eu
                  - fa
                  - fr
                  - hr
                  - he
                  - it
                  - ja
                  - ka
                  - kr
                  - nb
                  - nl
                  - nn
                  - pl
                  - pt_BR
                  - ru
                  - sl
                  - sv
                  - tr
                  - ukr
                  - zh_CN
                  - zh_TW
                  type: string
                mac_prefix:
                  default: BC:24:11
                  description: Prefix for the auto-generated MAC addresses of virtual
                    guests. The default 'BC:24:11' is the OUI assigned by the IEEE
                    to Proxmox Server Solutions GmbH for a 24-bit large MAC block.
                    You're allowed to use this in local networks, i.e., those not
                    directly reachable by the public (e.g., in a LAN or behind NAT).
                  format: mac-prefix
                  type: string
                max_workers:
                  description: Defines how many workers (per node) are maximal started  on
                    actions like 'stopall VMs' or task from the ha-manager.
                  minimum: 1
                  type: integer
                migration:
                  description: For cluster wide migration settings.
                  format:
                    network:
                      description: CIDR of the (sub) network that is used for migration.
                      format: CIDR
                      format_description: CIDR
                      optional: 1
                      type: string
                    type:
                      default: secure
                      default_key: 1
                      description: Migration traffic is encrypted using an SSH tunnel
                        by default. On secure, completely private networks this can
                        be disabled to increase performance.
                      enum:
                      - secure
                      - insecure
                      type: string
                  type: string
                migration_unsecure:
                  description: Migration is secure using SSH tunnel by default. For
                    secure private networks you can disable it to speed up migration.
                    Deprecated, use the 'migration' property instead!
                  type: boolean
                next-id:
                  description: Control the range for the free VMID auto-selection
                    pool.
                  format:
                    lower:
                      default: 100
                      description: Lower, inclusive boundary for free next-id API
                        range.
                      max: 999999999
                      min: 100
                      optional: 1
                      type: integer
                    upper:
                      default: 1000000
                      description: Upper, exclusive boundary for free next-id API
                        range.
                      max: 1000000000
                      min: 100
                      optional: 1
                      type: integer
                  type: string
                notify:
                  description: Cluster-wide notification settings.
                  format:
                    fencing:
                      description: UNUSED - Use datacenter notification settings instead.
                      enum:
                      - always
                      - never
                      optional: 1
                      type: string
                    package-updates:
                      default: auto
                      description: 'DEPRECATED: Use datacenter notification settings
                        instead. Control when the daily update job should send out
                        notifications.'
                      enum:
                      - auto
                      - always
                      - never
                      optional: 1
                      type: string
                      verbose_description: 'DEPRECATED: Use datacenter notification
                        settings instead.

                        Control how often the daily update job should send out notifications:

                        * ''auto'' daily for systems with a valid subscription, as
                        those are assumed to be  production-ready and thus should
                        know about pending updates.

                        * ''always'' every update, if there are new pending updates.

                        * ''never'' never send a notification for new pending updates.

                        '
                    replication:
                      description: UNUSED - Use datacenter notification settings instead.
                      enum:
                      - always
                      - never
                      optional: 1
                      type: string
                    target-fencing:
                      description: UNUSED - Use datacenter notification settings instead.
                      format_description: TARGET
                      optional: 1
                      type: string
                    target-package-updates:
                      description: UNUSED - Use datacenter notification settings instead.
                      format_description: TARGET
                      optional: 1
                      type: string
                    target-replication:
                      description: UNUSED - Use datacenter notification settings instead.
                      format_description: TARGET
                      optional: 1
                      type: string
                  type: string
                registered-tags:
                  description: A list of tags that require a `Sys.Modify` on '/' to
                    set and delete. Tags set here that are also in 'user-tag-access'
                    also require `Sys.Modify`.
                  type: string
                tag-style:
                  description: Tag style options.
                  format:
                    case-sensitive:
                      default: 0
                      description: Controls if filtering for unique tags on update
                        should check case-sensitive.
                      optional: 1
                      type: boolean
                    color-map:
                      description: Manual color mapping for tags (semicolon separated).
                      optional: 1
                      pattern: (?:(?^i:[a-z0-9_][a-z0-9_\-\+\.]*):[0-9a-fA-F]{6}(?::[0-9a-fA-F]{6})?)(?:;(?:(?^i:[a-z0-9_][a-z0-9_\-\+\.]*):[0-9a-fA-F]{6}(?::[0-9a-fA-F]{6})?))*
                      type: string
                      typetext: <tag>:<hex-color>[:<hex-color-for-text>][;<tag>=...]
                    ordering:
                      default: alphabetical
                      description: Controls the sorting of the tags in the web-interface
                        and the API update.
                      enum:
                      - config
                      - alphabetical
                      optional: 1
                      type: string
                    shape:
                      default: circle
                      description: Tag shape for the web ui tree. 'full' draws the
                        full tag. 'circle' draws only a circle with the background
                        color. 'dense' only draws a small rectancle (useful when many
                        tags are assigned to each guest).'none' disables showing the
                        tags.
                      enum:
                      - full
                      - circle
                      - dense
                      - none
                      optional: 1
                      type: string
                  type: string
                u2f:
                  description: u2f
                  format:
                    appid:
                      description: U2F AppId URL override. Defaults to the origin.
                      format_description: APPID
                      optional: 1
                      type: string
                    origin:
                      description: U2F Origin override. Mostly useful for single nodes
                        with a single URL.
                      format_description: URL
                      optional: 1
                      type: string
                  type: string
                user-tag-access:
                  description: Privilege options for user-settable tags
                  format:
                    user-allow:
                      default: free
                      description: Controls tag usage for users without `Sys.Modify`
                        on `/` by either allowing `none`, a `list`, already `existing`
                        or anything (`free`).
                      enum:
                      - none
                      - list
                      - existing
                      - free
                      optional: 1
                      type: string
                      verbose_description: 'Controls which tags can be set or deleted
                        on resources a user controls (such as guests). Users with
                        the `Sys.Modify` privilege on `/` are alwaysunrestricted.

                        * ''none'' no tags are usable.

                        * ''list'' tags from ''user-allow-list'' are usable.

                        * ''existing'' like list, but already existing tags of resources
                        are also usable.

                        * ''free'' no tag restrictions.

                        '
                    user-allow-list:
                      description: List of tags users are allowed to set and delete
                        (semicolon separated) for 'user-allow' values 'list' and 'existing'.
                      optional: 1
                      pattern: (?^i:[a-z0-9_][a-z0-9_\-\+\.]*)(?:;(?^i:[a-z0-9_][a-z0-9_\-\+\.]*))*
                      type: string
                      typetext: <tag>[;<tag>...]
                  type: string
                webauthn:
                  description: webauthn configuration
                  format:
                    allow-subdomains:
                      default: 1
                      description: Whether to allow the origin to be a subdomain,
                        rather than the exact URL.
                      optional: 1
                      type: boolean
                    id:
                      description: Relying party ID. Must be the domain name without
                        protocol, port or location. Changing this *will* break existing
                        credentials.
                      format_description: DOMAINNAME
                      optional: 1
                      type: string
                    origin:
                      description: Site origin. Must be a `https://` URL (or `http://localhost`).
                        Should contain the address users type in their browsers to
                        access the web interface. Changing this *may* break existing
                        credentials.
                      format_description: URL
                      optional: 1
                      type: string
                    rp:
                      description: Relying party name. Any text identifier. Changing
                        this *may* break existing credentials.
                      format_description: RELYING_PARTY
                      optional: 1
                      type: string
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set datacenter options.
      tags:
      - Cluster
  /cluster/cluster/replication:
    get:
      description: List replication jobs.
      operationId: get_cluster_cluster_replication
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List replication jobs.
      tags:
      - Cluster
    post:
      description: Create a new replication job
      operationId: post_cluster_cluster_replication
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                disable:
                  description: Flag to disable/deactivate the entry.
                  type: boolean
                id:
                  description: Replication Job ID. The ID is composed of a Guest ID
                    and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
                  format: pve-replication-job-id
                  pattern: '[1-9][0-9]{2,8}-\d{1,9}'
                  type: string
                rate:
                  description: Rate limit in mbps (megabytes per second) as floating
                    point number.
                  minimum: 1
                  type: number
                remove_job:
                  description: Mark the replication job for removal. The job will
                    remove all local replication snapshots. When set to 'full', it
                    also tries to remove replicated volumes on the target. The job
                    then removes itself from the configuration file.
                  enum:
                  - local
                  - full
                  type: string
                schedule:
                  default: '*/15'
                  description: Storage replication schedule. The format is a subset
                    of `systemd` calendar events.
                  format: pve-calendar-event
                  maxLength: 128
                  type: string
                source:
                  description: For internal use, to detect if the guest was stolen.
                  format: pve-node
                  type: string
                target:
                  description: Target node.
                  format: pve-node
                  type: string
                type:
                  description: Section type.
                  enum:
                  - local
                  type: string
              required:
              - id
              - target
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new replication job
      tags:
      - Cluster
  /cluster/cluster/replication/cluster/replication/{id}:
    delete:
      description: Mark replication job for removal.
      operationId: delete_cluster_cluster_replication_cluster_replication_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: Will remove the jobconfig entry, but will not cleanup.
        in: query
        name: force
        required: false
        schema:
          default: 0
          description: Will remove the jobconfig entry, but will not cleanup.
          type: boolean
      - description: Keep replicated data at target (do not remove).
        in: query
        name: keep
        required: false
        schema:
          default: 0
          description: Keep replicated data at target (do not remove).
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Mark replication job for removal.
      tags:
      - Cluster
    get:
      description: Read replication job configuration.
      operationId: get_cluster_cluster_replication_cluster_replication_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read replication job configuration.
      tags:
      - Cluster
    put:
      description: Update replication job configuration.
      operationId: put_cluster_cluster_replication_cluster_replication_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Description.
                  maxLength: 4096
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  description: Flag to disable/deactivate the entry.
                  type: boolean
                rate:
                  description: Rate limit in mbps (megabytes per second) as floating
                    point number.
                  minimum: 1
                  type: number
                remove_job:
                  description: Mark the replication job for removal. The job will
                    remove all local replication snapshots. When set to 'full', it
                    also tries to remove replicated volumes on the target. The job
                    then removes itself from the configuration file.
                  enum:
                  - local
                  - full
                  type: string
                schedule:
                  default: '*/15'
                  description: Storage replication schedule. The format is a subset
                    of `systemd` calendar events.
                  format: pve-calendar-event
                  maxLength: 128
                  type: string
                source:
                  description: For internal use, to detect if the guest was stolen.
                  format: pve-node
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update replication job configuration.
      tags:
      - Cluster
  /cluster/cluster/resources:
    get:
      description: Resources index (cluster wide).
      operationId: get_cluster_cluster_resources
      parameters:
      - description: Resource type.
        in: query
        name: type
        required: false
        schema:
          description: Resource type.
          enum:
          - vm
          - storage
          - node
          - sdn
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cgroup-mode:
                      description: The cgroup mode the node operates under (for type
                        'node').
                      type: integer
                    content:
                      description: Allowed storage content types (for type 'storage').
                      format: pve-storage-content-list
                      type: string
                    cpu:
                      description: CPU utilization (for types 'node', 'qemu' and 'lxc').
                      type: number
                    disk:
                      description: Used disk space in bytes (for type 'storage'),
                        used root image space for VMs (for types 'qemu' and 'lxc').
                      type: integer
                    diskread:
                      description: The amount of bytes the guest read from its block
                        devices since the guest was started. This info is not available
                        for all storage types. (for types 'qemu' and 'lxc')
                      type: integer
                    diskwrite:
                      description: The amount of bytes the guest wrote to its block
                        devices since the guest was started. This info is not available
                        for all storage types. (for types 'qemu' and 'lxc')
                      type: integer
                    hastate:
                      description: HA service status (for HA managed VMs).
                      type: string
                    id:
                      description: Resource id.
                      type: string
                    level:
                      description: Support level (for type 'node').
                      type: string
                    lock:
                      description: The guest's current config lock (for types 'qemu'
                        and 'lxc')
                      type: string
                    maxcpu:
                      description: Number of available CPUs (for types 'node', 'qemu'
                        and 'lxc').
                      type: number
                    maxdisk:
                      description: Storage size in bytes (for type 'storage'), root
                        image size for VMs (for types 'qemu' and 'lxc').
                      type: integer
                    maxmem:
                      description: Number of available memory in bytes (for types
                        'node', 'qemu' and 'lxc').
                      type: integer
                    mem:
                      description: Used memory in bytes (for types 'node', 'qemu'
                        and 'lxc').
                      type: integer
                    name:
                      description: Name of the resource.
                      type: string
                    netin:
                      description: The amount of traffic in bytes that was sent to
                        the guest over the network since it was started. (for types
                        'qemu' and 'lxc')
                      type: integer
                    netout:
                      description: The amount of traffic in bytes that was sent from
                        the guest over the network since it was started. (for types
                        'qemu' and 'lxc')
                      type: integer
                    node:
                      description: The cluster node name (for types 'node', 'storage',
                        'qemu', and 'lxc').
                      format: pve-node
                      type: string
                    plugintype:
                      description: More specific type, if available.
                      type: string
                    pool:
                      description: The pool name (for types 'pool', 'qemu' and 'lxc').
                      type: string
                    status:
                      description: Resource type dependent status.
                      type: string
                    storage:
                      description: The storage identifier (for type 'storage').
                      format: pve-storage-id
                      type: string
                    tags:
                      description: The guest's tags (for types 'qemu' and 'lxc')
                      type: string
                    template:
                      description: Determines if the guest is a template. (for types
                        'qemu' and 'lxc')
                      type: boolean
                    type:
                      description: Resource type.
                      type: string
                    uptime:
                      description: Uptime of node or virtual guest in seconds (for
                        types 'node', 'qemu' and 'lxc').
                      type: integer
                    vmid:
                      description: The numerical vmid (for types 'qemu' and 'lxc').
                      format: pve-vmid
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Resources index (cluster wide).
      tags:
      - Cluster
  /cluster/cluster/sdn:
    get:
      description: Directory index.
      operationId: get_cluster_cluster_sdn
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Cluster
    put:
      description: Apply sdn controller changes && reload.
      operationId: put_cluster_cluster_sdn
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Apply sdn controller changes && reload.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/controllers:
    get:
      description: SDN controllers index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_controllers
      parameters:
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      - description: Only list sdn controllers of specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list sdn controllers of specific type
          enum:
          - bgp
          - evpn
          - faucet
          - isis
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    controller:
                      type: string
                    pending:
                      type: boolean
                    state:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN controllers index.
      tags:
      - Cluster
    post:
      description: Create a new sdn controller object.
      operationId: post_cluster_cluster_sdn_cluster_sdn_controllers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                asn:
                  description: autonomous system number
                  maximum: 4294967296
                  minimum: 0
                  type: integer
                bgp-multipath-as-path-relax:
                  type: boolean
                controller:
                  description: The SDN controller object identifier.
                  format: pve-sdn-controller-id
                  type: string
                ebgp:
                  description: Enable ebgp. (remote-as external)
                  type: boolean
                ebgp-multihop:
                  type: integer
                isis-domain:
                  description: ISIS domain.
                  type: string
                isis-ifaces:
                  description: ISIS interface.
                  format: pve-iface-list
                  type: string
                isis-net:
                  description: ISIS network entity title.
                  format: pve-sdn-isis-net
                  type: string
                loopback:
                  description: source loopback interface.
                  type: string
                node:
                  description: The cluster node name.
                  format: pve-node
                  type: string
                peers:
                  description: peers address list.
                  format: ip-list
                  type: string
                type:
                  description: Plugin type.
                  enum:
                  - bgp
                  - evpn
                  - faucet
                  - isis
                  format: pve-configid
                  type: string
              required:
              - controller
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sdn controller object.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/controllers/cluster/sdn/controllers/{controller}:
    delete:
      description: Delete sdn controller object configuration.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_controllers_cluster_sdn_controllers_controller
      parameters:
      - description: The controller parameter
        in: path
        name: controller
        required: true
        schema:
          description: The controller parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sdn controller object configuration.
      tags:
      - Cluster
    get:
      description: Read sdn controller configuration.
      operationId: get_cluster_cluster_sdn_cluster_sdn_controllers_cluster_sdn_controllers_controller
      parameters:
      - description: The controller parameter
        in: path
        name: controller
        required: true
        schema:
          description: The controller parameter
          type: string
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read sdn controller configuration.
      tags:
      - Cluster
    put:
      description: Update sdn controller object configuration.
      operationId: put_cluster_cluster_sdn_cluster_sdn_controllers_cluster_sdn_controllers_controller
      parameters:
      - description: The controller parameter
        in: path
        name: controller
        required: true
        schema:
          description: The controller parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                asn:
                  description: autonomous system number
                  maximum: 4294967296
                  minimum: 0
                  type: integer
                bgp-multipath-as-path-relax:
                  type: boolean
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                ebgp:
                  description: Enable ebgp. (remote-as external)
                  type: boolean
                ebgp-multihop:
                  type: integer
                isis-domain:
                  description: ISIS domain.
                  type: string
                isis-ifaces:
                  description: ISIS interface.
                  format: pve-iface-list
                  type: string
                isis-net:
                  description: ISIS network entity title.
                  format: pve-sdn-isis-net
                  type: string
                loopback:
                  description: source loopback interface.
                  type: string
                node:
                  description: The cluster node name.
                  format: pve-node
                  type: string
                peers:
                  description: peers address list.
                  format: ip-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sdn controller object configuration.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/dns:
    get:
      description: SDN dns index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_dns
      parameters:
      - description: Only list sdn dns of specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list sdn dns of specific type
          enum:
          - powerdns
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    dns:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN dns index.
      tags:
      - Cluster
    post:
      description: Create a new sdn dns object.
      operationId: post_cluster_cluster_sdn_cluster_sdn_dns
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dns:
                  description: The SDN dns object identifier.
                  format: pve-sdn-dns-id
                  type: string
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                key:
                  type: string
                reversemaskv6:
                  type: integer
                reversev6mask:
                  type: integer
                ttl:
                  type: integer
                type:
                  description: Plugin type.
                  enum:
                  - powerdns
                  format: pve-configid
                  type: string
                url:
                  type: string
              required:
              - dns
              - key
              - type
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sdn dns object.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/dns/cluster/sdn/dns/{dns}:
    delete:
      description: Delete sdn dns object configuration.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_dns_cluster_sdn_dns_dns
      parameters:
      - description: The dns parameter
        in: path
        name: dns
        required: true
        schema:
          description: The dns parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sdn dns object configuration.
      tags:
      - Cluster
    get:
      description: Read sdn dns configuration.
      operationId: get_cluster_cluster_sdn_cluster_sdn_dns_cluster_sdn_dns_dns
      parameters:
      - description: The dns parameter
        in: path
        name: dns
        required: true
        schema:
          description: The dns parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read sdn dns configuration.
      tags:
      - Cluster
    put:
      description: Update sdn dns object configuration.
      operationId: put_cluster_cluster_sdn_cluster_sdn_dns_cluster_sdn_dns_dns
      parameters:
      - description: The dns parameter
        in: path
        name: dns
        required: true
        schema:
          description: The dns parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                key:
                  type: string
                reversemaskv6:
                  type: integer
                ttl:
                  type: integer
                url:
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sdn dns object configuration.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/ipams:
    get:
      description: SDN ipams index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_ipams
      parameters:
      - description: Only list sdn ipams of specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list sdn ipams of specific type
          enum:
          - netbox
          - phpipam
          - pve
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    ipam:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN ipams index.
      tags:
      - Cluster
    post:
      description: Create a new sdn ipam object.
      operationId: post_cluster_cluster_sdn_cluster_sdn_ipams
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                ipam:
                  description: The SDN ipam object identifier.
                  format: pve-sdn-ipam-id
                  type: string
                section:
                  type: integer
                token:
                  type: string
                type:
                  description: Plugin type.
                  enum:
                  - netbox
                  - phpipam
                  - pve
                  format: pve-configid
                  type: string
                url:
                  type: string
              required:
              - ipam
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sdn ipam object.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/ipams/cluster/sdn/ipams/{ipam}:
    delete:
      description: Delete sdn ipam object configuration.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam
      parameters:
      - description: The ipam parameter
        in: path
        name: ipam
        required: true
        schema:
          description: The ipam parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sdn ipam object configuration.
      tags:
      - Cluster
    get:
      description: Read sdn ipam configuration.
      operationId: get_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam
      parameters:
      - description: The ipam parameter
        in: path
        name: ipam
        required: true
        schema:
          description: The ipam parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read sdn ipam configuration.
      tags:
      - Cluster
    put:
      description: Update sdn ipam object configuration.
      operationId: put_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam
      parameters:
      - description: The ipam parameter
        in: path
        name: ipam
        required: true
        schema:
          description: The ipam parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                section:
                  type: integer
                token:
                  type: string
                url:
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sdn ipam object configuration.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/ipams/cluster/sdn/ipams/{ipam}/cluster/sdn/ipams/{ipam}/status:
    get:
      description: List PVE IPAM Entries
      operationId: get_cluster_cluster_sdn_cluster_sdn_ipams_cluster_sdn_ipams_ipam_cluster_sdn_ipams_ipam_status
      parameters:
      - description: The ipam parameter
        in: path
        name: ipam
        required: true
        schema:
          description: The ipam parameter
          type: string
      - description: The ipam parameter
        in: path
        name: ipam
        required: true
        schema:
          description: The ipam parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List PVE IPAM Entries
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/vnets:
    get:
      description: SDN vnets index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets
      parameters:
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN vnets index.
      tags:
      - Cluster
    post:
      description: Create a new sdn vnet object.
      operationId: post_cluster_cluster_sdn_cluster_sdn_vnets
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alias:
                  description: alias name of the vnet
                  maxLength: 256
                  type: string
                isolate-ports:
                  description: If true, sets the isolated property for all members
                    of this VNet
                  type: boolean
                tag:
                  description: vlan or vxlan id
                  type: integer
                type:
                  description: Type
                  enum:
                  - vnet
                  type: string
                vlanaware:
                  description: Allow vm VLANs to pass through this vnet.
                  type: boolean
                vnet:
                  description: The SDN vnet object identifier.
                  format: pve-sdn-vnet-id
                  type: string
                zone:
                  description: zone id
                  type: string
              required:
              - vnet
              - zone
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sdn vnet object.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}:
    delete:
      description: Delete sdn vnet object configuration.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sdn vnet object configuration.
      tags:
      - Cluster
    get:
      description: Read sdn vnet configuration.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read sdn vnet configuration.
      tags:
      - Cluster
    put:
      description: Update sdn vnet object configuration.
      operationId: put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                alias:
                  description: alias name of the vnet
                  maxLength: 256
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                isolate-ports:
                  description: If true, sets the isolated property for all members
                    of this VNet
                  type: boolean
                tag:
                  description: vlan or vxlan id
                  type: integer
                vlanaware:
                  description: Allow vm VLANs to pass through this vnet.
                  type: boolean
                zone:
                  description: zone id
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sdn vnet object configuration.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall:
    get:
      description: Directory index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Cluster
  ? /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall/cluster/sdn/vnets/{vnet}/firewall/options
  : get:
      description: Get vnet firewall options.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_options
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  enable:
                    description: Enable/disable firewall rules.
                    type: boolean
                  log_level_forward:
                    description: Log level for forwarded traffic.
                    type: string
                  policy_forward:
                    description: Forward policy.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get vnet firewall options.
      tags:
      - Cluster
    put:
      description: Set Firewall options.
      operationId: put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_options
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                enable:
                  default: 0
                  description: Enable/disable firewall rules.
                  type: boolean
                log_level_forward:
                  description: Log level for forwarded traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                policy_forward:
                  description: Forward policy.
                  enum:
                  - ACCEPT
                  - DROP
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set Firewall options.
      tags:
      - Cluster
  ? /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall/cluster/sdn/vnets/{vnet}/firewall/rules
  : get:
      description: List rules.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pos:
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List rules.
      tags:
      - Cluster
    post:
      description: Create new rule.
      operationId: post_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                pos:
                  description: Update rule at position <pos>.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              required:
              - action
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new rule.
      tags:
      - Cluster
  ? /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/firewall/cluster/sdn/vnets/{vnet}/firewall/rules/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}
  : delete:
      description: Delete rule.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules_cluster_sdn_vnets_vnet_firewall_rules_pos
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete rule.
      tags:
      - Cluster
    get:
      description: Get single rule data.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules_cluster_sdn_vnets_vnet_firewall_rules_pos
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    type: string
                  comment:
                    type: string
                  dest:
                    type: string
                  dport:
                    type: string
                  enable:
                    type: integer
                  icmp-type:
                    type: string
                  iface:
                    type: string
                  ipversion:
                    type: integer
                  log:
                    description: Log level for firewall rule
                    type: string
                  macro:
                    type: string
                  pos:
                    type: integer
                  proto:
                    type: string
                  source:
                    type: string
                  sport:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get single rule data.
      tags:
      - Cluster
    put:
      description: Modify rule data.
      operationId: put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_firewall_cluster_sdn_vnets_vnet_firewall_rules_cluster_sdn_vnets_vnet_firewall_rules_pos
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                moveto:
                  description: Move rule to new position <moveto>. Other arguments
                    are ignored.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Modify rule data.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/ips:
    delete:
      description: Delete IP Mappings in a VNet
      operationId: delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_ips
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The IP address to delete
        in: query
        name: ip
        required: true
        schema:
          description: The IP address to delete
          format: ip
          type: string
      - description: Unicast MAC address.
        in: query
        name: mac
        required: false
        schema:
          description: Unicast MAC address.
          format: mac-addr
          type: string
      - description: The SDN zone object identifier.
        in: query
        name: zone
        required: true
        schema:
          description: The SDN zone object identifier.
          format: pve-sdn-zone-id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete IP Mappings in a VNet
      tags:
      - Cluster
    post:
      description: Create IP Mapping in a VNet
      operationId: post_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_ips
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ip:
                  description: The IP address to associate with the given MAC address
                  format: ip
                  type: string
                mac:
                  description: Unicast MAC address.
                  format: mac-addr
                  type: string
                zone:
                  description: The SDN zone object identifier.
                  format: pve-sdn-zone-id
                  type: string
              required:
              - ip
              - zone
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create IP Mapping in a VNet
      tags:
      - Cluster
    put:
      description: Update IP Mapping in a VNet
      operationId: put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_ips
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ip:
                  description: The IP address to associate with the given MAC address
                  format: ip
                  type: string
                mac:
                  description: Unicast MAC address.
                  format: mac-addr
                  type: string
                vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
                zone:
                  description: The SDN zone object identifier.
                  format: pve-sdn-zone-id
                  type: string
              required:
              - ip
              - zone
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP Mapping in a VNet
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/subnets:
    get:
      description: SDN subnets index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN subnets index.
      tags:
      - Cluster
    post:
      description: Create a new sdn subnet object.
      operationId: post_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dhcp-dns-server:
                  description: IP address for the DNS server
                  format: ip
                  type: string
                dhcp-range:
                  description: A list of DHCP ranges for this subnet
                  items:
                    format: pve-sdn-dhcp-range
                    type: string
                  type: array
                dnszoneprefix:
                  description: 'dns domain zone prefix  ex: ''adm'' -> <hostname>.adm.mydomain.com'
                  format: dns-name
                  type: string
                gateway:
                  description: 'Subnet Gateway: Will be assign on vnet for layer3
                    zones'
                  format: ip
                  type: string
                snat:
                  description: enable masquerade for this subnet if pve-firewall
                  type: boolean
                subnet:
                  description: The SDN subnet object identifier.
                  format: pve-sdn-subnet-id
                  type: string
                type:
                  enum:
                  - subnet
                  type: string
              required:
              - subnet
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sdn subnet object.
      tags:
      - Cluster
  ? /cluster/cluster/sdn/cluster/sdn/vnets/cluster/sdn/vnets/{vnet}/cluster/sdn/vnets/{vnet}/subnets/cluster/sdn/vnets/{vnet}/subnets/{subnet}
  : delete:
      description: Delete sdn subnet object configuration.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets_cluster_sdn_vnets_vnet_subnets_subnet
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The subnet parameter
        in: path
        name: subnet
        required: true
        schema:
          description: The subnet parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sdn subnet object configuration.
      tags:
      - Cluster
    get:
      description: Read sdn subnet configuration.
      operationId: get_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets_cluster_sdn_vnets_vnet_subnets_subnet
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The subnet parameter
        in: path
        name: subnet
        required: true
        schema:
          description: The subnet parameter
          type: string
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read sdn subnet configuration.
      tags:
      - Cluster
    put:
      description: Update sdn subnet object configuration.
      operationId: put_cluster_cluster_sdn_cluster_sdn_vnets_cluster_sdn_vnets_vnet_cluster_sdn_vnets_vnet_subnets_cluster_sdn_vnets_vnet_subnets_subnet
      parameters:
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The vnet parameter
        in: path
        name: vnet
        required: true
        schema:
          description: The vnet parameter
          type: string
      - description: The subnet parameter
        in: path
        name: subnet
        required: true
        schema:
          description: The subnet parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                dhcp-dns-server:
                  description: IP address for the DNS server
                  format: ip
                  type: string
                dhcp-range:
                  description: A list of DHCP ranges for this subnet
                  items:
                    format: pve-sdn-dhcp-range
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dnszoneprefix:
                  description: 'dns domain zone prefix  ex: ''adm'' -> <hostname>.adm.mydomain.com'
                  format: dns-name
                  type: string
                gateway:
                  description: 'Subnet Gateway: Will be assign on vnet for layer3
                    zones'
                  format: ip
                  type: string
                snat:
                  description: enable masquerade for this subnet if pve-firewall
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sdn subnet object configuration.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/zones:
    get:
      description: SDN zones index.
      operationId: get_cluster_cluster_sdn_cluster_sdn_zones
      parameters:
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      - description: Only list SDN zones of specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list SDN zones of specific type
          enum:
          - evpn
          - faucet
          - qinq
          - simple
          - vlan
          - vxlan
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    dhcp:
                      type: string
                    dns:
                      type: string
                    dnszone:
                      type: string
                    ipam:
                      type: string
                    mtu:
                      type: integer
                    nodes:
                      type: string
                    pending:
                      type: boolean
                    reversedns:
                      type: string
                    state:
                      type: string
                    type:
                      type: string
                    zone:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN zones index.
      tags:
      - Cluster
    post:
      description: Create a new sdn zone object.
      operationId: post_cluster_cluster_sdn_cluster_sdn_zones
      requestBody:
        content:
          application/json:
            schema:
              properties:
                advertise-subnets:
                  description: Advertise evpn subnets if you have silent hosts
                  type: boolean
                bridge:
                  type: string
                bridge-disable-mac-learning:
                  description: Disable auto mac learning.
                  type: boolean
                controller:
                  description: Frr router name
                  type: string
                dhcp:
                  description: Type of the DHCP backend for this zone
                  enum:
                  - dnsmasq
                  type: string
                disable-arp-nd-suppression:
                  description: Disable ipv4 arp && ipv6 neighbour discovery suppression
                  type: boolean
                dns:
                  description: dns api server
                  type: string
                dnszone:
                  description: 'dns domain zone  ex: mydomain.com'
                  format: dns-name
                  type: string
                dp-id:
                  description: Faucet dataplane id
                  type: integer
                exitnodes:
                  description: List of cluster node names.
                  format: pve-node-list
                  type: string
                exitnodes-local-routing:
                  description: Allow exitnodes to connect to evpn guests
                  type: boolean
                exitnodes-primary:
                  description: Force traffic to this exitnode first.
                  format: pve-node
                  type: string
                ipam:
                  description: use a specific ipam
                  type: string
                mac:
                  description: Anycast logical router mac address
                  format: mac-addr
                  type: string
                mtu:
                  description: MTU
                  type: integer
                nodes:
                  description: List of cluster node names.
                  format: pve-node-list
                  type: string
                peers:
                  description: peers address list.
                  format: ip-list
                  type: string
                reversedns:
                  description: reverse dns api server
                  type: string
                rt-import:
                  description: Route-Target import
                  format: pve-sdn-bgp-rt-list
                  type: string
                tag:
                  description: Service-VLAN Tag
                  minimum: 0
                  type: integer
                type:
                  description: Plugin type.
                  enum:
                  - evpn
                  - faucet
                  - qinq
                  - simple
                  - vlan
                  - vxlan
                  format: pve-configid
                  type: string
                vlan-protocol:
                  default: 802.1q
                  enum:
                  - 802.1q
                  - 802.1ad
                  type: string
                vrf-vxlan:
                  description: l3vni.
                  type: integer
                vxlan-port:
                  description: Vxlan tunnel udp port (default 4789).
                  maximum: 65536
                  minimum: 1
                  type: integer
                zone:
                  description: The SDN zone object identifier.
                  format: pve-sdn-zone-id
                  type: string
              required:
              - type
              - zone
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sdn zone object.
      tags:
      - Cluster
  /cluster/cluster/sdn/cluster/sdn/zones/cluster/sdn/zones/{zone}:
    delete:
      description: Delete sdn zone object configuration.
      operationId: delete_cluster_cluster_sdn_cluster_sdn_zones_cluster_sdn_zones_zone
      parameters:
      - description: The zone parameter
        in: path
        name: zone
        required: true
        schema:
          description: The zone parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sdn zone object configuration.
      tags:
      - Cluster
    get:
      description: Read sdn zone configuration.
      operationId: get_cluster_cluster_sdn_cluster_sdn_zones_cluster_sdn_zones_zone
      parameters:
      - description: The zone parameter
        in: path
        name: zone
        required: true
        schema:
          description: The zone parameter
          type: string
      - description: Display pending config.
        in: query
        name: pending
        required: false
        schema:
          description: Display pending config.
          type: boolean
      - description: Display running config.
        in: query
        name: running
        required: false
        schema:
          description: Display running config.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read sdn zone configuration.
      tags:
      - Cluster
    put:
      description: Update sdn zone object configuration.
      operationId: put_cluster_cluster_sdn_cluster_sdn_zones_cluster_sdn_zones_zone
      parameters:
      - description: The zone parameter
        in: path
        name: zone
        required: true
        schema:
          description: The zone parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                advertise-subnets:
                  description: Advertise evpn subnets if you have silent hosts
                  type: boolean
                bridge:
                  type: string
                bridge-disable-mac-learning:
                  description: Disable auto mac learning.
                  type: boolean
                controller:
                  description: Frr router name
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                dhcp:
                  description: Type of the DHCP backend for this zone
                  enum:
                  - dnsmasq
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable-arp-nd-suppression:
                  description: Disable ipv4 arp && ipv6 neighbour discovery suppression
                  type: boolean
                dns:
                  description: dns api server
                  type: string
                dnszone:
                  description: 'dns domain zone  ex: mydomain.com'
                  format: dns-name
                  type: string
                dp-id:
                  description: Faucet dataplane id
                  type: integer
                exitnodes:
                  description: List of cluster node names.
                  format: pve-node-list
                  type: string
                exitnodes-local-routing:
                  description: Allow exitnodes to connect to evpn guests
                  type: boolean
                exitnodes-primary:
                  description: Force traffic to this exitnode first.
                  format: pve-node
                  type: string
                ipam:
                  description: use a specific ipam
                  type: string
                mac:
                  description: Anycast logical router mac address
                  format: mac-addr
                  type: string
                mtu:
                  description: MTU
                  type: integer
                nodes:
                  description: List of cluster node names.
                  format: pve-node-list
                  type: string
                peers:
                  description: peers address list.
                  format: ip-list
                  type: string
                reversedns:
                  description: reverse dns api server
                  type: string
                rt-import:
                  description: Route-Target import
                  format: pve-sdn-bgp-rt-list
                  type: string
                tag:
                  description: Service-VLAN Tag
                  minimum: 0
                  type: integer
                vlan-protocol:
                  default: 802.1q
                  enum:
                  - 802.1q
                  - 802.1ad
                  type: string
                vrf-vxlan:
                  description: l3vni.
                  type: integer
                vxlan-port:
                  description: Vxlan tunnel udp port (default 4789).
                  maximum: 65536
                  minimum: 1
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sdn zone object configuration.
      tags:
      - Cluster
  /cluster/cluster/status:
    get:
      description: Get cluster status information.
      operationId: get_cluster_cluster_status
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: string
                    ip:
                      description: '[node] IP of the resolved nodename.'
                      type: string
                    level:
                      description: '[node] Proxmox VE Subscription level, indicates
                        if eligible for enterprise support as well as access to the
                        stable Proxmox VE Enterprise Repository.'
                      type: string
                    local:
                      description: '[node] Indicates if this is the responding node.'
                      type: boolean
                    name:
                      type: string
                    nodeid:
                      description: '[node] ID of the node from the corosync configuration.'
                      type: integer
                    nodes:
                      description: '[cluster] Nodes count, including offline nodes.'
                      type: integer
                    online:
                      description: '[node] Indicates if the node is online or offline.'
                      type: boolean
                    quorate:
                      description: '[cluster] Indicates if there is a majority of
                        nodes online to make decisions'
                      type: boolean
                    type:
                      description: Indicates the type, either cluster or node. The
                        type defines the object properties e.g. quorate available
                        for type cluster.
                      type: string
                    version:
                      description: '[cluster] Current version of the corosync configuration
                        file.'
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get cluster status information.
      tags:
      - Cluster
  /cluster/cluster/tasks:
    get:
      description: List recent tasks (cluster wide).
      operationId: get_cluster_cluster_tasks
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    upid:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List recent tasks (cluster wide).
      tags:
      - Cluster
  /nodes:
    get:
      description: Cluster node index.
      operationId: get_nodes
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cpu:
                      description: CPU utilization.
                      type: number
                    level:
                      description: Support level.
                      type: string
                    maxcpu:
                      description: Number of available CPUs.
                      type: integer
                    maxmem:
                      description: Number of available memory in bytes.
                      type: integer
                    mem:
                      description: Used memory in bytes.
                      type: integer
                    node:
                      description: The cluster node name.
                      format: pve-node
                      type: string
                    ssl_fingerprint:
                      description: The SSL fingerprint for the node certificate.
                      type: string
                    status:
                      description: Node status.
                      type: string
                    uptime:
                      description: Node uptime in seconds.
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Cluster node index.
      tags:
      - Nodes
  /nodes/nodes/{node}:
    get:
      description: Node index.
      operationId: get_nodes_nodes_node
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Node index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/aplinfo:
    get:
      description: Get list of appliances.
      operationId: get_nodes_nodes_node_nodes_node_aplinfo
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get list of appliances.
      tags:
      - Nodes
    post:
      description: Download appliance templates.
      operationId: post_nodes_nodes_node_nodes_node_aplinfo
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                storage:
                  description: The storage where the template will be stored
                  format: pve-storage-id
                  type: string
                template:
                  description: The template which will downloaded
                  maxLength: 255
                  type: string
              required:
              - storage
              - template
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download appliance templates.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/apt:
    get:
      description: Directory index for apt (Advanced Package Tool).
      operationId: get_nodes_nodes_node_nodes_node_apt
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index for apt (Advanced Package Tool).
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/changelog:
    get:
      description: Get package changelogs.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_changelog
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Package name.
        in: query
        name: name
        required: true
        schema:
          description: Package name.
          type: string
      - description: Package version.
        in: query
        name: version
        required: false
        schema:
          description: Package version.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get package changelogs.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/repositories:
    get:
      description: Get APT repository information.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Result from parsing the APT repository files in /etc/apt/.
                properties:
                  digest:
                    description: Common digest of all files.
                    type: string
                  errors:
                    description: List of problematic repository files.
                    items:
                      properties:
                        error:
                          description: The error message
                          type: string
                        path:
                          description: Path to the problematic file.
                          type: string
                      type: object
                    type: array
                  files:
                    description: List of parsed repository files.
                    items:
                      properties:
                        digest:
                          description: Digest of the file as bytes.
                          items:
                            type: integer
                          type: array
                        file-type:
                          description: Format of the file.
                          type: string
                        path:
                          description: Path to the problematic file.
                          type: string
                        repositories:
                          description: The parsed repositories.
                          items:
                            properties:
                              Comment:
                                description: Associated comment
                                type: string
                              Components:
                                description: List of repository components
                                items:
                                  type: string
                                type: array
                              Enabled:
                                description: Whether the repository is enabled or
                                  not
                                type: boolean
                              FileType:
                                description: Format of the defining file.
                                type: string
                              Options:
                                description: Additional options
                                items:
                                  properties:
                                    Key:
                                      type: string
                                    Values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              Suites:
                                description: List of package distribuitions
                                items:
                                  type: string
                                type: array
                              Types:
                                description: List of package types.
                                items:
                                  type: string
                                type: array
                              URIs:
                                description: List of repository URIs.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  infos:
                    description: Additional information/warnings for APT repositories.
                    items:
                      properties:
                        index:
                          description: Index of the associated repository within the
                            file.
                          type: string
                        kind:
                          description: Kind of the information (e.g. warning).
                          type: string
                        message:
                          description: Information message.
                          type: string
                        path:
                          description: Path to the associated file.
                          type: string
                        property:
                          description: Property from which the info originates.
                          type: string
                      type: object
                    type: array
                  standard-repos:
                    description: List of standard repositories and their configuration
                      status
                    items:
                      properties:
                        handle:
                          description: Handle to identify the repository.
                          type: string
                        name:
                          description: Full name of the repository.
                          type: string
                        status:
                          description: Indicating enabled/disabled status, if the
                            repository is configured.
                          type: boolean
                      type: object
                    type: array
                type: object
          description: Result from parsing the APT repository files in /etc/apt/.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get APT repository information.
      tags:
      - Nodes
    post:
      description: Change the properties of a repository. Currently only allows enabling/disabling.
      operationId: post_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Digest to detect modifications.
                  maxLength: 80
                  type: string
                enabled:
                  description: Whether the repository should be enabled or not.
                  type: boolean
                index:
                  description: Index within the file (starting from 0).
                  type: integer
                path:
                  description: Path to the containing file.
                  type: string
              required:
              - index
              - path
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Change the properties of a repository. Currently only allows enabling/disabling.
      tags:
      - Nodes
    put:
      description: Add a standard repository to the configuration
      operationId: put_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Digest to detect modifications.
                  maxLength: 80
                  type: string
                handle:
                  description: Handle that identifies a repository.
                  type: string
              required:
              - handle
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a standard repository to the configuration
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/update:
    get:
      description: List available updates.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_update
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List available updates.
      tags:
      - Nodes
    post:
      description: This is used to resynchronize the package index files from their
        sources (apt-get update).
      operationId: post_nodes_nodes_node_nodes_node_apt_nodes_node_apt_update
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notify:
                  default: 0
                  description: Send notification about new packages.
                  type: boolean
                quiet:
                  default: 0
                  description: Only produces output suitable for logging, omitting
                    progress indicators.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: This is used to resynchronize the package index files from their sources
        (apt-get update).
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/versions:
    get:
      description: Get package information for important Proxmox packages.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_versions
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get package information for important Proxmox packages.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/capabilities:
    get:
      description: Node capabilities index.
      operationId: get_nodes_nodes_node_nodes_node_capabilities
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Node capabilities index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/capabilities/nodes/{node}/capabilities/qemu:
    get:
      description: QEMU capabilities index.
      operationId: get_nodes_nodes_node_nodes_node_capabilities_nodes_node_capabilities_qemu
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: QEMU capabilities index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/capabilities/nodes/{node}/capabilities/qemu/nodes/{node}/capabilities/qemu/cpu:
    get:
      description: List all custom and default CPU models.
      operationId: get_nodes_nodes_node_nodes_node_capabilities_nodes_node_capabilities_qemu_nodes_node_capabilities_qemu_cpu
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    custom:
                      description: True if this is a custom CPU model.
                      type: boolean
                    name:
                      description: Name of the CPU model. Identifies it for subsequent
                        API calls. Prefixed with 'custom-' for custom models.
                      type: string
                    vendor:
                      description: CPU vendor visible to the guest when this model
                        is selected. Vendor of 'reported-model' in case of custom
                        models.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all custom and default CPU models.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/capabilities/nodes/{node}/capabilities/qemu/nodes/{node}/capabilities/qemu/machines:
    get:
      description: Get available QEMU/KVM machine types.
      operationId: get_nodes_nodes_node_nodes_node_capabilities_nodes_node_capabilities_qemu_nodes_node_capabilities_qemu_machines
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    changes:
                      description: Notable changes of a version, currently only set
                        for +pveX versions.
                      type: string
                    id:
                      description: Full name of machine type and version.
                      type: string
                    type:
                      description: The machine type.
                      type: string
                    version:
                      description: The machine version.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get available QEMU/KVM machine types.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_ceph
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg/nodes/{node}/ceph/cfg/db:
    get:
      description: Get the Ceph configuration database.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg_nodes_node_ceph_cfg_db
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    can_update_at_runtime:
                      type: boolean
                    level:
                      type: string
                    mask:
                      type: string
                    name:
                      type: string
                    section:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the Ceph configuration database.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg/nodes/{node}/ceph/cfg/raw:
    get:
      description: Get the Ceph configuration file.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg_nodes_node_ceph_cfg_raw
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the Ceph configuration file.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cfg/nodes/{node}/ceph/cfg/value:
    get:
      description: Get configured values from either the config file or config DB.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cfg_nodes_node_ceph_cfg_value
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: List of <section>:<config key> items.
        in: query
        name: config-keys
        required: true
        schema:
          description: List of <section>:<config key> items.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Contains {section}->{key} children with the values
                type: object
          description: Contains {section}->{key} children with the values
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get configured values from either the config file or config DB.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/cmd-safety:
    get:
      description: Heuristical check if it is safe to perform an action.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_cmd-safety
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Action to check
        in: query
        name: action
        required: true
        schema:
          description: Action to check
          enum:
          - stop
          - destroy
          type: string
      - description: ID of the service
        in: query
        name: id
        required: true
        schema:
          description: ID of the service
          type: string
      - description: Service type
        in: query
        name: service
        required: true
        schema:
          description: Service type
          enum:
          - osd
          - mon
          - mds
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  safe:
                    description: If it is safe to run the command.
                    type: boolean
                  status:
                    description: Status message given by Ceph.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Heuristical check if it is safe to perform an action.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/crush:
    get:
      description: Get OSD crush map
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_crush
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get OSD crush map
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/fs:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_fs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    data_pool:
                      description: The name of the data pool.
                      type: string
                    metadata_pool:
                      description: The name of the metadata pool.
                      type: string
                    name:
                      description: The ceph filesystem name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/fs/nodes/{node}/ceph/fs/{name}:
    post:
      description: Create a Ceph filesystem
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_fs_nodes_node_ceph_fs_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add-storage:
                  default: 0
                  description: Configure the created CephFS as storage for this cluster.
                  type: boolean
                pg_num:
                  default: 128
                  description: Number of placement groups for the backing data pool.
                    The metadata pool will use a quarter of this.
                  maximum: 32768
                  minimum: 8
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a Ceph filesystem
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/init:
    post:
      description: Create initial ceph default configuration and setup symlinks.
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_init
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cluster-network:
                  description: Declare a separate cluster network, OSDs will routeheartbeat,
                    object replication and recovery traffic over it
                  format: CIDR
                  maxLength: 128
                  type: string
                disable_cephx:
                  default: 0
                  description: 'Disable cephx authentication.


                    WARNING: cephx is a security feature protecting against man-in-the-middle
                    attacks. Only consider disabling cephx if your network is private!'
                  type: boolean
                min_size:
                  default: 2
                  description: Minimum number of available replicas per object to
                    allow I/O
                  maximum: 7
                  minimum: 1
                  type: integer
                network:
                  description: Use specific network for all ceph related traffic
                  format: CIDR
                  maxLength: 128
                  type: string
                pg_bits:
                  default: 6
                  description: 'Placement group bits, used to specify the default
                    number of placement groups.


                    Depreacted. This setting was deprecated in recent Ceph versions.'
                  maximum: 14
                  minimum: 6
                  type: integer
                size:
                  default: 3
                  description: Targeted number of replicas per object
                  maximum: 7
                  minimum: 1
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create initial ceph default configuration and setup symlinks.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/log:
    get:
      description: Read ceph log
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
      - in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read ceph log
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mds:
    get:
      description: MDS directory index.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mds
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    addr:
                      type: string
                    host:
                      type: string
                    name:
                      description: The name (ID) for the MDS
                      type: object
                    rank:
                      type: integer
                    standby_replay:
                      description: If true, the standby MDS is polling the active
                        MDS for faster recovery (hot standby).
                      type: boolean
                    state:
                      description: State of the MDS
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: MDS directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mds/nodes/{node}/ceph/mds/{name}:
    delete:
      description: Destroy Ceph Metadata Server
      operationId: delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mds_nodes_node_ceph_mds_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy Ceph Metadata Server
      tags:
      - Nodes
    post:
      description: Create Ceph Metadata Server (MDS)
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mds_nodes_node_ceph_mds_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hotstandby:
                  default: '0'
                  description: Determines whether a ceph-mds daemon should poll and
                    replay the log of an active MDS. Faster switch on MDS failure,
                    but needs more idle resources.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create Ceph Metadata Server (MDS)
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mgr:
    get:
      description: MGR directory index.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mgr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    addr:
                      type: string
                    host:
                      type: string
                    name:
                      description: The name (ID) for the MGR
                      type: object
                    state:
                      description: State of the MGR
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: MGR directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mgr/nodes/{node}/ceph/mgr/{id}:
    delete:
      description: Destroy Ceph Manager.
      operationId: delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mgr_nodes_node_ceph_mgr_id
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy Ceph Manager.
      tags:
      - Nodes
    post:
      description: Create Ceph Manager
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mgr_nodes_node_ceph_mgr_id
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create Ceph Manager
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mon:
    get:
      description: Get Ceph monitor list.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mon
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    addr:
                      type: string
                    ceph_version:
                      type: string
                    ceph_version_short:
                      type: string
                    direxists:
                      type: string
                    host:
                      type: boolean
                    name:
                      type: string
                    quorum:
                      type: boolean
                    rank:
                      type: integer
                    service:
                      type: integer
                    state:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get Ceph monitor list.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/mon/nodes/{node}/ceph/mon/{monid}:
    delete:
      description: Destroy Ceph Monitor and Manager.
      operationId: delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mon_nodes_node_ceph_mon_monid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The monid parameter
        in: path
        name: monid
        required: true
        schema:
          description: The monid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy Ceph Monitor and Manager.
      tags:
      - Nodes
    post:
      description: Create Ceph Monitor and Manager
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_mon_nodes_node_ceph_mon_monid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The monid parameter
        in: path
        name: monid
        required: true
        schema:
          description: The monid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mon-address:
                  description: Overwrites autodetected monitor IP address(es). Must
                    be in the public network(s) of Ceph.
                  format: ip-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create Ceph Monitor and Manager
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd:
    get:
      description: Get Ceph osd list/tree.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get Ceph osd list/tree.
      tags:
      - Nodes
    post:
      description: Create OSD
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                crush-device-class:
                  description: Set the device class of the OSD in crush.
                  type: string
                db_dev:
                  description: Block device name for block.db.
                  type: string
                db_dev_size:
                  default: bluestore_block_db_size or 10% of OSD size
                  description: Size in GiB for block.db.
                  minimum: 1
                  type: number
                dev:
                  description: Block device name.
                  type: string
                encrypted:
                  default: 0
                  description: Enables encryption of the OSD.
                  type: boolean
                osds-per-device:
                  description: "OSD services per physical device. Only useful for\
                    \ fast NVMe devices\"\n\t\t    .\" to utilize their performance\
                    \ better."
                  minimum: '1'
                  type: integer
                wal_dev:
                  description: Block device name for block.wal.
                  type: string
                wal_dev_size:
                  default: bluestore_block_wal_size or 1% of OSD size
                  description: Size in GiB for block.wal.
                  minimum: 0.5
                  type: number
              required:
              - dev
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create OSD
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}:
    delete:
      description: Destroy OSD
      operationId: delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: If set, we remove partition table entries.
        in: query
        name: cleanup
        required: false
        schema:
          default: 0
          description: If set, we remove partition table entries.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy OSD
      tags:
      - Nodes
    get:
      description: OSD index.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: OSD index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/in:
    post:
      description: ceph osd in
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_in
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ceph osd in
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/lv-info
  : get:
      description: Get OSD volume details
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_lv-info
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: OSD device type
        in: query
        name: type
        required: false
        schema:
          default: block
          description: OSD device type
          enum:
          - block
          - db
          - wal
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  creation_time:
                    description: Creation time as reported by `lvs`.
                    type: string
                  lv_name:
                    description: Name of the logical volume (LV).
                    type: string
                  lv_path:
                    description: Path to the logical volume (LV).
                    type: string
                  lv_size:
                    description: Size of the logical volume (LV).
                    type: integer
                  lv_uuid:
                    description: UUID of the logical volume (LV).
                    type: string
                  vg_name:
                    description: Name of the volume group (VG).
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get OSD volume details
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/metadata
  : get:
      description: Get OSD details
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_metadata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  devices:
                    description: Array containing data about devices
                    items:
                      properties:
                        dev_node:
                          description: Device node
                          type: string
                        device:
                          description: Kind of OSD device
                          type: string
                        devices:
                          description: Physical disks used
                          type: string
                        size:
                          description: Size in bytes
                          type: integer
                        support_discard:
                          description: Discard support of the physical device
                          type: boolean
                        type:
                          description: Type of device. For example, hdd or ssd
                          type: string
                      type: object
                    type: array
                  osd:
                    description: General information about the OSD
                    properties:
                      back_addr:
                        description: Address and port used to talk to other OSDs.
                        type: string
                      front_addr:
                        description: Address and port used to talk to clients and
                          monitors.
                        type: string
                      hb_back_addr:
                        description: Heartbeat address and port for other OSDs.
                        type: string
                      hb_front_addr:
                        description: Heartbeat address and port for clients and monitors.
                        type: string
                      hostname:
                        description: Name of the host containing the OSD.
                        type: string
                      id:
                        description: ID of the OSD.
                        type: integer
                      mem_usage:
                        description: Memory usage of the OSD service.
                        type: integer
                      osd_data:
                        description: Path to the OSD's data directory.
                        type: string
                      osd_objectstore:
                        description: The type of object store used.
                        type: string
                      pid:
                        description: OSD process ID.
                        type: integer
                      version:
                        description: Ceph version of the OSD service.
                        type: string
                    type: object
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get OSD details
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/out
  : post:
      description: ceph osd out
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_out
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ceph osd out
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/osd/nodes/{node}/ceph/osd/{osdid}/nodes/{node}/ceph/osd/{osdid}/scrub
  : post:
      description: Instruct the OSD to scrub.
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_osd_nodes_node_ceph_osd_osdid_nodes_node_ceph_osd_osdid_scrub
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The osdid parameter
        in: path
        name: osdid
        required: true
        schema:
          description: The osdid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deep:
                  default: 0
                  description: If set, instructs a deep scrub instead of a normal
                    one.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Instruct the OSD to scrub.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/pool:
    get:
      description: List all pools and their settings (which are settable by the POST/PUT
        endpoints).
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    application_metadata:
                      type: object
                    autoscale_status:
                      type: object
                    bytes_used:
                      type: integer
                    crush_rule:
                      type: integer
                    crush_rule_name:
                      type: string
                    min_size:
                      type: integer
                    percent_used:
                      type: number
                    pg_autoscale_mode:
                      type: string
                    pg_num:
                      type: integer
                    pg_num_final:
                      type: integer
                    pg_num_min:
                      type: integer
                    pool:
                      type: integer
                    pool_name:
                      type: string
                    size:
                      type: integer
                    target_size:
                      type: integer
                    target_size_ratio:
                      type: number
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all pools and their settings (which are settable by the POST/PUT
        endpoints).
      tags:
      - Nodes
    post:
      description: Create Ceph pool
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_storages:
                  default: '0; for erasure coded pools: 1'
                  description: Configure VM and CT storage using the new pool.
                  type: boolean
                application:
                  default: rbd
                  description: The application of the pool.
                  enum:
                  - rbd
                  - cephfs
                  - rgw
                  type: string
                crush_rule:
                  description: The rule to use for mapping object placement in the
                    cluster.
                  type: string
                erasure-coding:
                  description: Create an erasure coded pool for RBD with an accompaning
                    replicated pool for metadata storage. With EC, the common ceph
                    options 'size', 'min_size' and 'crush_rule' parameters will be
                    applied to the metadata pool.
                  format:
                    device-class:
                      description: CRUSH device class. Will create an erasure coded
                        pool plus a replicated pool for metadata.
                      format_description: class
                      optional: 1
                      type: string
                    failure-domain:
                      default: host
                      description: CRUSH failure domain. Default is 'host'. Will create
                        an erasure coded pool plus a replicated pool for metadata.
                      format_description: domain
                      optional: 1
                      type: string
                    k:
                      description: Number of data chunks. Will create an erasure coded
                        pool plus a replicated pool for metadata.
                      minimum: 2
                      type: integer
                    m:
                      description: Number of coding chunks. Will create an erasure
                        coded pool plus a replicated pool for metadata.
                      minimum: 1
                      type: integer
                    profile:
                      description: Override the erasure code (EC) profile to use.
                        Will create an erasure coded pool plus a replicated pool for
                        metadata.
                      format_description: profile
                      optional: 1
                      type: string
                  type: string
                min_size:
                  default: 2
                  description: Minimum number of replicas per object
                  maximum: 7
                  minimum: 1
                  type: integer
                name:
                  description: The name of the pool. It must be unique.
                  type: string
                pg_autoscale_mode:
                  default: warn
                  description: The automatic PG scaling mode of the pool.
                  enum:
                  - 'on'
                  - 'off'
                  - warn
                  type: string
                pg_num:
                  default: 128
                  description: Number of placement groups.
                  maximum: 32768
                  minimum: 1
                  type: integer
                pg_num_min:
                  description: Minimal number of placement groups.
                  maximum: 32768
                  type: integer
                size:
                  default: 3
                  description: Number of replicas per object
                  maximum: 7
                  minimum: 1
                  type: integer
                target_size:
                  description: The estimated target size of the pool for the PG autoscaler.
                  pattern: ^(\d+(\.\d+)?)([KMGT])?$
                  type: string
                target_size_ratio:
                  description: The estimated target ratio of the pool for the PG autoscaler.
                  type: number
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create Ceph pool
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/pool/nodes/{node}/ceph/pool/{name}:
    delete:
      description: Destroy pool
      operationId: delete_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: If true, destroys pool even if in use
        in: query
        name: force
        required: false
        schema:
          default: 0
          description: If true, destroys pool even if in use
          type: boolean
      - description: Remove the erasure code profile. Defaults to true, if applicable.
        in: query
        name: remove_ecprofile
        required: false
        schema:
          default: 1
          description: Remove the erasure code profile. Defaults to true, if applicable.
          type: boolean
      - description: Remove all pveceph-managed storages configured for this pool
        in: query
        name: remove_storages
        required: false
        schema:
          default: 0
          description: Remove all pveceph-managed storages configured for this pool
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy pool
      tags:
      - Nodes
    get:
      description: Pool index.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Pool index.
      tags:
      - Nodes
    put:
      description: Change POOL settings
      operationId: put_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                application:
                  description: The application of the pool.
                  enum:
                  - rbd
                  - cephfs
                  - rgw
                  type: string
                crush_rule:
                  description: The rule to use for mapping object placement in the
                    cluster.
                  type: string
                min_size:
                  description: Minimum number of replicas per object
                  maximum: 7
                  minimum: 1
                  type: integer
                pg_autoscale_mode:
                  description: The automatic PG scaling mode of the pool.
                  enum:
                  - 'on'
                  - 'off'
                  - warn
                  type: string
                pg_num:
                  description: Number of placement groups.
                  maximum: 32768
                  minimum: 1
                  type: integer
                pg_num_min:
                  description: Minimal number of placement groups.
                  maximum: 32768
                  type: integer
                size:
                  description: Number of replicas per object
                  maximum: 7
                  minimum: 1
                  type: integer
                target_size:
                  description: The estimated target size of the pool for the PG autoscaler.
                  pattern: ^(\d+(\.\d+)?)([KMGT])?$
                  type: string
                target_size_ratio:
                  description: The estimated target ratio of the pool for the PG autoscaler.
                  type: number
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Change POOL settings
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/pool/nodes/{node}/ceph/pool/{name}/nodes/{node}/ceph/pool/{name}/status
  : get:
      description: Show the current pool status.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_pool_nodes_node_ceph_pool_name_nodes_node_ceph_pool_name_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: If enabled, will display additional data(eg. statistics).
        in: query
        name: verbose
        required: false
        schema:
          default: 0
          description: If enabled, will display additional data(eg. statistics).
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  application:
                    description: The application of the pool.
                    type: string
                  application_list:
                    type: array
                  autoscale_status:
                    type: object
                  crush_rule:
                    description: The rule to use for mapping object placement in the
                      cluster.
                    type: string
                  fast_read:
                    type: boolean
                  hashpspool:
                    type: boolean
                  id:
                    type: integer
                  min_size:
                    description: Minimum number of replicas per object
                    type: integer
                  name:
                    description: The name of the pool. It must be unique.
                    type: string
                  nodeep-scrub:
                    type: boolean
                  nodelete:
                    type: boolean
                  nopgchange:
                    type: boolean
                  noscrub:
                    type: boolean
                  nosizechange:
                    type: boolean
                  pg_autoscale_mode:
                    description: The automatic PG scaling mode of the pool.
                    type: string
                  pg_num:
                    description: Number of placement groups.
                    type: integer
                  pg_num_min:
                    description: Minimal number of placement groups.
                    type: integer
                  pgp_num:
                    type: integer
                  size:
                    description: Number of replicas per object
                    type: integer
                  statistics:
                    type: object
                  target_size:
                    description: The estimated target size of the pool for the PG
                      autoscaler.
                    type: string
                  target_size_ratio:
                    description: The estimated target ratio of the pool for the PG
                      autoscaler.
                    type: number
                  use_gmt_hitset:
                    type: boolean
                  write_fadvise_dontneed:
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Show the current pool status.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/restart:
    post:
      description: Restart ceph services.
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_restart
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                service:
                  default: ceph.target
                  description: Ceph service name.
                  pattern: (mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Restart ceph services.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/rules:
    get:
      description: List ceph rules.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      description: Name of the CRUSH rule.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List ceph rules.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/start:
    post:
      description: Start ceph services.
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_start
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                service:
                  default: ceph.target
                  description: Ceph service name.
                  pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start ceph services.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/status:
    get:
      description: Get ceph status.
      operationId: get_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get ceph status.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/ceph/nodes/{node}/ceph/stop:
    post:
      description: Stop ceph services.
      operationId: post_nodes_nodes_node_nodes_node_ceph_nodes_node_ceph_stop
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                service:
                  default: ceph.target
                  description: Ceph service name.
                  pattern: (ceph|mon|mds|osd|mgr)(\.[a-zA-Z0-9]([a-zA-Z0-9\-]*[a-zA-Z0-9])?)?
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop ceph services.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/certificates:
    get:
      description: Node index.
      operationId: get_nodes_nodes_node_nodes_node_certificates
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Node index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/acme:
    get:
      description: ACME index.
      operationId: get_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ACME index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/acme/nodes/{node}/certificates/acme/certificate:
    delete:
      description: Revoke existing certificate from CA.
      operationId: delete_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Revoke existing certificate from CA.
      tags:
      - Nodes
    post:
      description: Order a new certificate from ACME-compatible CA.
      operationId: post_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: 0
                  description: Overwrite existing custom certificate.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Order a new certificate from ACME-compatible CA.
      tags:
      - Nodes
    put:
      description: Renew existing certificate from CA.
      operationId: put_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: 0
                  description: Force renewal even if expiry is more than 30 days away.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Renew existing certificate from CA.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/custom:
    delete:
      description: DELETE custom certificate chain and key.
      operationId: delete_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_custom
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Restart pveproxy.
        in: query
        name: restart
        required: false
        schema:
          default: 0
          description: Restart pveproxy.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: DELETE custom certificate chain and key.
      tags:
      - Nodes
    post:
      description: Upload or update custom certificate chain and key.
      operationId: post_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_custom
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                certificates:
                  description: PEM encoded certificate (chain).
                  format: pem-certificate-chain
                  type: string
                force:
                  default: 0
                  description: Overwrite existing custom or ACME certificate files.
                  type: boolean
                key:
                  description: PEM encoded private key.
                  format: pem-string
                  type: string
                restart:
                  default: 0
                  description: Restart pveproxy.
                  type: boolean
              required:
              - certificates
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filename:
                    type: string
                  fingerprint:
                    description: Certificate SHA 256 fingerprint.
                    type: string
                  issuer:
                    description: Certificate issuer name.
                    type: string
                  notafter:
                    description: Certificate's notAfter timestamp (UNIX epoch).
                    type: integer
                  notbefore:
                    description: Certificate's notBefore timestamp (UNIX epoch).
                    type: integer
                  pem:
                    description: Certificate in PEM format
                    format: pem-certificate
                    type: string
                  public-key-bits:
                    description: Certificate's public key size
                    type: integer
                  public-key-type:
                    description: Certificate's public key algorithm
                    type: string
                  san:
                    description: List of Certificate's SubjectAlternativeName entries.
                    items:
                      type: string
                    type: array
                  subject:
                    description: Certificate subject name.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload or update custom certificate chain and key.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/info:
    get:
      description: Get information about node's certificates.
      operationId: get_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_info
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    filename:
                      type: string
                    fingerprint:
                      description: Certificate SHA 256 fingerprint.
                      type: string
                    issuer:
                      description: Certificate issuer name.
                      type: string
                    notafter:
                      description: Certificate's notAfter timestamp (UNIX epoch).
                      type: integer
                    notbefore:
                      description: Certificate's notBefore timestamp (UNIX epoch).
                      type: integer
                    pem:
                      description: Certificate in PEM format
                      format: pem-certificate
                      type: string
                    public-key-bits:
                      description: Certificate's public key size
                      type: integer
                    public-key-type:
                      description: Certificate's public key algorithm
                      type: string
                    san:
                      description: List of Certificate's SubjectAlternativeName entries.
                      items:
                        type: string
                      type: array
                    subject:
                      description: Certificate subject name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get information about node's certificates.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/config:
    get:
      description: Get node configuration options.
      operationId: get_nodes_nodes_node_nodes_node_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Return only a specific property from the node configuration.
        in: query
        name: property
        required: false
        schema:
          default: all
          description: Return only a specific property from the node configuration.
          enum:
          - acme
          - acmedomain0
          - acmedomain1
          - acmedomain2
          - acmedomain3
          - acmedomain4
          - acmedomain5
          - ballooning-target
          - description
          - startall-onboot-delay
          - wakeonlan
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  acme:
                    description: Node specific ACME settings.
                    format:
                      account:
                        default: default
                        description: ACME account config file name.
                        format: pve-configid
                        format_description: name
                        optional: 1
                        type: string
                      domains:
                        description: List of domains for this node's ACME certificate
                        format: pve-acme-domain-list
                        format_description: domain[;domain;...]
                        optional: 1
                        type: string
                    type: string
                  acmedomain[n]:
                    description: ACME domain and validation plugin
                    format:
                      alias:
                        description: Alias for the Domain to verify ACME Challenge
                          over DNS
                        format: pve-acme-alias
                        format_description: domain
                        optional: 1
                        type: string
                      domain:
                        default_key: 1
                        description: domain for this node's ACME certificate
                        format: pve-acme-domain
                        format_description: domain
                        type: string
                      plugin:
                        default: standalone
                        description: The ACME plugin ID
                        format: pve-configid
                        format_description: name of the plugin configuration
                        optional: 1
                        type: string
                    type: string
                  ballooning-target:
                    description: RAM usage target for ballooning (in percent of total
                      memory)
                    type: integer
                  description:
                    description: Description for the Node. Shown in the web-interface
                      node notes panel. This is saved as comment inside the configuration
                      file.
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      different SHA1 digest. This can be used to prevent concurrent
                      modifications.
                    type: string
                  startall-onboot-delay:
                    description: Initial delay in seconds, before starting all the
                      Virtual Guests with on-boot enabled.
                    type: integer
                  wakeonlan:
                    description: Node specific wake on LAN settings.
                    format:
                      bind-interface:
                        default: The interface carrying the default route
                        description: Bind to this interface when sending wake on LAN
                          packet
                        format: pve-iface
                        format_description: bind interface
                        optional: 1
                        type: string
                      broadcast-address:
                        default: 255.255.255.255
                        description: IPv4 broadcast address to use when sending wake
                          on LAN packet
                        format: ipv4
                        format_description: IPv4 broadcast address
                        optional: 1
                        type: string
                      mac:
                        default_key: 1
                        description: MAC address for wake on LAN
                        format: mac-addr
                        format_description: MAC address
                        type: string
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get node configuration options.
      tags:
      - Nodes
    put:
      description: Set node configuration options.
      operationId: put_nodes_nodes_node_nodes_node_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acme:
                  description: Node specific ACME settings.
                  format:
                    account:
                      default: default
                      description: ACME account config file name.
                      format: pve-configid
                      format_description: name
                      optional: 1
                      type: string
                    domains:
                      description: List of domains for this node's ACME certificate
                      format: pve-acme-domain-list
                      format_description: domain[;domain;...]
                      optional: 1
                      type: string
                  type: string
                acmedomain[n]:
                  description: ACME domain and validation plugin
                  format:
                    alias:
                      description: Alias for the Domain to verify ACME Challenge over
                        DNS
                      format: pve-acme-alias
                      format_description: domain
                      optional: 1
                      type: string
                    domain:
                      default_key: 1
                      description: domain for this node's ACME certificate
                      format: pve-acme-domain
                      format_description: domain
                      type: string
                    plugin:
                      default: standalone
                      description: The ACME plugin ID
                      format: pve-configid
                      format_description: name of the plugin configuration
                      optional: 1
                      type: string
                  type: string
                ballooning-target:
                  default: 80
                  description: RAM usage target for ballooning (in percent of total
                    memory)
                  maximum: 100
                  minimum: 0
                  type: integer
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                description:
                  description: Description for the Node. Shown in the web-interface
                    node notes panel. This is saved as comment inside the configuration
                    file.
                  maxLength: 65536
                  type: string
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA1 digest. This can be used to prevent concurrent modifications.
                  maxLength: 40
                  type: string
                startall-onboot-delay:
                  default: 0
                  description: Initial delay in seconds, before starting all the Virtual
                    Guests with on-boot enabled.
                  maximum: 300
                  minimum: 0
                  type: integer
                wakeonlan:
                  description: Node specific wake on LAN settings.
                  format:
                    bind-interface:
                      default: The interface carrying the default route
                      description: Bind to this interface when sending wake on LAN
                        packet
                      format: pve-iface
                      format_description: bind interface
                      optional: 1
                      type: string
                    broadcast-address:
                      default: 255.255.255.255
                      description: IPv4 broadcast address to use when sending wake
                        on LAN packet
                      format: ipv4
                      format_description: IPv4 broadcast address
                      optional: 1
                      type: string
                    mac:
                      default_key: 1
                      description: MAC address for wake on LAN
                      format: mac-addr
                      format_description: MAC address
                      type: string
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set node configuration options.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks:
    get:
      description: Node index.
      operationId: get_nodes_nodes_node_nodes_node_disks
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Node index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/directory:
    get:
      description: PVE Managed Directory storages.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    device:
                      description: The mounted device.
                      type: string
                    options:
                      description: The mount options.
                      type: string
                    path:
                      description: The mount path.
                      type: string
                    type:
                      description: The filesystem type.
                      type: string
                    unitfile:
                      description: The path of the mount unit.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: PVE Managed Directory storages.
      tags:
      - Nodes
    post:
      description: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_storage:
                  default: 0
                  description: Configure storage using the directory.
                  type: boolean
                device:
                  description: The block device you want to create the filesystem
                    on.
                  type: string
                filesystem:
                  default: ext4
                  description: The desired filesystem.
                  enum:
                  - ext4
                  - xfs
                  type: string
                name:
                  description: The storage identifier.
                  format: pve-storage-id
                  type: string
              required:
              - device
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/directory/nodes/{node}/disks/directory/{name}:
    delete:
      description: Unmounts the storage and removes the mount unit.
      operationId: delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory_nodes_node_disks_directory_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Marks associated storage(s) as not available on this node anymore
          or removes them from the configuration (if configured for this node only).
        in: query
        name: cleanup-config
        required: false
        schema:
          default: 0
          description: Marks associated storage(s) as not available on this node anymore
            or removes them from the configuration (if configured for this node only).
          type: boolean
      - description: Also wipe disk so it can be repurposed afterwards.
        in: query
        name: cleanup-disks
        required: false
        schema:
          default: 0
          description: Also wipe disk so it can be repurposed afterwards.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Unmounts the storage and removes the mount unit.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/initgpt:
    post:
      description: Initialize Disk with GPT
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_initgpt
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disk:
                  description: Block device name
                  pattern: ^/dev/[a-zA-Z0-9\/]+$
                  type: string
                uuid:
                  description: UUID for the GPT table
                  maxLength: 36
                  pattern: '[a-fA-F0-9\-]+'
                  type: string
              required:
              - disk
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Initialize Disk with GPT
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/list:
    get:
      description: List local disks.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_list
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Also include partitions.
        in: query
        name: include-partitions
        required: false
        schema:
          default: 0
          description: Also include partitions.
          type: boolean
      - description: Skip smart checks.
        in: query
        name: skipsmart
        required: false
        schema:
          default: 0
          description: Skip smart checks.
          type: boolean
      - description: Only list specific types of disks.
        in: query
        name: type
        required: false
        schema:
          description: Only list specific types of disks.
          enum:
          - unused
          - journal_disks
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    devpath:
                      description: The device path
                      type: string
                    gpt:
                      type: boolean
                    health:
                      type: string
                    model:
                      type: string
                    mounted:
                      type: boolean
                    osdid:
                      type: integer
                    osdid-list:
                      items:
                        type: integer
                      type: array
                    parent:
                      description: For partitions only. The device path of the disk
                        the partition resides on.
                      type: string
                    serial:
                      type: string
                    size:
                      type: integer
                    used:
                      type: string
                    vendor:
                      type: string
                    wwn:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List local disks.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvm:
    get:
      description: List LVM Volume Groups
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvm
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  children:
                    items:
                      properties:
                        children:
                          description: The underlying physical volumes
                          items:
                            properties:
                              free:
                                description: The free bytes in the physical volume
                                type: integer
                              leaf:
                                type: boolean
                              name:
                                description: The name of the physical volume
                                type: string
                              size:
                                description: The size of the physical volume in bytes
                                type: integer
                            type: object
                          type: array
                        free:
                          description: The free bytes in the volume group
                          type: integer
                        leaf:
                          type: boolean
                        name:
                          description: The name of the volume group
                          type: string
                        size:
                          description: The size of the volume group in bytes
                          type: integer
                      type: object
                    type: array
                  leaf:
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List LVM Volume Groups
      tags:
      - Nodes
    post:
      description: Create an LVM Volume Group
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvm
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_storage:
                  default: 0
                  description: Configure storage using the Volume Group
                  type: boolean
                device:
                  description: The block device you want to create the volume group
                    on
                  type: string
                name:
                  description: The storage identifier.
                  format: pve-storage-id
                  type: string
              required:
              - device
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create an LVM Volume Group
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvm/nodes/{node}/disks/lvm/{name}:
    delete:
      description: Remove an LVM Volume Group.
      operationId: delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvm_nodes_node_disks_lvm_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Marks associated storage(s) as not available on this node anymore
          or removes them from the configuration (if configured for this node only).
        in: query
        name: cleanup-config
        required: false
        schema:
          default: 0
          description: Marks associated storage(s) as not available on this node anymore
            or removes them from the configuration (if configured for this node only).
          type: boolean
      - description: Also wipe disks so they can be repurposed afterwards.
        in: query
        name: cleanup-disks
        required: false
        schema:
          default: 0
          description: Also wipe disks so they can be repurposed afterwards.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove an LVM Volume Group.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvmthin:
    get:
      description: List LVM thinpools
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvmthin
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    lv:
                      description: The name of the thinpool.
                      type: string
                    lv_size:
                      description: The size of the thinpool in bytes.
                      type: integer
                    metadata_size:
                      description: The size of the metadata lv in bytes.
                      type: integer
                    metadata_used:
                      description: The used bytes of the metadata lv.
                      type: integer
                    used:
                      description: The used bytes of the thinpool.
                      type: integer
                    vg:
                      description: The associated volume group.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List LVM thinpools
      tags:
      - Nodes
    post:
      description: Create an LVM thinpool
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvmthin
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_storage:
                  default: 0
                  description: Configure storage using the thinpool.
                  type: boolean
                device:
                  description: The block device you want to create the thinpool on.
                  type: string
                name:
                  description: The storage identifier.
                  format: pve-storage-id
                  type: string
              required:
              - device
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create an LVM thinpool
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/lvmthin/nodes/{node}/disks/lvmthin/{name}:
    delete:
      description: Remove an LVM thin pool.
      operationId: delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_lvmthin_nodes_node_disks_lvmthin_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Marks associated storage(s) as not available on this node anymore
          or removes them from the configuration (if configured for this node only).
        in: query
        name: cleanup-config
        required: false
        schema:
          default: 0
          description: Marks associated storage(s) as not available on this node anymore
            or removes them from the configuration (if configured for this node only).
          type: boolean
      - description: Also wipe disks so they can be repurposed afterwards.
        in: query
        name: cleanup-disks
        required: false
        schema:
          default: 0
          description: Also wipe disks so they can be repurposed afterwards.
          type: boolean
      - description: The storage identifier.
        in: query
        name: volume-group
        required: true
        schema:
          description: The storage identifier.
          format: pve-storage-id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove an LVM thin pool.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/smart:
    get:
      description: Get SMART Health of a disk.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_smart
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Block device name
        in: query
        name: disk
        required: true
        schema:
          description: Block device name
          pattern: ^/dev/[a-zA-Z0-9\/]+$
          type: string
      - description: If true returns only the health status
        in: query
        name: healthonly
        required: false
        schema:
          description: If true returns only the health status
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  attributes:
                    type: array
                  health:
                    type: string
                  text:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get SMART Health of a disk.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/wipedisk:
    put:
      description: Wipe a disk or partition.
      operationId: put_nodes_nodes_node_nodes_node_disks_nodes_node_disks_wipedisk
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disk:
                  description: Block device name
                  pattern: ^/dev/[a-zA-Z0-9\/]+$
                  type: string
              required:
              - disk
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Wipe a disk or partition.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/zfs:
    get:
      description: List Zpools.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    alloc:
                      description: ''
                      type: integer
                    dedup:
                      description: ''
                      type: number
                    frag:
                      description: ''
                      type: integer
                    free:
                      description: ''
                      type: integer
                    health:
                      description: ''
                      type: string
                    name:
                      description: ''
                      type: string
                    size:
                      description: ''
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List Zpools.
      tags:
      - Nodes
    post:
      description: Create a ZFS pool.
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add_storage:
                  default: 0
                  description: Configure storage using the zpool.
                  type: boolean
                ashift:
                  default: 12
                  description: Pool sector size exponent.
                  maximum: 16
                  minimum: 9
                  type: integer
                compression:
                  default: 'on'
                  description: The compression algorithm to use.
                  enum:
                  - 'on'
                  - 'off'
                  - gzip
                  - lz4
                  - lzjb
                  - zle
                  - zstd
                  type: string
                devices:
                  description: The block devices you want to create the zpool on.
                  format: string-list
                  type: string
                draid-config:
                  format:
                    data:
                      description: The number of data devices per redundancy group.
                        (dRAID)
                      minimum: 1
                      type: integer
                    spares:
                      description: Number of dRAID spares.
                      minimum: 0
                      type: integer
                  type: string
                name:
                  description: The storage identifier.
                  format: pve-storage-id
                  type: string
                raidlevel:
                  description: The RAID level to use.
                  enum:
                  - single
                  - mirror
                  - raid10
                  - raidz
                  - raidz2
                  - raidz3
                  - draid
                  - draid2
                  - draid3
                  type: string
              required:
              - devices
              - name
              - raidlevel
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a ZFS pool.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/zfs/nodes/{node}/disks/zfs/{name}:
    delete:
      description: Destroy a ZFS pool.
      operationId: delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs_nodes_node_disks_zfs_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Marks associated storage(s) as not available on this node anymore
          or removes them from the configuration (if configured for this node only).
        in: query
        name: cleanup-config
        required: false
        schema:
          default: 0
          description: Marks associated storage(s) as not available on this node anymore
            or removes them from the configuration (if configured for this node only).
          type: boolean
      - description: Also wipe disks so they can be repurposed afterwards.
        in: query
        name: cleanup-disks
        required: false
        schema:
          default: 0
          description: Also wipe disks so they can be repurposed afterwards.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy a ZFS pool.
      tags:
      - Nodes
    get:
      description: Get details about a zpool.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs_nodes_node_disks_zfs_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    description: Information about the recommended action to fix the
                      state.
                    type: string
                  children:
                    description: The pool configuration information, including the
                      vdevs for each section (e.g. spares, cache), may be nested.
                    items:
                      properties:
                        cksum:
                          type: number
                        msg:
                          description: An optional message about the vdev.
                          type: string
                        name:
                          description: The name of the vdev or section.
                          type: string
                        read:
                          type: number
                        state:
                          description: The state of the vdev.
                          type: string
                        write:
                          type: number
                      type: object
                    type: array
                  errors:
                    description: Information about the errors on the zpool.
                    type: string
                  name:
                    description: The name of the zpool.
                    type: string
                  scan:
                    description: Information about the last/current scrub.
                    type: string
                  state:
                    description: The state of the zpool.
                    type: string
                  status:
                    description: Information about the state of the zpool.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get details about a zpool.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/dns:
    get:
      description: Read DNS settings.
      operationId: get_nodes_nodes_node_nodes_node_dns
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  dns1:
                    description: First name server IP address.
                    type: string
                  dns2:
                    description: Second name server IP address.
                    type: string
                  dns3:
                    description: Third name server IP address.
                    type: string
                  search:
                    description: Search domain for host-name lookup.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read DNS settings.
      tags:
      - Nodes
    put:
      description: Write DNS settings.
      operationId: put_nodes_nodes_node_nodes_node_dns
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dns1:
                  description: First name server IP address.
                  format: ip
                  type: string
                dns2:
                  description: Second name server IP address.
                  format: ip
                  type: string
                dns3:
                  description: Third name server IP address.
                  format: ip
                  type: string
                search:
                  description: Search domain for host-name lookup.
                  type: string
              required:
              - search
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Write DNS settings.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/execute:
    post:
      description: Execute multiple commands in order, root only.
      operationId: post_nodes_nodes_node_nodes_node_execute
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                commands:
                  description: JSON encoded array of commands.
                  format: pve-command-batch
                  type: string
              required:
              - commands
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute multiple commands in order, root only.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/firewall:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_firewall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/log:
    get:
      description: Read firewall log
      operationId: get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display log since this UNIX epoch.
        in: query
        name: since
        required: false
        schema:
          description: Display log since this UNIX epoch.
          minimum: 0
          type: integer
      - in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display log until this UNIX epoch.
        in: query
        name: until
        required: false
        schema:
          description: Display log until this UNIX epoch.
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read firewall log
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/options:
    get:
      description: Get host firewall options.
      operationId: get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_options
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  enable:
                    description: Enable host firewall rules.
                    type: boolean
                  log_level_forward:
                    description: Log level for forwarded traffic.
                    type: string
                  log_level_in:
                    description: Log level for incoming traffic.
                    type: string
                  log_level_out:
                    description: Log level for outgoing traffic.
                    type: string
                  log_nf_conntrack:
                    description: Enable logging of conntrack information.
                    type: boolean
                  ndp:
                    description: Enable NDP (Neighbor Discovery Protocol).
                    type: boolean
                  nf_conntrack_allow_invalid:
                    description: Allow invalid packets on connection tracking.
                    type: boolean
                  nf_conntrack_helpers:
                    description: 'Enable conntrack helpers for specific protocols.
                      Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane,
                      sip, snmp, tftp'
                    format: pve-fw-conntrack-helper
                    type: string
                  nf_conntrack_max:
                    description: Maximum number of tracked connections.
                    type: integer
                  nf_conntrack_tcp_timeout_established:
                    description: Conntrack established timeout.
                    type: integer
                  nf_conntrack_tcp_timeout_syn_recv:
                    description: Conntrack syn recv timeout.
                    type: integer
                  nftables:
                    description: Enable nftables based firewall (tech preview)
                    type: boolean
                  nosmurfs:
                    description: Enable SMURFS filter.
                    type: boolean
                  protection_synflood:
                    description: Enable synflood protection
                    type: boolean
                  protection_synflood_burst:
                    description: Synflood protection rate burst by ip src.
                    type: integer
                  protection_synflood_rate:
                    description: Synflood protection rate syn/sec by ip src.
                    type: integer
                  smurf_log_level:
                    description: Log level for SMURFS filter.
                    type: string
                  tcp_flags_log_level:
                    description: Log level for illegal tcp flags filter.
                    type: string
                  tcpflags:
                    description: Filter illegal combinations of TCP flags.
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get host firewall options.
      tags:
      - Nodes
    put:
      description: Set Firewall options.
      operationId: put_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_options
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                enable:
                  description: Enable host firewall rules.
                  type: boolean
                log_level_forward:
                  description: Log level for forwarded traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                log_level_in:
                  description: Log level for incoming traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                log_level_out:
                  description: Log level for outgoing traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                log_nf_conntrack:
                  default: 0
                  description: Enable logging of conntrack information.
                  type: boolean
                ndp:
                  default: 0
                  description: Enable NDP (Neighbor Discovery Protocol).
                  type: boolean
                nf_conntrack_allow_invalid:
                  default: 0
                  description: Allow invalid packets on connection tracking.
                  type: boolean
                nf_conntrack_helpers:
                  default: ''
                  description: 'Enable conntrack helpers for specific protocols. Supported
                    protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp,
                    tftp'
                  format: pve-fw-conntrack-helper
                  type: string
                nf_conntrack_max:
                  default: 262144
                  description: Maximum number of tracked connections.
                  minimum: 32768
                  type: integer
                nf_conntrack_tcp_timeout_established:
                  default: 432000
                  description: Conntrack established timeout.
                  minimum: 7875
                  type: integer
                nf_conntrack_tcp_timeout_syn_recv:
                  default: 60
                  description: Conntrack syn recv timeout.
                  maximum: 60
                  minimum: 30
                  type: integer
                nftables:
                  default: 0
                  description: Enable nftables based firewall (tech preview)
                  type: boolean
                nosmurfs:
                  description: Enable SMURFS filter.
                  type: boolean
                protection_synflood:
                  default: 0
                  description: Enable synflood protection
                  type: boolean
                protection_synflood_burst:
                  default: 1000
                  description: Synflood protection rate burst by ip src.
                  type: integer
                protection_synflood_rate:
                  default: 200
                  description: Synflood protection rate syn/sec by ip src.
                  type: integer
                smurf_log_level:
                  description: Log level for SMURFS filter.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                tcp_flags_log_level:
                  description: Log level for illegal tcp flags filter.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                tcpflags:
                  default: 0
                  description: Filter illegal combinations of TCP flags.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set Firewall options.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/rules:
    get:
      description: List rules.
      operationId: get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pos:
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List rules.
      tags:
      - Nodes
    post:
      description: Create new rule.
      operationId: post_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                pos:
                  description: Update rule at position <pos>.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              required:
              - action
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new rule.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/firewall/nodes/{node}/firewall/rules/nodes/{node}/firewall/rules/{pos}:
    delete:
      description: Delete rule.
      operationId: delete_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules_nodes_node_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete rule.
      tags:
      - Nodes
    get:
      description: Get single rule data.
      operationId: get_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules_nodes_node_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    type: string
                  comment:
                    type: string
                  dest:
                    type: string
                  dport:
                    type: string
                  enable:
                    type: integer
                  icmp-type:
                    type: string
                  iface:
                    type: string
                  ipversion:
                    type: integer
                  log:
                    description: Log level for firewall rule
                    type: string
                  macro:
                    type: string
                  pos:
                    type: integer
                  proto:
                    type: string
                  source:
                    type: string
                  sport:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get single rule data.
      tags:
      - Nodes
    put:
      description: Modify rule data.
      operationId: put_nodes_nodes_node_nodes_node_firewall_nodes_node_firewall_rules_nodes_node_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                moveto:
                  description: Move rule to new position <moveto>. Other arguments
                    are ignored.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Modify rule data.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/hardware:
    get:
      description: Index of hardware types
      operationId: get_nodes_nodes_node_nodes_node_hardware
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index of hardware types
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/pci:
    get:
      description: List local PCI devices.
      operationId: get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_pci
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: 'A list of blacklisted PCI classes, which will not be returned.
          Following are filtered by default: Memory Controller (05), Bridge (06) and
          Processor (0b).'
        in: query
        name: pci-class-blacklist
        required: false
        schema:
          default: 05;06;0b
          description: 'A list of blacklisted PCI classes, which will not be returned.
            Following are filtered by default: Memory Controller (05), Bridge (06)
            and Processor (0b).'
          format: string-list
          type: string
      - description: If disabled, does only print the PCI IDs. Otherwise, additional
          information like vendor and device will be returned.
        in: query
        name: verbose
        required: false
        schema:
          default: 1
          description: If disabled, does only print the PCI IDs. Otherwise, additional
            information like vendor and device will be returned.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    class:
                      description: The PCI Class of the device.
                      type: string
                    device:
                      description: The Device ID.
                      type: string
                    device_name:
                      type: string
                    id:
                      description: The PCI ID.
                      type: string
                    iommugroup:
                      description: The IOMMU group in which the device is in. If no
                        IOMMU group is detected, it is set to -1.
                      type: integer
                    mdev:
                      description: If set, marks that the device is capable of creating
                        mediated devices.
                      type: boolean
                    subsystem_device:
                      description: The Subsystem Device ID.
                      type: string
                    subsystem_device_name:
                      type: string
                    subsystem_vendor:
                      description: The Subsystem Vendor ID.
                      type: string
                    subsystem_vendor_name:
                      type: string
                    vendor:
                      description: The Vendor ID.
                      type: string
                    vendor_name:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List local PCI devices.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/pci/nodes/{node}/hardware/pci/{pci-id-or-mapping}:
    get:
      description: Index of available pci methods
      operationId: get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_pci_nodes_node_hardware_pci_pci-id-or-mapping
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The pci-id-or-mapping parameter
        in: path
        name: pci-id-or-mapping
        required: true
        schema:
          description: The pci-id-or-mapping parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    method:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index of available pci methods
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/pci/nodes/{node}/hardware/pci/{pci-id-or-mapping}/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev
  : get:
      description: List mediated device types for given PCI device.
      operationId: get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_pci_nodes_node_hardware_pci_pci-id-or-mapping_nodes_node_hardware_pci_pci-id-or-mapping_mdev
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The pci-id-or-mapping parameter
        in: path
        name: pci-id-or-mapping
        required: true
        schema:
          description: The pci-id-or-mapping parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The pci-id-or-mapping parameter
        in: path
        name: pci-id-or-mapping
        required: true
        schema:
          description: The pci-id-or-mapping parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    available:
                      description: The number of still available instances of this
                        type.
                      type: integer
                    description:
                      description: Additional description of the type.
                      type: string
                    name:
                      description: A human readable name for the type.
                      type: string
                    type:
                      description: The name of the mdev type.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List mediated device types for given PCI device.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/hardware/nodes/{node}/hardware/usb:
    get:
      description: List local USB devices.
      operationId: get_nodes_nodes_node_nodes_node_hardware_nodes_node_hardware_usb
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    busnum:
                      type: integer
                    class:
                      type: integer
                    devnum:
                      type: integer
                    level:
                      type: integer
                    manufacturer:
                      type: string
                    port:
                      type: integer
                    prodid:
                      type: string
                    product:
                      type: string
                    serial:
                      type: string
                    speed:
                      type: string
                    usbpath:
                      type: string
                    vendid:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List local USB devices.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/hosts:
    get:
      description: Get the content of /etc/hosts.
      operationId: get_nodes_nodes_node_nodes_node_hosts
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    description: The content of /etc/hosts.
                    type: string
                  digest:
                    description: Prevent changes if current configuration file has
                      a different digest. This can be used to prevent concurrent modifications.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the content of /etc/hosts.
      tags:
      - Nodes
    post:
      description: Write /etc/hosts.
      operationId: post_nodes_nodes_node_nodes_node_hosts
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  description: The target content of /etc/hosts.
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
              required:
              - data
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Write /etc/hosts.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/journal:
    get:
      description: Read Journal
      operationId: get_nodes_nodes_node_nodes_node_journal
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: End before the given Cursor. Conflicts with 'until'
        in: query
        name: endcursor
        required: false
        schema:
          description: End before the given Cursor. Conflicts with 'until'
          type: string
      - description: Limit to the last X lines. Conflicts with a range.
        in: query
        name: lastentries
        required: false
        schema:
          description: Limit to the last X lines. Conflicts with a range.
          minimum: 0
          type: integer
      - description: Display all log since this UNIX epoch. Conflicts with 'startcursor'.
        in: query
        name: since
        required: false
        schema:
          description: Display all log since this UNIX epoch. Conflicts with 'startcursor'.
          minimum: 0
          type: integer
      - description: Start after the given Cursor. Conflicts with 'since'
        in: query
        name: startcursor
        required: false
        schema:
          description: Start after the given Cursor. Conflicts with 'since'
          type: string
      - description: Display all log until this UNIX epoch. Conflicts with 'endcursor'.
        in: query
        name: until
        required: false
        schema:
          description: Display all log until this UNIX epoch. Conflicts with 'endcursor'.
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read Journal
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc:
    get:
      description: LXC container index (per node).
      operationId: get_nodes_nodes_node_nodes_node_lxc
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cpu:
                      description: Current CPU usage.
                      type: number
                    cpus:
                      description: Maximum usable CPUs.
                      type: number
                    disk:
                      description: Root disk image space-usage in bytes.
                      type: integer
                    diskread:
                      description: 'The amount of bytes the guest read from it''s
                        block devices since the guest was started. (Note: This info
                        is not available for all storage types.)'
                      type: integer
                    diskwrite:
                      description: 'The amount of bytes the guest wrote from it''s
                        block devices since the guest was started. (Note: This info
                        is not available for all storage types.)'
                      type: integer
                    lock:
                      description: The current config lock, if any.
                      type: string
                    maxdisk:
                      description: Root disk image size in bytes.
                      type: integer
                    maxmem:
                      description: Maximum memory in bytes.
                      type: integer
                    maxswap:
                      description: Maximum SWAP memory in bytes.
                      type: integer
                    mem:
                      description: Currently used memory in bytes.
                      type: integer
                    name:
                      description: Container name.
                      type: string
                    netin:
                      description: The amount of traffic in bytes that was sent to
                        the guest over the network since it was started.
                      type: integer
                    netout:
                      description: The amount of traffic in bytes that was sent from
                        the guest over the network since it was started.
                      type: integer
                    status:
                      description: LXC Container status.
                      type: string
                    tags:
                      description: The current configured tags, if any.
                      type: string
                    template:
                      description: Determines if the guest is a template.
                      type: boolean
                    uptime:
                      description: Uptime in seconds.
                      type: integer
                    vmid:
                      description: The (unique) ID of the VM.
                      format: pve-vmid
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: LXC container index (per node).
      tags:
      - Nodes
    post:
      description: Create or restore a container.
      operationId: post_nodes_nodes_node_nodes_node_lxc
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                arch:
                  default: amd64
                  description: OS architecture type.
                  enum:
                  - amd64
                  - i386
                  - arm64
                  - armhf
                  - riscv32
                  - riscv64
                  type: string
                bwlimit:
                  default: restore limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: number
                cmode:
                  default: tty
                  description: Console mode. By default, the console command tries
                    to open a connection to one of the available tty devices. By setting
                    cmode to 'console' it tries to attach to /dev/console instead.
                    If you set cmode to 'shell', it simply invokes a shell inside
                    the container (no login).
                  enum:
                  - shell
                  - console
                  - tty
                  type: string
                console:
                  default: 1
                  description: Attach a console device (/dev/console) to the container.
                  type: boolean
                cores:
                  description: The number of cores assigned to the container. A container
                    can use all available cores by default.
                  maximum: 8192
                  minimum: 1
                  type: integer
                cpulimit:
                  default: 0
                  description: 'Limit of CPU usage.


                    NOTE: If the computer has 2 CPUs, it has a total of ''2'' CPU
                    time. Value ''0'' indicates no CPU limit.'
                  maximum: 8192
                  minimum: 0
                  type: number
                cpuunits:
                  default: 'cgroup v1: 1024, cgroup v2: 100'
                  description: CPU weight for a container, will be clamped to [1,
                    10000] in cgroup v2.
                  maximum: 500000
                  minimum: 0
                  type: integer
                debug:
                  default: 0
                  description: Try to be more verbose. For now this only enables debug
                    log-level on start.
                  type: boolean
                description:
                  description: Description for the Container. Shown in the web-interface
                    CT's summary. This is saved as comment inside the configuration
                    file.
                  maxLength: 8192
                  type: string
                dev[n]:
                  description: Device to pass through to the container
                  format:
                    deny-write:
                      default: 0
                      description: Deny the container to write to the device
                      optional: 1
                      type: boolean
                    gid:
                      description: Group ID to be assigned to the device node
                      minimum: 0
                      optional: 1
                      type: integer
                    mode:
                      description: Access mode to be set on the device node
                      format_description: Octal access mode
                      optional: 1
                      pattern: 0[0-7]{3}
                      type: string
                    path:
                      default_key: 1
                      description: Device to pass through to the container
                      format: pve-lxc-dev-string
                      format_description: Path
                      optional: 1
                      type: string
                      verbose_description: Path to the device to pass through to the
                        container
                    uid:
                      description: User ID to be assigned to the device node
                      minimum: 0
                      optional: 1
                      type: integer
                  type: string
                features:
                  description: Allow containers access to advanced features.
                  format:
                    force_rw_sys:
                      default: 0
                      description: Mount /sys in unprivileged containers as `rw` instead
                        of `mixed`. This can break networking under newer (>= v245)
                        systemd-network use.
                      optional: 1
                      type: boolean
                    fuse:
                      default: 0
                      description: Allow using 'fuse' file systems in a container.
                        Note that interactions between fuse and the freezer cgroup
                        can potentially cause I/O deadlocks.
                      optional: 1
                      type: boolean
                    keyctl:
                      default: 0
                      description: 'For unprivileged containers only: Allow the use
                        of the keyctl() system call. This is required to use docker
                        inside a container. By default unprivileged containers will
                        see this system call as non-existent. This is mostly a workaround
                        for systemd-networkd, as it will treat it as a fatal error
                        when some keyctl() operations are denied by the kernel due
                        to lacking permissions. Essentially, you can choose between
                        running systemd-networkd or docker.'
                      optional: 1
                      type: boolean
                    mknod:
                      default: 0
                      description: Allow unprivileged containers to use mknod() to
                        add certain device nodes. This requires a kernel with seccomp
                        trap to user space support (5.3 or newer). This is experimental.
                      optional: 1
                      type: boolean
                    mount:
                      description: Allow mounting file systems of specific types.
                        This should be a list of file system types as used with the
                        mount command. Note that this can have negative effects on
                        the container's security. With access to a loop device, mounting
                        a file can circumvent the mknod permission of the devices
                        cgroup, mounting an NFS file system can block the host's I/O
                        completely and prevent it from rebooting, etc.
                      format_description: fstype;fstype;...
                      optional: 1
                      pattern: (?^:[a-zA-Z0-9_; ]+)
                      type: string
                    nesting:
                      default: 0
                      description: Allow nesting. Best used with unprivileged containers
                        with additional id mapping. Note that this will expose procfs
                        and sysfs contents of the host to the guest.
                      optional: 1
                      type: boolean
                  type: string
                force:
                  description: Allow to overwrite existing container.
                  type: boolean
                hookscript:
                  description: Script that will be executed during various steps in
                    the containers lifetime.
                  format: pve-volume-id
                  type: string
                hostname:
                  description: Set a host name for the container.
                  format: dns-name
                  maxLength: 255
                  type: string
                ignore-unpack-errors:
                  description: Ignore errors when extracting the template.
                  type: boolean
                lock:
                  description: Lock/unlock the container.
                  enum:
                  - backup
                  - create
                  - destroyed
                  - disk
                  - fstrim
                  - migrate
                  - mounted
                  - rollback
                  - snapshot
                  - snapshot-delete
                  type: string
                memory:
                  default: 512
                  description: Amount of RAM for the container in MB.
                  minimum: 16
                  type: integer
                mp[n]:
                  description: Use volume as container mount point. Use the special
                    syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.
                  format:
                    acl:
                      description: Explicitly enable or disable ACL support.
                      optional: 1
                      type: boolean
                    backup:
                      description: Whether to include the mount point in backups.
                      optional: 1
                      type: boolean
                      verbose_description: Whether to include the mount point in backups
                        (only used for volume mount points).
                    mountoptions:
                      description: Extra mount options for rootfs/mps.
                      format_description: opt[;opt...]
                      optional: 1
                      pattern: (?^:(?^:(discard|lazytime|noatime|nodev|noexec|nosuid))(;(?^:(discard|lazytime|noatime|nodev|noexec|nosuid)))*)
                      type: string
                    mp:
                      description: Path to the mount point as seen from inside the
                        container (must not contain symlinks).
                      format: pve-lxc-mp-string
                      format_description: Path
                      type: string
                      verbose_description: 'Path to the mount point as seen from inside
                        the container.


                        NOTE: Must not contain any symlinks for security reasons.'
                    quota:
                      description: Enable user quotas inside the container (not supported
                        with zfs subvolumes)
                      optional: 1
                      type: boolean
                    replicate:
                      default: 1
                      description: Will include this volume to a storage replica job.
                      optional: 1
                      type: boolean
                    ro:
                      description: Read-only mount point
                      optional: 1
                      type: boolean
                    shared:
                      default: 0
                      description: Mark this non-volume mount point as available on
                        multiple nodes (see 'nodes')
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this non-volume mount point as available
                        on all nodes.


                        WARNING: This option does not share the mount point automatically,
                        it assumes it is shared already!'
                    size:
                      description: Volume size (read only value).
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      default_key: 1
                      description: Volume, device or directory to mount into the container.
                      format: pve-lxc-mp-string
                      format_description: volume
                      type: string
                  type: string
                nameserver:
                  description: Sets DNS server IP address for a container. Create
                    will automatically use the setting from the host if you neither
                    set searchdomain nor nameserver.
                  format: lxc-ip-with-ll-iface-list
                  type: string
                net[n]:
                  description: Specifies network interfaces for the container.
                  format:
                    bridge:
                      description: Bridge to attach the network device to.
                      format_description: bridge
                      optional: 1
                      pattern: '[-_.\w\d]+'
                      type: string
                    firewall:
                      description: Controls whether this interface's firewall rules
                        should be used.
                      optional: 1
                      type: boolean
                    gw:
                      description: Default gateway for IPv4 traffic.
                      format: ipv4
                      format_description: GatewayIPv4
                      optional: 1
                      type: string
                    gw6:
                      description: Default gateway for IPv6 traffic.
                      format: ipv6
                      format_description: GatewayIPv6
                      optional: 1
                      type: string
                    hwaddr:
                      description: The interface MAC address. This is dynamically
                        allocated by default, but you can set that statically if needed,
                        for example to always have the same link-local IPv6 address.
                        (lxc.network.hwaddr)
                      format: mac-addr
                      format_description: XX:XX:XX:XX:XX:XX
                      optional: 1
                      type: string
                      verbose_description: A common MAC address with the I/G (Individual/Group)
                        bit not set.
                    ip:
                      description: IPv4 address in CIDR format.
                      format: pve-ipv4-config
                      format_description: (IPv4/CIDR|dhcp|manual)
                      optional: 1
                      type: string
                    ip6:
                      description: IPv6 address in CIDR format.
                      format: pve-ipv6-config
                      format_description: (IPv6/CIDR|auto|dhcp|manual)
                      optional: 1
                      type: string
                    link_down:
                      description: Whether this interface should be disconnected (like
                        pulling the plug).
                      optional: 1
                      type: boolean
                    mtu:
                      description: Maximum transfer unit of the interface. (lxc.network.mtu)
                      maximum: 65535
                      minimum: 64
                      optional: 1
                      type: integer
                    name:
                      description: Name of the network device as seen from inside
                        the container. (lxc.network.name)
                      format_description: string
                      pattern: '[-_.\w\d]+'
                      type: string
                    rate:
                      description: Apply rate limiting to the interface
                      format_description: mbps
                      optional: 1
                      type: number
                    tag:
                      description: VLAN tag for this interface.
                      maximum: 4094
                      minimum: 1
                      optional: 1
                      type: integer
                    trunks:
                      description: VLAN ids to pass through the interface
                      format_description: vlanid[;vlanid...]
                      optional: 1
                      pattern: (?^:\d+(?:;\d+)*)
                      type: string
                    type:
                      description: Network interface type.
                      enum:
                      - veth
                      optional: 1
                      type: string
                  type: string
                onboot:
                  default: 0
                  description: Specifies whether a container will be started during
                    system bootup.
                  type: boolean
                ostemplate:
                  description: The OS template or backup file.
                  maxLength: 255
                  type: string
                ostype:
                  description: OS type. This is used to setup configuration inside
                    the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf.
                    Value 'unmanaged' can be used to skip and OS specific setup.
                  enum:
                  - debian
                  - devuan
                  - ubuntu
                  - centos
                  - fedora
                  - opensuse
                  - archlinux
                  - alpine
                  - gentoo
                  - nixos
                  - unmanaged
                  type: string
                password:
                  description: Sets root password inside container.
                  minLength: 5
                  type: string
                pool:
                  description: Add the VM to the specified pool.
                  format: pve-poolid
                  type: string
                protection:
                  default: 0
                  description: Sets the protection flag of the container. This will
                    prevent the CT or CT's disk remove/update operation.
                  type: boolean
                restore:
                  description: Mark this as restore task.
                  type: boolean
                rootfs:
                  description: Use volume as container root.
                  format:
                    acl:
                      description: Explicitly enable or disable ACL support.
                      optional: 1
                      type: boolean
                    mountoptions:
                      description: Extra mount options for rootfs/mps.
                      format_description: opt[;opt...]
                      optional: 1
                      pattern: (?^:(?^:(discard|lazytime|noatime|nodev|noexec|nosuid))(;(?^:(discard|lazytime|noatime|nodev|noexec|nosuid)))*)
                      type: string
                    quota:
                      description: Enable user quotas inside the container (not supported
                        with zfs subvolumes)
                      optional: 1
                      type: boolean
                    replicate:
                      default: 1
                      description: Will include this volume to a storage replica job.
                      optional: 1
                      type: boolean
                    ro:
                      description: Read-only mount point
                      optional: 1
                      type: boolean
                    shared:
                      default: 0
                      description: Mark this non-volume mount point as available on
                        multiple nodes (see 'nodes')
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this non-volume mount point as available
                        on all nodes.


                        WARNING: This option does not share the mount point automatically,
                        it assumes it is shared already!'
                    size:
                      description: Volume size (read only value).
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      default_key: 1
                      description: Volume, device or directory to mount into the container.
                      format: pve-lxc-mp-string
                      format_description: volume
                      type: string
                  type: string
                searchdomain:
                  description: Sets DNS search domains for a container. Create will
                    automatically use the setting from the host if you neither set
                    searchdomain nor nameserver.
                  format: dns-name-list
                  type: string
                ssh-public-keys:
                  description: Setup public SSH keys (one key per line, OpenSSH format).
                  type: string
                start:
                  default: 0
                  description: Start the CT after its creation finished successfully.
                  type: boolean
                startup:
                  description: Startup and shutdown behavior. Order is a non-negative
                    number defining the general startup order. Shutdown in done with
                    reverse ordering. Additionally you can set the 'up' or 'down'
                    delay in seconds, which specifies a delay to wait before the next
                    VM is started or stopped.
                  format: pve-startup-order
                  type: string
                storage:
                  default: local
                  description: Default Storage.
                  format: pve-storage-id
                  type: string
                swap:
                  default: 512
                  description: Amount of SWAP for the container in MB.
                  minimum: 0
                  type: integer
                tags:
                  description: Tags of the Container. This is only meta information.
                  format: pve-tag-list
                  type: string
                template:
                  default: 0
                  description: Enable/disable Template.
                  type: boolean
                timezone:
                  description: Time zone to use in the container. If option isn't
                    set, then nothing will be done. Can be set to 'host' to match
                    the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab
                  format: pve-ct-timezone
                  type: string
                tty:
                  default: 2
                  description: Specify the number of tty available to the container
                  maximum: 6
                  minimum: 0
                  type: integer
                unique:
                  description: Assign a unique random ethernet address.
                  type: boolean
                unprivileged:
                  default: 0
                  description: Makes the container run as unprivileged user. (Should
                    not be modified manually.)
                  type: boolean
                unused[n]:
                  description: Reference to unused volumes. This is used internally,
                    and should not be modified manually.
                  format:
                    volume:
                      default_key: 1
                      description: The volume that is not used currently.
                      format: pve-volume-id
                      format_description: volume
                      type: string
                  type: string
                vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
              required:
              - ostemplate
              - vmid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create or restore a container.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}:
    delete:
      description: Destroy the container (also delete all uses files).
      operationId: delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: If set, destroy additionally all disks with the VMID from all
          enabled storages which are not referenced in the config.
        in: query
        name: destroy-unreferenced-disks
        required: false
        schema:
          description: If set, destroy additionally all disks with the VMID from all
            enabled storages which are not referenced in the config.
          type: boolean
      - description: Force destroy, even if running.
        in: query
        name: force
        required: false
        schema:
          default: 0
          description: Force destroy, even if running.
          type: boolean
      - description: Remove container from all related configurations. For example,
          backup jobs, replication jobs or HA. Related ACLs and Firewall entries will
          *always* be removed.
        in: query
        name: purge
        required: false
        schema:
          default: 0
          description: Remove container from all related configurations. For example,
            backup jobs, replication jobs or HA. Related ACLs and Firewall entries
            will *always* be removed.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy the container (also delete all uses files).
      tags:
      - Nodes
    get:
      description: Directory index
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/clone:
    post:
      description: Create a container clone/copy
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_clone
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: clone limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: number
                description:
                  description: Description for the new CT.
                  type: string
                full:
                  description: Create a full copy of all disks. This is always done
                    when you clone a normal CT. For CT templates, we try to create
                    a linked clone by default.
                  type: boolean
                hostname:
                  description: Set a hostname for the new CT.
                  format: dns-name
                  type: string
                newid:
                  description: VMID for the clone.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
                pool:
                  description: Add the new CT to the specified pool.
                  format: pve-poolid
                  type: string
                snapname:
                  description: The name of the snapshot.
                  format: pve-configid
                  maxLength: 40
                  type: string
                storage:
                  description: Target storage for full clone.
                  format: pve-storage-id
                  type: string
                target:
                  description: Target node. Only allowed if the original VM is on
                    shared storage.
                  format: pve-node
                  type: string
              required:
              - newid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a container clone/copy
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/config:
    get:
      description: Get container configuration.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Get current values (instead of pending values).
        in: query
        name: current
        required: false
        schema:
          default: 0
          description: Get current values (instead of pending values).
          type: boolean
      - description: Fetch config values from given snapshot.
        in: query
        name: snapshot
        required: false
        schema:
          description: Fetch config values from given snapshot.
          format: pve-configid
          maxLength: 40
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  arch:
                    description: OS architecture type.
                    type: string
                  cmode:
                    description: Console mode. By default, the console command tries
                      to open a connection to one of the available tty devices. By
                      setting cmode to 'console' it tries to attach to /dev/console
                      instead. If you set cmode to 'shell', it simply invokes a shell
                      inside the container (no login).
                    type: string
                  console:
                    description: Attach a console device (/dev/console) to the container.
                    type: boolean
                  cores:
                    description: The number of cores assigned to the container. A
                      container can use all available cores by default.
                    type: integer
                  cpulimit:
                    description: 'Limit of CPU usage.


                      NOTE: If the computer has 2 CPUs, it has a total of ''2'' CPU
                      time. Value ''0'' indicates no CPU limit.'
                    type: number
                  cpuunits:
                    description: CPU weight for a container, will be clamped to [1,
                      10000] in cgroup v2.
                    type: integer
                  debug:
                    description: Try to be more verbose. For now this only enables
                      debug log-level on start.
                    type: boolean
                  description:
                    description: Description for the Container. Shown in the web-interface
                      CT's summary. This is saved as comment inside the configuration
                      file.
                    type: string
                  dev[n]:
                    description: Device to pass through to the container
                    format:
                      deny-write:
                        default: 0
                        description: Deny the container to write to the device
                        optional: 1
                        type: boolean
                      gid:
                        description: Group ID to be assigned to the device node
                        minimum: 0
                        optional: 1
                        type: integer
                      mode:
                        description: Access mode to be set on the device node
                        format_description: Octal access mode
                        optional: 1
                        pattern: 0[0-7]{3}
                        type: string
                      path:
                        default_key: 1
                        description: Device to pass through to the container
                        format: pve-lxc-dev-string
                        format_description: Path
                        optional: 1
                        type: string
                        verbose_description: Path to the device to pass through to
                          the container
                      uid:
                        description: User ID to be assigned to the device node
                        minimum: 0
                        optional: 1
                        type: integer
                    type: string
                  digest:
                    description: SHA1 digest of configuration file. This can be used
                      to prevent concurrent modifications.
                    type: string
                  features:
                    description: Allow containers access to advanced features.
                    format:
                      force_rw_sys:
                        default: 0
                        description: Mount /sys in unprivileged containers as `rw`
                          instead of `mixed`. This can break networking under newer
                          (>= v245) systemd-network use.
                        optional: 1
                        type: boolean
                      fuse:
                        default: 0
                        description: Allow using 'fuse' file systems in a container.
                          Note that interactions between fuse and the freezer cgroup
                          can potentially cause I/O deadlocks.
                        optional: 1
                        type: boolean
                      keyctl:
                        default: 0
                        description: 'For unprivileged containers only: Allow the
                          use of the keyctl() system call. This is required to use
                          docker inside a container. By default unprivileged containers
                          will see this system call as non-existent. This is mostly
                          a workaround for systemd-networkd, as it will treat it as
                          a fatal error when some keyctl() operations are denied by
                          the kernel due to lacking permissions. Essentially, you
                          can choose between running systemd-networkd or docker.'
                        optional: 1
                        type: boolean
                      mknod:
                        default: 0
                        description: Allow unprivileged containers to use mknod()
                          to add certain device nodes. This requires a kernel with
                          seccomp trap to user space support (5.3 or newer). This
                          is experimental.
                        optional: 1
                        type: boolean
                      mount:
                        description: Allow mounting file systems of specific types.
                          This should be a list of file system types as used with
                          the mount command. Note that this can have negative effects
                          on the container's security. With access to a loop device,
                          mounting a file can circumvent the mknod permission of the
                          devices cgroup, mounting an NFS file system can block the
                          host's I/O completely and prevent it from rebooting, etc.
                        format_description: fstype;fstype;...
                        optional: 1
                        pattern: (?^:[a-zA-Z0-9_; ]+)
                        type: string
                      nesting:
                        default: 0
                        description: Allow nesting. Best used with unprivileged containers
                          with additional id mapping. Note that this will expose procfs
                          and sysfs contents of the host to the guest.
                        optional: 1
                        type: boolean
                    type: string
                  hookscript:
                    description: Script that will be executed during various steps
                      in the containers lifetime.
                    format: pve-volume-id
                    type: string
                  hostname:
                    description: Set a host name for the container.
                    format: dns-name
                    type: string
                  lock:
                    description: Lock/unlock the container.
                    type: string
                  lxc:
                    description: Array of lxc low-level configurations ([[key1, value1],
                      [key2, value2] ...]).
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  memory:
                    description: Amount of RAM for the container in MB.
                    type: integer
                  mp[n]:
                    description: Use volume as container mount point. Use the special
                      syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.
                    format:
                      acl:
                        description: Explicitly enable or disable ACL support.
                        optional: 1
                        type: boolean
                      backup:
                        description: Whether to include the mount point in backups.
                        optional: 1
                        type: boolean
                        verbose_description: Whether to include the mount point in
                          backups (only used for volume mount points).
                      mountoptions:
                        description: Extra mount options for rootfs/mps.
                        format_description: opt[;opt...]
                        optional: 1
                        pattern: (?^:(?^:(discard|lazytime|noatime|nodev|noexec|nosuid))(;(?^:(discard|lazytime|noatime|nodev|noexec|nosuid)))*)
                        type: string
                      mp:
                        description: Path to the mount point as seen from inside the
                          container (must not contain symlinks).
                        format: pve-lxc-mp-string
                        format_description: Path
                        type: string
                        verbose_description: 'Path to the mount point as seen from
                          inside the container.


                          NOTE: Must not contain any symlinks for security reasons.'
                      quota:
                        description: Enable user quotas inside the container (not
                          supported with zfs subvolumes)
                        optional: 1
                        type: boolean
                      replicate:
                        default: 1
                        description: Will include this volume to a storage replica
                          job.
                        optional: 1
                        type: boolean
                      ro:
                        description: Read-only mount point
                        optional: 1
                        type: boolean
                      shared:
                        default: 0
                        description: Mark this non-volume mount point as available
                          on multiple nodes (see 'nodes')
                        optional: 1
                        type: boolean
                        verbose_description: 'Mark this non-volume mount point as
                          available on all nodes.


                          WARNING: This option does not share the mount point automatically,
                          it assumes it is shared already!'
                      size:
                        description: Volume size (read only value).
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      volume:
                        default_key: 1
                        description: Volume, device or directory to mount into the
                          container.
                        format: pve-lxc-mp-string
                        format_description: volume
                        type: string
                    type: string
                  nameserver:
                    description: Sets DNS server IP address for a container. Create
                      will automatically use the setting from the host if you neither
                      set searchdomain nor nameserver.
                    format: lxc-ip-with-ll-iface-list
                    type: string
                  net[n]:
                    description: Specifies network interfaces for the container.
                    format:
                      bridge:
                        description: Bridge to attach the network device to.
                        format_description: bridge
                        optional: 1
                        pattern: '[-_.\w\d]+'
                        type: string
                      firewall:
                        description: Controls whether this interface's firewall rules
                          should be used.
                        optional: 1
                        type: boolean
                      gw:
                        description: Default gateway for IPv4 traffic.
                        format: ipv4
                        format_description: GatewayIPv4
                        optional: 1
                        type: string
                      gw6:
                        description: Default gateway for IPv6 traffic.
                        format: ipv6
                        format_description: GatewayIPv6
                        optional: 1
                        type: string
                      hwaddr:
                        description: The interface MAC address. This is dynamically
                          allocated by default, but you can set that statically if
                          needed, for example to always have the same link-local IPv6
                          address. (lxc.network.hwaddr)
                        format: mac-addr
                        format_description: XX:XX:XX:XX:XX:XX
                        optional: 1
                        type: string
                        verbose_description: A common MAC address with the I/G (Individual/Group)
                          bit not set.
                      ip:
                        description: IPv4 address in CIDR format.
                        format: pve-ipv4-config
                        format_description: (IPv4/CIDR|dhcp|manual)
                        optional: 1
                        type: string
                      ip6:
                        description: IPv6 address in CIDR format.
                        format: pve-ipv6-config
                        format_description: (IPv6/CIDR|auto|dhcp|manual)
                        optional: 1
                        type: string
                      link_down:
                        description: Whether this interface should be disconnected
                          (like pulling the plug).
                        optional: 1
                        type: boolean
                      mtu:
                        description: Maximum transfer unit of the interface. (lxc.network.mtu)
                        maximum: 65535
                        minimum: 64
                        optional: 1
                        type: integer
                      name:
                        description: Name of the network device as seen from inside
                          the container. (lxc.network.name)
                        format_description: string
                        pattern: '[-_.\w\d]+'
                        type: string
                      rate:
                        description: Apply rate limiting to the interface
                        format_description: mbps
                        optional: 1
                        type: number
                      tag:
                        description: VLAN tag for this interface.
                        maximum: 4094
                        minimum: 1
                        optional: 1
                        type: integer
                      trunks:
                        description: VLAN ids to pass through the interface
                        format_description: vlanid[;vlanid...]
                        optional: 1
                        pattern: (?^:\d+(?:;\d+)*)
                        type: string
                      type:
                        description: Network interface type.
                        enum:
                        - veth
                        optional: 1
                        type: string
                    type: string
                  onboot:
                    description: Specifies whether a container will be started during
                      system bootup.
                    type: boolean
                  ostype:
                    description: OS type. This is used to setup configuration inside
                      the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf.
                      Value 'unmanaged' can be used to skip and OS specific setup.
                    type: string
                  protection:
                    description: Sets the protection flag of the container. This will
                      prevent the CT or CT's disk remove/update operation.
                    type: boolean
                  rootfs:
                    description: Use volume as container root.
                    format:
                      acl:
                        description: Explicitly enable or disable ACL support.
                        optional: 1
                        type: boolean
                      mountoptions:
                        description: Extra mount options for rootfs/mps.
                        format_description: opt[;opt...]
                        optional: 1
                        pattern: (?^:(?^:(discard|lazytime|noatime|nodev|noexec|nosuid))(;(?^:(discard|lazytime|noatime|nodev|noexec|nosuid)))*)
                        type: string
                      quota:
                        description: Enable user quotas inside the container (not
                          supported with zfs subvolumes)
                        optional: 1
                        type: boolean
                      replicate:
                        default: 1
                        description: Will include this volume to a storage replica
                          job.
                        optional: 1
                        type: boolean
                      ro:
                        description: Read-only mount point
                        optional: 1
                        type: boolean
                      shared:
                        default: 0
                        description: Mark this non-volume mount point as available
                          on multiple nodes (see 'nodes')
                        optional: 1
                        type: boolean
                        verbose_description: 'Mark this non-volume mount point as
                          available on all nodes.


                          WARNING: This option does not share the mount point automatically,
                          it assumes it is shared already!'
                      size:
                        description: Volume size (read only value).
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      volume:
                        default_key: 1
                        description: Volume, device or directory to mount into the
                          container.
                        format: pve-lxc-mp-string
                        format_description: volume
                        type: string
                    type: string
                  searchdomain:
                    description: Sets DNS search domains for a container. Create will
                      automatically use the setting from the host if you neither set
                      searchdomain nor nameserver.
                    format: dns-name-list
                    type: string
                  startup:
                    description: Startup and shutdown behavior. Order is a non-negative
                      number defining the general startup order. Shutdown in done
                      with reverse ordering. Additionally you can set the 'up' or
                      'down' delay in seconds, which specifies a delay to wait before
                      the next VM is started or stopped.
                    format: pve-startup-order
                    type: string
                  swap:
                    description: Amount of SWAP for the container in MB.
                    type: integer
                  tags:
                    description: Tags of the Container. This is only meta information.
                    format: pve-tag-list
                    type: string
                  template:
                    description: Enable/disable Template.
                    type: boolean
                  timezone:
                    description: Time zone to use in the container. If option isn't
                      set, then nothing will be done. Can be set to 'host' to match
                      the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab
                    format: pve-ct-timezone
                    type: string
                  tty:
                    description: Specify the number of tty available to the container
                    type: integer
                  unprivileged:
                    description: Makes the container run as unprivileged user. (Should
                      not be modified manually.)
                    type: boolean
                  unused[n]:
                    description: Reference to unused volumes. This is used internally,
                      and should not be modified manually.
                    format:
                      volume:
                        default_key: 1
                        description: The volume that is not used currently.
                        format: pve-volume-id
                        format_description: volume
                        type: string
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get container configuration.
      tags:
      - Nodes
    put:
      description: Set container options.
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                arch:
                  default: amd64
                  description: OS architecture type.
                  enum:
                  - amd64
                  - i386
                  - arm64
                  - armhf
                  - riscv32
                  - riscv64
                  type: string
                cmode:
                  default: tty
                  description: Console mode. By default, the console command tries
                    to open a connection to one of the available tty devices. By setting
                    cmode to 'console' it tries to attach to /dev/console instead.
                    If you set cmode to 'shell', it simply invokes a shell inside
                    the container (no login).
                  enum:
                  - shell
                  - console
                  - tty
                  type: string
                console:
                  default: 1
                  description: Attach a console device (/dev/console) to the container.
                  type: boolean
                cores:
                  description: The number of cores assigned to the container. A container
                    can use all available cores by default.
                  maximum: 8192
                  minimum: 1
                  type: integer
                cpulimit:
                  default: 0
                  description: 'Limit of CPU usage.


                    NOTE: If the computer has 2 CPUs, it has a total of ''2'' CPU
                    time. Value ''0'' indicates no CPU limit.'
                  maximum: 8192
                  minimum: 0
                  type: number
                cpuunits:
                  default: 'cgroup v1: 1024, cgroup v2: 100'
                  description: CPU weight for a container, will be clamped to [1,
                    10000] in cgroup v2.
                  maximum: 500000
                  minimum: 0
                  type: integer
                debug:
                  default: 0
                  description: Try to be more verbose. For now this only enables debug
                    log-level on start.
                  type: boolean
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                description:
                  description: Description for the Container. Shown in the web-interface
                    CT's summary. This is saved as comment inside the configuration
                    file.
                  maxLength: 8192
                  type: string
                dev[n]:
                  description: Device to pass through to the container
                  format:
                    deny-write:
                      default: 0
                      description: Deny the container to write to the device
                      optional: 1
                      type: boolean
                    gid:
                      description: Group ID to be assigned to the device node
                      minimum: 0
                      optional: 1
                      type: integer
                    mode:
                      description: Access mode to be set on the device node
                      format_description: Octal access mode
                      optional: 1
                      pattern: 0[0-7]{3}
                      type: string
                    path:
                      default_key: 1
                      description: Device to pass through to the container
                      format: pve-lxc-dev-string
                      format_description: Path
                      optional: 1
                      type: string
                      verbose_description: Path to the device to pass through to the
                        container
                    uid:
                      description: User ID to be assigned to the device node
                      minimum: 0
                      optional: 1
                      type: integer
                  type: string
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA1 digest. This can be used to prevent concurrent modifications.
                  maxLength: 40
                  type: string
                features:
                  description: Allow containers access to advanced features.
                  format:
                    force_rw_sys:
                      default: 0
                      description: Mount /sys in unprivileged containers as `rw` instead
                        of `mixed`. This can break networking under newer (>= v245)
                        systemd-network use.
                      optional: 1
                      type: boolean
                    fuse:
                      default: 0
                      description: Allow using 'fuse' file systems in a container.
                        Note that interactions between fuse and the freezer cgroup
                        can potentially cause I/O deadlocks.
                      optional: 1
                      type: boolean
                    keyctl:
                      default: 0
                      description: 'For unprivileged containers only: Allow the use
                        of the keyctl() system call. This is required to use docker
                        inside a container. By default unprivileged containers will
                        see this system call as non-existent. This is mostly a workaround
                        for systemd-networkd, as it will treat it as a fatal error
                        when some keyctl() operations are denied by the kernel due
                        to lacking permissions. Essentially, you can choose between
                        running systemd-networkd or docker.'
                      optional: 1
                      type: boolean
                    mknod:
                      default: 0
                      description: Allow unprivileged containers to use mknod() to
                        add certain device nodes. This requires a kernel with seccomp
                        trap to user space support (5.3 or newer). This is experimental.
                      optional: 1
                      type: boolean
                    mount:
                      description: Allow mounting file systems of specific types.
                        This should be a list of file system types as used with the
                        mount command. Note that this can have negative effects on
                        the container's security. With access to a loop device, mounting
                        a file can circumvent the mknod permission of the devices
                        cgroup, mounting an NFS file system can block the host's I/O
                        completely and prevent it from rebooting, etc.
                      format_description: fstype;fstype;...
                      optional: 1
                      pattern: (?^:[a-zA-Z0-9_; ]+)
                      type: string
                    nesting:
                      default: 0
                      description: Allow nesting. Best used with unprivileged containers
                        with additional id mapping. Note that this will expose procfs
                        and sysfs contents of the host to the guest.
                      optional: 1
                      type: boolean
                  type: string
                hookscript:
                  description: Script that will be executed during various steps in
                    the containers lifetime.
                  format: pve-volume-id
                  type: string
                hostname:
                  description: Set a host name for the container.
                  format: dns-name
                  maxLength: 255
                  type: string
                lock:
                  description: Lock/unlock the container.
                  enum:
                  - backup
                  - create
                  - destroyed
                  - disk
                  - fstrim
                  - migrate
                  - mounted
                  - rollback
                  - snapshot
                  - snapshot-delete
                  type: string
                memory:
                  default: 512
                  description: Amount of RAM for the container in MB.
                  minimum: 16
                  type: integer
                mp[n]:
                  description: Use volume as container mount point. Use the special
                    syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.
                  format:
                    acl:
                      description: Explicitly enable or disable ACL support.
                      optional: 1
                      type: boolean
                    backup:
                      description: Whether to include the mount point in backups.
                      optional: 1
                      type: boolean
                      verbose_description: Whether to include the mount point in backups
                        (only used for volume mount points).
                    mountoptions:
                      description: Extra mount options for rootfs/mps.
                      format_description: opt[;opt...]
                      optional: 1
                      pattern: (?^:(?^:(discard|lazytime|noatime|nodev|noexec|nosuid))(;(?^:(discard|lazytime|noatime|nodev|noexec|nosuid)))*)
                      type: string
                    mp:
                      description: Path to the mount point as seen from inside the
                        container (must not contain symlinks).
                      format: pve-lxc-mp-string
                      format_description: Path
                      type: string
                      verbose_description: 'Path to the mount point as seen from inside
                        the container.


                        NOTE: Must not contain any symlinks for security reasons.'
                    quota:
                      description: Enable user quotas inside the container (not supported
                        with zfs subvolumes)
                      optional: 1
                      type: boolean
                    replicate:
                      default: 1
                      description: Will include this volume to a storage replica job.
                      optional: 1
                      type: boolean
                    ro:
                      description: Read-only mount point
                      optional: 1
                      type: boolean
                    shared:
                      default: 0
                      description: Mark this non-volume mount point as available on
                        multiple nodes (see 'nodes')
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this non-volume mount point as available
                        on all nodes.


                        WARNING: This option does not share the mount point automatically,
                        it assumes it is shared already!'
                    size:
                      description: Volume size (read only value).
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      default_key: 1
                      description: Volume, device or directory to mount into the container.
                      format: pve-lxc-mp-string
                      format_description: volume
                      type: string
                  type: string
                nameserver:
                  description: Sets DNS server IP address for a container. Create
                    will automatically use the setting from the host if you neither
                    set searchdomain nor nameserver.
                  format: lxc-ip-with-ll-iface-list
                  type: string
                net[n]:
                  description: Specifies network interfaces for the container.
                  format:
                    bridge:
                      description: Bridge to attach the network device to.
                      format_description: bridge
                      optional: 1
                      pattern: '[-_.\w\d]+'
                      type: string
                    firewall:
                      description: Controls whether this interface's firewall rules
                        should be used.
                      optional: 1
                      type: boolean
                    gw:
                      description: Default gateway for IPv4 traffic.
                      format: ipv4
                      format_description: GatewayIPv4
                      optional: 1
                      type: string
                    gw6:
                      description: Default gateway for IPv6 traffic.
                      format: ipv6
                      format_description: GatewayIPv6
                      optional: 1
                      type: string
                    hwaddr:
                      description: The interface MAC address. This is dynamically
                        allocated by default, but you can set that statically if needed,
                        for example to always have the same link-local IPv6 address.
                        (lxc.network.hwaddr)
                      format: mac-addr
                      format_description: XX:XX:XX:XX:XX:XX
                      optional: 1
                      type: string
                      verbose_description: A common MAC address with the I/G (Individual/Group)
                        bit not set.
                    ip:
                      description: IPv4 address in CIDR format.
                      format: pve-ipv4-config
                      format_description: (IPv4/CIDR|dhcp|manual)
                      optional: 1
                      type: string
                    ip6:
                      description: IPv6 address in CIDR format.
                      format: pve-ipv6-config
                      format_description: (IPv6/CIDR|auto|dhcp|manual)
                      optional: 1
                      type: string
                    link_down:
                      description: Whether this interface should be disconnected (like
                        pulling the plug).
                      optional: 1
                      type: boolean
                    mtu:
                      description: Maximum transfer unit of the interface. (lxc.network.mtu)
                      maximum: 65535
                      minimum: 64
                      optional: 1
                      type: integer
                    name:
                      description: Name of the network device as seen from inside
                        the container. (lxc.network.name)
                      format_description: string
                      pattern: '[-_.\w\d]+'
                      type: string
                    rate:
                      description: Apply rate limiting to the interface
                      format_description: mbps
                      optional: 1
                      type: number
                    tag:
                      description: VLAN tag for this interface.
                      maximum: 4094
                      minimum: 1
                      optional: 1
                      type: integer
                    trunks:
                      description: VLAN ids to pass through the interface
                      format_description: vlanid[;vlanid...]
                      optional: 1
                      pattern: (?^:\d+(?:;\d+)*)
                      type: string
                    type:
                      description: Network interface type.
                      enum:
                      - veth
                      optional: 1
                      type: string
                  type: string
                onboot:
                  default: 0
                  description: Specifies whether a container will be started during
                    system bootup.
                  type: boolean
                ostype:
                  description: OS type. This is used to setup configuration inside
                    the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf.
                    Value 'unmanaged' can be used to skip and OS specific setup.
                  enum:
                  - debian
                  - devuan
                  - ubuntu
                  - centos
                  - fedora
                  - opensuse
                  - archlinux
                  - alpine
                  - gentoo
                  - nixos
                  - unmanaged
                  type: string
                protection:
                  default: 0
                  description: Sets the protection flag of the container. This will
                    prevent the CT or CT's disk remove/update operation.
                  type: boolean
                revert:
                  description: Revert a pending change.
                  format: pve-configid-list
                  type: string
                rootfs:
                  description: Use volume as container root.
                  format:
                    acl:
                      description: Explicitly enable or disable ACL support.
                      optional: 1
                      type: boolean
                    mountoptions:
                      description: Extra mount options for rootfs/mps.
                      format_description: opt[;opt...]
                      optional: 1
                      pattern: (?^:(?^:(discard|lazytime|noatime|nodev|noexec|nosuid))(;(?^:(discard|lazytime|noatime|nodev|noexec|nosuid)))*)
                      type: string
                    quota:
                      description: Enable user quotas inside the container (not supported
                        with zfs subvolumes)
                      optional: 1
                      type: boolean
                    replicate:
                      default: 1
                      description: Will include this volume to a storage replica job.
                      optional: 1
                      type: boolean
                    ro:
                      description: Read-only mount point
                      optional: 1
                      type: boolean
                    shared:
                      default: 0
                      description: Mark this non-volume mount point as available on
                        multiple nodes (see 'nodes')
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this non-volume mount point as available
                        on all nodes.


                        WARNING: This option does not share the mount point automatically,
                        it assumes it is shared already!'
                    size:
                      description: Volume size (read only value).
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      default_key: 1
                      description: Volume, device or directory to mount into the container.
                      format: pve-lxc-mp-string
                      format_description: volume
                      type: string
                  type: string
                searchdomain:
                  description: Sets DNS search domains for a container. Create will
                    automatically use the setting from the host if you neither set
                    searchdomain nor nameserver.
                  format: dns-name-list
                  type: string
                startup:
                  description: Startup and shutdown behavior. Order is a non-negative
                    number defining the general startup order. Shutdown in done with
                    reverse ordering. Additionally you can set the 'up' or 'down'
                    delay in seconds, which specifies a delay to wait before the next
                    VM is started or stopped.
                  format: pve-startup-order
                  type: string
                swap:
                  default: 512
                  description: Amount of SWAP for the container in MB.
                  minimum: 0
                  type: integer
                tags:
                  description: Tags of the Container. This is only meta information.
                  format: pve-tag-list
                  type: string
                template:
                  default: 0
                  description: Enable/disable Template.
                  type: boolean
                timezone:
                  description: Time zone to use in the container. If option isn't
                    set, then nothing will be done. Can be set to 'host' to match
                    the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab
                  format: pve-ct-timezone
                  type: string
                tty:
                  default: 2
                  description: Specify the number of tty available to the container
                  maximum: 6
                  minimum: 0
                  type: integer
                unprivileged:
                  default: 0
                  description: Makes the container run as unprivileged user. (Should
                    not be modified manually.)
                  type: boolean
                unused[n]:
                  description: Reference to unused volumes. This is used internally,
                    and should not be modified manually.
                  format:
                    volume:
                      default_key: 1
                      description: The volume that is not used currently.
                      format: pve-volume-id
                      format_description: volume
                      type: string
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set container options.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/feature:
    get:
      description: Check if feature for virtual machine is available.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_feature
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Feature to check.
        in: query
        name: feature
        required: true
        schema:
          description: Feature to check.
          enum:
          - snapshot
          - clone
          - copy
          type: string
      - description: The name of the snapshot.
        in: query
        name: snapname
        required: false
        schema:
          description: The name of the snapshot.
          format: pve-configid
          maxLength: 40
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  hasFeature:
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Check if feature for virtual machine is available.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/aliases
  : get:
      description: List aliases
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cidr:
                      type: string
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    name:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List aliases
      tags:
      - Nodes
    post:
      description: Create IP or Network Alias.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDR
                  type: string
                comment:
                  type: string
                name:
                  description: Alias name.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - cidr
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create IP or Network Alias.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/aliases/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}
  : delete:
      description: Remove IP or Network alias.
      operationId: delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases_nodes_node_lxc_vmid_firewall_aliases_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove IP or Network alias.
      tags:
      - Nodes
    get:
      description: Read alias.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases_nodes_node_lxc_vmid_firewall_aliases_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read alias.
      tags:
      - Nodes
    put:
      description: Update IP or Network alias.
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_aliases_nodes_node_lxc_vmid_firewall_aliases_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDR
                  type: string
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                rename:
                  description: Rename an existing alias.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP or Network alias.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/ipset
  : get:
      description: List IPSets
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    name:
                      description: IP set name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List IPSets
      tags:
      - Nodes
    post:
      description: Create new IPSet
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                name:
                  description: IP set name.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                rename:
                  description: Rename an existing IPSet. You can set 'rename' to the
                    same value as 'name' to update the 'comment' of an existing IPSet.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new IPSet
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/ipset/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}
  : delete:
      description: Delete IPSet
      operationId: delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Delete all members of the IPSet, if there are any.
        in: query
        name: force
        required: false
        schema:
          description: Delete all members of the IPSet, if there are any.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete IPSet
      tags:
      - Nodes
    get:
      description: List IPSet content
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cidr:
                      type: string
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    nomatch:
                      type: boolean
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List IPSet content
      tags:
      - Nodes
    post:
      description: Add IP or Network to IPSet.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDRorAlias
                  type: string
                comment:
                  type: string
                nomatch:
                  type: boolean
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add IP or Network to IPSet.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/ipset/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}
  : delete:
      description: Remove IP or Network from IPSet.
      operationId: delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name_nodes_node_lxc_vmid_firewall_ipset_name_cidr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove IP or Network from IPSet.
      tags:
      - Nodes
    get:
      description: Read IP or Network settings from IPSet.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name_nodes_node_lxc_vmid_firewall_ipset_name_cidr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read IP or Network settings from IPSet.
      tags:
      - Nodes
    put:
      description: Update IP or Network settings
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_ipset_nodes_node_lxc_vmid_firewall_ipset_name_nodes_node_lxc_vmid_firewall_ipset_name_cidr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                nomatch:
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP or Network settings
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/log
  : get:
      description: Read firewall log
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display log since this UNIX epoch.
        in: query
        name: since
        required: false
        schema:
          description: Display log since this UNIX epoch.
          minimum: 0
          type: integer
      - in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display log until this UNIX epoch.
        in: query
        name: until
        required: false
        schema:
          description: Display log until this UNIX epoch.
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read firewall log
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/options
  : get:
      description: Get VM firewall options.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_options
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  dhcp:
                    description: Enable DHCP.
                    type: boolean
                  enable:
                    description: Enable/disable firewall rules.
                    type: boolean
                  ipfilter:
                    description: Enable default IP filters. This is equivalent to
                      adding an empty ipfilter-net<id> ipset for every interface.
                      Such ipsets implicitly contain sane default restrictions such
                      as restricting IPv6 link local addresses to the one derived
                      from the interface's MAC address. For containers the configured
                      IP addresses will be implicitly added.
                    type: boolean
                  log_level_in:
                    description: Log level for incoming traffic.
                    type: string
                  log_level_out:
                    description: Log level for outgoing traffic.
                    type: string
                  macfilter:
                    description: Enable/disable MAC address filter.
                    type: boolean
                  ndp:
                    description: Enable NDP (Neighbor Discovery Protocol).
                    type: boolean
                  policy_in:
                    description: Input policy.
                    type: string
                  policy_out:
                    description: Output policy.
                    type: string
                  radv:
                    description: Allow sending Router Advertisement.
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get VM firewall options.
      tags:
      - Nodes
    put:
      description: Set Firewall options.
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_options
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dhcp:
                  default: 0
                  description: Enable DHCP.
                  type: boolean
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                enable:
                  default: 0
                  description: Enable/disable firewall rules.
                  type: boolean
                ipfilter:
                  description: Enable default IP filters. This is equivalent to adding
                    an empty ipfilter-net<id> ipset for every interface. Such ipsets
                    implicitly contain sane default restrictions such as restricting
                    IPv6 link local addresses to the one derived from the interface's
                    MAC address. For containers the configured IP addresses will be
                    implicitly added.
                  type: boolean
                log_level_in:
                  description: Log level for incoming traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                log_level_out:
                  description: Log level for outgoing traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macfilter:
                  default: 1
                  description: Enable/disable MAC address filter.
                  type: boolean
                ndp:
                  default: 0
                  description: Enable NDP (Neighbor Discovery Protocol).
                  type: boolean
                policy_in:
                  description: Input policy.
                  enum:
                  - ACCEPT
                  - REJECT
                  - DROP
                  type: string
                policy_out:
                  description: Output policy.
                  enum:
                  - ACCEPT
                  - REJECT
                  - DROP
                  type: string
                radv:
                  description: Allow sending Router Advertisement.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set Firewall options.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/refs
  : get:
      description: Lists possible IPSet/Alias reference which are allowed in source/dest
        properties.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_refs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Only list references of specified type.
        in: query
        name: type
        required: false
        schema:
          description: Only list references of specified type.
          enum:
          - alias
          - ipset
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    name:
                      type: string
                    ref:
                      type: string
                    scope:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest
        properties.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/rules
  : get:
      description: List rules.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pos:
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List rules.
      tags:
      - Nodes
    post:
      description: Create new rule.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                pos:
                  description: Update rule at position <pos>.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              required:
              - action
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new rule.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/firewall/nodes/{node}/lxc/{vmid}/firewall/rules/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}
  : delete:
      description: Delete rule.
      operationId: delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules_nodes_node_lxc_vmid_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete rule.
      tags:
      - Nodes
    get:
      description: Get single rule data.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules_nodes_node_lxc_vmid_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    type: string
                  comment:
                    type: string
                  dest:
                    type: string
                  dport:
                    type: string
                  enable:
                    type: integer
                  icmp-type:
                    type: string
                  iface:
                    type: string
                  ipversion:
                    type: integer
                  log:
                    description: Log level for firewall rule
                    type: string
                  macro:
                    type: string
                  pos:
                    type: integer
                  proto:
                    type: string
                  source:
                    type: string
                  sport:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get single rule data.
      tags:
      - Nodes
    put:
      description: Modify rule data.
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_firewall_nodes_node_lxc_vmid_firewall_rules_nodes_node_lxc_vmid_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                moveto:
                  description: Move rule to new position <moveto>. Other arguments
                    are ignored.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Modify rule data.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/interfaces:
    get:
      description: Get IP addresses of the specified container interface.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_interfaces
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    hardware-address:
                      description: The MAC address of the interface
                      type: string
                    hwaddr:
                      description: The MAC address of the interface
                      type: string
                    inet:
                      description: The IPv4 address of the interface
                      type: string
                    inet6:
                      description: The IPv6 address of the interface
                      type: string
                    ip-addresses:
                      description: The addresses of the interface
                      items:
                        properties:
                          ip-address:
                            description: IP-Address
                            type: string
                          ip-address-type:
                            description: IP-Family
                            type: string
                          prefix:
                            description: IP-Prefix
                            type: integer
                        type: object
                      type: array
                    name:
                      description: The name of the interface
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get IP addresses of the specified container interface.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/migrate:
    post:
      description: Migrate the container to another node. Creates a new migration
        task.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_migrate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: migrate limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: number
                online:
                  description: Use online/live migration.
                  type: boolean
                restart:
                  description: Use restart migration
                  type: boolean
                target:
                  description: Target node.
                  format: pve-node
                  type: string
                target-storage:
                  description: Mapping from source to target storages. Providing only
                    a single storage ID maps all source storages to that storage.
                    Providing the special value '1' will map each source storage to
                    itself.
                  format: storage-pair-list
                  type: string
                timeout:
                  default: 180
                  description: Timeout in seconds for shutdown for restart migration
                  type: integer
              required:
              - target
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migrate the container to another node. Creates a new migration task.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/move_volume:
    post:
      description: Move a rootfs-/mp-volume to a different storage or to a different
        container.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_move_volume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: clone limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: number
                delete:
                  default: 0
                  description: Delete the original volume after successful copy. By
                    default the original is kept as an unused volume entry.
                  type: boolean
                digest:
                  description: "Prevent changes if current configuration file has\
                    \ different SHA1 \" .\n\t\t    \"digest. This can be used to prevent\
                    \ concurrent modifications."
                  maxLength: 40
                  type: string
                storage:
                  description: Target Storage.
                  format: pve-storage-id
                  type: string
                target-digest:
                  description: "Prevent changes if current configuration file of the\
                    \ target \" .\n\t\t    \"container has a different SHA1 digest.\
                    \ This can be used to prevent \" .\n\t\t    \"concurrent modifications."
                  maxLength: 40
                  type: string
                target-vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
                target-volume:
                  description: The config key the volume will be moved to. Default
                    is the source volume key.
                  enum:
                  - rootfs
                  - mp0
                  - mp1
                  - mp2
                  - mp3
                  - mp4
                  - mp5
                  - mp6
                  - mp7
                  - mp8
                  - mp9
                  - mp10
                  - mp11
                  - mp12
                  - mp13
                  - mp14
                  - mp15
                  - mp16
                  - mp17
                  - mp18
                  - mp19
                  - mp20
                  - mp21
                  - mp22
                  - mp23
                  - mp24
                  - mp25
                  - mp26
                  - mp27
                  - mp28
                  - mp29
                  - mp30
                  - mp31
                  - mp32
                  - mp33
                  - mp34
                  - mp35
                  - mp36
                  - mp37
                  - mp38
                  - mp39
                  - mp40
                  - mp41
                  - mp42
                  - mp43
                  - mp44
                  - mp45
                  - mp46
                  - mp47
                  - mp48
                  - mp49
                  - mp50
                  - mp51
                  - mp52
                  - mp53
                  - mp54
                  - mp55
                  - mp56
                  - mp57
                  - mp58
                  - mp59
                  - mp60
                  - mp61
                  - mp62
                  - mp63
                  - mp64
                  - mp65
                  - mp66
                  - mp67
                  - mp68
                  - mp69
                  - mp70
                  - mp71
                  - mp72
                  - mp73
                  - mp74
                  - mp75
                  - mp76
                  - mp77
                  - mp78
                  - mp79
                  - mp80
                  - mp81
                  - mp82
                  - mp83
                  - mp84
                  - mp85
                  - mp86
                  - mp87
                  - mp88
                  - mp89
                  - mp90
                  - mp91
                  - mp92
                  - mp93
                  - mp94
                  - mp95
                  - mp96
                  - mp97
                  - mp98
                  - mp99
                  - mp100
                  - mp101
                  - mp102
                  - mp103
                  - mp104
                  - mp105
                  - mp106
                  - mp107
                  - mp108
                  - mp109
                  - mp110
                  - mp111
                  - mp112
                  - mp113
                  - mp114
                  - mp115
                  - mp116
                  - mp117
                  - mp118
                  - mp119
                  - mp120
                  - mp121
                  - mp122
                  - mp123
                  - mp124
                  - mp125
                  - mp126
                  - mp127
                  - mp128
                  - mp129
                  - mp130
                  - mp131
                  - mp132
                  - mp133
                  - mp134
                  - mp135
                  - mp136
                  - mp137
                  - mp138
                  - mp139
                  - mp140
                  - mp141
                  - mp142
                  - mp143
                  - mp144
                  - mp145
                  - mp146
                  - mp147
                  - mp148
                  - mp149
                  - mp150
                  - mp151
                  - mp152
                  - mp153
                  - mp154
                  - mp155
                  - mp156
                  - mp157
                  - mp158
                  - mp159
                  - mp160
                  - mp161
                  - mp162
                  - mp163
                  - mp164
                  - mp165
                  - mp166
                  - mp167
                  - mp168
                  - mp169
                  - mp170
                  - mp171
                  - mp172
                  - mp173
                  - mp174
                  - mp175
                  - mp176
                  - mp177
                  - mp178
                  - mp179
                  - mp180
                  - mp181
                  - mp182
                  - mp183
                  - mp184
                  - mp185
                  - mp186
                  - mp187
                  - mp188
                  - mp189
                  - mp190
                  - mp191
                  - mp192
                  - mp193
                  - mp194
                  - mp195
                  - mp196
                  - mp197
                  - mp198
                  - mp199
                  - mp200
                  - mp201
                  - mp202
                  - mp203
                  - mp204
                  - mp205
                  - mp206
                  - mp207
                  - mp208
                  - mp209
                  - mp210
                  - mp211
                  - mp212
                  - mp213
                  - mp214
                  - mp215
                  - mp216
                  - mp217
                  - mp218
                  - mp219
                  - mp220
                  - mp221
                  - mp222
                  - mp223
                  - mp224
                  - mp225
                  - mp226
                  - mp227
                  - mp228
                  - mp229
                  - mp230
                  - mp231
                  - mp232
                  - mp233
                  - mp234
                  - mp235
                  - mp236
                  - mp237
                  - mp238
                  - mp239
                  - mp240
                  - mp241
                  - mp242
                  - mp243
                  - mp244
                  - mp245
                  - mp246
                  - mp247
                  - mp248
                  - mp249
                  - mp250
                  - mp251
                  - mp252
                  - mp253
                  - mp254
                  - mp255
                  - unused0
                  - unused1
                  - unused2
                  - unused3
                  - unused4
                  - unused5
                  - unused6
                  - unused7
                  - unused8
                  - unused9
                  - unused10
                  - unused11
                  - unused12
                  - unused13
                  - unused14
                  - unused15
                  - unused16
                  - unused17
                  - unused18
                  - unused19
                  - unused20
                  - unused21
                  - unused22
                  - unused23
                  - unused24
                  - unused25
                  - unused26
                  - unused27
                  - unused28
                  - unused29
                  - unused30
                  - unused31
                  - unused32
                  - unused33
                  - unused34
                  - unused35
                  - unused36
                  - unused37
                  - unused38
                  - unused39
                  - unused40
                  - unused41
                  - unused42
                  - unused43
                  - unused44
                  - unused45
                  - unused46
                  - unused47
                  - unused48
                  - unused49
                  - unused50
                  - unused51
                  - unused52
                  - unused53
                  - unused54
                  - unused55
                  - unused56
                  - unused57
                  - unused58
                  - unused59
                  - unused60
                  - unused61
                  - unused62
                  - unused63
                  - unused64
                  - unused65
                  - unused66
                  - unused67
                  - unused68
                  - unused69
                  - unused70
                  - unused71
                  - unused72
                  - unused73
                  - unused74
                  - unused75
                  - unused76
                  - unused77
                  - unused78
                  - unused79
                  - unused80
                  - unused81
                  - unused82
                  - unused83
                  - unused84
                  - unused85
                  - unused86
                  - unused87
                  - unused88
                  - unused89
                  - unused90
                  - unused91
                  - unused92
                  - unused93
                  - unused94
                  - unused95
                  - unused96
                  - unused97
                  - unused98
                  - unused99
                  - unused100
                  - unused101
                  - unused102
                  - unused103
                  - unused104
                  - unused105
                  - unused106
                  - unused107
                  - unused108
                  - unused109
                  - unused110
                  - unused111
                  - unused112
                  - unused113
                  - unused114
                  - unused115
                  - unused116
                  - unused117
                  - unused118
                  - unused119
                  - unused120
                  - unused121
                  - unused122
                  - unused123
                  - unused124
                  - unused125
                  - unused126
                  - unused127
                  - unused128
                  - unused129
                  - unused130
                  - unused131
                  - unused132
                  - unused133
                  - unused134
                  - unused135
                  - unused136
                  - unused137
                  - unused138
                  - unused139
                  - unused140
                  - unused141
                  - unused142
                  - unused143
                  - unused144
                  - unused145
                  - unused146
                  - unused147
                  - unused148
                  - unused149
                  - unused150
                  - unused151
                  - unused152
                  - unused153
                  - unused154
                  - unused155
                  - unused156
                  - unused157
                  - unused158
                  - unused159
                  - unused160
                  - unused161
                  - unused162
                  - unused163
                  - unused164
                  - unused165
                  - unused166
                  - unused167
                  - unused168
                  - unused169
                  - unused170
                  - unused171
                  - unused172
                  - unused173
                  - unused174
                  - unused175
                  - unused176
                  - unused177
                  - unused178
                  - unused179
                  - unused180
                  - unused181
                  - unused182
                  - unused183
                  - unused184
                  - unused185
                  - unused186
                  - unused187
                  - unused188
                  - unused189
                  - unused190
                  - unused191
                  - unused192
                  - unused193
                  - unused194
                  - unused195
                  - unused196
                  - unused197
                  - unused198
                  - unused199
                  - unused200
                  - unused201
                  - unused202
                  - unused203
                  - unused204
                  - unused205
                  - unused206
                  - unused207
                  - unused208
                  - unused209
                  - unused210
                  - unused211
                  - unused212
                  - unused213
                  - unused214
                  - unused215
                  - unused216
                  - unused217
                  - unused218
                  - unused219
                  - unused220
                  - unused221
                  - unused222
                  - unused223
                  - unused224
                  - unused225
                  - unused226
                  - unused227
                  - unused228
                  - unused229
                  - unused230
                  - unused231
                  - unused232
                  - unused233
                  - unused234
                  - unused235
                  - unused236
                  - unused237
                  - unused238
                  - unused239
                  - unused240
                  - unused241
                  - unused242
                  - unused243
                  - unused244
                  - unused245
                  - unused246
                  - unused247
                  - unused248
                  - unused249
                  - unused250
                  - unused251
                  - unused252
                  - unused253
                  - unused254
                  - unused255
                  type: string
                volume:
                  description: Volume which will be moved.
                  enum:
                  - rootfs
                  - mp0
                  - mp1
                  - mp2
                  - mp3
                  - mp4
                  - mp5
                  - mp6
                  - mp7
                  - mp8
                  - mp9
                  - mp10
                  - mp11
                  - mp12
                  - mp13
                  - mp14
                  - mp15
                  - mp16
                  - mp17
                  - mp18
                  - mp19
                  - mp20
                  - mp21
                  - mp22
                  - mp23
                  - mp24
                  - mp25
                  - mp26
                  - mp27
                  - mp28
                  - mp29
                  - mp30
                  - mp31
                  - mp32
                  - mp33
                  - mp34
                  - mp35
                  - mp36
                  - mp37
                  - mp38
                  - mp39
                  - mp40
                  - mp41
                  - mp42
                  - mp43
                  - mp44
                  - mp45
                  - mp46
                  - mp47
                  - mp48
                  - mp49
                  - mp50
                  - mp51
                  - mp52
                  - mp53
                  - mp54
                  - mp55
                  - mp56
                  - mp57
                  - mp58
                  - mp59
                  - mp60
                  - mp61
                  - mp62
                  - mp63
                  - mp64
                  - mp65
                  - mp66
                  - mp67
                  - mp68
                  - mp69
                  - mp70
                  - mp71
                  - mp72
                  - mp73
                  - mp74
                  - mp75
                  - mp76
                  - mp77
                  - mp78
                  - mp79
                  - mp80
                  - mp81
                  - mp82
                  - mp83
                  - mp84
                  - mp85
                  - mp86
                  - mp87
                  - mp88
                  - mp89
                  - mp90
                  - mp91
                  - mp92
                  - mp93
                  - mp94
                  - mp95
                  - mp96
                  - mp97
                  - mp98
                  - mp99
                  - mp100
                  - mp101
                  - mp102
                  - mp103
                  - mp104
                  - mp105
                  - mp106
                  - mp107
                  - mp108
                  - mp109
                  - mp110
                  - mp111
                  - mp112
                  - mp113
                  - mp114
                  - mp115
                  - mp116
                  - mp117
                  - mp118
                  - mp119
                  - mp120
                  - mp121
                  - mp122
                  - mp123
                  - mp124
                  - mp125
                  - mp126
                  - mp127
                  - mp128
                  - mp129
                  - mp130
                  - mp131
                  - mp132
                  - mp133
                  - mp134
                  - mp135
                  - mp136
                  - mp137
                  - mp138
                  - mp139
                  - mp140
                  - mp141
                  - mp142
                  - mp143
                  - mp144
                  - mp145
                  - mp146
                  - mp147
                  - mp148
                  - mp149
                  - mp150
                  - mp151
                  - mp152
                  - mp153
                  - mp154
                  - mp155
                  - mp156
                  - mp157
                  - mp158
                  - mp159
                  - mp160
                  - mp161
                  - mp162
                  - mp163
                  - mp164
                  - mp165
                  - mp166
                  - mp167
                  - mp168
                  - mp169
                  - mp170
                  - mp171
                  - mp172
                  - mp173
                  - mp174
                  - mp175
                  - mp176
                  - mp177
                  - mp178
                  - mp179
                  - mp180
                  - mp181
                  - mp182
                  - mp183
                  - mp184
                  - mp185
                  - mp186
                  - mp187
                  - mp188
                  - mp189
                  - mp190
                  - mp191
                  - mp192
                  - mp193
                  - mp194
                  - mp195
                  - mp196
                  - mp197
                  - mp198
                  - mp199
                  - mp200
                  - mp201
                  - mp202
                  - mp203
                  - mp204
                  - mp205
                  - mp206
                  - mp207
                  - mp208
                  - mp209
                  - mp210
                  - mp211
                  - mp212
                  - mp213
                  - mp214
                  - mp215
                  - mp216
                  - mp217
                  - mp218
                  - mp219
                  - mp220
                  - mp221
                  - mp222
                  - mp223
                  - mp224
                  - mp225
                  - mp226
                  - mp227
                  - mp228
                  - mp229
                  - mp230
                  - mp231
                  - mp232
                  - mp233
                  - mp234
                  - mp235
                  - mp236
                  - mp237
                  - mp238
                  - mp239
                  - mp240
                  - mp241
                  - mp242
                  - mp243
                  - mp244
                  - mp245
                  - mp246
                  - mp247
                  - mp248
                  - mp249
                  - mp250
                  - mp251
                  - mp252
                  - mp253
                  - mp254
                  - mp255
                  - unused0
                  - unused1
                  - unused2
                  - unused3
                  - unused4
                  - unused5
                  - unused6
                  - unused7
                  - unused8
                  - unused9
                  - unused10
                  - unused11
                  - unused12
                  - unused13
                  - unused14
                  - unused15
                  - unused16
                  - unused17
                  - unused18
                  - unused19
                  - unused20
                  - unused21
                  - unused22
                  - unused23
                  - unused24
                  - unused25
                  - unused26
                  - unused27
                  - unused28
                  - unused29
                  - unused30
                  - unused31
                  - unused32
                  - unused33
                  - unused34
                  - unused35
                  - unused36
                  - unused37
                  - unused38
                  - unused39
                  - unused40
                  - unused41
                  - unused42
                  - unused43
                  - unused44
                  - unused45
                  - unused46
                  - unused47
                  - unused48
                  - unused49
                  - unused50
                  - unused51
                  - unused52
                  - unused53
                  - unused54
                  - unused55
                  - unused56
                  - unused57
                  - unused58
                  - unused59
                  - unused60
                  - unused61
                  - unused62
                  - unused63
                  - unused64
                  - unused65
                  - unused66
                  - unused67
                  - unused68
                  - unused69
                  - unused70
                  - unused71
                  - unused72
                  - unused73
                  - unused74
                  - unused75
                  - unused76
                  - unused77
                  - unused78
                  - unused79
                  - unused80
                  - unused81
                  - unused82
                  - unused83
                  - unused84
                  - unused85
                  - unused86
                  - unused87
                  - unused88
                  - unused89
                  - unused90
                  - unused91
                  - unused92
                  - unused93
                  - unused94
                  - unused95
                  - unused96
                  - unused97
                  - unused98
                  - unused99
                  - unused100
                  - unused101
                  - unused102
                  - unused103
                  - unused104
                  - unused105
                  - unused106
                  - unused107
                  - unused108
                  - unused109
                  - unused110
                  - unused111
                  - unused112
                  - unused113
                  - unused114
                  - unused115
                  - unused116
                  - unused117
                  - unused118
                  - unused119
                  - unused120
                  - unused121
                  - unused122
                  - unused123
                  - unused124
                  - unused125
                  - unused126
                  - unused127
                  - unused128
                  - unused129
                  - unused130
                  - unused131
                  - unused132
                  - unused133
                  - unused134
                  - unused135
                  - unused136
                  - unused137
                  - unused138
                  - unused139
                  - unused140
                  - unused141
                  - unused142
                  - unused143
                  - unused144
                  - unused145
                  - unused146
                  - unused147
                  - unused148
                  - unused149
                  - unused150
                  - unused151
                  - unused152
                  - unused153
                  - unused154
                  - unused155
                  - unused156
                  - unused157
                  - unused158
                  - unused159
                  - unused160
                  - unused161
                  - unused162
                  - unused163
                  - unused164
                  - unused165
                  - unused166
                  - unused167
                  - unused168
                  - unused169
                  - unused170
                  - unused171
                  - unused172
                  - unused173
                  - unused174
                  - unused175
                  - unused176
                  - unused177
                  - unused178
                  - unused179
                  - unused180
                  - unused181
                  - unused182
                  - unused183
                  - unused184
                  - unused185
                  - unused186
                  - unused187
                  - unused188
                  - unused189
                  - unused190
                  - unused191
                  - unused192
                  - unused193
                  - unused194
                  - unused195
                  - unused196
                  - unused197
                  - unused198
                  - unused199
                  - unused200
                  - unused201
                  - unused202
                  - unused203
                  - unused204
                  - unused205
                  - unused206
                  - unused207
                  - unused208
                  - unused209
                  - unused210
                  - unused211
                  - unused212
                  - unused213
                  - unused214
                  - unused215
                  - unused216
                  - unused217
                  - unused218
                  - unused219
                  - unused220
                  - unused221
                  - unused222
                  - unused223
                  - unused224
                  - unused225
                  - unused226
                  - unused227
                  - unused228
                  - unused229
                  - unused230
                  - unused231
                  - unused232
                  - unused233
                  - unused234
                  - unused235
                  - unused236
                  - unused237
                  - unused238
                  - unused239
                  - unused240
                  - unused241
                  - unused242
                  - unused243
                  - unused244
                  - unused245
                  - unused246
                  - unused247
                  - unused248
                  - unused249
                  - unused250
                  - unused251
                  - unused252
                  - unused253
                  - unused254
                  - unused255
                  type: string
              required:
              - volume
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Move a rootfs-/mp-volume to a different storage or to a different container.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/mtunnel:
    post:
      description: Migration tunnel endpoint - only for internal use by CT migration.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_mtunnel
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bridges:
                  description: List of network bridges to check availability. Will
                    be checked again for actually used bridges during migration.
                  format: pve-bridge-id-list
                  type: string
                storages:
                  description: List of storages to check permission and availability.
                    Will be checked again for all actually used storages during migration.
                  format: pve-storage-id-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migration tunnel endpoint - only for internal use by CT migration.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/mtunnelwebsocket:
    get:
      description: Migration tunnel endpoint for websocket upgrade - only for internal
        use by VM migration.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_mtunnelwebsocket
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: unix socket to forward to
        in: query
        name: socket
        required: true
        schema:
          description: unix socket to forward to
          type: string
      - description: ticket return by initial 'mtunnel' API call, or retrieved via
          'ticket' tunnel command
        in: query
        name: ticket
        required: true
        schema:
          description: ticket return by initial 'mtunnel' API call, or retrieved via
            'ticket' tunnel command
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  port:
                    type: string
                  socket:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migration tunnel endpoint for websocket upgrade - only for internal
        use by VM migration.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/pending:
    get:
      description: Get container configuration, including pending changes.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_pending
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    delete:
                      description: Indicates a pending delete request if present and
                        not 0.
                      type: integer
                    key:
                      description: Configuration option name.
                      type: string
                    pending:
                      description: Pending value.
                      type: string
                    value:
                      description: Current value.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get container configuration, including pending changes.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/remote_migrate:
    post:
      description: Migrate the container to another cluster. Creates a new migration
        task. EXPERIMENTAL feature!
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_remote_migrate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: migrate limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: number
                delete:
                  default: 0
                  description: Delete the original CT and related data after successful
                    migration. By default the original CT is kept on the source cluster
                    in a stopped state.
                  type: boolean
                online:
                  description: Use online/live migration.
                  type: boolean
                restart:
                  description: Use restart migration
                  type: boolean
                target-bridge:
                  description: Mapping from source to target bridges. Providing only
                    a single bridge ID maps all source bridges to that bridge. Providing
                    the special value '1' will map each source bridge to itself.
                  format: bridge-pair-list
                  type: string
                target-endpoint:
                  description: Remote target endpoint
                  format: proxmox-remote
                  type: string
                target-storage:
                  description: Mapping from source to target storages. Providing only
                    a single storage ID maps all source storages to that storage.
                    Providing the special value '1' will map each source storage to
                    itself.
                  format: storage-pair-list
                  type: string
                target-vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
                timeout:
                  default: 180
                  description: Timeout in seconds for shutdown for restart migration
                  type: integer
              required:
              - target-bridge
              - target-endpoint
              - target-storage
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migrate the container to another cluster. Creates a new migration task.
        EXPERIMENTAL feature!
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/resize:
    put:
      description: Resize a container mount point.
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_resize
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA1 digest. This can be used to prevent concurrent modifications.
                  maxLength: 40
                  type: string
                disk:
                  description: The disk you want to resize.
                  enum:
                  - rootfs
                  - mp0
                  - mp1
                  - mp2
                  - mp3
                  - mp4
                  - mp5
                  - mp6
                  - mp7
                  - mp8
                  - mp9
                  - mp10
                  - mp11
                  - mp12
                  - mp13
                  - mp14
                  - mp15
                  - mp16
                  - mp17
                  - mp18
                  - mp19
                  - mp20
                  - mp21
                  - mp22
                  - mp23
                  - mp24
                  - mp25
                  - mp26
                  - mp27
                  - mp28
                  - mp29
                  - mp30
                  - mp31
                  - mp32
                  - mp33
                  - mp34
                  - mp35
                  - mp36
                  - mp37
                  - mp38
                  - mp39
                  - mp40
                  - mp41
                  - mp42
                  - mp43
                  - mp44
                  - mp45
                  - mp46
                  - mp47
                  - mp48
                  - mp49
                  - mp50
                  - mp51
                  - mp52
                  - mp53
                  - mp54
                  - mp55
                  - mp56
                  - mp57
                  - mp58
                  - mp59
                  - mp60
                  - mp61
                  - mp62
                  - mp63
                  - mp64
                  - mp65
                  - mp66
                  - mp67
                  - mp68
                  - mp69
                  - mp70
                  - mp71
                  - mp72
                  - mp73
                  - mp74
                  - mp75
                  - mp76
                  - mp77
                  - mp78
                  - mp79
                  - mp80
                  - mp81
                  - mp82
                  - mp83
                  - mp84
                  - mp85
                  - mp86
                  - mp87
                  - mp88
                  - mp89
                  - mp90
                  - mp91
                  - mp92
                  - mp93
                  - mp94
                  - mp95
                  - mp96
                  - mp97
                  - mp98
                  - mp99
                  - mp100
                  - mp101
                  - mp102
                  - mp103
                  - mp104
                  - mp105
                  - mp106
                  - mp107
                  - mp108
                  - mp109
                  - mp110
                  - mp111
                  - mp112
                  - mp113
                  - mp114
                  - mp115
                  - mp116
                  - mp117
                  - mp118
                  - mp119
                  - mp120
                  - mp121
                  - mp122
                  - mp123
                  - mp124
                  - mp125
                  - mp126
                  - mp127
                  - mp128
                  - mp129
                  - mp130
                  - mp131
                  - mp132
                  - mp133
                  - mp134
                  - mp135
                  - mp136
                  - mp137
                  - mp138
                  - mp139
                  - mp140
                  - mp141
                  - mp142
                  - mp143
                  - mp144
                  - mp145
                  - mp146
                  - mp147
                  - mp148
                  - mp149
                  - mp150
                  - mp151
                  - mp152
                  - mp153
                  - mp154
                  - mp155
                  - mp156
                  - mp157
                  - mp158
                  - mp159
                  - mp160
                  - mp161
                  - mp162
                  - mp163
                  - mp164
                  - mp165
                  - mp166
                  - mp167
                  - mp168
                  - mp169
                  - mp170
                  - mp171
                  - mp172
                  - mp173
                  - mp174
                  - mp175
                  - mp176
                  - mp177
                  - mp178
                  - mp179
                  - mp180
                  - mp181
                  - mp182
                  - mp183
                  - mp184
                  - mp185
                  - mp186
                  - mp187
                  - mp188
                  - mp189
                  - mp190
                  - mp191
                  - mp192
                  - mp193
                  - mp194
                  - mp195
                  - mp196
                  - mp197
                  - mp198
                  - mp199
                  - mp200
                  - mp201
                  - mp202
                  - mp203
                  - mp204
                  - mp205
                  - mp206
                  - mp207
                  - mp208
                  - mp209
                  - mp210
                  - mp211
                  - mp212
                  - mp213
                  - mp214
                  - mp215
                  - mp216
                  - mp217
                  - mp218
                  - mp219
                  - mp220
                  - mp221
                  - mp222
                  - mp223
                  - mp224
                  - mp225
                  - mp226
                  - mp227
                  - mp228
                  - mp229
                  - mp230
                  - mp231
                  - mp232
                  - mp233
                  - mp234
                  - mp235
                  - mp236
                  - mp237
                  - mp238
                  - mp239
                  - mp240
                  - mp241
                  - mp242
                  - mp243
                  - mp244
                  - mp245
                  - mp246
                  - mp247
                  - mp248
                  - mp249
                  - mp250
                  - mp251
                  - mp252
                  - mp253
                  - mp254
                  - mp255
                  type: string
                size:
                  description: The new size. With the '+' sign the value is added
                    to the actual size of the volume and without it, the value is
                    taken as an absolute one. Shrinking disk size is not supported.
                  pattern: \+?\d+(\.\d+)?[KMGT]?
                  type: string
              required:
              - disk
              - size
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Resize a container mount point.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/rrd:
    get:
      description: Read VM RRD statistics (returns PNG)
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_rrd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: The list of datasources you want to display.
        in: query
        name: ds
        required: true
        schema:
          description: The list of datasources you want to display.
          format: pve-configid-list
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filename:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read VM RRD statistics (returns PNG)
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/rrddata:
    get:
      description: Read VM RRD statistics
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_rrddata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read VM RRD statistics
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot:
    get:
      description: List all snapshots.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    description:
                      description: Snapshot description.
                      type: string
                    name:
                      description: Snapshot identifier. Value 'current' identifies
                        the current VM.
                      type: string
                    parent:
                      description: Parent snapshot identifier.
                      type: string
                    snaptime:
                      description: Snapshot creation time
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all snapshots.
      tags:
      - Nodes
    post:
      description: Snapshot a container.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A textual description or comment.
                  type: string
                snapname:
                  description: The name of the snapshot.
                  format: pve-configid
                  maxLength: 40
                  type: string
              required:
              - snapname
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Snapshot a container.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot/nodes/{node}/lxc/{vmid}/snapshot/{snapname}
  : delete:
      description: Delete a LXC snapshot.
      operationId: delete_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: For removal from config file, even if removing disk snapshots
          fails.
        in: query
        name: force
        required: false
        schema:
          description: For removal from config file, even if removing disk snapshots
            fails.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a LXC snapshot.
      tags:
      - Nodes
    get:
      description: ''
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ''
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config
  : get:
      description: Get snapshot configuration
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname_nodes_node_lxc_vmid_snapshot_snapname_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get snapshot configuration
      tags:
      - Nodes
    put:
      description: Update snapshot metadata.
      operationId: put_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname_nodes_node_lxc_vmid_snapshot_snapname_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A textual description or comment.
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update snapshot metadata.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/snapshot/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback
  : post:
      description: Rollback LXC state to specified snapshot.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_snapshot_nodes_node_lxc_vmid_snapshot_snapname_nodes_node_lxc_vmid_snapshot_snapname_rollback
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                start:
                  default: 0
                  description: Whether the container should get started after rolling
                    back successfully
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Rollback LXC state to specified snapshot.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/spiceproxy:
    post:
      description: Returns a SPICE configuration to connect to the CT.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_spiceproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                proxy:
                  description: SPICE proxy server. This can be used by the client
                    to specify the proxy server. All nodes in a cluster runs 'spiceproxy',
                    so it is up to the client to choose one. By default, we return
                    the node where the VM is currently running. As reasonable setting
                    is to use same node you use to connect to the API (This is window.location.hostname
                    for the JS GUI).
                  format: address
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returned values can be directly passed to the 'remote-viewer'
                  application.
                type: object
          description: Returned values can be directly passed to the 'remote-viewer'
            application.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a SPICE configuration to connect to the CT.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status:
    get:
      description: Directory index
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/current
  : get:
      description: Get virtual machine status.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_current
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  cpu:
                    description: Current CPU usage.
                    type: number
                  cpus:
                    description: Maximum usable CPUs.
                    type: number
                  disk:
                    description: Root disk image space-usage in bytes.
                    type: integer
                  diskread:
                    description: 'The amount of bytes the guest read from it''s block
                      devices since the guest was started. (Note: This info is not
                      available for all storage types.)'
                    type: integer
                  diskwrite:
                    description: 'The amount of bytes the guest wrote from it''s block
                      devices since the guest was started. (Note: This info is not
                      available for all storage types.)'
                    type: integer
                  ha:
                    description: HA manager service status.
                    type: object
                  lock:
                    description: The current config lock, if any.
                    type: string
                  maxdisk:
                    description: Root disk image size in bytes.
                    type: integer
                  maxmem:
                    description: Maximum memory in bytes.
                    type: integer
                  maxswap:
                    description: Maximum SWAP memory in bytes.
                    type: integer
                  mem:
                    description: Currently used memory in bytes.
                    type: integer
                  name:
                    description: Container name.
                    type: string
                  netin:
                    description: The amount of traffic in bytes that was sent to the
                      guest over the network since it was started.
                    type: integer
                  netout:
                    description: The amount of traffic in bytes that was sent from
                      the guest over the network since it was started.
                    type: integer
                  status:
                    description: LXC Container status.
                    type: string
                  tags:
                    description: The current configured tags, if any.
                    type: string
                  template:
                    description: Determines if the guest is a template.
                    type: boolean
                  uptime:
                    description: Uptime in seconds.
                    type: integer
                  vmid:
                    description: The (unique) ID of the VM.
                    format: pve-vmid
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get virtual machine status.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/reboot
  : post:
      description: Reboot the container by shutting it down, and starting it again.
        Applies pending changes.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_reboot
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                timeout:
                  description: Wait maximal timeout seconds for the shutdown.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reboot the container by shutting it down, and starting it again. Applies
        pending changes.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/resume
  : post:
      description: Resume the container.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_resume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Resume the container.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/shutdown
  : post:
      description: Shutdown the container. This will trigger a clean shutdown of the
        container, see lxc-stop(1) for details.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_shutdown
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                forceStop:
                  default: 0
                  description: Make sure the Container stops.
                  type: boolean
                timeout:
                  default: 60
                  description: Wait maximal timeout seconds.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Shutdown the container. This will trigger a clean shutdown of the container,
        see lxc-stop(1) for details.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/start
  : post:
      description: Start the container.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_start
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                debug:
                  default: 0
                  description: If set, enables very verbose debug log-level on start.
                  type: boolean
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start the container.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/stop
  : post:
      description: Stop the container. This will abruptly stop all processes running
        in the container.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_stop
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                overrule-shutdown:
                  default: 0
                  description: Try to abort active 'vzshutdown' tasks before stopping.
                  type: boolean
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop the container. This will abruptly stop all processes running in
        the container.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/status/nodes/{node}/lxc/{vmid}/status/suspend
  : post:
      description: Suspend the container. This is experimental.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_status_nodes_node_lxc_vmid_status_suspend
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Suspend the container. This is experimental.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/template:
    post:
      description: Create a Template.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_template
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a Template.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/termproxy:
    post:
      description: Creates a TCP proxy connection.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_termproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a TCP proxy connection.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/vncproxy:
    post:
      description: Creates a TCP VNC proxy connections.
      operationId: post_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_vncproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                height:
                  description: sets the height of the console in pixels.
                  maximum: 2160
                  minimum: 16
                  type: integer
                websocket:
                  description: use websocket instead of standard VNC.
                  type: boolean
                width:
                  description: sets the width of the console in pixels.
                  maximum: 4096
                  minimum: 16
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a TCP VNC proxy connections.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/lxc/nodes/{node}/lxc/{vmid}/nodes/{node}/lxc/{vmid}/vncwebsocket:
    get:
      description: Opens a weksocket for VNC traffic.
      operationId: get_nodes_nodes_node_nodes_node_lxc_nodes_node_lxc_vmid_nodes_node_lxc_vmid_vncwebsocket
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Port number returned by previous vncproxy call.
        in: query
        name: port
        required: true
        schema:
          description: Port number returned by previous vncproxy call.
          maximum: 5999
          minimum: 5900
          type: integer
      - description: Ticket from previous call to vncproxy.
        in: query
        name: vncticket
        required: true
        schema:
          description: Ticket from previous call to vncproxy.
          maxLength: 512
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  port:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Opens a weksocket for VNC traffic.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/migrateall:
    post:
      description: Migrate all VMs and Containers.
      operationId: post_nodes_nodes_node_nodes_node_migrateall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                maxworkers:
                  description: Maximal number of parallel migration job. If not set,
                    uses'max_workers' from datacenter.cfg. One of both must be set!
                  minimum: 1
                  type: integer
                target:
                  description: Target node.
                  format: pve-node
                  type: string
                vms:
                  description: Only consider Guests with these IDs.
                  format: pve-vmid-list
                  type: string
                with-local-disks:
                  description: Enable live storage migration for local disk
                  type: boolean
              required:
              - target
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migrate all VMs and Containers.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/netstat:
    get:
      description: Read tap/vm network device interface counters
      operationId: get_nodes_nodes_node_nodes_node_netstat
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read tap/vm network device interface counters
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/network:
    delete:
      description: Revert network configuration changes.
      operationId: delete_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Revert network configuration changes.
      tags:
      - Nodes
    get:
      description: List available networks
      operationId: get_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Only list specific interface types.
        in: query
        name: type
        required: false
        schema:
          description: Only list specific interface types.
          enum:
          - bridge
          - bond
          - eth
          - alias
          - vlan
          - OVSBridge
          - OVSBond
          - OVSPort
          - OVSIntPort
          - vnet
          - any_bridge
          - any_local_bridge
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    active:
                      description: Set to true if the interface is active.
                      type: boolean
                    address:
                      description: IP address.
                      format: ipv4
                      type: string
                    address6:
                      description: IP address.
                      format: ipv6
                      type: string
                    autostart:
                      description: Automatically start interface on boot.
                      type: boolean
                    bond-primary:
                      description: Specify the primary interface for active-backup
                        bond.
                      format: pve-iface
                      type: string
                    bond_mode:
                      description: Bonding mode.
                      type: string
                    bond_xmit_hash_policy:
                      description: Selects the transmit hash policy to use for slave
                        selection in balance-xor and 802.3ad modes.
                      type: string
                    bridge-access:
                      description: The bridge port access VLAN.
                      type: integer
                    bridge-arp-nd-suppress:
                      description: Bridge port ARP/ND suppress flag.
                      type: boolean
                    bridge-learning:
                      description: Bridge port learning flag.
                      type: boolean
                    bridge-multicast-flood:
                      description: Bridge port multicast flood flag.
                      type: boolean
                    bridge-unicast-flood:
                      description: Bridge port unicast flood flag.
                      type: boolean
                    bridge_ports:
                      description: Specify the interfaces you want to add to your
                        bridge.
                      format: pve-iface-list
                      type: string
                    bridge_vids:
                      description: 'Specify the allowed VLANs. For example: ''2 4
                        100-200''. Only used if the bridge is VLAN aware.'
                      format: pve-vlan-id-or-range-list
                      type: string
                    bridge_vlan_aware:
                      description: Enable bridge vlan support.
                      type: boolean
                    cidr:
                      description: IPv4 CIDR.
                      format: CIDRv4
                      type: string
                    cidr6:
                      description: IPv6 CIDR.
                      format: CIDRv6
                      type: string
                    comments:
                      description: Comments
                      type: string
                    comments6:
                      description: Comments
                      type: string
                    exists:
                      description: Set to true if the interface physically exists.
                      type: boolean
                    families:
                      description: The network families.
                      items:
                        description: A network family.
                        type: string
                      type: array
                    gateway:
                      description: Default gateway address.
                      format: ipv4
                      type: string
                    gateway6:
                      description: Default ipv6 gateway address.
                      format: ipv6
                      type: string
                    iface:
                      description: Network interface name.
                      format: pve-iface
                      type: string
                    link-type:
                      description: The link type.
                      type: string
                    method:
                      description: The network configuration method for IPv4.
                      type: string
                    method6:
                      description: The network configuration method for IPv6.
                      type: string
                    mtu:
                      description: MTU.
                      type: integer
                    netmask:
                      description: Network mask.
                      format: ipv4mask
                      type: string
                    netmask6:
                      description: Network mask.
                      type: integer
                    options:
                      description: A list of additional interface options for IPv4.
                      items:
                        description: An interface property.
                        type: string
                      type: array
                    options6:
                      description: A list of additional interface options for IPv6.
                      items:
                        description: An interface property.
                        type: string
                      type: array
                    ovs_bonds:
                      description: Specify the interfaces used by the bonding device.
                      format: pve-iface-list
                      type: string
                    ovs_bridge:
                      description: The OVS bridge associated with a OVS port. This
                        is required when you create an OVS port.
                      format: pve-iface
                      type: string
                    ovs_options:
                      description: OVS interface options.
                      type: string
                    ovs_ports:
                      description: Specify the interfaces you want to add to your
                        bridge.
                      format: pve-iface-list
                      type: string
                    ovs_tag:
                      description: Specify a VLan tag (used by OVSPort, OVSIntPort,
                        OVSBond)
                      type: integer
                    priority:
                      description: The order of the interface.
                      type: integer
                    slaves:
                      description: Specify the interfaces used by the bonding device.
                      format: pve-iface-list
                      type: string
                    type:
                      description: Network interface type
                      type: string
                    uplink-id:
                      description: The uplink ID.
                      type: string
                    vlan-id:
                      description: vlan-id for a custom named vlan interface (ifupdown2
                        only).
                      type: integer
                    vlan-protocol:
                      description: The VLAN protocol.
                      type: string
                    vlan-raw-device:
                      description: Specify the raw interface for the vlan interface.
                      format: pve-iface
                      type: string
                    vxlan-id:
                      description: The VXLAN ID.
                      type: integer
                    vxlan-local-tunnelip:
                      description: The VXLAN local tunnel IP.
                      type: string
                    vxlan-physdev:
                      description: The physical device for the VXLAN tunnel.
                      type: string
                    vxlan-svcnodeip:
                      description: The VXLAN SVC node IP.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List available networks
      tags:
      - Nodes
    post:
      description: Create network device configuration
      operationId: post_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: IP address.
                  format: ipv4
                  type: string
                address6:
                  description: IP address.
                  format: ipv6
                  type: string
                autostart:
                  description: Automatically start interface on boot.
                  type: boolean
                bond-primary:
                  description: Specify the primary interface for active-backup bond.
                  format: pve-iface
                  type: string
                bond_mode:
                  description: Bonding mode.
                  enum:
                  - balance-rr
                  - active-backup
                  - balance-xor
                  - broadcast
                  - 802.3ad
                  - balance-tlb
                  - balance-alb
                  - balance-slb
                  - lacp-balance-slb
                  - lacp-balance-tcp
                  type: string
                bond_xmit_hash_policy:
                  description: Selects the transmit hash policy to use for slave selection
                    in balance-xor and 802.3ad modes.
                  enum:
                  - layer2
                  - layer2+3
                  - layer3+4
                  type: string
                bridge_ports:
                  description: Specify the interfaces you want to add to your bridge.
                  format: pve-iface-list
                  type: string
                bridge_vids:
                  description: 'Specify the allowed VLANs. For example: ''2 4 100-200''.
                    Only used if the bridge is VLAN aware.'
                  format: pve-vlan-id-or-range-list
                  type: string
                bridge_vlan_aware:
                  description: Enable bridge vlan support.
                  type: boolean
                cidr:
                  description: IPv4 CIDR.
                  format: CIDRv4
                  type: string
                cidr6:
                  description: IPv6 CIDR.
                  format: CIDRv6
                  type: string
                comments:
                  description: Comments
                  type: string
                comments6:
                  description: Comments
                  type: string
                gateway:
                  description: Default gateway address.
                  format: ipv4
                  type: string
                gateway6:
                  description: Default ipv6 gateway address.
                  format: ipv6
                  type: string
                iface:
                  description: Network interface name.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                mtu:
                  description: MTU.
                  maximum: 65520
                  minimum: 1280
                  type: integer
                netmask:
                  description: Network mask.
                  format: ipv4mask
                  type: string
                netmask6:
                  description: Network mask.
                  maximum: 128
                  minimum: 0
                  type: integer
                ovs_bonds:
                  description: Specify the interfaces used by the bonding device.
                  format: pve-iface-list
                  type: string
                ovs_bridge:
                  description: The OVS bridge associated with a OVS port. This is
                    required when you create an OVS port.
                  format: pve-iface
                  type: string
                ovs_options:
                  description: OVS interface options.
                  maxLength: 1024
                  type: string
                ovs_ports:
                  description: Specify the interfaces you want to add to your bridge.
                  format: pve-iface-list
                  type: string
                ovs_tag:
                  description: Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)
                  maximum: 4094
                  minimum: 1
                  type: integer
                slaves:
                  description: Specify the interfaces used by the bonding device.
                  format: pve-iface-list
                  type: string
                type:
                  description: Network interface type
                  enum:
                  - bridge
                  - bond
                  - eth
                  - alias
                  - vlan
                  - OVSBridge
                  - OVSBond
                  - OVSPort
                  - OVSIntPort
                  - vnet
                  - unknown
                  type: string
                vlan-id:
                  description: vlan-id for a custom named vlan interface (ifupdown2
                    only).
                  maximum: 4094
                  minimum: 1
                  type: integer
                vlan-raw-device:
                  description: Specify the raw interface for the vlan interface.
                  format: pve-iface
                  type: string
              required:
              - iface
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create network device configuration
      tags:
      - Nodes
    put:
      description: Reload network configuration
      operationId: put_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reload network configuration
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/network/nodes/{node}/network/{iface}:
    delete:
      description: Delete network device configuration
      operationId: delete_nodes_nodes_node_nodes_node_network_nodes_node_network_iface
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iface parameter
        in: path
        name: iface
        required: true
        schema:
          description: The iface parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete network device configuration
      tags:
      - Nodes
    get:
      description: Read network device configuration
      operationId: get_nodes_nodes_node_nodes_node_network_nodes_node_network_iface
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iface parameter
        in: path
        name: iface
        required: true
        schema:
          description: The iface parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  method:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read network device configuration
      tags:
      - Nodes
    put:
      description: Update network device configuration
      operationId: put_nodes_nodes_node_nodes_node_network_nodes_node_network_iface
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iface parameter
        in: path
        name: iface
        required: true
        schema:
          description: The iface parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                address:
                  description: IP address.
                  format: ipv4
                  type: string
                address6:
                  description: IP address.
                  format: ipv6
                  type: string
                autostart:
                  description: Automatically start interface on boot.
                  type: boolean
                bond-primary:
                  description: Specify the primary interface for active-backup bond.
                  format: pve-iface
                  type: string
                bond_mode:
                  description: Bonding mode.
                  enum:
                  - balance-rr
                  - active-backup
                  - balance-xor
                  - broadcast
                  - 802.3ad
                  - balance-tlb
                  - balance-alb
                  - balance-slb
                  - lacp-balance-slb
                  - lacp-balance-tcp
                  type: string
                bond_xmit_hash_policy:
                  description: Selects the transmit hash policy to use for slave selection
                    in balance-xor and 802.3ad modes.
                  enum:
                  - layer2
                  - layer2+3
                  - layer3+4
                  type: string
                bridge_ports:
                  description: Specify the interfaces you want to add to your bridge.
                  format: pve-iface-list
                  type: string
                bridge_vids:
                  description: 'Specify the allowed VLANs. For example: ''2 4 100-200''.
                    Only used if the bridge is VLAN aware.'
                  format: pve-vlan-id-or-range-list
                  type: string
                bridge_vlan_aware:
                  description: Enable bridge vlan support.
                  type: boolean
                cidr:
                  description: IPv4 CIDR.
                  format: CIDRv4
                  type: string
                cidr6:
                  description: IPv6 CIDR.
                  format: CIDRv6
                  type: string
                comments:
                  description: Comments
                  type: string
                comments6:
                  description: Comments
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                gateway:
                  description: Default gateway address.
                  format: ipv4
                  type: string
                gateway6:
                  description: Default ipv6 gateway address.
                  format: ipv6
                  type: string
                mtu:
                  description: MTU.
                  maximum: 65520
                  minimum: 1280
                  type: integer
                netmask:
                  description: Network mask.
                  format: ipv4mask
                  type: string
                netmask6:
                  description: Network mask.
                  maximum: 128
                  minimum: 0
                  type: integer
                ovs_bonds:
                  description: Specify the interfaces used by the bonding device.
                  format: pve-iface-list
                  type: string
                ovs_bridge:
                  description: The OVS bridge associated with a OVS port. This is
                    required when you create an OVS port.
                  format: pve-iface
                  type: string
                ovs_options:
                  description: OVS interface options.
                  maxLength: 1024
                  type: string
                ovs_ports:
                  description: Specify the interfaces you want to add to your bridge.
                  format: pve-iface-list
                  type: string
                ovs_tag:
                  description: Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)
                  maximum: 4094
                  minimum: 1
                  type: integer
                slaves:
                  description: Specify the interfaces used by the bonding device.
                  format: pve-iface-list
                  type: string
                type:
                  description: Network interface type
                  enum:
                  - bridge
                  - bond
                  - eth
                  - alias
                  - vlan
                  - OVSBridge
                  - OVSBond
                  - OVSPort
                  - OVSIntPort
                  - vnet
                  - unknown
                  type: string
                vlan-id:
                  description: vlan-id for a custom named vlan interface (ifupdown2
                    only).
                  maximum: 4094
                  minimum: 1
                  type: integer
                vlan-raw-device:
                  description: Specify the raw interface for the vlan interface.
                  format: pve-iface
                  type: string
              required:
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update network device configuration
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu:
    get:
      description: Virtual machine index (per node).
      operationId: get_nodes_nodes_node_nodes_node_qemu
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Determine the full status of active VMs.
        in: query
        name: full
        required: false
        schema:
          description: Determine the full status of active VMs.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cpu:
                      description: Current CPU usage.
                      type: number
                    cpus:
                      description: Maximum usable CPUs.
                      type: number
                    diskread:
                      description: 'The amount of bytes the guest read from it''s
                        block devices since the guest was started. (Note: This info
                        is not available for all storage types.)'
                      type: integer
                    diskwrite:
                      description: 'The amount of bytes the guest wrote from it''s
                        block devices since the guest was started. (Note: This info
                        is not available for all storage types.)'
                      type: integer
                    lock:
                      description: The current config lock, if any.
                      type: string
                    maxdisk:
                      description: Root disk size in bytes.
                      type: integer
                    maxmem:
                      description: Maximum memory in bytes.
                      type: integer
                    mem:
                      description: Currently used memory in bytes.
                      type: integer
                    name:
                      description: VM (host)name.
                      type: string
                    netin:
                      description: The amount of traffic in bytes that was sent to
                        the guest over the network since it was started.
                      type: integer
                    netout:
                      description: The amount of traffic in bytes that was sent from
                        the guest over the network since it was started.
                      type: integer
                    pid:
                      description: PID of the QEMU process, if the VM is running.
                      type: integer
                    qmpstatus:
                      description: VM run state from the 'query-status' QMP monitor
                        command.
                      type: string
                    running-machine:
                      description: The currently running machine type (if running).
                      type: string
                    running-qemu:
                      description: The QEMU version the VM is currently using (if
                        running).
                      type: string
                    serial:
                      description: Guest has serial device configured.
                      type: boolean
                    status:
                      description: QEMU process status.
                      type: string
                    tags:
                      description: The current configured tags, if any
                      type: string
                    template:
                      description: Determines if the guest is a template.
                      type: boolean
                    uptime:
                      description: Uptime in seconds.
                      type: integer
                    vmid:
                      description: The (unique) ID of the VM.
                      format: pve-vmid
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Virtual machine index (per node).
      tags:
      - Nodes
    post:
      description: Create or restore a virtual machine.
      operationId: post_nodes_nodes_node_nodes_node_qemu
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acpi:
                  default: 1
                  description: Enable/disable ACPI.
                  type: boolean
                affinity:
                  description: 'List of host cores used to execute guest processes,
                    for example: 0,5,8-11'
                  format: pve-cpuset
                  type: string
                agent:
                  description: Enable/disable communication with the QEMU Guest Agent
                    and its properties.
                  format:
                    enabled:
                      default: 0
                      default_key: 1
                      description: Enable/disable communication with a QEMU Guest
                        Agent (QGA) running in the VM.
                      type: boolean
                    freeze-fs-on-backup:
                      default: 1
                      description: Freeze/thaw guest filesystems on backup for consistency.
                      optional: 1
                      type: boolean
                    fstrim_cloned_disks:
                      default: 0
                      description: Run fstrim after moving a disk or migrating the
                        VM.
                      optional: 1
                      type: boolean
                    type:
                      default: virtio
                      description: Select the agent type
                      enum:
                      - virtio
                      - isa
                      optional: 1
                      type: string
                  type: string
                amd-sev:
                  description: Secure Encrypted Virtualization (SEV) features by AMD
                    CPUs
                  format: pve-qemu-sev-fmt
                  type: string
                arch:
                  description: Virtual processor architecture. Defaults to the host.
                  enum:
                  - x86_64
                  - aarch64
                  type: string
                archive:
                  description: The backup archive. Either the file system path to
                    a .tar or .vma file (use '-' to pipe data from stdin) or a proxmox
                    storage backup volume identifier.
                  maxLength: 255
                  type: string
                args:
                  description: Arbitrary arguments passed to kvm.
                  type: string
                audio0:
                  description: Configure a audio device, useful in combination with
                    QXL/Spice.
                  format:
                    device:
                      description: Configure an audio device.
                      enum:
                      - ich9-intel-hda
                      - intel-hda
                      - AC97
                      type: string
                    driver:
                      default: spice
                      description: Driver backend for the audio device.
                      enum:
                      - spice
                      - none
                      optional: 1
                      type: string
                  type: string
                autostart:
                  default: 0
                  description: Automatic restart after crash (currently ignored).
                  type: boolean
                balloon:
                  description: Amount of target RAM for the VM in MiB. Using zero
                    disables the ballon driver.
                  minimum: 0
                  type: integer
                bios:
                  default: seabios
                  description: Select BIOS implementation.
                  enum:
                  - seabios
                  - ovmf
                  type: string
                boot:
                  description: Specify guest boot order. Use the 'order=' sub-property
                    as usage with no key or 'legacy=' is deprecated.
                  format: pve-qm-boot
                  type: string
                bootdisk:
                  description: 'Enable booting from specified disk. Deprecated: Use
                    ''boot: order=foo;bar'' instead.'
                  format: pve-qm-bootdisk
                  pattern: (ide|sata|scsi|virtio)\d+
                  type: string
                bwlimit:
                  default: restore limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: integer
                cdrom:
                  description: This is an alias for option -ide2
                  format: pve-qm-ide
                  type: string
                cicustom:
                  description: 'cloud-init: Specify custom files to replace the automatically
                    generated ones at start.'
                  format: pve-qm-cicustom
                  type: string
                cipassword:
                  description: 'cloud-init: Password to assign the user. Using this
                    is generally not recommended. Use ssh keys instead. Also note
                    that older cloud-init versions do not support hashed passwords.'
                  type: string
                citype:
                  description: Specifies the cloud-init configuration format. The
                    default depends on the configured operating system type (`ostype`.
                    We use the `nocloud` format for Linux, and `configdrive2` for
                    windows.
                  enum:
                  - configdrive2
                  - nocloud
                  - opennebula
                  type: string
                ciupgrade:
                  default: 1
                  description: 'cloud-init: do an automatic package upgrade after
                    the first boot.'
                  type: boolean
                ciuser:
                  description: 'cloud-init: User name to change ssh keys and password
                    for instead of the image''s configured default user.'
                  type: string
                cores:
                  default: 1
                  description: The number of cores per socket.
                  minimum: 1
                  type: integer
                cpu:
                  description: Emulated CPU type.
                  format: pve-vm-cpu-conf
                  type: string
                cpulimit:
                  default: 0
                  description: Limit of CPU usage.
                  maximum: 128
                  minimum: 0
                  type: number
                cpuunits:
                  $ref: '#/components/schemas/ProxmoxVmId'
                  default: 'cgroup v1: 1024, cgroup v2: 100'
                  description: CPU weight for a VM, will be clamped to [1, 10000]
                    in cgroup v2.
                  maximum: 262144
                  minimum: 1
                description:
                  description: Description for the VM. Shown in the web-interface
                    VM's summary. This is saved as comment inside the configuration
                    file.
                  maxLength: 8192
                  type: string
                efidisk0:
                  description: Configure a disk for storing EFI vars. Use the special
                    syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that
                    SIZE_IN_GiB is ignored here and that the default EFI vars are
                    copied to the volume instead. Use STORAGE_ID:0 and the 'import-from'
                    parameter to import from an existing volume.
                  format:
                    efitype:
                      default: 2m
                      description: Size and type of the OVMF EFI vars. '4m' is newer
                        and recommended, and required for Secure Boot. For backwards
                        compatibility, '2m' is used if not otherwise specified. Ignored
                        for VMs with arch=aarch64 (ARM).
                      enum:
                      - 2m
                      - 4m
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    pre-enrolled-keys:
                      default: 0
                      description: Use am EFI vars template with distribution-specific
                        and Microsoft Standard keys enrolled, if used with 'efitype=4m'.
                        Note that this will enable Secure Boot by default, though
                        it can still be turned off from within the VM.
                      optional: 1
                      type: boolean
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      alias: file
                  type: string
                force:
                  description: Allow to overwrite existing VM.
                  type: boolean
                freeze:
                  description: Freeze CPU at startup (use 'c' monitor command to start
                    execution).
                  type: boolean
                hookscript:
                  description: Script that will be executed during various steps in
                    the vms lifetime.
                  format: pve-volume-id
                  type: string
                hostpci[n]:
                  description: Map host PCI devices into guest.
                  format: pve-qm-hostpci
                  type: string
                hotplug:
                  default: network,disk,usb
                  description: 'Selectively enable hotplug features. This is a comma
                    separated list of hotplug features: ''network'', ''disk'', ''cpu'',
                    ''memory'', ''usb'' and ''cloudinit''. Use ''0'' to disable hotplug
                    completely. Using ''1'' as value is an alias for the default `network,disk,usb`.
                    USB hotplugging is possible for guests with machine version >=
                    7.1 and ostype l26 or windows > 7.'
                  format: pve-hotplug-features
                  type: string
                hugepages:
                  description: Enable/disable hugepages memory.
                  enum:
                  - any
                  - '2'
                  - '1024'
                  type: string
                ide[n]:
                  description: Use volume as IDE hard disk or CD-ROM (n is 0 to 3).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    model:
                      description: The drive's reported model name, url-encoded, up
                        to 40 bytes long.
                      format: urlencoded
                      format_description: model
                      maxLength: 120
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                import-working-storage:
                  description: A file-based storage with 'images' content-type enabled,
                    which is used as an intermediary extraction storage during import.
                    Defaults to the source storage.
                  format: pve-storage-id
                  type: string
                ipconfig[n]:
                  description: 'cloud-init: Specify IP addresses and gateways for
                    the corresponding interface.


                    IP addresses use CIDR notation, gateways are optional but need
                    an IP of the same type specified.


                    The special string ''dhcp'' can be used for IP addresses to use
                    DHCP, in which case no explicit

                    gateway should be provided.

                    For IPv6 the special string ''auto'' can be used to use stateless
                    autoconfiguration. This requires

                    cloud-init 19.4 or newer.


                    If cloud-init is enabled and neither an IPv4 nor an IPv6 address
                    is specified, it defaults to using

                    dhcp on IPv4.

                    '
                  format: pve-qm-ipconfig
                  type: string
                ivshmem:
                  description: Inter-VM shared memory. Useful for direct communication
                    between VMs, or to the host.
                  format:
                    name:
                      description: The name of the file. Will be prefixed with 'pve-shm-'.
                        Default is the VMID. Will be deleted when the VM is stopped.
                      format_description: string
                      optional: 1
                      pattern: '[a-zA-Z0-9\-]+'
                      type: string
                    size:
                      description: The size of the file in MB.
                      minimum: 1
                      type: integer
                  type: string
                keephugepages:
                  default: 0
                  description: Use together with hugepages. If enabled, hugepages
                    will not not be deleted after VM shutdown and can be used for
                    subsequent starts.
                  type: boolean
                keyboard:
                  default: null
                  description: Keyboard layout for VNC server. This option is generally
                    not required and is often better handled from within the guest
                    OS.
                  enum:
                  - de
                  - de-ch
                  - da
                  - en-gb
                  - en-us
                  - es
                  - fi
                  - fr
                  - fr-be
                  - fr-ca
                  - fr-ch
                  - hu
                  - is
                  - it
                  - ja
                  - lt
                  - mk
                  - nl
                  - 'no'
                  - pl
                  - pt
                  - pt-br
                  - sv
                  - sl
                  - tr
                  type: string
                kvm:
                  default: 1
                  description: Enable/disable KVM hardware virtualization.
                  type: boolean
                live-restore:
                  description: Start the VM immediately while importing or restoring
                    in the background.
                  type: boolean
                localtime:
                  description: Set the real time clock (RTC) to local time. This is
                    enabled by default if the `ostype` indicates a Microsoft Windows
                    OS.
                  type: boolean
                lock:
                  description: Lock/unlock the VM.
                  enum:
                  - backup
                  - clone
                  - create
                  - migrate
                  - rollback
                  - snapshot
                  - snapshot-delete
                  - suspending
                  - suspended
                  type: string
                machine:
                  description: Specify the QEMU machine.
                  format:
                    enable-s3:
                      description: Enables S3 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    enable-s4:
                      description: Enables S4 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    type:
                      default_key: 1
                      description: Specifies the QEMU machine type.
                      format_description: machine type
                      maxLength: 40
                      optional: 1
                      pattern: (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)
                      type: string
                    viommu:
                      description: Enable and set guest vIOMMU variant (Intel vIOMMU
                        needs q35 to be set as machine type).
                      enum:
                      - intel
                      - virtio
                      optional: 1
                      type: string
                  type: string
                memory:
                  description: Memory properties.
                  format:
                    current:
                      default: 512
                      default_key: 1
                      description: Current amount of online RAM for the VM in MiB.
                        This is the maximum available memory when you use the balloon
                        device.
                      minimum: 16
                      type: integer
                  type: string
                migrate_downtime:
                  default: 0.1
                  description: Set maximum tolerated downtime (in seconds) for migrations.
                    Should the migration not be able to converge in the very end,
                    because too much newly dirtied RAM needs to be transferred, the
                    limit will be increased automatically step-by-step until migration
                    can converge.
                  minimum: 0
                  type: number
                migrate_speed:
                  default: 0
                  description: Set maximum speed (in MB/s) for migrations. Value 0
                    is no limit.
                  minimum: 0
                  type: integer
                name:
                  description: Set a name for the VM. Only used on the configuration
                    web interface.
                  format: dns-name
                  type: string
                nameserver:
                  description: 'cloud-init: Sets DNS server IP address for a container.
                    Create will automatically use the setting from the host if neither
                    searchdomain nor nameserver are set.'
                  format: address-list
                  type: string
                net[n]:
                  description: Specify network devices.
                  format:
                    bridge:
                      description: "Bridge to attach the network device to. The Proxmox\
                        \ VE standard bridge\nis called 'vmbr0'.\n\nIf you do not\
                        \ specify a bridge, we create a kvm user (NATed) network\n\
                        device, which provides DHCP and DNS services. The following\
                        \ addresses\nare used:\n\n 10.0.2.2   Gateway\n 10.0.2.3 \
                        \  DNS Server\n 10.0.2.4   SMB Server\n\nThe DHCP server assign\
                        \ addresses to the guest starting from 10.0.2.15.\n"
                      format: pve-bridge-id
                      format_description: bridge
                      optional: 1
                      type: string
                    e1000:
                      alias: macaddr
                      keyAlias: model
                    e1000-82540em:
                      alias: macaddr
                      keyAlias: model
                    e1000-82544gc:
                      alias: macaddr
                      keyAlias: model
                    e1000-82545em:
                      alias: macaddr
                      keyAlias: model
                    e1000e:
                      alias: macaddr
                      keyAlias: model
                    firewall:
                      description: Whether this interface should be protected by the
                        firewall.
                      optional: 1
                      type: boolean
                    i82551:
                      alias: macaddr
                      keyAlias: model
                    i82557b:
                      alias: macaddr
                      keyAlias: model
                    i82559er:
                      alias: macaddr
                      keyAlias: model
                    link_down:
                      description: Whether this interface should be disconnected (like
                        pulling the plug).
                      optional: 1
                      type: boolean
                    macaddr:
                      description: MAC address. That address must be unique within
                        your network. This is automatically generated if not specified.
                      format: mac-addr
                      format_description: XX:XX:XX:XX:XX:XX
                      optional: 1
                      type: string
                      verbose_description: A common MAC address with the I/G (Individual/Group)
                        bit not set.
                    model:
                      default_key: 1
                      description: Network Card Model. The 'virtio' model provides
                        the best performance with very low CPU overhead. If your guest
                        does not support this driver, it is usually best to use 'e1000'.
                      enum:
                      - e1000
                      - e1000-82540em
                      - e1000-82544gc
                      - e1000-82545em
                      - e1000e
                      - i82551
                      - i82557b
                      - i82559er
                      - ne2k_isa
                      - ne2k_pci
                      - pcnet
                      - rtl8139
                      - virtio
                      - vmxnet3
                      type: string
                    mtu:
                      description: Force MTU, for VirtIO only. Set to '1' to use the
                        bridge MTU
                      maximum: 65520
                      minimum: 1
                      optional: 1
                      type: integer
                    ne2k_isa:
                      alias: macaddr
                      keyAlias: model
                    ne2k_pci:
                      alias: macaddr
                      keyAlias: model
                    pcnet:
                      alias: macaddr
                      keyAlias: model
                    queues:
                      description: Number of packet queues to be used on the device.
                      maximum: 64
                      minimum: 0
                      optional: 1
                      type: integer
                    rate:
                      description: Rate limit in mbps (megabytes per second) as floating
                        point number.
                      minimum: 0
                      optional: 1
                      type: number
                    rtl8139:
                      alias: macaddr
                      keyAlias: model
                    tag:
                      description: VLAN tag to apply to packets on this interface.
                      maximum: 4094
                      minimum: 1
                      optional: 1
                      type: integer
                    trunks:
                      description: VLAN trunks to pass through this interface.
                      format_description: vlanid[;vlanid...]
                      optional: 1
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    virtio:
                      alias: macaddr
                      keyAlias: model
                    vmxnet3:
                      alias: macaddr
                      keyAlias: model
                  type: string
                numa:
                  default: 0
                  description: Enable/disable NUMA.
                  type: boolean
                numa[n]:
                  description: NUMA topology.
                  format:
                    cpus:
                      description: CPUs accessing this NUMA node.
                      format_description: id[-id];...
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    hostnodes:
                      description: Host NUMA nodes to use.
                      format_description: id[-id];...
                      optional: 1
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    memory:
                      description: Amount of memory this NUMA node provides.
                      optional: 1
                      type: number
                    policy:
                      description: NUMA allocation policy.
                      enum:
                      - preferred
                      - bind
                      - interleave
                      optional: 1
                      type: string
                  type: string
                onboot:
                  default: 0
                  description: Specifies whether a VM will be started during system
                    bootup.
                  type: boolean
                ostype:
                  description: Specify guest operating system.
                  enum:
                  - other
                  - wxp
                  - w2k
                  - w2k3
                  - w2k8
                  - wvista
                  - win7
                  - win8
                  - win10
                  - win11
                  - l24
                  - l26
                  - solaris
                  type: string
                parallel[n]:
                  description: Map host parallel devices (n is 0 to 2).
                  pattern: /dev/parport\d+|/dev/usb/lp\d+
                  type: string
                pool:
                  description: Add the VM to the specified pool.
                  format: pve-poolid
                  type: string
                protection:
                  default: 0
                  description: Sets the protection flag of the VM. This will disable
                    the remove VM and remove disk operations.
                  type: boolean
                reboot:
                  default: 1
                  description: Allow reboot. If set to '0' the VM exit on reboot.
                  type: boolean
                rng0:
                  description: Configure a VirtIO-based Random Number Generator.
                  format: pve-qm-rng
                  type: string
                sata[n]:
                  description: Use volume as SATA hard disk or CD-ROM (n is 0 to 5).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                scsi[n]:
                  description: Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iothread:
                      description: Whether to use iothreads for this drive
                      optional: 1
                      type: boolean
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    product:
                      description: The drive's product name, up to 16 bytes long.
                      format_description: product
                      optional: 1
                      pattern: '[A-Za-z0-9\-_\s]{,16}'
                      type: string
                    queues:
                      description: Number of queues.
                      minimum: 2
                      optional: 1
                      type: integer
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    ro:
                      description: Whether the drive is read-only.
                      optional: 1
                      type: boolean
                    scsiblock:
                      default: 0
                      description: 'whether to use scsi-block for full passthrough
                        of host block device


                        WARNING: can lead to I/O errors in combination with low memory
                        or high memory fragmentation on host'
                      optional: 1
                      type: boolean
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    vendor:
                      description: The drive's vendor name, up to 8 bytes long.
                      format_description: vendor
                      optional: 1
                      pattern: '[A-Za-z0-9\-_\s]{,8}'
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                scsihw:
                  default: lsi
                  description: SCSI controller model
                  enum:
                  - lsi
                  - lsi53c810
                  - virtio-scsi-pci
                  - virtio-scsi-single
                  - megasas
                  - pvscsi
                  type: string
                searchdomain:
                  description: 'cloud-init: Sets DNS search domains for a container.
                    Create will automatically use the setting from the host if neither
                    searchdomain nor nameserver are set.'
                  type: string
                serial[n]:
                  description: Create a serial device inside the VM (n is 0 to 3)
                  pattern: (/dev/.+|socket)
                  type: string
                shares:
                  default: 1000
                  description: Amount of memory shares for auto-ballooning. The larger
                    the number is, the more memory this VM gets. Number is relative
                    to weights of all other running VMs. Using zero disables auto-ballooning.
                    Auto-ballooning is done by pvestatd.
                  maximum: 50000
                  minimum: 0
                  type: integer
                smbios1:
                  description: Specify SMBIOS type 1 fields.
                  format: pve-qm-smbios1
                  maxLength: 512
                  type: string
                smp:
                  default: 1
                  description: The number of CPUs. Please use option -sockets instead.
                  minimum: 1
                  type: integer
                sockets:
                  default: 1
                  description: The number of CPU sockets.
                  minimum: 1
                  type: integer
                spice_enhancements:
                  description: Configure additional enhancements for SPICE.
                  format:
                    foldersharing:
                      default: '0'
                      description: Enable folder sharing via SPICE. Needs Spice-WebDAV
                        daemon installed in the VM.
                      optional: 1
                      type: boolean
                    videostreaming:
                      default: 'off'
                      description: Enable video streaming. Uses compression for detected
                        video streams.
                      enum:
                      - 'off'
                      - all
                      - filter
                      optional: 1
                      type: string
                  type: string
                sshkeys:
                  description: 'cloud-init: Setup public SSH keys (one key per line,
                    OpenSSH format).'
                  format: urlencoded
                  type: string
                start:
                  default: 0
                  description: Start VM after it was created successfully.
                  type: boolean
                startdate:
                  default: now
                  description: Set the initial date of the real time clock. Valid
                    format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.
                  pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
                  type: string
                startup:
                  description: Startup and shutdown behavior. Order is a non-negative
                    number defining the general startup order. Shutdown in done with
                    reverse ordering. Additionally you can set the 'up' or 'down'
                    delay in seconds, which specifies a delay to wait before the next
                    VM is started or stopped.
                  format: pve-startup-order
                  type: string
                storage:
                  description: Default storage.
                  format: pve-storage-id
                  type: string
                tablet:
                  default: 1
                  description: Enable/disable the USB tablet device.
                  type: boolean
                tags:
                  description: Tags of the VM. This is only meta information.
                  format: pve-tag-list
                  type: string
                tdf:
                  default: 0
                  description: Enable/disable time drift fix.
                  type: boolean
                template:
                  default: 0
                  description: Enable/disable Template.
                  type: boolean
                tpmstate0:
                  description: Configure a Disk for storing TPM state. The format
                    is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB
                    to allocate a new volume. Note that SIZE_IN_GiB is ignored here
                    and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from'
                    parameter to import from an existing volume.
                  format:
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    version:
                      default: v1.2
                      description: The TPM interface version. v2.0 is newer and should
                        be preferred. Note that this cannot be changed later on.
                      enum:
                      - v1.2
                      - v2.0
                      optional: 1
                      type: string
                    volume:
                      alias: file
                  type: string
                unique:
                  description: Assign a unique random ethernet address.
                  type: boolean
                unused[n]:
                  description: Reference to unused volumes. This is used internally,
                    and should not be modified manually.
                  format:
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id
                      format_description: volume
                      type: string
                    volume:
                      alias: file
                  type: string
                usb[n]:
                  description: Configure an USB device (n is 0 to 4, for machine version
                    >= 7.1 and ostype l26 or windows > 7, n can be up to 14).
                  format:
                    host:
                      default_key: 1
                      description: "The Host USB device or port or the value 'spice'.\
                        \ HOSTUSBDEVICE syntax is:\n\n 'bus-port(.port)*' (decimal\
                        \ numbers) or\n 'vendor_id:product_id' (hexadecimal numbers)\
                        \ or\n 'spice'\n\nYou can use the 'lsusb -t' command to list\
                        \ existing usb devices.\n\nNOTE: This option allows direct\
                        \ access to host hardware. So it is no longer possible to\
                        \ migrate such\nmachines - use with special care.\n\nThe value\
                        \ 'spice' can be used to add a usb redirection devices for\
                        \ spice.\n\nEither this or the 'mapping' key must be set.\n"
                      format_description: HOSTUSBDEVICE|spice
                      optional: 1
                      pattern: (?^:(?:(?:(?^:(0x)?([0-9A-Fa-f]{4}):(0x)?([0-9A-Fa-f]{4})))|(?:(?^:(\d+)\-(\d+(\.\d+)*)))|[Ss][Pp][Ii][Cc][Ee]))
                      type: string
                    mapping:
                      description: The ID of a cluster wide mapping. Either this or
                        the default-key 'host' must be set.
                      format: pve-configid
                      format_description: mapping-id
                      optional: 1
                      type: string
                    usb3:
                      default: 0
                      description: Specifies whether if given host option is a USB3
                        device or port. For modern guests (machine version >= 7.1
                        and ostype l26 and windows > 7), this flag is irrelevant (all
                        devices are plugged into a xhci controller).
                      optional: 1
                      type: boolean
                  type: string
                vcpus:
                  default: 0
                  description: Number of hotplugged vcpus.
                  minimum: 1
                  type: integer
                vga:
                  description: Configure the VGA hardware.
                  format:
                    clipboard:
                      description: Enable a specific clipboard. If not set, depending
                        on the display type the SPICE one will be added. Migration
                        with VNC clipboard is not yet supported!
                      enum:
                      - vnc
                      optional: 1
                      type: string
                    memory:
                      description: Sets the VGA memory (in MiB). Has no effect with
                        serial display.
                      maximum: 512
                      minimum: 4
                      optional: 1
                      type: integer
                    type:
                      default: std
                      default_key: 1
                      description: Select the VGA type. Using type 'cirrus' is not
                        recommended.
                      enum:
                      - cirrus
                      - qxl
                      - qxl2
                      - qxl3
                      - qxl4
                      - none
                      - serial0
                      - serial1
                      - serial2
                      - serial3
                      - std
                      - virtio
                      - virtio-gl
                      - vmware
                      optional: 1
                      type: string
                  type: string
                virtio[n]:
                  description: Use volume as VIRTIO hard disk (n is 0 to 15). Use
                    the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.
                    Use STORAGE_ID:0 and the 'import-from' parameter to import from
                    an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iothread:
                      description: Whether to use iothreads for this drive
                      optional: 1
                      type: boolean
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    ro:
                      description: Whether the drive is read-only.
                      optional: 1
                      type: boolean
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                  type: string
                virtiofs[n]:
                  description: Configuration for sharing a directory between host
                    and guest using Virtio-fs.
                  format:
                    cache:
                      default: auto
                      description: The caching policy the file system should use (auto,
                        always, metadata, never).
                      enum:
                      - auto
                      - always
                      - metadata
                      - never
                      optional: 1
                      type: string
                    direct-io:
                      default: 0
                      description: Honor the O_DIRECT flag passed down by guest applications.
                      optional: 1
                      type: boolean
                    dirid:
                      default_key: 1
                      description: Mapping identifier of the directory mapping to
                        be shared with the guest. Also used as a mount tag inside
                        the VM.
                      format: pve-configid
                      format_description: mapping-id
                      type: string
                    expose-acl:
                      default: 0
                      description: Enable support for POSIX ACLs (enabled ACL implies
                        xattr) for this mount.
                      optional: 1
                      type: boolean
                    expose-xattr:
                      default: 0
                      description: Enable support for extended attributes for this
                        mount.
                      optional: 1
                      type: boolean
                  type: string
                vmgenid:
                  default: 1 (autogenerated)
                  description: Set VM Generation ID. Use '1' to autogenerate on create
                    or update, pass '0' to disable explicitly.
                  pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
                  type: string
                vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
                vmstatestorage:
                  description: Default storage for VM state volumes/files.
                  format: pve-storage-id
                  type: string
                watchdog:
                  description: Create a virtual hardware watchdog device.
                  format: pve-qm-watchdog
                  type: string
              required:
              - vmid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create or restore a virtual machine.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}:
    delete:
      description: Destroy the VM and  all used/owned volumes. Removes any VM specific
        permissions and firewall rules
      operationId: delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: If set, destroy additionally all disks not referenced in the
          config but with a matching VMID from all enabled storages.
        in: query
        name: destroy-unreferenced-disks
        required: false
        schema:
          default: 0
          description: If set, destroy additionally all disks not referenced in the
            config but with a matching VMID from all enabled storages.
          type: boolean
      - description: Remove VMID from configurations, like backup & replication jobs
          and HA.
        in: query
        name: purge
        required: false
        schema:
          description: Remove VMID from configurations, like backup & replication
            jobs and HA.
          type: boolean
      - description: Ignore locks - only root is allowed to use this option.
        in: query
        name: skiplock
        required: false
        schema:
          description: Ignore locks - only root is allowed to use this option.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy the VM and  all used/owned volumes. Removes any VM specific
        permissions and firewall rules
      tags:
      - Nodes
    get:
      description: Directory index
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent:
    get:
      description: QEMU Guest Agent command index.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns the list of QEMU Guest Agent commands
                items:
                  type: object
                type: array
          description: Returns the list of QEMU Guest Agent commands
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: QEMU Guest Agent command index.
      tags:
      - Nodes
    post:
      description: Execute QEMU Guest Agent commands.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command:
                  description: The QGA command.
                  enum:
                  - fsfreeze-freeze
                  - fsfreeze-status
                  - fsfreeze-thaw
                  - fstrim
                  - get-fsinfo
                  - get-host-name
                  - get-memory-block-info
                  - get-memory-blocks
                  - get-osinfo
                  - get-time
                  - get-timezone
                  - get-users
                  - get-vcpus
                  - info
                  - network-get-interfaces
                  - ping
                  - shutdown
                  - suspend-disk
                  - suspend-hybrid
                  - suspend-ram
                  type: string
              required:
              - command
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute QEMU Guest Agent commands.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/exec
  : post:
      description: Executes the given command in the vm via the guest-agent and returns
        an object with the pid.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_exec
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command:
                  description: The command as a list of program + arguments.
                  items:
                    format: string
                    type: string
                  type: array
                input-data:
                  description: Data to pass as 'input-data' to the guest. Usually
                    treated as STDIN to 'command'.
                  maxLength: 65536
                  type: string
              required:
              - command
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  pid:
                    description: The PID of the process started by the guest-agent.
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Executes the given command in the vm via the guest-agent and returns
        an object with the pid.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/exec-status
  : get:
      description: Gets the status of the given pid started by the guest-agent
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_exec-status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The PID to query
        in: query
        name: pid
        required: true
        schema:
          description: The PID to query
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  err-data:
                    description: stderr of the process
                    type: string
                  err-truncated:
                    description: true if stderr was not fully captured
                    type: boolean
                  exitcode:
                    description: process exit code if it was normally terminated.
                    type: integer
                  exited:
                    description: Tells if the given command has exited yet.
                    type: boolean
                  out-data:
                    description: stdout of the process
                    type: string
                  out-truncated:
                    description: true if stdout was not fully captured
                    type: boolean
                  signal:
                    description: signal number or exception code if the process was
                      abnormally terminated.
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Gets the status of the given pid started by the guest-agent
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/file-read
  : get:
      description: Reads the given file via guest agent. Is limited to 16777216 bytes.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_file-read
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The path to the file
        in: query
        name: file
        required: true
        schema:
          description: The path to the file
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a `content` property.
                properties:
                  content:
                    description: The content of the file, maximum 16777216
                    type: string
                  truncated:
                    description: If set to 1, the output is truncated and not complete
                    type: boolean
                type: object
          description: Returns an object with a `content` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reads the given file via guest agent. Is limited to 16777216 bytes.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/file-write
  : post:
      description: Writes the given file via guest agent.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_file-write
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  description: The content to write into the file.
                  maxLength: 61440
                  type: string
                encode:
                  default: 1
                  description: If set, the content will be encoded as base64 (required
                    by QEMU).Otherwise the content needs to be encoded beforehand
                    - defaults to true.
                  type: boolean
                file:
                  description: The path to the file.
                  type: string
              required:
              - content
              - file
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Writes the given file via guest agent.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze
  : post:
      description: Execute fsfreeze-freeze.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fsfreeze-freeze
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute fsfreeze-freeze.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status
  : post:
      description: Execute fsfreeze-status.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fsfreeze-status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute fsfreeze-status.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw
  : post:
      description: Execute fsfreeze-thaw.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fsfreeze-thaw
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute fsfreeze-thaw.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/fstrim
  : post:
      description: Execute fstrim.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_fstrim
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute fstrim.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-fsinfo
  : get:
      description: Execute get-fsinfo.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-fsinfo
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-fsinfo.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-host-name
  : get:
      description: Execute get-host-name.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-host-name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-host-name.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info
  : get:
      description: Execute get-memory-block-info.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-memory-block-info
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-memory-block-info.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks
  : get:
      description: Execute get-memory-blocks.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-memory-blocks
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-memory-blocks.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-osinfo
  : get:
      description: Execute get-osinfo.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-osinfo
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-osinfo.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-time
  : get:
      description: Execute get-time.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-time
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-time.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-timezone
  : get:
      description: Execute get-timezone.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-timezone
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-timezone.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-users
  : get:
      description: Execute get-users.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-users
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-users.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/get-vcpus
  : get:
      description: Execute get-vcpus.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_get-vcpus
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute get-vcpus.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/info
  : get:
      description: Execute info.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_info
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute info.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces
  : get:
      description: Execute network-get-interfaces.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_network-get-interfaces
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute network-get-interfaces.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/ping
  : post:
      description: Execute ping.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_ping
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute ping.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/set-user-password
  : post:
      description: Sets the password for the given user to the given password
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_set-user-password
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                crypted:
                  default: 0
                  description: set to 1 if the password has already been passed through
                    crypt()
                  type: boolean
                password:
                  description: The new password.
                  maxLength: 1024
                  minLength: 5
                  type: string
                username:
                  description: The user to set the password for.
                  type: string
              required:
              - password
              - username
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Sets the password for the given user to the given password
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/shutdown
  : post:
      description: Execute shutdown.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_shutdown
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute shutdown.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/suspend-disk
  : post:
      description: Execute suspend-disk.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_suspend-disk
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute suspend-disk.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid
  : post:
      description: Execute suspend-hybrid.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_suspend-hybrid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute suspend-hybrid.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/agent/nodes/{node}/qemu/{vmid}/agent/suspend-ram
  : post:
      description: Execute suspend-ram.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_agent_nodes_node_qemu_vmid_agent_suspend-ram
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns an object with a single `result` property.
                type: object
          description: Returns an object with a single `result` property.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute suspend-ram.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/clone:
    post:
      description: Create a copy of virtual machine/template.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_clone
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: clone limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: integer
                description:
                  description: Description for the new VM.
                  type: string
                format:
                  description: Target format for file storage. Only valid for full
                    clone.
                  enum:
                  - raw
                  - qcow2
                  - vmdk
                  type: string
                full:
                  description: Create a full copy of all disks. This is always done
                    when you clone a normal VM. For VM templates, we try to create
                    a linked clone by default.
                  type: boolean
                name:
                  description: Set a name for the new VM.
                  format: dns-name
                  type: string
                newid:
                  description: VMID for the clone.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
                pool:
                  description: Add the new VM to the specified pool.
                  format: pve-poolid
                  type: string
                snapname:
                  description: The name of the snapshot.
                  format: pve-configid
                  maxLength: 40
                  type: string
                storage:
                  description: Target storage for full clone.
                  format: pve-storage-id
                  type: string
                target:
                  description: Target node. Only allowed if the original VM is on
                    shared storage.
                  format: pve-node
                  type: string
              required:
              - newid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a copy of virtual machine/template.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/cloudinit:
    get:
      description: Get the cloudinit configuration with both current and pending values.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_cloudinit
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    delete:
                      description: 'Indicates a pending delete request if present
                        and not 0. '
                      type: integer
                    key:
                      description: Configuration option name.
                      type: string
                    pending:
                      description: The new pending value.
                      type: string
                    value:
                      description: Value as it was used to generate the current cloudinit
                        image.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the cloudinit configuration with both current and pending values.
      tags:
      - Nodes
    put:
      description: Regenerate and change cloudinit config drive.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_cloudinit
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Regenerate and change cloudinit config drive.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/cloudinit/nodes/{node}/qemu/{vmid}/cloudinit/dump
  : get:
      description: Get automatically generated cloudinit config.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_cloudinit_nodes_node_qemu_vmid_cloudinit_dump
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Config type.
        in: query
        name: type
        required: true
        schema:
          description: Config type.
          enum:
          - user
          - network
          - meta
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get automatically generated cloudinit config.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/config:
    get:
      description: Get the virtual machine configuration with pending configuration
        changes applied. Set the 'current' parameter to get the current configuration
        instead.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Get current values (instead of pending values).
        in: query
        name: current
        required: false
        schema:
          default: 0
          description: Get current values (instead of pending values).
          type: boolean
      - description: Fetch config values from given snapshot.
        in: query
        name: snapshot
        required: false
        schema:
          description: Fetch config values from given snapshot.
          format: pve-configid
          maxLength: 40
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The VM configuration.
                properties:
                  acpi:
                    description: Enable/disable ACPI.
                    type: boolean
                  affinity:
                    description: 'List of host cores used to execute guest processes,
                      for example: 0,5,8-11'
                    format: pve-cpuset
                    type: string
                  agent:
                    description: Enable/disable communication with the QEMU Guest
                      Agent and its properties.
                    format:
                      enabled:
                        default: 0
                        default_key: 1
                        description: Enable/disable communication with a QEMU Guest
                          Agent (QGA) running in the VM.
                        type: boolean
                      freeze-fs-on-backup:
                        default: 1
                        description: Freeze/thaw guest filesystems on backup for consistency.
                        optional: 1
                        type: boolean
                      fstrim_cloned_disks:
                        default: 0
                        description: Run fstrim after moving a disk or migrating the
                          VM.
                        optional: 1
                        type: boolean
                      type:
                        default: virtio
                        description: Select the agent type
                        enum:
                        - virtio
                        - isa
                        optional: 1
                        type: string
                    type: string
                  amd-sev:
                    description: Secure Encrypted Virtualization (SEV) features by
                      AMD CPUs
                    format: pve-qemu-sev-fmt
                    type: string
                  arch:
                    description: Virtual processor architecture. Defaults to the host.
                    type: string
                  args:
                    description: Arbitrary arguments passed to kvm.
                    type: string
                  audio0:
                    description: Configure a audio device, useful in combination with
                      QXL/Spice.
                    format:
                      device:
                        description: Configure an audio device.
                        enum:
                        - ich9-intel-hda
                        - intel-hda
                        - AC97
                        type: string
                      driver:
                        default: spice
                        description: Driver backend for the audio device.
                        enum:
                        - spice
                        - none
                        optional: 1
                        type: string
                    type: string
                  autostart:
                    description: Automatic restart after crash (currently ignored).
                    type: boolean
                  balloon:
                    description: Amount of target RAM for the VM in MiB. Using zero
                      disables the ballon driver.
                    type: integer
                  bios:
                    description: Select BIOS implementation.
                    type: string
                  boot:
                    description: Specify guest boot order. Use the 'order=' sub-property
                      as usage with no key or 'legacy=' is deprecated.
                    format: pve-qm-boot
                    type: string
                  bootdisk:
                    description: 'Enable booting from specified disk. Deprecated:
                      Use ''boot: order=foo;bar'' instead.'
                    format: pve-qm-bootdisk
                    type: string
                  cdrom:
                    description: This is an alias for option -ide2
                    format: pve-qm-ide
                    type: string
                  cicustom:
                    description: 'cloud-init: Specify custom files to replace the
                      automatically generated ones at start.'
                    format: pve-qm-cicustom
                    type: string
                  cipassword:
                    description: 'cloud-init: Password to assign the user. Using this
                      is generally not recommended. Use ssh keys instead. Also note
                      that older cloud-init versions do not support hashed passwords.'
                    type: string
                  citype:
                    description: Specifies the cloud-init configuration format. The
                      default depends on the configured operating system type (`ostype`.
                      We use the `nocloud` format for Linux, and `configdrive2` for
                      windows.
                    type: string
                  ciupgrade:
                    description: 'cloud-init: do an automatic package upgrade after
                      the first boot.'
                    type: boolean
                  ciuser:
                    description: 'cloud-init: User name to change ssh keys and password
                      for instead of the image''s configured default user.'
                    type: string
                  cores:
                    description: The number of cores per socket.
                    type: integer
                  cpu:
                    description: Emulated CPU type.
                    format: pve-vm-cpu-conf
                    type: string
                  cpulimit:
                    description: Limit of CPU usage.
                    type: number
                  cpuunits:
                    $ref: '#/components/schemas/ProxmoxVmId'
                    description: CPU weight for a VM, will be clamped to [1, 10000]
                      in cgroup v2.
                  description:
                    description: Description for the VM. Shown in the web-interface
                      VM's summary. This is saved as comment inside the configuration
                      file.
                    type: string
                  digest:
                    description: SHA1 digest of configuration file. This can be used
                      to prevent concurrent modifications.
                    type: string
                  efidisk0:
                    description: Configure a disk for storing EFI vars.
                    format:
                      efitype:
                        default: 2m
                        description: Size and type of the OVMF EFI vars. '4m' is newer
                          and recommended, and required for Secure Boot. For backwards
                          compatibility, '2m' is used if not otherwise specified.
                          Ignored for VMs with arch=aarch64 (ARM).
                        enum:
                        - 2m
                        - 4m
                        optional: 1
                        type: string
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id-or-qm-path
                        format_description: volume
                        type: string
                      format:
                        description: The drive's backing file's data format.
                        enum:
                        - raw
                        - qcow
                        - qed
                        - qcow2
                        - vmdk
                        - cloop
                        optional: 1
                        type: string
                      pre-enrolled-keys:
                        default: 0
                        description: Use am EFI vars template with distribution-specific
                          and Microsoft Standard keys enrolled, if used with 'efitype=4m'.
                          Note that this will enable Secure Boot by default, though
                          it can still be turned off from within the VM.
                        optional: 1
                        type: boolean
                      size:
                        description: Disk size. This is purely informational and has
                          no effect.
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      volume:
                        alias: file
                    type: string
                  freeze:
                    description: Freeze CPU at startup (use 'c' monitor command to
                      start execution).
                    type: boolean
                  hookscript:
                    description: Script that will be executed during various steps
                      in the vms lifetime.
                    format: pve-volume-id
                    type: string
                  hostpci[n]:
                    description: Map host PCI devices into guest.
                    format: pve-qm-hostpci
                    type: string
                  hotplug:
                    description: 'Selectively enable hotplug features. This is a comma
                      separated list of hotplug features: ''network'', ''disk'', ''cpu'',
                      ''memory'', ''usb'' and ''cloudinit''. Use ''0'' to disable
                      hotplug completely. Using ''1'' as value is an alias for the
                      default `network,disk,usb`. USB hotplugging is possible for
                      guests with machine version >= 7.1 and ostype l26 or windows
                      > 7.'
                    format: pve-hotplug-features
                    type: string
                  hugepages:
                    description: Enable/disable hugepages memory.
                    type: string
                  ide[n]:
                    description: Use volume as IDE hard disk or CD-ROM (n is 0 to
                      3).
                    format:
                      aio:
                        description: AIO type to use.
                        enum:
                        - native
                        - threads
                        - io_uring
                        optional: 1
                        type: string
                      backup:
                        description: Whether the drive should be included when making
                          backups.
                        optional: 1
                        type: boolean
                      bps:
                        description: Maximum r/w speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_rd:
                        description: Maximum read speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_rd_length:
                        alias: bps_rd_max_length
                      bps_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_wr:
                        description: Maximum write speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_wr_length:
                        alias: bps_wr_max_length
                      bps_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      cache:
                        description: The drive's cache mode
                        enum:
                        - none
                        - writethrough
                        - writeback
                        - unsafe
                        - directsync
                        optional: 1
                        type: string
                      cyls:
                        description: Force the drive's physical geometry to have a
                          specific cylinder count.
                        optional: 1
                        type: integer
                      detect_zeroes:
                        description: Controls whether to detect and try to optimize
                          writes of zeroes.
                        optional: 1
                        type: boolean
                      discard:
                        description: Controls whether to pass discard/trim requests
                          to the underlying storage.
                        enum:
                        - ignore
                        - 'on'
                        optional: 1
                        type: string
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id-or-qm-path
                        format_description: volume
                        type: string
                      format:
                        description: The drive's backing file's data format.
                        enum:
                        - raw
                        - qcow
                        - qed
                        - qcow2
                        - vmdk
                        - cloop
                        optional: 1
                        type: string
                      heads:
                        description: Force the drive's physical geometry to have a
                          specific head count.
                        optional: 1
                        type: integer
                      iops:
                        description: Maximum r/w I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max:
                        description: Maximum unthrottled r/w I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_rd:
                        description: Maximum read I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_length:
                        alias: iops_rd_max_length
                      iops_rd_max:
                        description: Maximum unthrottled read I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_wr:
                        description: Maximum write I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_length:
                        alias: iops_wr_max_length
                      iops_wr_max:
                        description: Maximum unthrottled write I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      mbps:
                        description: Maximum r/w speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_max:
                        description: Maximum unthrottled r/w pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd:
                        description: Maximum read speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd_max:
                        description: Maximum unthrottled read pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr:
                        description: Maximum write speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr_max:
                        description: Maximum unthrottled write pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      media:
                        default: disk
                        description: The drive's media type.
                        enum:
                        - cdrom
                        - disk
                        optional: 1
                        type: string
                      model:
                        description: The drive's reported model name, url-encoded,
                          up to 40 bytes long.
                        format: urlencoded
                        format_description: model
                        maxLength: 120
                        optional: 1
                        type: string
                      replicate:
                        default: 1
                        description: Whether the drive should considered for replication
                          jobs.
                        optional: 1
                        type: boolean
                      rerror:
                        description: Read error action.
                        enum:
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      secs:
                        description: Force the drive's physical geometry to have a
                          specific sector count.
                        optional: 1
                        type: integer
                      serial:
                        description: The drive's reported serial number, url-encoded,
                          up to 20 bytes long.
                        format: urlencoded
                        format_description: serial
                        maxLength: 60
                        optional: 1
                        type: string
                      shared:
                        default: 0
                        description: Mark this locally-managed volume as available
                          on all nodes
                        optional: 1
                        type: boolean
                        verbose_description: 'Mark this locally-managed volume as
                          available on all nodes.


                          WARNING: This option does not share the volume automatically,
                          it assumes it is shared already!'
                      size:
                        description: Disk size. This is purely informational and has
                          no effect.
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      snapshot:
                        description: Controls qemu's snapshot mode feature. If activated,
                          changes made to the disk are temporary and will be discarded
                          when the VM is shutdown.
                        optional: 1
                        type: boolean
                      ssd:
                        description: Whether to expose this drive as an SSD, rather
                          than a rotational hard disk.
                        optional: 1
                        type: boolean
                      trans:
                        description: Force disk geometry bios translation mode.
                        enum:
                        - none
                        - lba
                        - auto
                        optional: 1
                        type: string
                      volume:
                        alias: file
                      werror:
                        description: Write error action.
                        enum:
                        - enospc
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      wwn:
                        description: The drive's worldwide name, encoded as 16 bytes
                          hex string, prefixed by '0x'.
                        format_description: wwn
                        optional: 1
                        pattern: (?^:^(0x)[0-9a-fA-F]{16})
                        type: string
                    type: string
                  ipconfig[n]:
                    description: 'cloud-init: Specify IP addresses and gateways for
                      the corresponding interface.


                      IP addresses use CIDR notation, gateways are optional but need
                      an IP of the same type specified.


                      The special string ''dhcp'' can be used for IP addresses to
                      use DHCP, in which case no explicit

                      gateway should be provided.

                      For IPv6 the special string ''auto'' can be used to use stateless
                      autoconfiguration. This requires

                      cloud-init 19.4 or newer.


                      If cloud-init is enabled and neither an IPv4 nor an IPv6 address
                      is specified, it defaults to using

                      dhcp on IPv4.

                      '
                    format: pve-qm-ipconfig
                    type: string
                  ivshmem:
                    description: Inter-VM shared memory. Useful for direct communication
                      between VMs, or to the host.
                    format:
                      name:
                        description: The name of the file. Will be prefixed with 'pve-shm-'.
                          Default is the VMID. Will be deleted when the VM is stopped.
                        format_description: string
                        optional: 1
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      size:
                        description: The size of the file in MB.
                        minimum: 1
                        type: integer
                    type: string
                  keephugepages:
                    description: Use together with hugepages. If enabled, hugepages
                      will not not be deleted after VM shutdown and can be used for
                      subsequent starts.
                    type: boolean
                  keyboard:
                    description: Keyboard layout for VNC server. This option is generally
                      not required and is often better handled from within the guest
                      OS.
                    type: string
                  kvm:
                    description: Enable/disable KVM hardware virtualization.
                    type: boolean
                  localtime:
                    description: Set the real time clock (RTC) to local time. This
                      is enabled by default if the `ostype` indicates a Microsoft
                      Windows OS.
                    type: boolean
                  lock:
                    description: Lock/unlock the VM.
                    type: string
                  machine:
                    description: Specify the QEMU machine.
                    format:
                      enable-s3:
                        description: Enables S3 power state. Defaults to false beginning
                          with machine types 9.2+pve1, true before.
                        optional: 1
                        type: boolean
                      enable-s4:
                        description: Enables S4 power state. Defaults to false beginning
                          with machine types 9.2+pve1, true before.
                        optional: 1
                        type: boolean
                      type:
                        default_key: 1
                        description: Specifies the QEMU machine type.
                        format_description: machine type
                        maxLength: 40
                        optional: 1
                        pattern: (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)
                        type: string
                      viommu:
                        description: Enable and set guest vIOMMU variant (Intel vIOMMU
                          needs q35 to be set as machine type).
                        enum:
                        - intel
                        - virtio
                        optional: 1
                        type: string
                    type: string
                  memory:
                    description: Memory properties.
                    format:
                      current:
                        default: 512
                        default_key: 1
                        description: Current amount of online RAM for the VM in MiB.
                          This is the maximum available memory when you use the balloon
                          device.
                        minimum: 16
                        type: integer
                    type: string
                  migrate_downtime:
                    description: Set maximum tolerated downtime (in seconds) for migrations.
                      Should the migration not be able to converge in the very end,
                      because too much newly dirtied RAM needs to be transferred,
                      the limit will be increased automatically step-by-step until
                      migration can converge.
                    type: number
                  migrate_speed:
                    description: Set maximum speed (in MB/s) for migrations. Value
                      0 is no limit.
                    type: integer
                  name:
                    description: Set a name for the VM. Only used on the configuration
                      web interface.
                    format: dns-name
                    type: string
                  nameserver:
                    description: 'cloud-init: Sets DNS server IP address for a container.
                      Create will automatically use the setting from the host if neither
                      searchdomain nor nameserver are set.'
                    format: address-list
                    type: string
                  net[n]:
                    description: Specify network devices.
                    format:
                      bridge:
                        description: "Bridge to attach the network device to. The\
                          \ Proxmox VE standard bridge\nis called 'vmbr0'.\n\nIf you\
                          \ do not specify a bridge, we create a kvm user (NATed)\
                          \ network\ndevice, which provides DHCP and DNS services.\
                          \ The following addresses\nare used:\n\n 10.0.2.2   Gateway\n\
                          \ 10.0.2.3   DNS Server\n 10.0.2.4   SMB Server\n\nThe DHCP\
                          \ server assign addresses to the guest starting from 10.0.2.15.\n"
                        format: pve-bridge-id
                        format_description: bridge
                        optional: 1
                        type: string
                      e1000:
                        alias: macaddr
                        keyAlias: model
                      e1000-82540em:
                        alias: macaddr
                        keyAlias: model
                      e1000-82544gc:
                        alias: macaddr
                        keyAlias: model
                      e1000-82545em:
                        alias: macaddr
                        keyAlias: model
                      e1000e:
                        alias: macaddr
                        keyAlias: model
                      firewall:
                        description: Whether this interface should be protected by
                          the firewall.
                        optional: 1
                        type: boolean
                      i82551:
                        alias: macaddr
                        keyAlias: model
                      i82557b:
                        alias: macaddr
                        keyAlias: model
                      i82559er:
                        alias: macaddr
                        keyAlias: model
                      link_down:
                        description: Whether this interface should be disconnected
                          (like pulling the plug).
                        optional: 1
                        type: boolean
                      macaddr:
                        description: MAC address. That address must be unique within
                          your network. This is automatically generated if not specified.
                        format: mac-addr
                        format_description: XX:XX:XX:XX:XX:XX
                        optional: 1
                        type: string
                        verbose_description: A common MAC address with the I/G (Individual/Group)
                          bit not set.
                      model:
                        default_key: 1
                        description: Network Card Model. The 'virtio' model provides
                          the best performance with very low CPU overhead. If your
                          guest does not support this driver, it is usually best to
                          use 'e1000'.
                        enum:
                        - e1000
                        - e1000-82540em
                        - e1000-82544gc
                        - e1000-82545em
                        - e1000e
                        - i82551
                        - i82557b
                        - i82559er
                        - ne2k_isa
                        - ne2k_pci
                        - pcnet
                        - rtl8139
                        - virtio
                        - vmxnet3
                        type: string
                      mtu:
                        description: Force MTU, for VirtIO only. Set to '1' to use
                          the bridge MTU
                        maximum: 65520
                        minimum: 1
                        optional: 1
                        type: integer
                      ne2k_isa:
                        alias: macaddr
                        keyAlias: model
                      ne2k_pci:
                        alias: macaddr
                        keyAlias: model
                      pcnet:
                        alias: macaddr
                        keyAlias: model
                      queues:
                        description: Number of packet queues to be used on the device.
                        maximum: 64
                        minimum: 0
                        optional: 1
                        type: integer
                      rate:
                        description: Rate limit in mbps (megabytes per second) as
                          floating point number.
                        minimum: 0
                        optional: 1
                        type: number
                      rtl8139:
                        alias: macaddr
                        keyAlias: model
                      tag:
                        description: VLAN tag to apply to packets on this interface.
                        maximum: 4094
                        minimum: 1
                        optional: 1
                        type: integer
                      trunks:
                        description: VLAN trunks to pass through this interface.
                        format_description: vlanid[;vlanid...]
                        optional: 1
                        pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                        type: string
                      virtio:
                        alias: macaddr
                        keyAlias: model
                      vmxnet3:
                        alias: macaddr
                        keyAlias: model
                    type: string
                  numa:
                    description: Enable/disable NUMA.
                    type: boolean
                  numa[n]:
                    description: NUMA topology.
                    format:
                      cpus:
                        description: CPUs accessing this NUMA node.
                        format_description: id[-id];...
                        pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                        type: string
                      hostnodes:
                        description: Host NUMA nodes to use.
                        format_description: id[-id];...
                        optional: 1
                        pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                        type: string
                      memory:
                        description: Amount of memory this NUMA node provides.
                        optional: 1
                        type: number
                      policy:
                        description: NUMA allocation policy.
                        enum:
                        - preferred
                        - bind
                        - interleave
                        optional: 1
                        type: string
                    type: string
                  onboot:
                    description: Specifies whether a VM will be started during system
                      bootup.
                    type: boolean
                  ostype:
                    description: Specify guest operating system.
                    type: string
                  parallel[n]:
                    description: Map host parallel devices (n is 0 to 2).
                    type: string
                  protection:
                    description: Sets the protection flag of the VM. This will disable
                      the remove VM and remove disk operations.
                    type: boolean
                  reboot:
                    description: Allow reboot. If set to '0' the VM exit on reboot.
                    type: boolean
                  rng0:
                    description: Configure a VirtIO-based Random Number Generator.
                    format: pve-qm-rng
                    type: string
                  sata[n]:
                    description: Use volume as SATA hard disk or CD-ROM (n is 0 to
                      5).
                    format:
                      aio:
                        description: AIO type to use.
                        enum:
                        - native
                        - threads
                        - io_uring
                        optional: 1
                        type: string
                      backup:
                        description: Whether the drive should be included when making
                          backups.
                        optional: 1
                        type: boolean
                      bps:
                        description: Maximum r/w speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_rd:
                        description: Maximum read speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_rd_length:
                        alias: bps_rd_max_length
                      bps_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_wr:
                        description: Maximum write speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_wr_length:
                        alias: bps_wr_max_length
                      bps_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      cache:
                        description: The drive's cache mode
                        enum:
                        - none
                        - writethrough
                        - writeback
                        - unsafe
                        - directsync
                        optional: 1
                        type: string
                      cyls:
                        description: Force the drive's physical geometry to have a
                          specific cylinder count.
                        optional: 1
                        type: integer
                      detect_zeroes:
                        description: Controls whether to detect and try to optimize
                          writes of zeroes.
                        optional: 1
                        type: boolean
                      discard:
                        description: Controls whether to pass discard/trim requests
                          to the underlying storage.
                        enum:
                        - ignore
                        - 'on'
                        optional: 1
                        type: string
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id-or-qm-path
                        format_description: volume
                        type: string
                      format:
                        description: The drive's backing file's data format.
                        enum:
                        - raw
                        - qcow
                        - qed
                        - qcow2
                        - vmdk
                        - cloop
                        optional: 1
                        type: string
                      heads:
                        description: Force the drive's physical geometry to have a
                          specific head count.
                        optional: 1
                        type: integer
                      iops:
                        description: Maximum r/w I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max:
                        description: Maximum unthrottled r/w I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_rd:
                        description: Maximum read I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_length:
                        alias: iops_rd_max_length
                      iops_rd_max:
                        description: Maximum unthrottled read I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_wr:
                        description: Maximum write I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_length:
                        alias: iops_wr_max_length
                      iops_wr_max:
                        description: Maximum unthrottled write I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      mbps:
                        description: Maximum r/w speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_max:
                        description: Maximum unthrottled r/w pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd:
                        description: Maximum read speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd_max:
                        description: Maximum unthrottled read pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr:
                        description: Maximum write speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr_max:
                        description: Maximum unthrottled write pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      media:
                        default: disk
                        description: The drive's media type.
                        enum:
                        - cdrom
                        - disk
                        optional: 1
                        type: string
                      replicate:
                        default: 1
                        description: Whether the drive should considered for replication
                          jobs.
                        optional: 1
                        type: boolean
                      rerror:
                        description: Read error action.
                        enum:
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      secs:
                        description: Force the drive's physical geometry to have a
                          specific sector count.
                        optional: 1
                        type: integer
                      serial:
                        description: The drive's reported serial number, url-encoded,
                          up to 20 bytes long.
                        format: urlencoded
                        format_description: serial
                        maxLength: 60
                        optional: 1
                        type: string
                      shared:
                        default: 0
                        description: Mark this locally-managed volume as available
                          on all nodes
                        optional: 1
                        type: boolean
                        verbose_description: 'Mark this locally-managed volume as
                          available on all nodes.


                          WARNING: This option does not share the volume automatically,
                          it assumes it is shared already!'
                      size:
                        description: Disk size. This is purely informational and has
                          no effect.
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      snapshot:
                        description: Controls qemu's snapshot mode feature. If activated,
                          changes made to the disk are temporary and will be discarded
                          when the VM is shutdown.
                        optional: 1
                        type: boolean
                      ssd:
                        description: Whether to expose this drive as an SSD, rather
                          than a rotational hard disk.
                        optional: 1
                        type: boolean
                      trans:
                        description: Force disk geometry bios translation mode.
                        enum:
                        - none
                        - lba
                        - auto
                        optional: 1
                        type: string
                      volume:
                        alias: file
                      werror:
                        description: Write error action.
                        enum:
                        - enospc
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      wwn:
                        description: The drive's worldwide name, encoded as 16 bytes
                          hex string, prefixed by '0x'.
                        format_description: wwn
                        optional: 1
                        pattern: (?^:^(0x)[0-9a-fA-F]{16})
                        type: string
                    type: string
                  scsi[n]:
                    description: Use volume as SCSI hard disk or CD-ROM (n is 0 to
                      30).
                    format:
                      aio:
                        description: AIO type to use.
                        enum:
                        - native
                        - threads
                        - io_uring
                        optional: 1
                        type: string
                      backup:
                        description: Whether the drive should be included when making
                          backups.
                        optional: 1
                        type: boolean
                      bps:
                        description: Maximum r/w speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_rd:
                        description: Maximum read speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_rd_length:
                        alias: bps_rd_max_length
                      bps_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_wr:
                        description: Maximum write speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_wr_length:
                        alias: bps_wr_max_length
                      bps_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      cache:
                        description: The drive's cache mode
                        enum:
                        - none
                        - writethrough
                        - writeback
                        - unsafe
                        - directsync
                        optional: 1
                        type: string
                      cyls:
                        description: Force the drive's physical geometry to have a
                          specific cylinder count.
                        optional: 1
                        type: integer
                      detect_zeroes:
                        description: Controls whether to detect and try to optimize
                          writes of zeroes.
                        optional: 1
                        type: boolean
                      discard:
                        description: Controls whether to pass discard/trim requests
                          to the underlying storage.
                        enum:
                        - ignore
                        - 'on'
                        optional: 1
                        type: string
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id-or-qm-path
                        format_description: volume
                        type: string
                      format:
                        description: The drive's backing file's data format.
                        enum:
                        - raw
                        - qcow
                        - qed
                        - qcow2
                        - vmdk
                        - cloop
                        optional: 1
                        type: string
                      heads:
                        description: Force the drive's physical geometry to have a
                          specific head count.
                        optional: 1
                        type: integer
                      iops:
                        description: Maximum r/w I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max:
                        description: Maximum unthrottled r/w I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_rd:
                        description: Maximum read I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_length:
                        alias: iops_rd_max_length
                      iops_rd_max:
                        description: Maximum unthrottled read I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_wr:
                        description: Maximum write I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_length:
                        alias: iops_wr_max_length
                      iops_wr_max:
                        description: Maximum unthrottled write I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iothread:
                        description: Whether to use iothreads for this drive
                        optional: 1
                        type: boolean
                      mbps:
                        description: Maximum r/w speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_max:
                        description: Maximum unthrottled r/w pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd:
                        description: Maximum read speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd_max:
                        description: Maximum unthrottled read pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr:
                        description: Maximum write speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr_max:
                        description: Maximum unthrottled write pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      media:
                        default: disk
                        description: The drive's media type.
                        enum:
                        - cdrom
                        - disk
                        optional: 1
                        type: string
                      product:
                        description: The drive's product name, up to 16 bytes long.
                        format_description: product
                        optional: 1
                        pattern: '[A-Za-z0-9\-_\s]{,16}'
                        type: string
                      queues:
                        description: Number of queues.
                        minimum: 2
                        optional: 1
                        type: integer
                      replicate:
                        default: 1
                        description: Whether the drive should considered for replication
                          jobs.
                        optional: 1
                        type: boolean
                      rerror:
                        description: Read error action.
                        enum:
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      ro:
                        description: Whether the drive is read-only.
                        optional: 1
                        type: boolean
                      scsiblock:
                        default: 0
                        description: 'whether to use scsi-block for full passthrough
                          of host block device


                          WARNING: can lead to I/O errors in combination with low
                          memory or high memory fragmentation on host'
                        optional: 1
                        type: boolean
                      secs:
                        description: Force the drive's physical geometry to have a
                          specific sector count.
                        optional: 1
                        type: integer
                      serial:
                        description: The drive's reported serial number, url-encoded,
                          up to 20 bytes long.
                        format: urlencoded
                        format_description: serial
                        maxLength: 60
                        optional: 1
                        type: string
                      shared:
                        default: 0
                        description: Mark this locally-managed volume as available
                          on all nodes
                        optional: 1
                        type: boolean
                        verbose_description: 'Mark this locally-managed volume as
                          available on all nodes.


                          WARNING: This option does not share the volume automatically,
                          it assumes it is shared already!'
                      size:
                        description: Disk size. This is purely informational and has
                          no effect.
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      snapshot:
                        description: Controls qemu's snapshot mode feature. If activated,
                          changes made to the disk are temporary and will be discarded
                          when the VM is shutdown.
                        optional: 1
                        type: boolean
                      ssd:
                        description: Whether to expose this drive as an SSD, rather
                          than a rotational hard disk.
                        optional: 1
                        type: boolean
                      trans:
                        description: Force disk geometry bios translation mode.
                        enum:
                        - none
                        - lba
                        - auto
                        optional: 1
                        type: string
                      vendor:
                        description: The drive's vendor name, up to 8 bytes long.
                        format_description: vendor
                        optional: 1
                        pattern: '[A-Za-z0-9\-_\s]{,8}'
                        type: string
                      volume:
                        alias: file
                      werror:
                        description: Write error action.
                        enum:
                        - enospc
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      wwn:
                        description: The drive's worldwide name, encoded as 16 bytes
                          hex string, prefixed by '0x'.
                        format_description: wwn
                        optional: 1
                        pattern: (?^:^(0x)[0-9a-fA-F]{16})
                        type: string
                    type: string
                  scsihw:
                    description: SCSI controller model
                    type: string
                  searchdomain:
                    description: 'cloud-init: Sets DNS search domains for a container.
                      Create will automatically use the setting from the host if neither
                      searchdomain nor nameserver are set.'
                    type: string
                  serial[n]:
                    description: Create a serial device inside the VM (n is 0 to 3)
                    type: string
                  shares:
                    description: Amount of memory shares for auto-ballooning. The
                      larger the number is, the more memory this VM gets. Number is
                      relative to weights of all other running VMs. Using zero disables
                      auto-ballooning. Auto-ballooning is done by pvestatd.
                    type: integer
                  smbios1:
                    description: Specify SMBIOS type 1 fields.
                    format: pve-qm-smbios1
                    type: string
                  smp:
                    description: The number of CPUs. Please use option -sockets instead.
                    type: integer
                  sockets:
                    description: The number of CPU sockets.
                    type: integer
                  spice_enhancements:
                    description: Configure additional enhancements for SPICE.
                    format:
                      foldersharing:
                        default: '0'
                        description: Enable folder sharing via SPICE. Needs Spice-WebDAV
                          daemon installed in the VM.
                        optional: 1
                        type: boolean
                      videostreaming:
                        default: 'off'
                        description: Enable video streaming. Uses compression for
                          detected video streams.
                        enum:
                        - 'off'
                        - all
                        - filter
                        optional: 1
                        type: string
                    type: string
                  sshkeys:
                    description: 'cloud-init: Setup public SSH keys (one key per line,
                      OpenSSH format).'
                    format: urlencoded
                    type: string
                  startdate:
                    description: Set the initial date of the real time clock. Valid
                      format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.
                    type: string
                  startup:
                    description: Startup and shutdown behavior. Order is a non-negative
                      number defining the general startup order. Shutdown in done
                      with reverse ordering. Additionally you can set the 'up' or
                      'down' delay in seconds, which specifies a delay to wait before
                      the next VM is started or stopped.
                    format: pve-startup-order
                    type: string
                  tablet:
                    description: Enable/disable the USB tablet device.
                    type: boolean
                  tags:
                    description: Tags of the VM. This is only meta information.
                    format: pve-tag-list
                    type: string
                  tdf:
                    description: Enable/disable time drift fix.
                    type: boolean
                  template:
                    description: Enable/disable Template.
                    type: boolean
                  tpmstate0:
                    description: Configure a Disk for storing TPM state. The format
                      is fixed to 'raw'.
                    format:
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id-or-qm-path
                        format_description: volume
                        type: string
                      size:
                        description: Disk size. This is purely informational and has
                          no effect.
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      version:
                        default: v1.2
                        description: The TPM interface version. v2.0 is newer and
                          should be preferred. Note that this cannot be changed later
                          on.
                        enum:
                        - v1.2
                        - v2.0
                        optional: 1
                        type: string
                      volume:
                        alias: file
                    type: string
                  unused[n]:
                    description: Reference to unused volumes. This is used internally,
                      and should not be modified manually.
                    format:
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id
                        format_description: volume
                        type: string
                      volume:
                        alias: file
                    type: string
                  usb[n]:
                    description: Configure an USB device (n is 0 to 4, for machine
                      version >= 7.1 and ostype l26 or windows > 7, n can be up to
                      14).
                    format:
                      host:
                        default_key: 1
                        description: "The Host USB device or port or the value 'spice'.\
                          \ HOSTUSBDEVICE syntax is:\n\n 'bus-port(.port)*' (decimal\
                          \ numbers) or\n 'vendor_id:product_id' (hexadecimal numbers)\
                          \ or\n 'spice'\n\nYou can use the 'lsusb -t' command to\
                          \ list existing usb devices.\n\nNOTE: This option allows\
                          \ direct access to host hardware. So it is no longer possible\
                          \ to migrate such\nmachines - use with special care.\n\n\
                          The value 'spice' can be used to add a usb redirection devices\
                          \ for spice.\n\nEither this or the 'mapping' key must be\
                          \ set.\n"
                        format_description: HOSTUSBDEVICE|spice
                        optional: 1
                        pattern: (?^:(?:(?:(?^:(0x)?([0-9A-Fa-f]{4}):(0x)?([0-9A-Fa-f]{4})))|(?:(?^:(\d+)\-(\d+(\.\d+)*)))|[Ss][Pp][Ii][Cc][Ee]))
                        type: string
                      mapping:
                        description: The ID of a cluster wide mapping. Either this
                          or the default-key 'host' must be set.
                        format: pve-configid
                        format_description: mapping-id
                        optional: 1
                        type: string
                      usb3:
                        default: 0
                        description: Specifies whether if given host option is a USB3
                          device or port. For modern guests (machine version >= 7.1
                          and ostype l26 and windows > 7), this flag is irrelevant
                          (all devices are plugged into a xhci controller).
                        optional: 1
                        type: boolean
                    type: string
                  vcpus:
                    description: Number of hotplugged vcpus.
                    type: integer
                  vga:
                    description: Configure the VGA hardware.
                    format:
                      clipboard:
                        description: Enable a specific clipboard. If not set, depending
                          on the display type the SPICE one will be added. Migration
                          with VNC clipboard is not yet supported!
                        enum:
                        - vnc
                        optional: 1
                        type: string
                      memory:
                        description: Sets the VGA memory (in MiB). Has no effect with
                          serial display.
                        maximum: 512
                        minimum: 4
                        optional: 1
                        type: integer
                      type:
                        default: std
                        default_key: 1
                        description: Select the VGA type. Using type 'cirrus' is not
                          recommended.
                        enum:
                        - cirrus
                        - qxl
                        - qxl2
                        - qxl3
                        - qxl4
                        - none
                        - serial0
                        - serial1
                        - serial2
                        - serial3
                        - std
                        - virtio
                        - virtio-gl
                        - vmware
                        optional: 1
                        type: string
                    type: string
                  virtio[n]:
                    description: Use volume as VIRTIO hard disk (n is 0 to 15).
                    format:
                      aio:
                        description: AIO type to use.
                        enum:
                        - native
                        - threads
                        - io_uring
                        optional: 1
                        type: string
                      backup:
                        description: Whether the drive should be included when making
                          backups.
                        optional: 1
                        type: boolean
                      bps:
                        description: Maximum r/w speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_rd:
                        description: Maximum read speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_rd_length:
                        alias: bps_rd_max_length
                      bps_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      bps_wr:
                        description: Maximum write speed in bytes per second.
                        format_description: bps
                        optional: 1
                        type: integer
                      bps_wr_length:
                        alias: bps_wr_max_length
                      bps_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      cache:
                        description: The drive's cache mode
                        enum:
                        - none
                        - writethrough
                        - writeback
                        - unsafe
                        - directsync
                        optional: 1
                        type: string
                      cyls:
                        description: Force the drive's physical geometry to have a
                          specific cylinder count.
                        optional: 1
                        type: integer
                      detect_zeroes:
                        description: Controls whether to detect and try to optimize
                          writes of zeroes.
                        optional: 1
                        type: boolean
                      discard:
                        description: Controls whether to pass discard/trim requests
                          to the underlying storage.
                        enum:
                        - ignore
                        - 'on'
                        optional: 1
                        type: string
                      file:
                        default_key: 1
                        description: The drive's backing volume.
                        format: pve-volume-id-or-qm-path
                        format_description: volume
                        type: string
                      format:
                        description: The drive's backing file's data format.
                        enum:
                        - raw
                        - qcow
                        - qed
                        - qcow2
                        - vmdk
                        - cloop
                        optional: 1
                        type: string
                      heads:
                        description: Force the drive's physical geometry to have a
                          specific head count.
                        optional: 1
                        type: integer
                      iops:
                        description: Maximum r/w I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max:
                        description: Maximum unthrottled r/w I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_max_length:
                        description: Maximum length of I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_rd:
                        description: Maximum read I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_length:
                        alias: iops_rd_max_length
                      iops_rd_max:
                        description: Maximum unthrottled read I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_rd_max_length:
                        description: Maximum length of read I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iops_wr:
                        description: Maximum write I/O in operations per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_length:
                        alias: iops_wr_max_length
                      iops_wr_max:
                        description: Maximum unthrottled write I/O pool in operations
                          per second.
                        format_description: iops
                        optional: 1
                        type: integer
                      iops_wr_max_length:
                        description: Maximum length of write I/O bursts in seconds.
                        format_description: seconds
                        minimum: 1
                        optional: 1
                        type: integer
                      iothread:
                        description: Whether to use iothreads for this drive
                        optional: 1
                        type: boolean
                      mbps:
                        description: Maximum r/w speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_max:
                        description: Maximum unthrottled r/w pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd:
                        description: Maximum read speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_rd_max:
                        description: Maximum unthrottled read pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr:
                        description: Maximum write speed in megabytes per second.
                        format_description: mbps
                        optional: 1
                        type: number
                      mbps_wr_max:
                        description: Maximum unthrottled write pool in megabytes per
                          second.
                        format_description: mbps
                        optional: 1
                        type: number
                      media:
                        default: disk
                        description: The drive's media type.
                        enum:
                        - cdrom
                        - disk
                        optional: 1
                        type: string
                      replicate:
                        default: 1
                        description: Whether the drive should considered for replication
                          jobs.
                        optional: 1
                        type: boolean
                      rerror:
                        description: Read error action.
                        enum:
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                      ro:
                        description: Whether the drive is read-only.
                        optional: 1
                        type: boolean
                      secs:
                        description: Force the drive's physical geometry to have a
                          specific sector count.
                        optional: 1
                        type: integer
                      serial:
                        description: The drive's reported serial number, url-encoded,
                          up to 20 bytes long.
                        format: urlencoded
                        format_description: serial
                        maxLength: 60
                        optional: 1
                        type: string
                      shared:
                        default: 0
                        description: Mark this locally-managed volume as available
                          on all nodes
                        optional: 1
                        type: boolean
                        verbose_description: 'Mark this locally-managed volume as
                          available on all nodes.


                          WARNING: This option does not share the volume automatically,
                          it assumes it is shared already!'
                      size:
                        description: Disk size. This is purely informational and has
                          no effect.
                        format: disk-size
                        format_description: DiskSize
                        optional: 1
                        type: string
                      snapshot:
                        description: Controls qemu's snapshot mode feature. If activated,
                          changes made to the disk are temporary and will be discarded
                          when the VM is shutdown.
                        optional: 1
                        type: boolean
                      trans:
                        description: Force disk geometry bios translation mode.
                        enum:
                        - none
                        - lba
                        - auto
                        optional: 1
                        type: string
                      volume:
                        alias: file
                      werror:
                        description: Write error action.
                        enum:
                        - enospc
                        - ignore
                        - report
                        - stop
                        optional: 1
                        type: string
                    type: string
                  virtiofs[n]:
                    description: Configuration for sharing a directory between host
                      and guest using Virtio-fs.
                    format:
                      cache:
                        default: auto
                        description: The caching policy the file system should use
                          (auto, always, metadata, never).
                        enum:
                        - auto
                        - always
                        - metadata
                        - never
                        optional: 1
                        type: string
                      direct-io:
                        default: 0
                        description: Honor the O_DIRECT flag passed down by guest
                          applications.
                        optional: 1
                        type: boolean
                      dirid:
                        default_key: 1
                        description: Mapping identifier of the directory mapping to
                          be shared with the guest. Also used as a mount tag inside
                          the VM.
                        format: pve-configid
                        format_description: mapping-id
                        type: string
                      expose-acl:
                        default: 0
                        description: Enable support for POSIX ACLs (enabled ACL implies
                          xattr) for this mount.
                        optional: 1
                        type: boolean
                      expose-xattr:
                        default: 0
                        description: Enable support for extended attributes for this
                          mount.
                        optional: 1
                        type: boolean
                    type: string
                  vmgenid:
                    description: Set VM Generation ID. Use '1' to autogenerate on
                      create or update, pass '0' to disable explicitly.
                    type: string
                  vmstatestorage:
                    description: Default storage for VM state volumes/files.
                    format: pve-storage-id
                    type: string
                  watchdog:
                    description: Create a virtual hardware watchdog device.
                    format: pve-qm-watchdog
                    type: string
                type: object
          description: The VM configuration.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the virtual machine configuration with pending configuration changes
        applied. Set the 'current' parameter to get the current configuration instead.
      tags:
      - Nodes
    post:
      description: Set virtual machine options (asynchronous API).
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acpi:
                  default: 1
                  description: Enable/disable ACPI.
                  type: boolean
                affinity:
                  description: 'List of host cores used to execute guest processes,
                    for example: 0,5,8-11'
                  format: pve-cpuset
                  type: string
                agent:
                  description: Enable/disable communication with the QEMU Guest Agent
                    and its properties.
                  format:
                    enabled:
                      default: 0
                      default_key: 1
                      description: Enable/disable communication with a QEMU Guest
                        Agent (QGA) running in the VM.
                      type: boolean
                    freeze-fs-on-backup:
                      default: 1
                      description: Freeze/thaw guest filesystems on backup for consistency.
                      optional: 1
                      type: boolean
                    fstrim_cloned_disks:
                      default: 0
                      description: Run fstrim after moving a disk or migrating the
                        VM.
                      optional: 1
                      type: boolean
                    type:
                      default: virtio
                      description: Select the agent type
                      enum:
                      - virtio
                      - isa
                      optional: 1
                      type: string
                  type: string
                amd-sev:
                  description: Secure Encrypted Virtualization (SEV) features by AMD
                    CPUs
                  format: pve-qemu-sev-fmt
                  type: string
                arch:
                  description: Virtual processor architecture. Defaults to the host.
                  enum:
                  - x86_64
                  - aarch64
                  type: string
                args:
                  description: Arbitrary arguments passed to kvm.
                  type: string
                audio0:
                  description: Configure a audio device, useful in combination with
                    QXL/Spice.
                  format:
                    device:
                      description: Configure an audio device.
                      enum:
                      - ich9-intel-hda
                      - intel-hda
                      - AC97
                      type: string
                    driver:
                      default: spice
                      description: Driver backend for the audio device.
                      enum:
                      - spice
                      - none
                      optional: 1
                      type: string
                  type: string
                autostart:
                  default: 0
                  description: Automatic restart after crash (currently ignored).
                  type: boolean
                background_delay:
                  description: Time to wait for the task to finish. We return 'null'
                    if the task finish within that time.
                  maximum: 30
                  minimum: 1
                  type: integer
                balloon:
                  description: Amount of target RAM for the VM in MiB. Using zero
                    disables the ballon driver.
                  minimum: 0
                  type: integer
                bios:
                  default: seabios
                  description: Select BIOS implementation.
                  enum:
                  - seabios
                  - ovmf
                  type: string
                boot:
                  description: Specify guest boot order. Use the 'order=' sub-property
                    as usage with no key or 'legacy=' is deprecated.
                  format: pve-qm-boot
                  type: string
                bootdisk:
                  description: 'Enable booting from specified disk. Deprecated: Use
                    ''boot: order=foo;bar'' instead.'
                  format: pve-qm-bootdisk
                  pattern: (ide|sata|scsi|virtio)\d+
                  type: string
                cdrom:
                  description: This is an alias for option -ide2
                  format: pve-qm-ide
                  type: string
                cicustom:
                  description: 'cloud-init: Specify custom files to replace the automatically
                    generated ones at start.'
                  format: pve-qm-cicustom
                  type: string
                cipassword:
                  description: 'cloud-init: Password to assign the user. Using this
                    is generally not recommended. Use ssh keys instead. Also note
                    that older cloud-init versions do not support hashed passwords.'
                  type: string
                citype:
                  description: Specifies the cloud-init configuration format. The
                    default depends on the configured operating system type (`ostype`.
                    We use the `nocloud` format for Linux, and `configdrive2` for
                    windows.
                  enum:
                  - configdrive2
                  - nocloud
                  - opennebula
                  type: string
                ciupgrade:
                  default: 1
                  description: 'cloud-init: do an automatic package upgrade after
                    the first boot.'
                  type: boolean
                ciuser:
                  description: 'cloud-init: User name to change ssh keys and password
                    for instead of the image''s configured default user.'
                  type: string
                cores:
                  default: 1
                  description: The number of cores per socket.
                  minimum: 1
                  type: integer
                cpu:
                  description: Emulated CPU type.
                  format: pve-vm-cpu-conf
                  type: string
                cpulimit:
                  default: 0
                  description: Limit of CPU usage.
                  maximum: 128
                  minimum: 0
                  type: number
                cpuunits:
                  $ref: '#/components/schemas/ProxmoxVmId'
                  default: 'cgroup v1: 1024, cgroup v2: 100'
                  description: CPU weight for a VM, will be clamped to [1, 10000]
                    in cgroup v2.
                  maximum: 262144
                  minimum: 1
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                description:
                  description: Description for the VM. Shown in the web-interface
                    VM's summary. This is saved as comment inside the configuration
                    file.
                  maxLength: 8192
                  type: string
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA1 digest. This can be used to prevent concurrent modifications.
                  maxLength: 40
                  type: string
                efidisk0:
                  description: Configure a disk for storing EFI vars. Use the special
                    syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that
                    SIZE_IN_GiB is ignored here and that the default EFI vars are
                    copied to the volume instead. Use STORAGE_ID:0 and the 'import-from'
                    parameter to import from an existing volume.
                  format:
                    efitype:
                      default: 2m
                      description: Size and type of the OVMF EFI vars. '4m' is newer
                        and recommended, and required for Secure Boot. For backwards
                        compatibility, '2m' is used if not otherwise specified. Ignored
                        for VMs with arch=aarch64 (ARM).
                      enum:
                      - 2m
                      - 4m
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    pre-enrolled-keys:
                      default: 0
                      description: Use am EFI vars template with distribution-specific
                        and Microsoft Standard keys enrolled, if used with 'efitype=4m'.
                        Note that this will enable Secure Boot by default, though
                        it can still be turned off from within the VM.
                      optional: 1
                      type: boolean
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      alias: file
                  type: string
                force:
                  description: Force physical removal. Without this, we simple remove
                    the disk from the config file and create an additional configuration
                    entry called 'unused[n]', which contains the volume ID. Unlink
                    of unused[n] always cause physical removal.
                  type: boolean
                freeze:
                  description: Freeze CPU at startup (use 'c' monitor command to start
                    execution).
                  type: boolean
                hookscript:
                  description: Script that will be executed during various steps in
                    the vms lifetime.
                  format: pve-volume-id
                  type: string
                hostpci[n]:
                  description: Map host PCI devices into guest.
                  format: pve-qm-hostpci
                  type: string
                hotplug:
                  default: network,disk,usb
                  description: 'Selectively enable hotplug features. This is a comma
                    separated list of hotplug features: ''network'', ''disk'', ''cpu'',
                    ''memory'', ''usb'' and ''cloudinit''. Use ''0'' to disable hotplug
                    completely. Using ''1'' as value is an alias for the default `network,disk,usb`.
                    USB hotplugging is possible for guests with machine version >=
                    7.1 and ostype l26 or windows > 7.'
                  format: pve-hotplug-features
                  type: string
                hugepages:
                  description: Enable/disable hugepages memory.
                  enum:
                  - any
                  - '2'
                  - '1024'
                  type: string
                ide[n]:
                  description: Use volume as IDE hard disk or CD-ROM (n is 0 to 3).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    model:
                      description: The drive's reported model name, url-encoded, up
                        to 40 bytes long.
                      format: urlencoded
                      format_description: model
                      maxLength: 120
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                import-working-storage:
                  description: A file-based storage with 'images' content-type enabled,
                    which is used as an intermediary extraction storage during import.
                    Defaults to the source storage.
                  format: pve-storage-id
                  type: string
                ipconfig[n]:
                  description: 'cloud-init: Specify IP addresses and gateways for
                    the corresponding interface.


                    IP addresses use CIDR notation, gateways are optional but need
                    an IP of the same type specified.


                    The special string ''dhcp'' can be used for IP addresses to use
                    DHCP, in which case no explicit

                    gateway should be provided.

                    For IPv6 the special string ''auto'' can be used to use stateless
                    autoconfiguration. This requires

                    cloud-init 19.4 or newer.


                    If cloud-init is enabled and neither an IPv4 nor an IPv6 address
                    is specified, it defaults to using

                    dhcp on IPv4.

                    '
                  format: pve-qm-ipconfig
                  type: string
                ivshmem:
                  description: Inter-VM shared memory. Useful for direct communication
                    between VMs, or to the host.
                  format:
                    name:
                      description: The name of the file. Will be prefixed with 'pve-shm-'.
                        Default is the VMID. Will be deleted when the VM is stopped.
                      format_description: string
                      optional: 1
                      pattern: '[a-zA-Z0-9\-]+'
                      type: string
                    size:
                      description: The size of the file in MB.
                      minimum: 1
                      type: integer
                  type: string
                keephugepages:
                  default: 0
                  description: Use together with hugepages. If enabled, hugepages
                    will not not be deleted after VM shutdown and can be used for
                    subsequent starts.
                  type: boolean
                keyboard:
                  default: null
                  description: Keyboard layout for VNC server. This option is generally
                    not required and is often better handled from within the guest
                    OS.
                  enum:
                  - de
                  - de-ch
                  - da
                  - en-gb
                  - en-us
                  - es
                  - fi
                  - fr
                  - fr-be
                  - fr-ca
                  - fr-ch
                  - hu
                  - is
                  - it
                  - ja
                  - lt
                  - mk
                  - nl
                  - 'no'
                  - pl
                  - pt
                  - pt-br
                  - sv
                  - sl
                  - tr
                  type: string
                kvm:
                  default: 1
                  description: Enable/disable KVM hardware virtualization.
                  type: boolean
                localtime:
                  description: Set the real time clock (RTC) to local time. This is
                    enabled by default if the `ostype` indicates a Microsoft Windows
                    OS.
                  type: boolean
                lock:
                  description: Lock/unlock the VM.
                  enum:
                  - backup
                  - clone
                  - create
                  - migrate
                  - rollback
                  - snapshot
                  - snapshot-delete
                  - suspending
                  - suspended
                  type: string
                machine:
                  description: Specify the QEMU machine.
                  format:
                    enable-s3:
                      description: Enables S3 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    enable-s4:
                      description: Enables S4 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    type:
                      default_key: 1
                      description: Specifies the QEMU machine type.
                      format_description: machine type
                      maxLength: 40
                      optional: 1
                      pattern: (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)
                      type: string
                    viommu:
                      description: Enable and set guest vIOMMU variant (Intel vIOMMU
                        needs q35 to be set as machine type).
                      enum:
                      - intel
                      - virtio
                      optional: 1
                      type: string
                  type: string
                memory:
                  description: Memory properties.
                  format:
                    current:
                      default: 512
                      default_key: 1
                      description: Current amount of online RAM for the VM in MiB.
                        This is the maximum available memory when you use the balloon
                        device.
                      minimum: 16
                      type: integer
                  type: string
                migrate_downtime:
                  default: 0.1
                  description: Set maximum tolerated downtime (in seconds) for migrations.
                    Should the migration not be able to converge in the very end,
                    because too much newly dirtied RAM needs to be transferred, the
                    limit will be increased automatically step-by-step until migration
                    can converge.
                  minimum: 0
                  type: number
                migrate_speed:
                  default: 0
                  description: Set maximum speed (in MB/s) for migrations. Value 0
                    is no limit.
                  minimum: 0
                  type: integer
                name:
                  description: Set a name for the VM. Only used on the configuration
                    web interface.
                  format: dns-name
                  type: string
                nameserver:
                  description: 'cloud-init: Sets DNS server IP address for a container.
                    Create will automatically use the setting from the host if neither
                    searchdomain nor nameserver are set.'
                  format: address-list
                  type: string
                net[n]:
                  description: Specify network devices.
                  format:
                    bridge:
                      description: "Bridge to attach the network device to. The Proxmox\
                        \ VE standard bridge\nis called 'vmbr0'.\n\nIf you do not\
                        \ specify a bridge, we create a kvm user (NATed) network\n\
                        device, which provides DHCP and DNS services. The following\
                        \ addresses\nare used:\n\n 10.0.2.2   Gateway\n 10.0.2.3 \
                        \  DNS Server\n 10.0.2.4   SMB Server\n\nThe DHCP server assign\
                        \ addresses to the guest starting from 10.0.2.15.\n"
                      format: pve-bridge-id
                      format_description: bridge
                      optional: 1
                      type: string
                    e1000:
                      alias: macaddr
                      keyAlias: model
                    e1000-82540em:
                      alias: macaddr
                      keyAlias: model
                    e1000-82544gc:
                      alias: macaddr
                      keyAlias: model
                    e1000-82545em:
                      alias: macaddr
                      keyAlias: model
                    e1000e:
                      alias: macaddr
                      keyAlias: model
                    firewall:
                      description: Whether this interface should be protected by the
                        firewall.
                      optional: 1
                      type: boolean
                    i82551:
                      alias: macaddr
                      keyAlias: model
                    i82557b:
                      alias: macaddr
                      keyAlias: model
                    i82559er:
                      alias: macaddr
                      keyAlias: model
                    link_down:
                      description: Whether this interface should be disconnected (like
                        pulling the plug).
                      optional: 1
                      type: boolean
                    macaddr:
                      description: MAC address. That address must be unique within
                        your network. This is automatically generated if not specified.
                      format: mac-addr
                      format_description: XX:XX:XX:XX:XX:XX
                      optional: 1
                      type: string
                      verbose_description: A common MAC address with the I/G (Individual/Group)
                        bit not set.
                    model:
                      default_key: 1
                      description: Network Card Model. The 'virtio' model provides
                        the best performance with very low CPU overhead. If your guest
                        does not support this driver, it is usually best to use 'e1000'.
                      enum:
                      - e1000
                      - e1000-82540em
                      - e1000-82544gc
                      - e1000-82545em
                      - e1000e
                      - i82551
                      - i82557b
                      - i82559er
                      - ne2k_isa
                      - ne2k_pci
                      - pcnet
                      - rtl8139
                      - virtio
                      - vmxnet3
                      type: string
                    mtu:
                      description: Force MTU, for VirtIO only. Set to '1' to use the
                        bridge MTU
                      maximum: 65520
                      minimum: 1
                      optional: 1
                      type: integer
                    ne2k_isa:
                      alias: macaddr
                      keyAlias: model
                    ne2k_pci:
                      alias: macaddr
                      keyAlias: model
                    pcnet:
                      alias: macaddr
                      keyAlias: model
                    queues:
                      description: Number of packet queues to be used on the device.
                      maximum: 64
                      minimum: 0
                      optional: 1
                      type: integer
                    rate:
                      description: Rate limit in mbps (megabytes per second) as floating
                        point number.
                      minimum: 0
                      optional: 1
                      type: number
                    rtl8139:
                      alias: macaddr
                      keyAlias: model
                    tag:
                      description: VLAN tag to apply to packets on this interface.
                      maximum: 4094
                      minimum: 1
                      optional: 1
                      type: integer
                    trunks:
                      description: VLAN trunks to pass through this interface.
                      format_description: vlanid[;vlanid...]
                      optional: 1
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    virtio:
                      alias: macaddr
                      keyAlias: model
                    vmxnet3:
                      alias: macaddr
                      keyAlias: model
                  type: string
                numa:
                  default: 0
                  description: Enable/disable NUMA.
                  type: boolean
                numa[n]:
                  description: NUMA topology.
                  format:
                    cpus:
                      description: CPUs accessing this NUMA node.
                      format_description: id[-id];...
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    hostnodes:
                      description: Host NUMA nodes to use.
                      format_description: id[-id];...
                      optional: 1
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    memory:
                      description: Amount of memory this NUMA node provides.
                      optional: 1
                      type: number
                    policy:
                      description: NUMA allocation policy.
                      enum:
                      - preferred
                      - bind
                      - interleave
                      optional: 1
                      type: string
                  type: string
                onboot:
                  default: 0
                  description: Specifies whether a VM will be started during system
                    bootup.
                  type: boolean
                ostype:
                  description: Specify guest operating system.
                  enum:
                  - other
                  - wxp
                  - w2k
                  - w2k3
                  - w2k8
                  - wvista
                  - win7
                  - win8
                  - win10
                  - win11
                  - l24
                  - l26
                  - solaris
                  type: string
                parallel[n]:
                  description: Map host parallel devices (n is 0 to 2).
                  pattern: /dev/parport\d+|/dev/usb/lp\d+
                  type: string
                protection:
                  default: 0
                  description: Sets the protection flag of the VM. This will disable
                    the remove VM and remove disk operations.
                  type: boolean
                reboot:
                  default: 1
                  description: Allow reboot. If set to '0' the VM exit on reboot.
                  type: boolean
                revert:
                  description: Revert a pending change.
                  format: pve-configid-list
                  type: string
                rng0:
                  description: Configure a VirtIO-based Random Number Generator.
                  format: pve-qm-rng
                  type: string
                sata[n]:
                  description: Use volume as SATA hard disk or CD-ROM (n is 0 to 5).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                scsi[n]:
                  description: Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iothread:
                      description: Whether to use iothreads for this drive
                      optional: 1
                      type: boolean
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    product:
                      description: The drive's product name, up to 16 bytes long.
                      format_description: product
                      optional: 1
                      pattern: '[A-Za-z0-9\-_\s]{,16}'
                      type: string
                    queues:
                      description: Number of queues.
                      minimum: 2
                      optional: 1
                      type: integer
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    ro:
                      description: Whether the drive is read-only.
                      optional: 1
                      type: boolean
                    scsiblock:
                      default: 0
                      description: 'whether to use scsi-block for full passthrough
                        of host block device


                        WARNING: can lead to I/O errors in combination with low memory
                        or high memory fragmentation on host'
                      optional: 1
                      type: boolean
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    vendor:
                      description: The drive's vendor name, up to 8 bytes long.
                      format_description: vendor
                      optional: 1
                      pattern: '[A-Za-z0-9\-_\s]{,8}'
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                scsihw:
                  default: lsi
                  description: SCSI controller model
                  enum:
                  - lsi
                  - lsi53c810
                  - virtio-scsi-pci
                  - virtio-scsi-single
                  - megasas
                  - pvscsi
                  type: string
                searchdomain:
                  description: 'cloud-init: Sets DNS search domains for a container.
                    Create will automatically use the setting from the host if neither
                    searchdomain nor nameserver are set.'
                  type: string
                serial[n]:
                  description: Create a serial device inside the VM (n is 0 to 3)
                  pattern: (/dev/.+|socket)
                  type: string
                shares:
                  default: 1000
                  description: Amount of memory shares for auto-ballooning. The larger
                    the number is, the more memory this VM gets. Number is relative
                    to weights of all other running VMs. Using zero disables auto-ballooning.
                    Auto-ballooning is done by pvestatd.
                  maximum: 50000
                  minimum: 0
                  type: integer
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
                smbios1:
                  description: Specify SMBIOS type 1 fields.
                  format: pve-qm-smbios1
                  maxLength: 512
                  type: string
                smp:
                  default: 1
                  description: The number of CPUs. Please use option -sockets instead.
                  minimum: 1
                  type: integer
                sockets:
                  default: 1
                  description: The number of CPU sockets.
                  minimum: 1
                  type: integer
                spice_enhancements:
                  description: Configure additional enhancements for SPICE.
                  format:
                    foldersharing:
                      default: '0'
                      description: Enable folder sharing via SPICE. Needs Spice-WebDAV
                        daemon installed in the VM.
                      optional: 1
                      type: boolean
                    videostreaming:
                      default: 'off'
                      description: Enable video streaming. Uses compression for detected
                        video streams.
                      enum:
                      - 'off'
                      - all
                      - filter
                      optional: 1
                      type: string
                  type: string
                sshkeys:
                  description: 'cloud-init: Setup public SSH keys (one key per line,
                    OpenSSH format).'
                  format: urlencoded
                  type: string
                startdate:
                  default: now
                  description: Set the initial date of the real time clock. Valid
                    format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.
                  pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
                  type: string
                startup:
                  description: Startup and shutdown behavior. Order is a non-negative
                    number defining the general startup order. Shutdown in done with
                    reverse ordering. Additionally you can set the 'up' or 'down'
                    delay in seconds, which specifies a delay to wait before the next
                    VM is started or stopped.
                  format: pve-startup-order
                  type: string
                tablet:
                  default: 1
                  description: Enable/disable the USB tablet device.
                  type: boolean
                tags:
                  description: Tags of the VM. This is only meta information.
                  format: pve-tag-list
                  type: string
                tdf:
                  default: 0
                  description: Enable/disable time drift fix.
                  type: boolean
                template:
                  default: 0
                  description: Enable/disable Template.
                  type: boolean
                tpmstate0:
                  description: Configure a Disk for storing TPM state. The format
                    is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB
                    to allocate a new volume. Note that SIZE_IN_GiB is ignored here
                    and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from'
                    parameter to import from an existing volume.
                  format:
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    version:
                      default: v1.2
                      description: The TPM interface version. v2.0 is newer and should
                        be preferred. Note that this cannot be changed later on.
                      enum:
                      - v1.2
                      - v2.0
                      optional: 1
                      type: string
                    volume:
                      alias: file
                  type: string
                unused[n]:
                  description: Reference to unused volumes. This is used internally,
                    and should not be modified manually.
                  format:
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id
                      format_description: volume
                      type: string
                    volume:
                      alias: file
                  type: string
                usb[n]:
                  description: Configure an USB device (n is 0 to 4, for machine version
                    >= 7.1 and ostype l26 or windows > 7, n can be up to 14).
                  format:
                    host:
                      default_key: 1
                      description: "The Host USB device or port or the value 'spice'.\
                        \ HOSTUSBDEVICE syntax is:\n\n 'bus-port(.port)*' (decimal\
                        \ numbers) or\n 'vendor_id:product_id' (hexadecimal numbers)\
                        \ or\n 'spice'\n\nYou can use the 'lsusb -t' command to list\
                        \ existing usb devices.\n\nNOTE: This option allows direct\
                        \ access to host hardware. So it is no longer possible to\
                        \ migrate such\nmachines - use with special care.\n\nThe value\
                        \ 'spice' can be used to add a usb redirection devices for\
                        \ spice.\n\nEither this or the 'mapping' key must be set.\n"
                      format_description: HOSTUSBDEVICE|spice
                      optional: 1
                      pattern: (?^:(?:(?:(?^:(0x)?([0-9A-Fa-f]{4}):(0x)?([0-9A-Fa-f]{4})))|(?:(?^:(\d+)\-(\d+(\.\d+)*)))|[Ss][Pp][Ii][Cc][Ee]))
                      type: string
                    mapping:
                      description: The ID of a cluster wide mapping. Either this or
                        the default-key 'host' must be set.
                      format: pve-configid
                      format_description: mapping-id
                      optional: 1
                      type: string
                    usb3:
                      default: 0
                      description: Specifies whether if given host option is a USB3
                        device or port. For modern guests (machine version >= 7.1
                        and ostype l26 and windows > 7), this flag is irrelevant (all
                        devices are plugged into a xhci controller).
                      optional: 1
                      type: boolean
                  type: string
                vcpus:
                  default: 0
                  description: Number of hotplugged vcpus.
                  minimum: 1
                  type: integer
                vga:
                  description: Configure the VGA hardware.
                  format:
                    clipboard:
                      description: Enable a specific clipboard. If not set, depending
                        on the display type the SPICE one will be added. Migration
                        with VNC clipboard is not yet supported!
                      enum:
                      - vnc
                      optional: 1
                      type: string
                    memory:
                      description: Sets the VGA memory (in MiB). Has no effect with
                        serial display.
                      maximum: 512
                      minimum: 4
                      optional: 1
                      type: integer
                    type:
                      default: std
                      default_key: 1
                      description: Select the VGA type. Using type 'cirrus' is not
                        recommended.
                      enum:
                      - cirrus
                      - qxl
                      - qxl2
                      - qxl3
                      - qxl4
                      - none
                      - serial0
                      - serial1
                      - serial2
                      - serial3
                      - std
                      - virtio
                      - virtio-gl
                      - vmware
                      optional: 1
                      type: string
                  type: string
                virtio[n]:
                  description: Use volume as VIRTIO hard disk (n is 0 to 15). Use
                    the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.
                    Use STORAGE_ID:0 and the 'import-from' parameter to import from
                    an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iothread:
                      description: Whether to use iothreads for this drive
                      optional: 1
                      type: boolean
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    ro:
                      description: Whether the drive is read-only.
                      optional: 1
                      type: boolean
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                  type: string
                virtiofs[n]:
                  description: Configuration for sharing a directory between host
                    and guest using Virtio-fs.
                  format:
                    cache:
                      default: auto
                      description: The caching policy the file system should use (auto,
                        always, metadata, never).
                      enum:
                      - auto
                      - always
                      - metadata
                      - never
                      optional: 1
                      type: string
                    direct-io:
                      default: 0
                      description: Honor the O_DIRECT flag passed down by guest applications.
                      optional: 1
                      type: boolean
                    dirid:
                      default_key: 1
                      description: Mapping identifier of the directory mapping to
                        be shared with the guest. Also used as a mount tag inside
                        the VM.
                      format: pve-configid
                      format_description: mapping-id
                      type: string
                    expose-acl:
                      default: 0
                      description: Enable support for POSIX ACLs (enabled ACL implies
                        xattr) for this mount.
                      optional: 1
                      type: boolean
                    expose-xattr:
                      default: 0
                      description: Enable support for extended attributes for this
                        mount.
                      optional: 1
                      type: boolean
                  type: string
                vmgenid:
                  default: 1 (autogenerated)
                  description: Set VM Generation ID. Use '1' to autogenerate on create
                    or update, pass '0' to disable explicitly.
                  pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
                  type: string
                vmstatestorage:
                  description: Default storage for VM state volumes/files.
                  format: pve-storage-id
                  type: string
                watchdog:
                  description: Create a virtual hardware watchdog device.
                  format: pve-qm-watchdog
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set virtual machine options (asynchronous API).
      tags:
      - Nodes
    put:
      description: Set virtual machine options (synchronous API) - You should consider
        using the POST method instead for any actions involving hotplug or storage
        allocation.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acpi:
                  default: 1
                  description: Enable/disable ACPI.
                  type: boolean
                affinity:
                  description: 'List of host cores used to execute guest processes,
                    for example: 0,5,8-11'
                  format: pve-cpuset
                  type: string
                agent:
                  description: Enable/disable communication with the QEMU Guest Agent
                    and its properties.
                  format:
                    enabled:
                      default: 0
                      default_key: 1
                      description: Enable/disable communication with a QEMU Guest
                        Agent (QGA) running in the VM.
                      type: boolean
                    freeze-fs-on-backup:
                      default: 1
                      description: Freeze/thaw guest filesystems on backup for consistency.
                      optional: 1
                      type: boolean
                    fstrim_cloned_disks:
                      default: 0
                      description: Run fstrim after moving a disk or migrating the
                        VM.
                      optional: 1
                      type: boolean
                    type:
                      default: virtio
                      description: Select the agent type
                      enum:
                      - virtio
                      - isa
                      optional: 1
                      type: string
                  type: string
                amd-sev:
                  description: Secure Encrypted Virtualization (SEV) features by AMD
                    CPUs
                  format: pve-qemu-sev-fmt
                  type: string
                arch:
                  description: Virtual processor architecture. Defaults to the host.
                  enum:
                  - x86_64
                  - aarch64
                  type: string
                args:
                  description: Arbitrary arguments passed to kvm.
                  type: string
                audio0:
                  description: Configure a audio device, useful in combination with
                    QXL/Spice.
                  format:
                    device:
                      description: Configure an audio device.
                      enum:
                      - ich9-intel-hda
                      - intel-hda
                      - AC97
                      type: string
                    driver:
                      default: spice
                      description: Driver backend for the audio device.
                      enum:
                      - spice
                      - none
                      optional: 1
                      type: string
                  type: string
                autostart:
                  default: 0
                  description: Automatic restart after crash (currently ignored).
                  type: boolean
                balloon:
                  description: Amount of target RAM for the VM in MiB. Using zero
                    disables the ballon driver.
                  minimum: 0
                  type: integer
                bios:
                  default: seabios
                  description: Select BIOS implementation.
                  enum:
                  - seabios
                  - ovmf
                  type: string
                boot:
                  description: Specify guest boot order. Use the 'order=' sub-property
                    as usage with no key or 'legacy=' is deprecated.
                  format: pve-qm-boot
                  type: string
                bootdisk:
                  description: 'Enable booting from specified disk. Deprecated: Use
                    ''boot: order=foo;bar'' instead.'
                  format: pve-qm-bootdisk
                  pattern: (ide|sata|scsi|virtio)\d+
                  type: string
                cdrom:
                  description: This is an alias for option -ide2
                  format: pve-qm-ide
                  type: string
                cicustom:
                  description: 'cloud-init: Specify custom files to replace the automatically
                    generated ones at start.'
                  format: pve-qm-cicustom
                  type: string
                cipassword:
                  description: 'cloud-init: Password to assign the user. Using this
                    is generally not recommended. Use ssh keys instead. Also note
                    that older cloud-init versions do not support hashed passwords.'
                  type: string
                citype:
                  description: Specifies the cloud-init configuration format. The
                    default depends on the configured operating system type (`ostype`.
                    We use the `nocloud` format for Linux, and `configdrive2` for
                    windows.
                  enum:
                  - configdrive2
                  - nocloud
                  - opennebula
                  type: string
                ciupgrade:
                  default: 1
                  description: 'cloud-init: do an automatic package upgrade after
                    the first boot.'
                  type: boolean
                ciuser:
                  description: 'cloud-init: User name to change ssh keys and password
                    for instead of the image''s configured default user.'
                  type: string
                cores:
                  default: 1
                  description: The number of cores per socket.
                  minimum: 1
                  type: integer
                cpu:
                  description: Emulated CPU type.
                  format: pve-vm-cpu-conf
                  type: string
                cpulimit:
                  default: 0
                  description: Limit of CPU usage.
                  maximum: 128
                  minimum: 0
                  type: number
                cpuunits:
                  $ref: '#/components/schemas/ProxmoxVmId'
                  default: 'cgroup v1: 1024, cgroup v2: 100'
                  description: CPU weight for a VM, will be clamped to [1, 10000]
                    in cgroup v2.
                  maximum: 262144
                  minimum: 1
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                description:
                  description: Description for the VM. Shown in the web-interface
                    VM's summary. This is saved as comment inside the configuration
                    file.
                  maxLength: 8192
                  type: string
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA1 digest. This can be used to prevent concurrent modifications.
                  maxLength: 40
                  type: string
                efidisk0:
                  description: Configure a disk for storing EFI vars. Use the special
                    syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that
                    SIZE_IN_GiB is ignored here and that the default EFI vars are
                    copied to the volume instead. Use STORAGE_ID:0 and the 'import-from'
                    parameter to import from an existing volume.
                  format:
                    efitype:
                      default: 2m
                      description: Size and type of the OVMF EFI vars. '4m' is newer
                        and recommended, and required for Secure Boot. For backwards
                        compatibility, '2m' is used if not otherwise specified. Ignored
                        for VMs with arch=aarch64 (ARM).
                      enum:
                      - 2m
                      - 4m
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    pre-enrolled-keys:
                      default: 0
                      description: Use am EFI vars template with distribution-specific
                        and Microsoft Standard keys enrolled, if used with 'efitype=4m'.
                        Note that this will enable Secure Boot by default, though
                        it can still be turned off from within the VM.
                      optional: 1
                      type: boolean
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    volume:
                      alias: file
                  type: string
                force:
                  description: Force physical removal. Without this, we simple remove
                    the disk from the config file and create an additional configuration
                    entry called 'unused[n]', which contains the volume ID. Unlink
                    of unused[n] always cause physical removal.
                  type: boolean
                freeze:
                  description: Freeze CPU at startup (use 'c' monitor command to start
                    execution).
                  type: boolean
                hookscript:
                  description: Script that will be executed during various steps in
                    the vms lifetime.
                  format: pve-volume-id
                  type: string
                hostpci[n]:
                  description: Map host PCI devices into guest.
                  format: pve-qm-hostpci
                  type: string
                hotplug:
                  default: network,disk,usb
                  description: 'Selectively enable hotplug features. This is a comma
                    separated list of hotplug features: ''network'', ''disk'', ''cpu'',
                    ''memory'', ''usb'' and ''cloudinit''. Use ''0'' to disable hotplug
                    completely. Using ''1'' as value is an alias for the default `network,disk,usb`.
                    USB hotplugging is possible for guests with machine version >=
                    7.1 and ostype l26 or windows > 7.'
                  format: pve-hotplug-features
                  type: string
                hugepages:
                  description: Enable/disable hugepages memory.
                  enum:
                  - any
                  - '2'
                  - '1024'
                  type: string
                ide[n]:
                  description: Use volume as IDE hard disk or CD-ROM (n is 0 to 3).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    model:
                      description: The drive's reported model name, url-encoded, up
                        to 40 bytes long.
                      format: urlencoded
                      format_description: model
                      maxLength: 120
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                ipconfig[n]:
                  description: 'cloud-init: Specify IP addresses and gateways for
                    the corresponding interface.


                    IP addresses use CIDR notation, gateways are optional but need
                    an IP of the same type specified.


                    The special string ''dhcp'' can be used for IP addresses to use
                    DHCP, in which case no explicit

                    gateway should be provided.

                    For IPv6 the special string ''auto'' can be used to use stateless
                    autoconfiguration. This requires

                    cloud-init 19.4 or newer.


                    If cloud-init is enabled and neither an IPv4 nor an IPv6 address
                    is specified, it defaults to using

                    dhcp on IPv4.

                    '
                  format: pve-qm-ipconfig
                  type: string
                ivshmem:
                  description: Inter-VM shared memory. Useful for direct communication
                    between VMs, or to the host.
                  format:
                    name:
                      description: The name of the file. Will be prefixed with 'pve-shm-'.
                        Default is the VMID. Will be deleted when the VM is stopped.
                      format_description: string
                      optional: 1
                      pattern: '[a-zA-Z0-9\-]+'
                      type: string
                    size:
                      description: The size of the file in MB.
                      minimum: 1
                      type: integer
                  type: string
                keephugepages:
                  default: 0
                  description: Use together with hugepages. If enabled, hugepages
                    will not not be deleted after VM shutdown and can be used for
                    subsequent starts.
                  type: boolean
                keyboard:
                  default: null
                  description: Keyboard layout for VNC server. This option is generally
                    not required and is often better handled from within the guest
                    OS.
                  enum:
                  - de
                  - de-ch
                  - da
                  - en-gb
                  - en-us
                  - es
                  - fi
                  - fr
                  - fr-be
                  - fr-ca
                  - fr-ch
                  - hu
                  - is
                  - it
                  - ja
                  - lt
                  - mk
                  - nl
                  - 'no'
                  - pl
                  - pt
                  - pt-br
                  - sv
                  - sl
                  - tr
                  type: string
                kvm:
                  default: 1
                  description: Enable/disable KVM hardware virtualization.
                  type: boolean
                localtime:
                  description: Set the real time clock (RTC) to local time. This is
                    enabled by default if the `ostype` indicates a Microsoft Windows
                    OS.
                  type: boolean
                lock:
                  description: Lock/unlock the VM.
                  enum:
                  - backup
                  - clone
                  - create
                  - migrate
                  - rollback
                  - snapshot
                  - snapshot-delete
                  - suspending
                  - suspended
                  type: string
                machine:
                  description: Specify the QEMU machine.
                  format:
                    enable-s3:
                      description: Enables S3 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    enable-s4:
                      description: Enables S4 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    type:
                      default_key: 1
                      description: Specifies the QEMU machine type.
                      format_description: machine type
                      maxLength: 40
                      optional: 1
                      pattern: (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)
                      type: string
                    viommu:
                      description: Enable and set guest vIOMMU variant (Intel vIOMMU
                        needs q35 to be set as machine type).
                      enum:
                      - intel
                      - virtio
                      optional: 1
                      type: string
                  type: string
                memory:
                  description: Memory properties.
                  format:
                    current:
                      default: 512
                      default_key: 1
                      description: Current amount of online RAM for the VM in MiB.
                        This is the maximum available memory when you use the balloon
                        device.
                      minimum: 16
                      type: integer
                  type: string
                migrate_downtime:
                  default: 0.1
                  description: Set maximum tolerated downtime (in seconds) for migrations.
                    Should the migration not be able to converge in the very end,
                    because too much newly dirtied RAM needs to be transferred, the
                    limit will be increased automatically step-by-step until migration
                    can converge.
                  minimum: 0
                  type: number
                migrate_speed:
                  default: 0
                  description: Set maximum speed (in MB/s) for migrations. Value 0
                    is no limit.
                  minimum: 0
                  type: integer
                name:
                  description: Set a name for the VM. Only used on the configuration
                    web interface.
                  format: dns-name
                  type: string
                nameserver:
                  description: 'cloud-init: Sets DNS server IP address for a container.
                    Create will automatically use the setting from the host if neither
                    searchdomain nor nameserver are set.'
                  format: address-list
                  type: string
                net[n]:
                  description: Specify network devices.
                  format:
                    bridge:
                      description: "Bridge to attach the network device to. The Proxmox\
                        \ VE standard bridge\nis called 'vmbr0'.\n\nIf you do not\
                        \ specify a bridge, we create a kvm user (NATed) network\n\
                        device, which provides DHCP and DNS services. The following\
                        \ addresses\nare used:\n\n 10.0.2.2   Gateway\n 10.0.2.3 \
                        \  DNS Server\n 10.0.2.4   SMB Server\n\nThe DHCP server assign\
                        \ addresses to the guest starting from 10.0.2.15.\n"
                      format: pve-bridge-id
                      format_description: bridge
                      optional: 1
                      type: string
                    e1000:
                      alias: macaddr
                      keyAlias: model
                    e1000-82540em:
                      alias: macaddr
                      keyAlias: model
                    e1000-82544gc:
                      alias: macaddr
                      keyAlias: model
                    e1000-82545em:
                      alias: macaddr
                      keyAlias: model
                    e1000e:
                      alias: macaddr
                      keyAlias: model
                    firewall:
                      description: Whether this interface should be protected by the
                        firewall.
                      optional: 1
                      type: boolean
                    i82551:
                      alias: macaddr
                      keyAlias: model
                    i82557b:
                      alias: macaddr
                      keyAlias: model
                    i82559er:
                      alias: macaddr
                      keyAlias: model
                    link_down:
                      description: Whether this interface should be disconnected (like
                        pulling the plug).
                      optional: 1
                      type: boolean
                    macaddr:
                      description: MAC address. That address must be unique within
                        your network. This is automatically generated if not specified.
                      format: mac-addr
                      format_description: XX:XX:XX:XX:XX:XX
                      optional: 1
                      type: string
                      verbose_description: A common MAC address with the I/G (Individual/Group)
                        bit not set.
                    model:
                      default_key: 1
                      description: Network Card Model. The 'virtio' model provides
                        the best performance with very low CPU overhead. If your guest
                        does not support this driver, it is usually best to use 'e1000'.
                      enum:
                      - e1000
                      - e1000-82540em
                      - e1000-82544gc
                      - e1000-82545em
                      - e1000e
                      - i82551
                      - i82557b
                      - i82559er
                      - ne2k_isa
                      - ne2k_pci
                      - pcnet
                      - rtl8139
                      - virtio
                      - vmxnet3
                      type: string
                    mtu:
                      description: Force MTU, for VirtIO only. Set to '1' to use the
                        bridge MTU
                      maximum: 65520
                      minimum: 1
                      optional: 1
                      type: integer
                    ne2k_isa:
                      alias: macaddr
                      keyAlias: model
                    ne2k_pci:
                      alias: macaddr
                      keyAlias: model
                    pcnet:
                      alias: macaddr
                      keyAlias: model
                    queues:
                      description: Number of packet queues to be used on the device.
                      maximum: 64
                      minimum: 0
                      optional: 1
                      type: integer
                    rate:
                      description: Rate limit in mbps (megabytes per second) as floating
                        point number.
                      minimum: 0
                      optional: 1
                      type: number
                    rtl8139:
                      alias: macaddr
                      keyAlias: model
                    tag:
                      description: VLAN tag to apply to packets on this interface.
                      maximum: 4094
                      minimum: 1
                      optional: 1
                      type: integer
                    trunks:
                      description: VLAN trunks to pass through this interface.
                      format_description: vlanid[;vlanid...]
                      optional: 1
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    virtio:
                      alias: macaddr
                      keyAlias: model
                    vmxnet3:
                      alias: macaddr
                      keyAlias: model
                  type: string
                numa:
                  default: 0
                  description: Enable/disable NUMA.
                  type: boolean
                numa[n]:
                  description: NUMA topology.
                  format:
                    cpus:
                      description: CPUs accessing this NUMA node.
                      format_description: id[-id];...
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    hostnodes:
                      description: Host NUMA nodes to use.
                      format_description: id[-id];...
                      optional: 1
                      pattern: (?^:\d+(?:-\d+)?(?:;\d+(?:-\d+)?)*)
                      type: string
                    memory:
                      description: Amount of memory this NUMA node provides.
                      optional: 1
                      type: number
                    policy:
                      description: NUMA allocation policy.
                      enum:
                      - preferred
                      - bind
                      - interleave
                      optional: 1
                      type: string
                  type: string
                onboot:
                  default: 0
                  description: Specifies whether a VM will be started during system
                    bootup.
                  type: boolean
                ostype:
                  description: Specify guest operating system.
                  enum:
                  - other
                  - wxp
                  - w2k
                  - w2k3
                  - w2k8
                  - wvista
                  - win7
                  - win8
                  - win10
                  - win11
                  - l24
                  - l26
                  - solaris
                  type: string
                parallel[n]:
                  description: Map host parallel devices (n is 0 to 2).
                  pattern: /dev/parport\d+|/dev/usb/lp\d+
                  type: string
                protection:
                  default: 0
                  description: Sets the protection flag of the VM. This will disable
                    the remove VM and remove disk operations.
                  type: boolean
                reboot:
                  default: 1
                  description: Allow reboot. If set to '0' the VM exit on reboot.
                  type: boolean
                revert:
                  description: Revert a pending change.
                  format: pve-configid-list
                  type: string
                rng0:
                  description: Configure a VirtIO-based Random Number Generator.
                  format: pve-qm-rng
                  type: string
                sata[n]:
                  description: Use volume as SATA hard disk or CD-ROM (n is 0 to 5).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                scsi[n]:
                  description: Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).
                    Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new
                    volume. Use STORAGE_ID:0 and the 'import-from' parameter to import
                    from an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iothread:
                      description: Whether to use iothreads for this drive
                      optional: 1
                      type: boolean
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    product:
                      description: The drive's product name, up to 16 bytes long.
                      format_description: product
                      optional: 1
                      pattern: '[A-Za-z0-9\-_\s]{,16}'
                      type: string
                    queues:
                      description: Number of queues.
                      minimum: 2
                      optional: 1
                      type: integer
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    ro:
                      description: Whether the drive is read-only.
                      optional: 1
                      type: boolean
                    scsiblock:
                      default: 0
                      description: 'whether to use scsi-block for full passthrough
                        of host block device


                        WARNING: can lead to I/O errors in combination with low memory
                        or high memory fragmentation on host'
                      optional: 1
                      type: boolean
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    ssd:
                      description: Whether to expose this drive as an SSD, rather
                        than a rotational hard disk.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    vendor:
                      description: The drive's vendor name, up to 8 bytes long.
                      format_description: vendor
                      optional: 1
                      pattern: '[A-Za-z0-9\-_\s]{,8}'
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    wwn:
                      description: The drive's worldwide name, encoded as 16 bytes
                        hex string, prefixed by '0x'.
                      format_description: wwn
                      optional: 1
                      pattern: (?^:^(0x)[0-9a-fA-F]{16})
                      type: string
                  type: string
                scsihw:
                  default: lsi
                  description: SCSI controller model
                  enum:
                  - lsi
                  - lsi53c810
                  - virtio-scsi-pci
                  - virtio-scsi-single
                  - megasas
                  - pvscsi
                  type: string
                searchdomain:
                  description: 'cloud-init: Sets DNS search domains for a container.
                    Create will automatically use the setting from the host if neither
                    searchdomain nor nameserver are set.'
                  type: string
                serial[n]:
                  description: Create a serial device inside the VM (n is 0 to 3)
                  pattern: (/dev/.+|socket)
                  type: string
                shares:
                  default: 1000
                  description: Amount of memory shares for auto-ballooning. The larger
                    the number is, the more memory this VM gets. Number is relative
                    to weights of all other running VMs. Using zero disables auto-ballooning.
                    Auto-ballooning is done by pvestatd.
                  maximum: 50000
                  minimum: 0
                  type: integer
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
                smbios1:
                  description: Specify SMBIOS type 1 fields.
                  format: pve-qm-smbios1
                  maxLength: 512
                  type: string
                smp:
                  default: 1
                  description: The number of CPUs. Please use option -sockets instead.
                  minimum: 1
                  type: integer
                sockets:
                  default: 1
                  description: The number of CPU sockets.
                  minimum: 1
                  type: integer
                spice_enhancements:
                  description: Configure additional enhancements for SPICE.
                  format:
                    foldersharing:
                      default: '0'
                      description: Enable folder sharing via SPICE. Needs Spice-WebDAV
                        daemon installed in the VM.
                      optional: 1
                      type: boolean
                    videostreaming:
                      default: 'off'
                      description: Enable video streaming. Uses compression for detected
                        video streams.
                      enum:
                      - 'off'
                      - all
                      - filter
                      optional: 1
                      type: string
                  type: string
                sshkeys:
                  description: 'cloud-init: Setup public SSH keys (one key per line,
                    OpenSSH format).'
                  format: urlencoded
                  type: string
                startdate:
                  default: now
                  description: Set the initial date of the real time clock. Valid
                    format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.
                  pattern: (now|\d{4}-\d{1,2}-\d{1,2}(T\d{1,2}:\d{1,2}:\d{1,2})?)
                  type: string
                startup:
                  description: Startup and shutdown behavior. Order is a non-negative
                    number defining the general startup order. Shutdown in done with
                    reverse ordering. Additionally you can set the 'up' or 'down'
                    delay in seconds, which specifies a delay to wait before the next
                    VM is started or stopped.
                  format: pve-startup-order
                  type: string
                tablet:
                  default: 1
                  description: Enable/disable the USB tablet device.
                  type: boolean
                tags:
                  description: Tags of the VM. This is only meta information.
                  format: pve-tag-list
                  type: string
                tdf:
                  default: 0
                  description: Enable/disable time drift fix.
                  type: boolean
                template:
                  default: 0
                  description: Enable/disable Template.
                  type: boolean
                tpmstate0:
                  description: Configure a Disk for storing TPM state. The format
                    is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB
                    to allocate a new volume. Note that SIZE_IN_GiB is ignored here
                    and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from'
                    parameter to import from an existing volume.
                  format:
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    version:
                      default: v1.2
                      description: The TPM interface version. v2.0 is newer and should
                        be preferred. Note that this cannot be changed later on.
                      enum:
                      - v1.2
                      - v2.0
                      optional: 1
                      type: string
                    volume:
                      alias: file
                  type: string
                unused[n]:
                  description: Reference to unused volumes. This is used internally,
                    and should not be modified manually.
                  format:
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id
                      format_description: volume
                      type: string
                    volume:
                      alias: file
                  type: string
                usb[n]:
                  description: Configure an USB device (n is 0 to 4, for machine version
                    >= 7.1 and ostype l26 or windows > 7, n can be up to 14).
                  format:
                    host:
                      default_key: 1
                      description: "The Host USB device or port or the value 'spice'.\
                        \ HOSTUSBDEVICE syntax is:\n\n 'bus-port(.port)*' (decimal\
                        \ numbers) or\n 'vendor_id:product_id' (hexadecimal numbers)\
                        \ or\n 'spice'\n\nYou can use the 'lsusb -t' command to list\
                        \ existing usb devices.\n\nNOTE: This option allows direct\
                        \ access to host hardware. So it is no longer possible to\
                        \ migrate such\nmachines - use with special care.\n\nThe value\
                        \ 'spice' can be used to add a usb redirection devices for\
                        \ spice.\n\nEither this or the 'mapping' key must be set.\n"
                      format_description: HOSTUSBDEVICE|spice
                      optional: 1
                      pattern: (?^:(?:(?:(?^:(0x)?([0-9A-Fa-f]{4}):(0x)?([0-9A-Fa-f]{4})))|(?:(?^:(\d+)\-(\d+(\.\d+)*)))|[Ss][Pp][Ii][Cc][Ee]))
                      type: string
                    mapping:
                      description: The ID of a cluster wide mapping. Either this or
                        the default-key 'host' must be set.
                      format: pve-configid
                      format_description: mapping-id
                      optional: 1
                      type: string
                    usb3:
                      default: 0
                      description: Specifies whether if given host option is a USB3
                        device or port. For modern guests (machine version >= 7.1
                        and ostype l26 and windows > 7), this flag is irrelevant (all
                        devices are plugged into a xhci controller).
                      optional: 1
                      type: boolean
                  type: string
                vcpus:
                  default: 0
                  description: Number of hotplugged vcpus.
                  minimum: 1
                  type: integer
                vga:
                  description: Configure the VGA hardware.
                  format:
                    clipboard:
                      description: Enable a specific clipboard. If not set, depending
                        on the display type the SPICE one will be added. Migration
                        with VNC clipboard is not yet supported!
                      enum:
                      - vnc
                      optional: 1
                      type: string
                    memory:
                      description: Sets the VGA memory (in MiB). Has no effect with
                        serial display.
                      maximum: 512
                      minimum: 4
                      optional: 1
                      type: integer
                    type:
                      default: std
                      default_key: 1
                      description: Select the VGA type. Using type 'cirrus' is not
                        recommended.
                      enum:
                      - cirrus
                      - qxl
                      - qxl2
                      - qxl3
                      - qxl4
                      - none
                      - serial0
                      - serial1
                      - serial2
                      - serial3
                      - std
                      - virtio
                      - virtio-gl
                      - vmware
                      optional: 1
                      type: string
                  type: string
                virtio[n]:
                  description: Use volume as VIRTIO hard disk (n is 0 to 15). Use
                    the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.
                    Use STORAGE_ID:0 and the 'import-from' parameter to import from
                    an existing volume.
                  format:
                    aio:
                      description: AIO type to use.
                      enum:
                      - native
                      - threads
                      - io_uring
                      optional: 1
                      type: string
                    backup:
                      description: Whether the drive should be included when making
                        backups.
                      optional: 1
                      type: boolean
                    bps:
                      description: Maximum r/w speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_rd:
                      description: Maximum read speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_rd_length:
                      alias: bps_rd_max_length
                    bps_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    bps_wr:
                      description: Maximum write speed in bytes per second.
                      format_description: bps
                      optional: 1
                      type: integer
                    bps_wr_length:
                      alias: bps_wr_max_length
                    bps_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    cache:
                      description: The drive's cache mode
                      enum:
                      - none
                      - writethrough
                      - writeback
                      - unsafe
                      - directsync
                      optional: 1
                      type: string
                    cyls:
                      description: Force the drive's physical geometry to have a specific
                        cylinder count.
                      optional: 1
                      type: integer
                    detect_zeroes:
                      description: Controls whether to detect and try to optimize
                        writes of zeroes.
                      optional: 1
                      type: boolean
                    discard:
                      description: Controls whether to pass discard/trim requests
                        to the underlying storage.
                      enum:
                      - ignore
                      - 'on'
                      optional: 1
                      type: string
                    file:
                      default_key: 1
                      description: The drive's backing volume.
                      format: pve-volume-id-or-qm-path
                      format_description: volume
                      type: string
                    format:
                      description: The drive's backing file's data format.
                      enum:
                      - raw
                      - qcow
                      - qed
                      - qcow2
                      - vmdk
                      - cloop
                      optional: 1
                      type: string
                    heads:
                      description: Force the drive's physical geometry to have a specific
                        head count.
                      optional: 1
                      type: integer
                    import-from:
                      description: Create a new disk, importing from this source (volume
                        ID or absolute path). When an absolute path is specified,
                        it's up to you to ensure that the source is not actively used
                        by another process during the import!
                      format: pve-volume-id-or-absolute-path
                      format_description: source volume
                      optional: 1
                      type: string
                    iops:
                      description: Maximum r/w I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max:
                      description: Maximum unthrottled r/w I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_max_length:
                      description: Maximum length of I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_rd:
                      description: Maximum read I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_length:
                      alias: iops_rd_max_length
                    iops_rd_max:
                      description: Maximum unthrottled read I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_rd_max_length:
                      description: Maximum length of read I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iops_wr:
                      description: Maximum write I/O in operations per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_length:
                      alias: iops_wr_max_length
                    iops_wr_max:
                      description: Maximum unthrottled write I/O pool in operations
                        per second.
                      format_description: iops
                      optional: 1
                      type: integer
                    iops_wr_max_length:
                      description: Maximum length of write I/O bursts in seconds.
                      format_description: seconds
                      minimum: 1
                      optional: 1
                      type: integer
                    iothread:
                      description: Whether to use iothreads for this drive
                      optional: 1
                      type: boolean
                    mbps:
                      description: Maximum r/w speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_max:
                      description: Maximum unthrottled r/w pool in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd:
                      description: Maximum read speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_rd_max:
                      description: Maximum unthrottled read pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr:
                      description: Maximum write speed in megabytes per second.
                      format_description: mbps
                      optional: 1
                      type: number
                    mbps_wr_max:
                      description: Maximum unthrottled write pool in megabytes per
                        second.
                      format_description: mbps
                      optional: 1
                      type: number
                    media:
                      default: disk
                      description: The drive's media type.
                      enum:
                      - cdrom
                      - disk
                      optional: 1
                      type: string
                    replicate:
                      default: 1
                      description: Whether the drive should considered for replication
                        jobs.
                      optional: 1
                      type: boolean
                    rerror:
                      description: Read error action.
                      enum:
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                    ro:
                      description: Whether the drive is read-only.
                      optional: 1
                      type: boolean
                    secs:
                      description: Force the drive's physical geometry to have a specific
                        sector count.
                      optional: 1
                      type: integer
                    serial:
                      description: The drive's reported serial number, url-encoded,
                        up to 20 bytes long.
                      format: urlencoded
                      format_description: serial
                      maxLength: 60
                      optional: 1
                      type: string
                    shared:
                      default: 0
                      description: Mark this locally-managed volume as available on
                        all nodes
                      optional: 1
                      type: boolean
                      verbose_description: 'Mark this locally-managed volume as available
                        on all nodes.


                        WARNING: This option does not share the volume automatically,
                        it assumes it is shared already!'
                    size:
                      description: Disk size. This is purely informational and has
                        no effect.
                      format: disk-size
                      format_description: DiskSize
                      optional: 1
                      type: string
                    snapshot:
                      description: Controls qemu's snapshot mode feature. If activated,
                        changes made to the disk are temporary and will be discarded
                        when the VM is shutdown.
                      optional: 1
                      type: boolean
                    trans:
                      description: Force disk geometry bios translation mode.
                      enum:
                      - none
                      - lba
                      - auto
                      optional: 1
                      type: string
                    volume:
                      alias: file
                    werror:
                      description: Write error action.
                      enum:
                      - enospc
                      - ignore
                      - report
                      - stop
                      optional: 1
                      type: string
                  type: string
                virtiofs[n]:
                  description: Configuration for sharing a directory between host
                    and guest using Virtio-fs.
                  format:
                    cache:
                      default: auto
                      description: The caching policy the file system should use (auto,
                        always, metadata, never).
                      enum:
                      - auto
                      - always
                      - metadata
                      - never
                      optional: 1
                      type: string
                    direct-io:
                      default: 0
                      description: Honor the O_DIRECT flag passed down by guest applications.
                      optional: 1
                      type: boolean
                    dirid:
                      default_key: 1
                      description: Mapping identifier of the directory mapping to
                        be shared with the guest. Also used as a mount tag inside
                        the VM.
                      format: pve-configid
                      format_description: mapping-id
                      type: string
                    expose-acl:
                      default: 0
                      description: Enable support for POSIX ACLs (enabled ACL implies
                        xattr) for this mount.
                      optional: 1
                      type: boolean
                    expose-xattr:
                      default: 0
                      description: Enable support for extended attributes for this
                        mount.
                      optional: 1
                      type: boolean
                  type: string
                vmgenid:
                  default: 1 (autogenerated)
                  description: Set VM Generation ID. Use '1' to autogenerate on create
                    or update, pass '0' to disable explicitly.
                  pattern: (?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])
                  type: string
                vmstatestorage:
                  description: Default storage for VM state volumes/files.
                  format: pve-storage-id
                  type: string
                watchdog:
                  description: Create a virtual hardware watchdog device.
                  format: pve-qm-watchdog
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set virtual machine options (synchronous API) - You should consider
        using the POST method instead for any actions involving hotplug or storage
        allocation.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/feature:
    get:
      description: Check if feature for virtual machine is available.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_feature
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Feature to check.
        in: query
        name: feature
        required: true
        schema:
          description: Feature to check.
          enum:
          - snapshot
          - clone
          - copy
          type: string
      - description: The name of the snapshot.
        in: query
        name: snapname
        required: false
        schema:
          description: The name of the snapshot.
          format: pve-configid
          maxLength: 40
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  hasFeature:
                    type: boolean
                  nodes:
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Check if feature for virtual machine is available.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/aliases
  : get:
      description: List aliases
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cidr:
                      type: string
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    name:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List aliases
      tags:
      - Nodes
    post:
      description: Create IP or Network Alias.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDR
                  type: string
                comment:
                  type: string
                name:
                  description: Alias name.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - cidr
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create IP or Network Alias.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/aliases/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}
  : delete:
      description: Remove IP or Network alias.
      operationId: delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases_nodes_node_qemu_vmid_firewall_aliases_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove IP or Network alias.
      tags:
      - Nodes
    get:
      description: Read alias.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases_nodes_node_qemu_vmid_firewall_aliases_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read alias.
      tags:
      - Nodes
    put:
      description: Update IP or Network alias.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_aliases_nodes_node_qemu_vmid_firewall_aliases_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDR
                  type: string
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                rename:
                  description: Rename an existing alias.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP or Network alias.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/ipset
  : get:
      description: List IPSets
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    name:
                      description: IP set name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List IPSets
      tags:
      - Nodes
    post:
      description: Create new IPSet
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                name:
                  description: IP set name.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                rename:
                  description: Rename an existing IPSet. You can set 'rename' to the
                    same value as 'name' to update the 'comment' of an existing IPSet.
                  maxLength: 64
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new IPSet
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/ipset/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}
  : delete:
      description: Delete IPSet
      operationId: delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Delete all members of the IPSet, if there are any.
        in: query
        name: force
        required: false
        schema:
          description: Delete all members of the IPSet, if there are any.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete IPSet
      tags:
      - Nodes
    get:
      description: List IPSet content
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cidr:
                      type: string
                    comment:
                      type: string
                    digest:
                      description: Prevent changes if current configuration file has
                        a different digest. This can be used to prevent concurrent
                        modifications.
                      type: string
                    nomatch:
                      type: boolean
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List IPSet content
      tags:
      - Nodes
    post:
      description: Add IP or Network to IPSet.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cidr:
                  description: Network/IP specification in CIDR format.
                  format: IPorCIDRorAlias
                  type: string
                comment:
                  type: string
                nomatch:
                  type: boolean
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add IP or Network to IPSet.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/ipset/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}
  : delete:
      description: Remove IP or Network from IPSet.
      operationId: delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name_nodes_node_qemu_vmid_firewall_ipset_name_cidr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove IP or Network from IPSet.
      tags:
      - Nodes
    get:
      description: Read IP or Network settings from IPSet.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name_nodes_node_qemu_vmid_firewall_ipset_name_cidr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read IP or Network settings from IPSet.
      tags:
      - Nodes
    put:
      description: Update IP or Network settings
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_ipset_nodes_node_qemu_vmid_firewall_ipset_name_nodes_node_qemu_vmid_firewall_ipset_name_cidr
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The cidr parameter
        in: path
        name: cidr
        required: true
        schema:
          description: The cidr parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                nomatch:
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update IP or Network settings
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/log
  : get:
      description: Read firewall log
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display log since this UNIX epoch.
        in: query
        name: since
        required: false
        schema:
          description: Display log since this UNIX epoch.
          minimum: 0
          type: integer
      - in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display log until this UNIX epoch.
        in: query
        name: until
        required: false
        schema:
          description: Display log until this UNIX epoch.
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read firewall log
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/options
  : get:
      description: Get VM firewall options.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_options
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  dhcp:
                    description: Enable DHCP.
                    type: boolean
                  enable:
                    description: Enable/disable firewall rules.
                    type: boolean
                  ipfilter:
                    description: Enable default IP filters. This is equivalent to
                      adding an empty ipfilter-net<id> ipset for every interface.
                      Such ipsets implicitly contain sane default restrictions such
                      as restricting IPv6 link local addresses to the one derived
                      from the interface's MAC address. For containers the configured
                      IP addresses will be implicitly added.
                    type: boolean
                  log_level_in:
                    description: Log level for incoming traffic.
                    type: string
                  log_level_out:
                    description: Log level for outgoing traffic.
                    type: string
                  macfilter:
                    description: Enable/disable MAC address filter.
                    type: boolean
                  ndp:
                    description: Enable NDP (Neighbor Discovery Protocol).
                    type: boolean
                  policy_in:
                    description: Input policy.
                    type: string
                  policy_out:
                    description: Output policy.
                    type: string
                  radv:
                    description: Allow sending Router Advertisement.
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get VM firewall options.
      tags:
      - Nodes
    put:
      description: Set Firewall options.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_options
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dhcp:
                  default: 0
                  description: Enable DHCP.
                  type: boolean
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                enable:
                  default: 0
                  description: Enable/disable firewall rules.
                  type: boolean
                ipfilter:
                  description: Enable default IP filters. This is equivalent to adding
                    an empty ipfilter-net<id> ipset for every interface. Such ipsets
                    implicitly contain sane default restrictions such as restricting
                    IPv6 link local addresses to the one derived from the interface's
                    MAC address. For containers the configured IP addresses will be
                    implicitly added.
                  type: boolean
                log_level_in:
                  description: Log level for incoming traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                log_level_out:
                  description: Log level for outgoing traffic.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macfilter:
                  default: 1
                  description: Enable/disable MAC address filter.
                  type: boolean
                ndp:
                  default: 0
                  description: Enable NDP (Neighbor Discovery Protocol).
                  type: boolean
                policy_in:
                  description: Input policy.
                  enum:
                  - ACCEPT
                  - REJECT
                  - DROP
                  type: string
                policy_out:
                  description: Output policy.
                  enum:
                  - ACCEPT
                  - REJECT
                  - DROP
                  type: string
                radv:
                  description: Allow sending Router Advertisement.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set Firewall options.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/refs
  : get:
      description: Lists possible IPSet/Alias reference which are allowed in source/dest
        properties.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_refs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Only list references of specified type.
        in: query
        name: type
        required: false
        schema:
          description: Only list references of specified type.
          enum:
          - alias
          - ipset
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    name:
                      type: string
                    ref:
                      type: string
                    scope:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Lists possible IPSet/Alias reference which are allowed in source/dest
        properties.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/rules
  : get:
      description: List rules.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pos:
                      type: integer
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List rules.
      tags:
      - Nodes
    post:
      description: Create new rule.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                pos:
                  description: Update rule at position <pos>.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              required:
              - action
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new rule.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/firewall/nodes/{node}/qemu/{vmid}/firewall/rules/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}
  : delete:
      description: Delete rule.
      operationId: delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules_nodes_node_qemu_vmid_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      - description: Prevent changes if current configuration file has a different
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has a different
            digest. This can be used to prevent concurrent modifications.
          maxLength: 64
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete rule.
      tags:
      - Nodes
    get:
      description: Get single rule data.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules_nodes_node_qemu_vmid_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  action:
                    type: string
                  comment:
                    type: string
                  dest:
                    type: string
                  dport:
                    type: string
                  enable:
                    type: integer
                  icmp-type:
                    type: string
                  iface:
                    type: string
                  ipversion:
                    type: integer
                  log:
                    description: Log level for firewall rule
                    type: string
                  macro:
                    type: string
                  pos:
                    type: integer
                  proto:
                    type: string
                  source:
                    type: string
                  sport:
                    type: string
                  type:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get single rule data.
      tags:
      - Nodes
    put:
      description: Modify rule data.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_firewall_nodes_node_qemu_vmid_firewall_rules_nodes_node_qemu_vmid_firewall_rules_pos
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The pos parameter
        in: path
        name: pos
        required: true
        schema:
          description: The pos parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                action:
                  description: Rule action ('ACCEPT', 'DROP', 'REJECT') or security
                    group name.
                  maxLength: 20
                  minLength: 2
                  pattern: '[A-Za-z][A-Za-z0-9\-\_]+'
                  type: string
                comment:
                  description: Descriptive comment.
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  type: string
                dest:
                  description: Restrict packet destination address. This can refer
                    to a single IP address, an IP set ('+ipsetname') or an IP alias
                    definition. You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                dport:
                  description: Restrict TCP/UDP destination port. You can use service
                    names or simple numbers (0-65535), as defined in '/etc/services'.
                    Port ranges can be specified with '\d+:\d+', for example '80:85',
                    and you can use comma separated list to match several ports or
                    ranges.
                  format: pve-fw-dport-spec
                  type: string
                enable:
                  description: Flag to enable/disable a rule.
                  minimum: 0
                  type: integer
                icmp-type:
                  description: Specify icmp-type. Only valid if proto equals 'icmp'
                    or 'icmpv6'/'ipv6-icmp'.
                  format: pve-fw-icmp-type-spec
                  type: string
                iface:
                  description: Network interface name. You have to use network configuration
                    key names for VMs and containers ('net\d+'). Host related rules
                    can use arbitrary strings.
                  format: pve-iface
                  maxLength: 20
                  minLength: 2
                  type: string
                log:
                  description: Log level for firewall rule.
                  enum:
                  - emerg
                  - alert
                  - crit
                  - err
                  - warning
                  - notice
                  - info
                  - debug
                  - nolog
                  type: string
                macro:
                  description: Use predefined standard macro.
                  maxLength: 128
                  type: string
                moveto:
                  description: Move rule to new position <moveto>. Other arguments
                    are ignored.
                  minimum: 0
                  type: integer
                proto:
                  description: IP protocol. You can use protocol names ('tcp'/'udp')
                    or simple numbers, as defined in '/etc/protocols'.
                  format: pve-fw-protocol-spec
                  type: string
                source:
                  description: Restrict packet source address. This can refer to a
                    single IP address, an IP set ('+ipsetname') or an IP alias definition.
                    You can also specify an address range like '20.34.101.207-201.3.9.99',
                    or a list of IP addresses and networks (entries are separated
                    by comma). Please do not mix IPv4 and IPv6 addresses inside such
                    lists.
                  format: pve-fw-addr-spec
                  maxLength: 512
                  type: string
                sport:
                  description: Restrict TCP/UDP source port. You can use service names
                    or simple numbers (0-65535), as defined in '/etc/services'. Port
                    ranges can be specified with '\d+:\d+', for example '80:85', and
                    you can use comma separated list to match several ports or ranges.
                  format: pve-fw-sport-spec
                  type: string
                type:
                  description: Rule type.
                  enum:
                  - in
                  - out
                  - forward
                  - group
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Modify rule data.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/migrate:
    get:
      description: Get preconditions for migration.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_migrate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Target node.
        in: query
        name: target
        required: false
        schema:
          description: Target node.
          format: pve-node
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  allowed_nodes:
                    description: List of nodes allowed for migration.
                    items:
                      description: An allowed node
                      type: string
                    type: array
                  local_disks:
                    description: List local disks including CD-Rom, unused and not
                      referenced disks
                    items:
                      properties:
                        cdrom:
                          description: True if the disk is a cdrom.
                          type: boolean
                        is_unused:
                          description: True if the disk is unused.
                          type: boolean
                        size:
                          description: The size of the disk in bytes.
                          type: integer
                        volid:
                          description: The volid of the disk.
                          type: string
                      type: object
                    type: array
                  local_resources:
                    description: List local resources (e.g. pci, usb) that block migration.
                    items:
                      description: A local resource
                      type: string
                    type: array
                  mapped-resource-info:
                    description: Object of mapped resources with additional information
                      such if they're live migratable.
                    type: object
                  mapped-resources:
                    description: List of mapped resources e.g. pci, usb. Deprecated,
                      use 'mapped-resource-info' instead.
                    items:
                      description: A mapped resource
                      type: string
                    type: array
                  not_allowed_nodes:
                    description: List of not allowed nodes with additional information.
                    properties:
                      unavailable_storages:
                        description: A list of not available storages.
                        items:
                          description: A storage
                          type: string
                        type: array
                    type: object
                  running:
                    description: Determines if the VM is running.
                    type: boolean
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get preconditions for migration.
      tags:
      - Nodes
    post:
      description: Migrate virtual machine. Creates a new migration task.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_migrate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: migrate limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: integer
                force:
                  description: Allow to migrate VMs which use local devices. Only
                    root may use this option.
                  type: boolean
                migration_network:
                  description: CIDR of the (sub) network that is used for migration.
                  format: CIDR
                  type: string
                migration_type:
                  description: Migration traffic is encrypted using an SSH tunnel
                    by default. On secure, completely private networks this can be
                    disabled to increase performance.
                  enum:
                  - secure
                  - insecure
                  type: string
                online:
                  description: Use online/live migration if VM is running. Ignored
                    if VM is stopped.
                  type: boolean
                target:
                  description: Target node.
                  format: pve-node
                  type: string
                targetstorage:
                  description: Mapping from source to target storages. Providing only
                    a single storage ID maps all source storages to that storage.
                    Providing the special value '1' will map each source storage to
                    itself.
                  format: storage-pair-list
                  type: string
                with-local-disks:
                  description: Enable live storage migration for local disk
                  type: boolean
              required:
              - target
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migrate virtual machine. Creates a new migration task.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/monitor:
    post:
      description: Execute QEMU monitor commands.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_monitor
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command:
                  description: The monitor command.
                  type: string
              required:
              - command
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Execute QEMU monitor commands.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/move_disk:
    post:
      description: Move volume to different storage or to a different VM.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_move_disk
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: move limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: integer
                delete:
                  default: 0
                  description: Delete the original disk after successful copy. By
                    default the original disk is kept as unused disk.
                  type: boolean
                digest:
                  description: "Prevent changes if current configuration file has\
                    \ different SHA1\"\n\t\t    .\" digest. This can be used to prevent\
                    \ concurrent modifications."
                  maxLength: 40
                  type: string
                disk:
                  description: The disk you want to move.
                  enum:
                  - ide0
                  - ide1
                  - ide2
                  - ide3
                  - scsi0
                  - scsi1
                  - scsi2
                  - scsi3
                  - scsi4
                  - scsi5
                  - scsi6
                  - scsi7
                  - scsi8
                  - scsi9
                  - scsi10
                  - scsi11
                  - scsi12
                  - scsi13
                  - scsi14
                  - scsi15
                  - scsi16
                  - scsi17
                  - scsi18
                  - scsi19
                  - scsi20
                  - scsi21
                  - scsi22
                  - scsi23
                  - scsi24
                  - scsi25
                  - scsi26
                  - scsi27
                  - scsi28
                  - scsi29
                  - scsi30
                  - virtio0
                  - virtio1
                  - virtio2
                  - virtio3
                  - virtio4
                  - virtio5
                  - virtio6
                  - virtio7
                  - virtio8
                  - virtio9
                  - virtio10
                  - virtio11
                  - virtio12
                  - virtio13
                  - virtio14
                  - virtio15
                  - sata0
                  - sata1
                  - sata2
                  - sata3
                  - sata4
                  - sata5
                  - efidisk0
                  - tpmstate0
                  - unused0
                  - unused1
                  - unused2
                  - unused3
                  - unused4
                  - unused5
                  - unused6
                  - unused7
                  - unused8
                  - unused9
                  - unused10
                  - unused11
                  - unused12
                  - unused13
                  - unused14
                  - unused15
                  - unused16
                  - unused17
                  - unused18
                  - unused19
                  - unused20
                  - unused21
                  - unused22
                  - unused23
                  - unused24
                  - unused25
                  - unused26
                  - unused27
                  - unused28
                  - unused29
                  - unused30
                  - unused31
                  - unused32
                  - unused33
                  - unused34
                  - unused35
                  - unused36
                  - unused37
                  - unused38
                  - unused39
                  - unused40
                  - unused41
                  - unused42
                  - unused43
                  - unused44
                  - unused45
                  - unused46
                  - unused47
                  - unused48
                  - unused49
                  - unused50
                  - unused51
                  - unused52
                  - unused53
                  - unused54
                  - unused55
                  - unused56
                  - unused57
                  - unused58
                  - unused59
                  - unused60
                  - unused61
                  - unused62
                  - unused63
                  - unused64
                  - unused65
                  - unused66
                  - unused67
                  - unused68
                  - unused69
                  - unused70
                  - unused71
                  - unused72
                  - unused73
                  - unused74
                  - unused75
                  - unused76
                  - unused77
                  - unused78
                  - unused79
                  - unused80
                  - unused81
                  - unused82
                  - unused83
                  - unused84
                  - unused85
                  - unused86
                  - unused87
                  - unused88
                  - unused89
                  - unused90
                  - unused91
                  - unused92
                  - unused93
                  - unused94
                  - unused95
                  - unused96
                  - unused97
                  - unused98
                  - unused99
                  - unused100
                  - unused101
                  - unused102
                  - unused103
                  - unused104
                  - unused105
                  - unused106
                  - unused107
                  - unused108
                  - unused109
                  - unused110
                  - unused111
                  - unused112
                  - unused113
                  - unused114
                  - unused115
                  - unused116
                  - unused117
                  - unused118
                  - unused119
                  - unused120
                  - unused121
                  - unused122
                  - unused123
                  - unused124
                  - unused125
                  - unused126
                  - unused127
                  - unused128
                  - unused129
                  - unused130
                  - unused131
                  - unused132
                  - unused133
                  - unused134
                  - unused135
                  - unused136
                  - unused137
                  - unused138
                  - unused139
                  - unused140
                  - unused141
                  - unused142
                  - unused143
                  - unused144
                  - unused145
                  - unused146
                  - unused147
                  - unused148
                  - unused149
                  - unused150
                  - unused151
                  - unused152
                  - unused153
                  - unused154
                  - unused155
                  - unused156
                  - unused157
                  - unused158
                  - unused159
                  - unused160
                  - unused161
                  - unused162
                  - unused163
                  - unused164
                  - unused165
                  - unused166
                  - unused167
                  - unused168
                  - unused169
                  - unused170
                  - unused171
                  - unused172
                  - unused173
                  - unused174
                  - unused175
                  - unused176
                  - unused177
                  - unused178
                  - unused179
                  - unused180
                  - unused181
                  - unused182
                  - unused183
                  - unused184
                  - unused185
                  - unused186
                  - unused187
                  - unused188
                  - unused189
                  - unused190
                  - unused191
                  - unused192
                  - unused193
                  - unused194
                  - unused195
                  - unused196
                  - unused197
                  - unused198
                  - unused199
                  - unused200
                  - unused201
                  - unused202
                  - unused203
                  - unused204
                  - unused205
                  - unused206
                  - unused207
                  - unused208
                  - unused209
                  - unused210
                  - unused211
                  - unused212
                  - unused213
                  - unused214
                  - unused215
                  - unused216
                  - unused217
                  - unused218
                  - unused219
                  - unused220
                  - unused221
                  - unused222
                  - unused223
                  - unused224
                  - unused225
                  - unused226
                  - unused227
                  - unused228
                  - unused229
                  - unused230
                  - unused231
                  - unused232
                  - unused233
                  - unused234
                  - unused235
                  - unused236
                  - unused237
                  - unused238
                  - unused239
                  - unused240
                  - unused241
                  - unused242
                  - unused243
                  - unused244
                  - unused245
                  - unused246
                  - unused247
                  - unused248
                  - unused249
                  - unused250
                  - unused251
                  - unused252
                  - unused253
                  - unused254
                  - unused255
                  type: string
                format:
                  description: Target Format.
                  enum:
                  - raw
                  - qcow2
                  - vmdk
                  type: string
                storage:
                  description: Target storage.
                  format: pve-storage-id
                  type: string
                target-digest:
                  description: "Prevent changes if the current config file of the\
                    \ target VM has a\"\n\t\t    .\" different SHA1 digest. This can\
                    \ be used to detect concurrent modifications."
                  maxLength: 40
                  type: string
                target-disk:
                  description: The config key the disk will be moved to on the target
                    VM (for example, ide0 or scsi1). Default is the source disk key.
                  enum:
                  - ide0
                  - ide1
                  - ide2
                  - ide3
                  - scsi0
                  - scsi1
                  - scsi2
                  - scsi3
                  - scsi4
                  - scsi5
                  - scsi6
                  - scsi7
                  - scsi8
                  - scsi9
                  - scsi10
                  - scsi11
                  - scsi12
                  - scsi13
                  - scsi14
                  - scsi15
                  - scsi16
                  - scsi17
                  - scsi18
                  - scsi19
                  - scsi20
                  - scsi21
                  - scsi22
                  - scsi23
                  - scsi24
                  - scsi25
                  - scsi26
                  - scsi27
                  - scsi28
                  - scsi29
                  - scsi30
                  - virtio0
                  - virtio1
                  - virtio2
                  - virtio3
                  - virtio4
                  - virtio5
                  - virtio6
                  - virtio7
                  - virtio8
                  - virtio9
                  - virtio10
                  - virtio11
                  - virtio12
                  - virtio13
                  - virtio14
                  - virtio15
                  - sata0
                  - sata1
                  - sata2
                  - sata3
                  - sata4
                  - sata5
                  - efidisk0
                  - tpmstate0
                  - unused0
                  - unused1
                  - unused2
                  - unused3
                  - unused4
                  - unused5
                  - unused6
                  - unused7
                  - unused8
                  - unused9
                  - unused10
                  - unused11
                  - unused12
                  - unused13
                  - unused14
                  - unused15
                  - unused16
                  - unused17
                  - unused18
                  - unused19
                  - unused20
                  - unused21
                  - unused22
                  - unused23
                  - unused24
                  - unused25
                  - unused26
                  - unused27
                  - unused28
                  - unused29
                  - unused30
                  - unused31
                  - unused32
                  - unused33
                  - unused34
                  - unused35
                  - unused36
                  - unused37
                  - unused38
                  - unused39
                  - unused40
                  - unused41
                  - unused42
                  - unused43
                  - unused44
                  - unused45
                  - unused46
                  - unused47
                  - unused48
                  - unused49
                  - unused50
                  - unused51
                  - unused52
                  - unused53
                  - unused54
                  - unused55
                  - unused56
                  - unused57
                  - unused58
                  - unused59
                  - unused60
                  - unused61
                  - unused62
                  - unused63
                  - unused64
                  - unused65
                  - unused66
                  - unused67
                  - unused68
                  - unused69
                  - unused70
                  - unused71
                  - unused72
                  - unused73
                  - unused74
                  - unused75
                  - unused76
                  - unused77
                  - unused78
                  - unused79
                  - unused80
                  - unused81
                  - unused82
                  - unused83
                  - unused84
                  - unused85
                  - unused86
                  - unused87
                  - unused88
                  - unused89
                  - unused90
                  - unused91
                  - unused92
                  - unused93
                  - unused94
                  - unused95
                  - unused96
                  - unused97
                  - unused98
                  - unused99
                  - unused100
                  - unused101
                  - unused102
                  - unused103
                  - unused104
                  - unused105
                  - unused106
                  - unused107
                  - unused108
                  - unused109
                  - unused110
                  - unused111
                  - unused112
                  - unused113
                  - unused114
                  - unused115
                  - unused116
                  - unused117
                  - unused118
                  - unused119
                  - unused120
                  - unused121
                  - unused122
                  - unused123
                  - unused124
                  - unused125
                  - unused126
                  - unused127
                  - unused128
                  - unused129
                  - unused130
                  - unused131
                  - unused132
                  - unused133
                  - unused134
                  - unused135
                  - unused136
                  - unused137
                  - unused138
                  - unused139
                  - unused140
                  - unused141
                  - unused142
                  - unused143
                  - unused144
                  - unused145
                  - unused146
                  - unused147
                  - unused148
                  - unused149
                  - unused150
                  - unused151
                  - unused152
                  - unused153
                  - unused154
                  - unused155
                  - unused156
                  - unused157
                  - unused158
                  - unused159
                  - unused160
                  - unused161
                  - unused162
                  - unused163
                  - unused164
                  - unused165
                  - unused166
                  - unused167
                  - unused168
                  - unused169
                  - unused170
                  - unused171
                  - unused172
                  - unused173
                  - unused174
                  - unused175
                  - unused176
                  - unused177
                  - unused178
                  - unused179
                  - unused180
                  - unused181
                  - unused182
                  - unused183
                  - unused184
                  - unused185
                  - unused186
                  - unused187
                  - unused188
                  - unused189
                  - unused190
                  - unused191
                  - unused192
                  - unused193
                  - unused194
                  - unused195
                  - unused196
                  - unused197
                  - unused198
                  - unused199
                  - unused200
                  - unused201
                  - unused202
                  - unused203
                  - unused204
                  - unused205
                  - unused206
                  - unused207
                  - unused208
                  - unused209
                  - unused210
                  - unused211
                  - unused212
                  - unused213
                  - unused214
                  - unused215
                  - unused216
                  - unused217
                  - unused218
                  - unused219
                  - unused220
                  - unused221
                  - unused222
                  - unused223
                  - unused224
                  - unused225
                  - unused226
                  - unused227
                  - unused228
                  - unused229
                  - unused230
                  - unused231
                  - unused232
                  - unused233
                  - unused234
                  - unused235
                  - unused236
                  - unused237
                  - unused238
                  - unused239
                  - unused240
                  - unused241
                  - unused242
                  - unused243
                  - unused244
                  - unused245
                  - unused246
                  - unused247
                  - unused248
                  - unused249
                  - unused250
                  - unused251
                  - unused252
                  - unused253
                  - unused254
                  - unused255
                  type: string
                target-vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
              required:
              - disk
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Move volume to different storage or to a different VM.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/mtunnel:
    post:
      description: Migration tunnel endpoint - only for internal use by VM migration.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_mtunnel
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bridges:
                  description: List of network bridges to check availability. Will
                    be checked again for actually used bridges during migration.
                  format: pve-bridge-id-list
                  type: string
                storages:
                  description: List of storages to check permission and availability.
                    Will be checked again for all actually used storages during migration.
                  format: pve-storage-id-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migration tunnel endpoint - only for internal use by VM migration.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/mtunnelwebsocket:
    get:
      description: Migration tunnel endpoint for websocket upgrade - only for internal
        use by VM migration.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_mtunnelwebsocket
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: unix socket to forward to
        in: query
        name: socket
        required: true
        schema:
          description: unix socket to forward to
          type: string
      - description: ticket return by initial 'mtunnel' API call, or retrieved via
          'ticket' tunnel command
        in: query
        name: ticket
        required: true
        schema:
          description: ticket return by initial 'mtunnel' API call, or retrieved via
            'ticket' tunnel command
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  port:
                    type: string
                  socket:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migration tunnel endpoint for websocket upgrade - only for internal
        use by VM migration.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/pending:
    get:
      description: Get the virtual machine configuration with both current and pending
        values.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_pending
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    delete:
                      description: Indicates a pending delete request if present and
                        not 0. The value 2 indicates a force-delete request.
                      type: integer
                    key:
                      description: Configuration option name.
                      type: string
                    pending:
                      description: Pending value.
                      type: string
                    value:
                      description: Current value.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the virtual machine configuration with both current and pending
        values.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/remote_migrate:
    post:
      description: Migrate virtual machine to a remote cluster. Creates a new migration
        task. EXPERIMENTAL feature!
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_remote_migrate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bwlimit:
                  default: migrate limit from datacenter or storage config
                  description: Override I/O bandwidth limit (in KiB/s).
                  minimum: '0'
                  type: integer
                delete:
                  default: 0
                  description: Delete the original VM and related data after successful
                    migration. By default the original VM is kept on the source cluster
                    in a stopped state.
                  type: boolean
                online:
                  description: Use online/live migration if VM is running. Ignored
                    if VM is stopped.
                  type: boolean
                target-bridge:
                  description: Mapping from source to target bridges. Providing only
                    a single bridge ID maps all source bridges to that bridge. Providing
                    the special value '1' will map each source bridge to itself.
                  format: bridge-pair-list
                  type: string
                target-endpoint:
                  description: Remote target endpoint
                  format: proxmox-remote
                  type: string
                target-storage:
                  description: Mapping from source to target storages. Providing only
                    a single storage ID maps all source storages to that storage.
                    Providing the special value '1' will map each source storage to
                    itself.
                  format: storage-pair-list
                  type: string
                target-vmid:
                  description: The (unique) ID of the VM.
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
              required:
              - target-bridge
              - target-endpoint
              - target-storage
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Migrate virtual machine to a remote cluster. Creates a new migration
        task. EXPERIMENTAL feature!
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/resize:
    put:
      description: Extend volume size.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_resize
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA1 digest. This can be used to prevent concurrent modifications.
                  maxLength: 40
                  type: string
                disk:
                  description: The disk you want to resize.
                  enum:
                  - ide0
                  - ide1
                  - ide2
                  - ide3
                  - scsi0
                  - scsi1
                  - scsi2
                  - scsi3
                  - scsi4
                  - scsi5
                  - scsi6
                  - scsi7
                  - scsi8
                  - scsi9
                  - scsi10
                  - scsi11
                  - scsi12
                  - scsi13
                  - scsi14
                  - scsi15
                  - scsi16
                  - scsi17
                  - scsi18
                  - scsi19
                  - scsi20
                  - scsi21
                  - scsi22
                  - scsi23
                  - scsi24
                  - scsi25
                  - scsi26
                  - scsi27
                  - scsi28
                  - scsi29
                  - scsi30
                  - virtio0
                  - virtio1
                  - virtio2
                  - virtio3
                  - virtio4
                  - virtio5
                  - virtio6
                  - virtio7
                  - virtio8
                  - virtio9
                  - virtio10
                  - virtio11
                  - virtio12
                  - virtio13
                  - virtio14
                  - virtio15
                  - sata0
                  - sata1
                  - sata2
                  - sata3
                  - sata4
                  - sata5
                  - efidisk0
                  - tpmstate0
                  type: string
                size:
                  description: The new size. With the `+` sign the value is added
                    to the actual size of the volume and without it, the value is
                    taken as an absolute one. Shrinking disk size is not supported.
                  pattern: \+?\d+(\.\d+)?[KMGT]?
                  type: string
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
              required:
              - disk
              - size
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Extend volume size.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/rrd:
    get:
      description: Read VM RRD statistics (returns PNG)
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_rrd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: The list of datasources you want to display.
        in: query
        name: ds
        required: true
        schema:
          description: The list of datasources you want to display.
          format: pve-configid-list
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filename:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read VM RRD statistics (returns PNG)
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/rrddata:
    get:
      description: Read VM RRD statistics
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_rrddata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read VM RRD statistics
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/sendkey:
    put:
      description: Send key event to virtual machine.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_sendkey
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: The key (qemu monitor encoding).
                  type: string
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
              required:
              - key
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Send key event to virtual machine.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot:
    get:
      description: List all snapshots.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    description:
                      description: Snapshot description.
                      type: string
                    name:
                      description: Snapshot identifier. Value 'current' identifies
                        the current VM.
                      type: string
                    parent:
                      description: Parent snapshot identifier.
                      type: string
                    snaptime:
                      description: Snapshot creation time
                      type: integer
                    vmstate:
                      description: Snapshot includes RAM.
                      type: boolean
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all snapshots.
      tags:
      - Nodes
    post:
      description: Snapshot a VM.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A textual description or comment.
                  type: string
                snapname:
                  description: The name of the snapshot.
                  format: pve-configid
                  maxLength: 40
                  type: string
                vmstate:
                  description: Save the vmstate
                  type: boolean
              required:
              - snapname
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Snapshot a VM.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot/nodes/{node}/qemu/{vmid}/snapshot/{snapname}
  : delete:
      description: Delete a VM snapshot.
      operationId: delete_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: For removal from config file, even if removing disk snapshots
          fails.
        in: query
        name: force
        required: false
        schema:
          description: For removal from config file, even if removing disk snapshots
            fails.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a VM snapshot.
      tags:
      - Nodes
    get:
      description: ''
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ''
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config
  : get:
      description: Get snapshot configuration
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname_nodes_node_qemu_vmid_snapshot_snapname_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get snapshot configuration
      tags:
      - Nodes
    put:
      description: Update snapshot metadata.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname_nodes_node_qemu_vmid_snapshot_snapname_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A textual description or comment.
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update snapshot metadata.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/snapshot/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback
  : post:
      description: Rollback VM state to specified snapshot.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_snapshot_nodes_node_qemu_vmid_snapshot_snapname_nodes_node_qemu_vmid_snapshot_snapname_rollback
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The snapname parameter
        in: path
        name: snapname
        required: true
        schema:
          description: The snapname parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                start:
                  default: 0
                  description: 'Whether the VM should get started after rolling back
                    successfully. (Note: VMs will be automatically started if the
                    snapshot includes RAM.)'
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Rollback VM state to specified snapshot.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/spiceproxy:
    post:
      description: Returns a SPICE configuration to connect to the VM.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_spiceproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                proxy:
                  description: SPICE proxy server. This can be used by the client
                    to specify the proxy server. All nodes in a cluster runs 'spiceproxy',
                    so it is up to the client to choose one. By default, we return
                    the node where the VM is currently running. As reasonable setting
                    is to use same node you use to connect to the API (This is window.location.hostname
                    for the JS GUI).
                  format: address
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returned values can be directly passed to the 'remote-viewer'
                  application.
                type: object
          description: Returned values can be directly passed to the 'remote-viewer'
            application.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Returns a SPICE configuration to connect to the VM.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status:
    get:
      description: Directory index
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/current
  : get:
      description: Get virtual machine status.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_current
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  agent:
                    description: QEMU Guest Agent is enabled in config.
                    type: boolean
                  clipboard:
                    description: Enable a specific clipboard. If not set, depending
                      on the display type the SPICE one will be added.
                    type: string
                  cpu:
                    description: Current CPU usage.
                    type: number
                  cpus:
                    description: Maximum usable CPUs.
                    type: number
                  diskread:
                    description: 'The amount of bytes the guest read from it''s block
                      devices since the guest was started. (Note: This info is not
                      available for all storage types.)'
                    type: integer
                  diskwrite:
                    description: 'The amount of bytes the guest wrote from it''s block
                      devices since the guest was started. (Note: This info is not
                      available for all storage types.)'
                    type: integer
                  ha:
                    description: HA manager service status.
                    type: object
                  lock:
                    description: The current config lock, if any.
                    type: string
                  maxdisk:
                    description: Root disk size in bytes.
                    type: integer
                  maxmem:
                    description: Maximum memory in bytes.
                    type: integer
                  mem:
                    description: Currently used memory in bytes.
                    type: integer
                  name:
                    description: VM (host)name.
                    type: string
                  netin:
                    description: The amount of traffic in bytes that was sent to the
                      guest over the network since it was started.
                    type: integer
                  netout:
                    description: The amount of traffic in bytes that was sent from
                      the guest over the network since it was started.
                    type: integer
                  pid:
                    description: PID of the QEMU process, if the VM is running.
                    type: integer
                  qmpstatus:
                    description: VM run state from the 'query-status' QMP monitor
                      command.
                    type: string
                  running-machine:
                    description: The currently running machine type (if running).
                    type: string
                  running-qemu:
                    description: The QEMU version the VM is currently using (if running).
                    type: string
                  serial:
                    description: Guest has serial device configured.
                    type: boolean
                  spice:
                    description: QEMU VGA configuration supports spice.
                    type: boolean
                  status:
                    description: QEMU process status.
                    type: string
                  tags:
                    description: The current configured tags, if any
                    type: string
                  template:
                    description: Determines if the guest is a template.
                    type: boolean
                  uptime:
                    description: Uptime in seconds.
                    type: integer
                  vmid:
                    description: The (unique) ID of the VM.
                    format: pve-vmid
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get virtual machine status.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/reboot
  : post:
      description: Reboot the VM by shutting it down, and starting it again. Applies
        pending changes.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_reboot
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                timeout:
                  description: Wait maximal timeout seconds for the shutdown.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reboot the VM by shutting it down, and starting it again. Applies pending
        changes.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/reset
  : post:
      description: Reset virtual machine.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_reset
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reset virtual machine.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/resume
  : post:
      description: Resume virtual machine.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_resume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                nocheck:
                  type: boolean
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Resume virtual machine.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/shutdown
  : post:
      description: Shutdown virtual machine. This is similar to pressing the power
        button on a physical machine. This will send an ACPI event for the guest OS,
        which should then proceed to a clean shutdown.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_shutdown
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                forceStop:
                  default: 0
                  description: Make sure the VM stops.
                  type: boolean
                keepActive:
                  default: 0
                  description: Do not deactivate storage volumes.
                  type: boolean
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
                timeout:
                  description: Wait maximal timeout seconds.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Shutdown virtual machine. This is similar to pressing the power button
        on a physical machine. This will send an ACPI event for the guest OS, which
        should then proceed to a clean shutdown.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/start
  : post:
      description: Start virtual machine.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_start
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force-cpu:
                  description: Override QEMU's -cpu argument with the given string.
                  type: string
                machine:
                  description: Specify the QEMU machine.
                  format:
                    enable-s3:
                      description: Enables S3 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    enable-s4:
                      description: Enables S4 power state. Defaults to false beginning
                        with machine types 9.2+pve1, true before.
                      optional: 1
                      type: boolean
                    type:
                      default_key: 1
                      description: Specifies the QEMU machine type.
                      format_description: machine type
                      maxLength: 40
                      optional: 1
                      pattern: (pc|pc(-i440fx)?-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|q35|pc-q35-\d+(\.\d+)+(\+pve\d+)?(\.pxe)?|virt(?:-\d+(\.\d+)+)?(\+pve\d+)?)
                      type: string
                    viommu:
                      description: Enable and set guest vIOMMU variant (Intel vIOMMU
                        needs q35 to be set as machine type).
                      enum:
                      - intel
                      - virtio
                      optional: 1
                      type: string
                  type: string
                migratedfrom:
                  description: The cluster node name.
                  format: pve-node
                  type: string
                migration_network:
                  description: CIDR of the (sub) network that is used for migration.
                  format: CIDR
                  type: string
                migration_type:
                  description: Migration traffic is encrypted using an SSH tunnel
                    by default. On secure, completely private networks this can be
                    disabled to increase performance.
                  enum:
                  - secure
                  - insecure
                  type: string
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
                stateuri:
                  description: Some command save/restore state from this location.
                  maxLength: 128
                  type: string
                targetstorage:
                  description: Mapping from source to target storages. Providing only
                    a single storage ID maps all source storages to that storage.
                    Providing the special value '1' will map each source storage to
                    itself.
                  format: storage-pair-list
                  type: string
                timeout:
                  default: max(30, vm memory in GiB)
                  description: Wait maximal timeout seconds.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start virtual machine.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/stop
  : post:
      description: Stop virtual machine. The qemu process will exit immediately. This
        is akin to pulling the power plug of a running computer and may damage the
        VM data.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_stop
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                keepActive:
                  default: 0
                  description: Do not deactivate storage volumes.
                  type: boolean
                migratedfrom:
                  description: The cluster node name.
                  format: pve-node
                  type: string
                overrule-shutdown:
                  default: 0
                  description: Try to abort active 'qmshutdown' tasks before stopping.
                  type: boolean
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
                timeout:
                  description: Wait maximal timeout seconds.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop virtual machine. The qemu process will exit immediately. This
        is akin to pulling the power plug of a running computer and may damage the
        VM data.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/status/nodes/{node}/qemu/{vmid}/status/suspend
  : post:
      description: Suspend virtual machine.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_status_nodes_node_qemu_vmid_status_suspend
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                skiplock:
                  description: Ignore locks - only root is allowed to use this option.
                  type: boolean
                statestorage:
                  description: The storage for the VM state
                  format: pve-storage-id
                  type: string
                todisk:
                  default: 0
                  description: If set, suspends the VM to disk. Will be resumed on
                    next VM start.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Suspend virtual machine.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/template:
    post:
      description: Create a Template.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_template
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disk:
                  description: If you want to convert only 1 disk to base image.
                  enum:
                  - ide0
                  - ide1
                  - ide2
                  - ide3
                  - scsi0
                  - scsi1
                  - scsi2
                  - scsi3
                  - scsi4
                  - scsi5
                  - scsi6
                  - scsi7
                  - scsi8
                  - scsi9
                  - scsi10
                  - scsi11
                  - scsi12
                  - scsi13
                  - scsi14
                  - scsi15
                  - scsi16
                  - scsi17
                  - scsi18
                  - scsi19
                  - scsi20
                  - scsi21
                  - scsi22
                  - scsi23
                  - scsi24
                  - scsi25
                  - scsi26
                  - scsi27
                  - scsi28
                  - scsi29
                  - scsi30
                  - virtio0
                  - virtio1
                  - virtio2
                  - virtio3
                  - virtio4
                  - virtio5
                  - virtio6
                  - virtio7
                  - virtio8
                  - virtio9
                  - virtio10
                  - virtio11
                  - virtio12
                  - virtio13
                  - virtio14
                  - virtio15
                  - sata0
                  - sata1
                  - sata2
                  - sata3
                  - sata4
                  - sata5
                  - efidisk0
                  - tpmstate0
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: the task ID.
                type: string
          description: the task ID.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a Template.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/termproxy:
    post:
      description: Creates a TCP proxy connections.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_termproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                serial:
                  description: opens a serial terminal (defaults to display)
                  enum:
                  - serial0
                  - serial1
                  - serial2
                  - serial3
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a TCP proxy connections.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/unlink:
    put:
      description: Unlink/delete disk images.
      operationId: put_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_unlink
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  description: Force physical removal. Without this, we simple remove
                    the disk from the config file and create an additional configuration
                    entry called 'unused[n]', which contains the volume ID. Unlink
                    of unused[n] always cause physical removal.
                  type: boolean
                idlist:
                  description: A list of disk IDs you want to delete.
                  format: pve-configid-list
                  type: string
              required:
              - idlist
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Unlink/delete disk images.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/vncproxy:
    post:
      description: Creates a TCP VNC proxy connections.
      operationId: post_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_vncproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                generate-password:
                  default: 0
                  description: Generates a random password to be used as ticket instead
                    of the API ticket.
                  type: boolean
                websocket:
                  description: Prepare for websocket upgrade (only required when using
                    serial terminal, otherwise upgrade is always possible).
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a TCP VNC proxy connections.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/qemu/nodes/{node}/qemu/{vmid}/nodes/{node}/qemu/{vmid}/vncwebsocket:
    get:
      description: Opens a weksocket for VNC traffic.
      operationId: get_nodes_nodes_node_nodes_node_qemu_nodes_node_qemu_vmid_nodes_node_qemu_vmid_vncwebsocket
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The vmid parameter
        in: path
        name: vmid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxVmId'
      - description: Port number returned by previous vncproxy call.
        in: query
        name: port
        required: true
        schema:
          description: Port number returned by previous vncproxy call.
          maximum: 5999
          minimum: 5900
          type: integer
      - description: Ticket from previous call to vncproxy.
        in: query
        name: vncticket
        required: true
        schema:
          description: Ticket from previous call to vncproxy.
          maxLength: 512
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  port:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Opens a weksocket for VNC traffic.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/query-url-metadata:
    get:
      description: 'Query metadata of an URL: file size, file name and mime type.'
      operationId: get_nodes_nodes_node_nodes_node_query-url-metadata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The URL to query the metadata from.
        in: query
        name: url
        required: true
        schema:
          description: The URL to query the metadata from.
          pattern: https?://.*
          type: string
      - description: If false, no SSL/TLS certificates will be verified.
        in: query
        name: verify-certificates
        required: false
        schema:
          default: 1
          description: If false, no SSL/TLS certificates will be verified.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filename:
                    type: string
                  mimetype:
                    type: string
                  size:
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Query metadata of an URL: file size, file name and mime type.'
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/replication:
    get:
      description: List status of all replication jobs on this node.
      operationId: get_nodes_nodes_node_nodes_node_replication
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Only list replication jobs for this guest.
        in: query
        name: guest
        required: false
        schema:
          description: Only list replication jobs for this guest.
          format: pve-vmid
          maximum: 999999999
          minimum: 100
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List status of all replication jobs on this node.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}/nodes/{node}/replication/{id}/log:
    get:
      description: Read replication job log.
      operationId: get_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id_nodes_node_replication_id_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
      - in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read replication job log.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}/nodes/{node}/replication/{id}/schedule_now:
    post:
      description: Schedule replication job to start as soon as possible.
      operationId: post_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id_nodes_node_replication_id_schedule_now
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Schedule replication job to start as soon as possible.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/replication/nodes/{node}/replication/{id}/nodes/{node}/replication/{id}/status:
    get:
      description: Get replication job status.
      operationId: get_nodes_nodes_node_nodes_node_replication_nodes_node_replication_id_nodes_node_replication_id_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get replication job status.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/report:
    get:
      description: Gather various systems information about a node
      operationId: get_nodes_nodes_node_nodes_node_report
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Gather various systems information about a node
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/rrd:
    get:
      description: Read node RRD statistics (returns PNG)
      operationId: get_nodes_nodes_node_nodes_node_rrd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: The list of datasources you want to display.
        in: query
        name: ds
        required: true
        schema:
          description: The list of datasources you want to display.
          format: pve-configid-list
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filename:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read node RRD statistics (returns PNG)
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/rrddata:
    get:
      description: Read node RRD statistics
      operationId: get_nodes_nodes_node_nodes_node_rrddata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read node RRD statistics
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan:
    get:
      description: Index of available scan methods
      operationId: get_nodes_nodes_node_nodes_node_scan
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    method:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Index of available scan methods
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/cifs:
    get:
      description: Scan remote CIFS server.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_cifs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: SMB domain (Workgroup).
        in: query
        name: domain
        required: false
        schema:
          description: SMB domain (Workgroup).
          type: string
      - description: User password.
        in: query
        name: password
        required: false
        schema:
          description: User password.
          type: string
      - description: The server address (name or IP).
        in: query
        name: server
        required: true
        schema:
          description: The server address (name or IP).
          format: pve-storage-server
          type: string
      - description: User name.
        in: query
        name: username
        required: false
        schema:
          description: User name.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    description:
                      description: Descriptive text from server.
                      type: string
                    share:
                      description: The cifs share name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan remote CIFS server.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/glusterfs:
    get:
      description: Scan remote GlusterFS server.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_glusterfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The server address (name or IP).
        in: query
        name: server
        required: true
        schema:
          description: The server address (name or IP).
          format: pve-storage-server
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    volname:
                      description: The volume name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan remote GlusterFS server.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/iscsi:
    get:
      description: Scan remote iSCSI server.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_iscsi
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iSCSI portal (IP or DNS name with optional port).
        in: query
        name: portal
        required: true
        schema:
          description: The iSCSI portal (IP or DNS name with optional port).
          format: pve-storage-portal-dns
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    portal:
                      description: The iSCSI portal name.
                      type: string
                    target:
                      description: The iSCSI target name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan remote iSCSI server.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/lvm:
    get:
      description: List local LVM volume groups.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_lvm
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    vg:
                      description: The LVM logical volume group name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List local LVM volume groups.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/lvmthin:
    get:
      description: List local LVM Thin Pools.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_lvmthin
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - in: query
        name: vg
        required: true
        schema:
          maxLength: 100
          pattern: '[a-zA-Z0-9\.\+\_][a-zA-Z0-9\.\+\_\-]+'
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    lv:
                      description: The LVM Thin Pool name (LVM logical volume).
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List local LVM Thin Pools.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/nfs:
    get:
      description: Scan remote NFS server.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_nfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The server address (name or IP).
        in: query
        name: server
        required: true
        schema:
          description: The server address (name or IP).
          format: pve-storage-server
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    options:
                      description: NFS export options.
                      type: string
                    path:
                      description: The exported path.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan remote NFS server.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/pbs:
    get:
      description: Scan remote Proxmox Backup Server.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_pbs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Certificate SHA 256 fingerprint.
        in: query
        name: fingerprint
        required: false
        schema:
          description: Certificate SHA 256 fingerprint.
          pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
          type: string
      - description: User password or API token secret.
        in: query
        name: password
        required: true
        schema:
          description: User password or API token secret.
          type: string
      - description: Optional port.
        in: query
        name: port
        required: false
        schema:
          default: 8007
          description: Optional port.
          maximum: 65535
          minimum: 1
          type: integer
      - description: The server address (name or IP).
        in: query
        name: server
        required: true
        schema:
          description: The server address (name or IP).
          format: pve-storage-server
          type: string
      - description: User-name or API token-ID.
        in: query
        name: username
        required: true
        schema:
          description: User-name or API token-ID.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      description: Comment from server.
                      type: string
                    store:
                      description: The datastore name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan remote Proxmox Backup Server.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/scan/nodes/{node}/scan/zfs:
    get:
      description: Scan zfs pool list on local node.
      operationId: get_nodes_nodes_node_nodes_node_scan_nodes_node_scan_zfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    pool:
                      description: ZFS pool name.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan zfs pool list on local node.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/sdn:
    get:
      description: SDN index.
      operationId: get_nodes_nodes_node_nodes_node_sdn
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: SDN index.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/sdn/nodes/{node}/sdn/zones:
    get:
      description: Get status for all zones.
      operationId: get_nodes_nodes_node_nodes_node_sdn_nodes_node_sdn_zones
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    status:
                      description: Status of zone
                      type: string
                    zone:
                      description: The SDN zone object identifier.
                      format: pve-sdn-zone-id
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get status for all zones.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/sdn/nodes/{node}/sdn/zones/nodes/{node}/sdn/zones/{zone}:
    get:
      description: ''
      operationId: get_nodes_nodes_node_nodes_node_sdn_nodes_node_sdn_zones_nodes_node_sdn_zones_zone
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The zone parameter
        in: path
        name: zone
        required: true
        schema:
          description: The zone parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ''
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/sdn/nodes/{node}/sdn/zones/nodes/{node}/sdn/zones/{zone}/nodes/{node}/sdn/zones/{zone}/content
  : get:
      description: List zone content.
      operationId: get_nodes_nodes_node_nodes_node_sdn_nodes_node_sdn_zones_nodes_node_sdn_zones_zone_nodes_node_sdn_zones_zone_content
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The zone parameter
        in: path
        name: zone
        required: true
        schema:
          description: The zone parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The zone parameter
        in: path
        name: zone
        required: true
        schema:
          description: The zone parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    status:
                      description: Status.
                      type: string
                    statusmsg:
                      description: Status details
                      type: string
                    vnet:
                      description: Vnet identifier.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List zone content.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services:
    get:
      description: Service list.
      operationId: get_nodes_nodes_node_nodes_node_services
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Service list.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}:
    get:
      description: Directory index
      operationId: get_nodes_nodes_node_nodes_node_services_nodes_node_services_service
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/reload:
    post:
      description: Reload service. Falls back to restart if service cannot be reloaded.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_reload
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reload service. Falls back to restart if service cannot be reloaded.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/restart:
    post:
      description: Hard restart service. Use reload if you want to reduce interruptions.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_restart
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Hard restart service. Use reload if you want to reduce interruptions.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/start:
    post:
      description: Start service.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_start
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start service.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/state:
    get:
      description: Read service properties
      operationId: get_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_state
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read service properties
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/stop:
    post:
      description: Stop service.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_stop
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop service.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/spiceshell:
    post:
      description: Creates a SPICE shell.
      operationId: post_nodes_nodes_node_nodes_node_spiceshell
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cmd:
                  default: login
                  description: Run specific command or default to login (requires
                    'root@pam')
                  enum:
                  - ceph_install
                  - upgrade
                  - login
                  type: string
                cmd-opts:
                  default: ''
                  description: Add parameters to a command. Encoded as null terminated
                    strings.
                  type: string
                proxy:
                  description: SPICE proxy server. This can be used by the client
                    to specify the proxy server. All nodes in a cluster runs 'spiceproxy',
                    so it is up to the client to choose one. By default, we return
                    the node where the VM is currently running. As reasonable setting
                    is to use same node you use to connect to the API (This is window.location.hostname
                    for the JS GUI).
                  format: address
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returned values can be directly passed to the 'remote-viewer'
                  application.
                type: object
          description: Returned values can be directly passed to the 'remote-viewer'
            application.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a SPICE shell.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/startall:
    post:
      description: Start all VMs and containers located on this node (by default only
        those with onboot=1).
      operationId: post_nodes_nodes_node_nodes_node_startall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: 'off'
                  description: Issue start command even if virtual guest have 'onboot'
                    not set or set to off.
                  type: boolean
                vms:
                  description: Only consider guests from this comma separated list
                    of VMIDs.
                  format: pve-vmid-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start all VMs and containers located on this node (by default only
        those with onboot=1).
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/status:
    get:
      description: Read node status
      operationId: get_nodes_nodes_node_nodes_node_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  boot-info:
                    description: Meta-information about the boot mode.
                    properties:
                      mode:
                        description: Through which firmware the system got booted.
                        type: string
                      secureboot:
                        description: System is booted in secure mode, only applicable
                          for the "efi" mode.
                        type: boolean
                    type: object
                  cpu:
                    description: The current cpu usage.
                    type: number
                  cpuinfo:
                    properties:
                      cores:
                        description: The number of physical cores of the CPU.
                        type: integer
                      cpus:
                        description: The number of logical threads of the CPU.
                        type: integer
                      model:
                        description: The CPU model
                        type: string
                      sockets:
                        description: The number of logical threads of the CPU.
                        type: integer
                    type: object
                  current-kernel:
                    description: Meta-information about the currently booted kernel
                      of this node.
                    properties:
                      machine:
                        description: Hardware (architecture) type
                        type: string
                      release:
                        description: OS kernel release (e.g., "6.8.0")
                        type: string
                      sysname:
                        description: OS kernel name (e.g., "Linux")
                        type: string
                      version:
                        description: OS kernel version with build info
                        type: string
                    type: object
                  loadavg:
                    description: An array of load avg for 1, 5 and 15 minutes respectively.
                    items:
                      description: The value of the load.
                      type: string
                    type: array
                  memory:
                    properties:
                      free:
                        description: The free memory in bytes.
                        type: integer
                      total:
                        description: The total memory in bytes.
                        type: integer
                      used:
                        description: The used memory in bytes.
                        type: integer
                    type: object
                  pveversion:
                    description: The PVE version string.
                    type: string
                  rootfs:
                    properties:
                      avail:
                        description: The available bytes in the root filesystem.
                        type: integer
                      free:
                        description: The free bytes on the root filesystem.
                        type: integer
                      total:
                        description: The total size of the root filesystem in bytes.
                        type: integer
                      used:
                        description: The used bytes in the root filesystem.
                        type: integer
                    type: object
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read node status
      tags:
      - Nodes
    post:
      description: Reboot or shutdown a node.
      operationId: post_nodes_nodes_node_nodes_node_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command:
                  description: Specify the command.
                  enum:
                  - reboot
                  - shutdown
                  type: string
              required:
              - command
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reboot or shutdown a node.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/stopall:
    post:
      description: Stop all VMs and Containers.
      operationId: post_nodes_nodes_node_nodes_node_stopall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force-stop:
                  default: 1
                  description: Force a hard-stop after the timeout.
                  type: boolean
                timeout:
                  default: 180
                  description: Timeout for each guest shutdown task. Depending on
                    `force-stop`, the shutdown gets then simply aborted or a hard-stop
                    is forced.
                  maximum: 7200
                  minimum: 0
                  type: integer
                vms:
                  description: Only consider Guests with these IDs.
                  format: pve-vmid-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop all VMs and Containers.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage:
    get:
      description: Get status for all datastores.
      operationId: get_nodes_nodes_node_nodes_node_storage
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Only list stores which support this content type.
        in: query
        name: content
        required: false
        schema:
          description: Only list stores which support this content type.
          format: pve-storage-content-list
          type: string
      - description: Only list stores which are enabled (not disabled in config).
        in: query
        name: enabled
        required: false
        schema:
          default: 0
          description: Only list stores which are enabled (not disabled in config).
          type: boolean
      - description: Include information about formats
        in: query
        name: format
        required: false
        schema:
          default: 0
          description: Include information about formats
          type: boolean
      - description: Only list status for  specified storage
        in: query
        name: storage
        required: false
        schema:
          description: Only list status for  specified storage
          format: pve-storage-id
          type: string
      - description: If target is different to 'node', we only lists shared storages
          which content is accessible on this 'node' and the specified 'target' node.
        in: query
        name: target
        required: false
        schema:
          description: If target is different to 'node', we only lists shared storages
            which content is accessible on this 'node' and the specified 'target'
            node.
          format: pve-node
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    active:
                      description: Set when storage is accessible.
                      type: boolean
                    avail:
                      description: Available storage space in bytes.
                      type: integer
                    content:
                      description: Allowed storage content types.
                      format: pve-storage-content-list
                      type: string
                    enabled:
                      description: Set when storage is enabled (not disabled).
                      type: boolean
                    shared:
                      description: Shared flag from storage configuration.
                      type: boolean
                    storage:
                      description: The storage identifier.
                      format: pve-storage-id
                      type: string
                    total:
                      description: Total storage space in bytes.
                      type: integer
                    type:
                      description: Storage type.
                      type: string
                    used:
                      description: Used storage space in bytes.
                      type: integer
                    used_fraction:
                      description: Used fraction (used/total).
                      type: number
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get status for all datastores.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}:
    get:
      description: ''
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    subdir:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ''
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/content:
    get:
      description: List storage content.
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: Only list content of this type.
        in: query
        name: content
        required: false
        schema:
          description: Only list content of this type.
          format: pve-storage-content
          type: string
      - description: Only list images for this VM
        in: query
        name: vmid
        required: false
        schema:
          description: Only list images for this VM
          format: pve-vmid
          maximum: 999999999
          minimum: 100
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    ctime:
                      description: Creation time (seconds since the UNIX Epoch).
                      type: integer
                    encrypted:
                      description: If whole backup is encrypted, value is the fingerprint
                        or '1'  if encrypted. Only useful for the Proxmox Backup Server
                        storage type.
                      type: string
                    format:
                      description: Format identifier ('raw', 'qcow2', 'subvol', 'iso',
                        'tgz' ...)
                      type: string
                    notes:
                      description: Optional notes. If they contain multiple lines,
                        only the first one is returned here.
                      type: string
                    parent:
                      description: Volume identifier of parent (for linked cloned).
                      type: string
                    protected:
                      description: Protection status. Currently only supported for
                        backups.
                      type: boolean
                    size:
                      description: Volume size in bytes.
                      type: integer
                    used:
                      description: Used space. Please note that most storage plugins
                        do not report anything useful here.
                      type: integer
                    verification:
                      description: Last backup verification result, only useful for
                        PBS storages.
                      properties:
                        state:
                          description: Last backup verification state.
                          type: string
                        upid:
                          description: Last backup verification UPID.
                          type: string
                      type: object
                    vmid:
                      description: Associated Owner VMID.
                      type: integer
                    volid:
                      description: Volume identifier.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List storage content.
      tags:
      - Nodes
    post:
      description: Allocate disk images.
      operationId: post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filename:
                  description: The name of the file to create.
                  type: string
                format:
                  description: Format of the image.
                  enum:
                  - raw
                  - qcow2
                  - subvol
                  - vmdk
                  type: string
                size:
                  description: Size in kilobyte (1024 bytes). Optional suffixes 'M'
                    (megabyte, 1024K) and 'G' (gigabyte, 1024M)
                  pattern: \d+[MG]?
                  type: string
                vmid:
                  description: Specify owner VM
                  format: pve-vmid
                  maximum: 999999999
                  minimum: 100
                  type: integer
              required:
              - filename
              - size
              - vmid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Volume identifier
                type: string
          description: Volume identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Allocate disk images.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/content/nodes/{node}/storage/{storage}/content/{volume}
  : delete:
      description: Delete volume
      operationId: delete_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The volume parameter
        in: path
        name: volume
        required: true
        schema:
          description: The volume parameter
          type: string
      - description: Time to wait for the task to finish. We return 'null' if the
          task finish within that time.
        in: query
        name: delay
        required: false
        schema:
          description: Time to wait for the task to finish. We return 'null' if the
            task finish within that time.
          maximum: 30
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete volume
      tags:
      - Nodes
    get:
      description: Get volume attributes
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The volume parameter
        in: path
        name: volume
        required: true
        schema:
          description: The volume parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  format:
                    description: Format identifier ('raw', 'qcow2', 'subvol', 'iso',
                      'tgz' ...)
                    type: string
                  notes:
                    description: Optional notes.
                    type: string
                  path:
                    description: The Path
                    type: string
                  protected:
                    description: Protection status. Currently only supported for backups.
                    type: boolean
                  size:
                    description: Volume size in bytes.
                    type: integer
                  used:
                    description: Used space. Please note that most storage plugins
                      do not report anything useful here.
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get volume attributes
      tags:
      - Nodes
    post:
      description: Copy a volume. This is experimental code - do not use.
      operationId: post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The volume parameter
        in: path
        name: volume
        required: true
        schema:
          description: The volume parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                target:
                  description: Target volume identifier
                  type: string
                target_node:
                  description: Target node. Default is local node.
                  format: pve-node
                  type: string
              required:
              - target
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Copy a volume. This is experimental code - do not use.
      tags:
      - Nodes
    put:
      description: Update volume attributes
      operationId: put_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_content_nodes_node_storage_storage_content_volume
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The volume parameter
        in: path
        name: volume
        required: true
        schema:
          description: The volume parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notes:
                  description: The new notes.
                  type: string
                protected:
                  description: Protection status. Currently only supported for backups.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update volume attributes
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/download-url:
    post:
      description: Download templates, ISO images, OVAs and VM images by using an
        URL.
      operationId: post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_download-url
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                checksum:
                  description: The expected checksum of the file.
                  type: string
                checksum-algorithm:
                  description: The algorithm to calculate the checksum of the file.
                  enum:
                  - md5
                  - sha1
                  - sha224
                  - sha256
                  - sha384
                  - sha512
                  type: string
                compression:
                  description: Decompress the downloaded file using the specified
                    compression algorithm.
                  type: string
                content:
                  description: Content type.
                  enum:
                  - iso
                  - vztmpl
                  - import
                  format: pve-storage-content
                  type: string
                filename:
                  description: 'The name of the file to create. Caution: This will
                    be normalized!'
                  maxLength: 255
                  type: string
                url:
                  description: The URL to download the file from.
                  pattern: https?://.*
                  type: string
                verify-certificates:
                  default: 1
                  description: If false, no SSL/TLS certificates will be verified.
                  type: boolean
              required:
              - content
              - filename
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download templates, ISO images, OVAs and VM images by using an URL.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/file-restore/nodes/{node}/storage/{storage}/file-restore/download
  : get:
      description: Extract a file or directory (as zip archive) from a PBS backup.
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_file-restore_nodes_node_storage_storage_file-restore_download
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: base64-path to the directory or file to download.
        in: query
        name: filepath
        required: true
        schema:
          description: base64-path to the directory or file to download.
          type: string
      - description: Download dirs as 'tar.zst' instead of 'zip'.
        in: query
        name: tar
        required: false
        schema:
          default: 0
          description: Download dirs as 'tar.zst' instead of 'zip'.
          type: boolean
      - description: Backup volume ID or name. Currently only PBS snapshots are supported.
        in: query
        name: volume
        required: true
        schema:
          description: Backup volume ID or name. Currently only PBS snapshots are
            supported.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: 'Type: any'
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Extract a file or directory (as zip archive) from a PBS backup.
      tags:
      - Nodes
  ? /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/file-restore/nodes/{node}/storage/{storage}/file-restore/list
  : get:
      description: List files and directories for single file restore under the given
        path.
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_file-restore_nodes_node_storage_storage_file-restore_list
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: base64-path to the directory or file being listed, or "/".
        in: query
        name: filepath
        required: true
        schema:
          description: base64-path to the directory or file being listed, or "/".
          type: string
      - description: Backup volume ID or name. Currently only PBS snapshots are supported.
        in: query
        name: volume
        required: true
        schema:
          description: Backup volume ID or name. Currently only PBS snapshots are
            supported.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    filepath:
                      description: base64 path of the current entry
                      type: string
                    leaf:
                      description: If this entry is a leaf in the directory graph.
                      type: boolean
                    mtime:
                      description: Entry last-modified time (unix timestamp).
                      type: integer
                    size:
                      description: Entry file size.
                      type: integer
                    text:
                      description: Entry display text.
                      type: string
                    type:
                      description: Entry type.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List files and directories for single file restore under the given
        path.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/import-metadata:
    get:
      description: Get the base parameters for creating a guest which imports data
        from a foreign importable guest, like an ESXi VM
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_import-metadata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: Volume identifier for the guest archive/entry.
        in: query
        name: volume
        required: true
        schema:
          description: Volume identifier for the guest archive/entry.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Information about how to import a guest.
                properties:
                  create-args:
                    description: Parameters which can be used in a call to create
                      a VM or container.
                    type: object
                  disks:
                    description: Recognised disk volumes as `$bus$id` => `$storeid:$path`
                      map.
                    type: object
                  net:
                    description: Recognised network interfaces as `net$id` => { ...params
                      } object.
                    type: object
                  source:
                    description: The type of the import-source of this guest volume.
                    type: string
                  type:
                    description: The type of guest this is going to produce.
                    type: string
                  warnings:
                    description: List of known issues that can affect the import of
                      a guest. Note that lack of warning does not imply that there
                      cannot be any problems.
                    items:
                      properties:
                        key:
                          description: Related subject (config) key of warning.
                          type: string
                        type:
                          description: What this warning is about.
                          type: string
                        value:
                          description: Related subject (config) value of warning.
                          type: string
                      type: object
                    type: array
                type: object
          description: Information about how to import a guest.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the base parameters for creating a guest which imports data from
        a foreign importable guest, like an ESXi VM
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/prunebackups:
    delete:
      description: Prune backups. Only those using the standard naming scheme are
        considered.
      operationId: delete_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_prunebackups
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: Use these retention options instead of those from the storage
          configuration.
        in: query
        name: prune-backups
        required: false
        schema:
          description: Use these retention options instead of those from the storage
            configuration.
          format: prune-backups
          type: string
      - description: Either 'qemu' or 'lxc'. Only consider backups for guests of this
          type.
        in: query
        name: type
        required: false
        schema:
          description: Either 'qemu' or 'lxc'. Only consider backups for guests of
            this type.
          enum:
          - qemu
          - lxc
          type: string
      - description: Only prune backups for this VM.
        in: query
        name: vmid
        required: false
        schema:
          description: Only prune backups for this VM.
          format: pve-vmid
          maximum: 999999999
          minimum: 100
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Prune backups. Only those using the standard naming scheme are considered.
      tags:
      - Nodes
    get:
      description: 'Get prune information for backups. NOTE: this is only a preview
        and might not be what a subsequent prune call does if backups are removed/added
        in the meantime.'
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_prunebackups
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: Use these retention options instead of those from the storage
          configuration.
        in: query
        name: prune-backups
        required: false
        schema:
          description: Use these retention options instead of those from the storage
            configuration.
          format: prune-backups
          type: string
      - description: Either 'qemu' or 'lxc'. Only consider backups for guests of this
          type.
        in: query
        name: type
        required: false
        schema:
          description: Either 'qemu' or 'lxc'. Only consider backups for guests of
            this type.
          enum:
          - qemu
          - lxc
          type: string
      - description: Only consider backups for this guest.
        in: query
        name: vmid
        required: false
        schema:
          description: Only consider backups for this guest.
          format: pve-vmid
          maximum: 999999999
          minimum: 100
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    ctime:
                      description: Creation time of the backup (seconds since the
                        UNIX epoch).
                      type: integer
                    mark:
                      description: Whether the backup would be kept or removed. Backups
                        that are protected or don't use the standard naming scheme
                        are not removed.
                      type: string
                    type:
                      description: One of 'qemu', 'lxc', 'openvz' or 'unknown'.
                      type: string
                    vmid:
                      description: The VM the backup belongs to.
                      type: integer
                    volid:
                      description: Backup volume ID.
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Get prune information for backups. NOTE: this is only a preview and
        might not be what a subsequent prune call does if backups are removed/added
        in the meantime.'
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/rrd:
    get:
      description: Read storage RRD statistics (returns PNG).
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_rrd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: The list of datasources you want to display.
        in: query
        name: ds
        required: true
        schema:
          description: The list of datasources you want to display.
          format: pve-configid-list
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filename:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read storage RRD statistics (returns PNG).
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/rrddata:
    get:
      description: Read storage RRD statistics.
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_rrddata
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The RRD consolidation function
        in: query
        name: cf
        required: false
        schema:
          description: The RRD consolidation function
          enum:
          - AVERAGE
          - MAX
          type: string
      - description: Specify the time frame you are interested in.
        in: query
        name: timeframe
        required: true
        schema:
          description: Specify the time frame you are interested in.
          enum:
          - hour
          - day
          - week
          - month
          - year
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read storage RRD statistics.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/status:
    get:
      description: Read storage status.
      operationId: get_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read storage status.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/storage/nodes/{node}/storage/{storage}/nodes/{node}/storage/{storage}/upload:
    post:
      description: Upload templates, ISO images, OVAs and VM images.
      operationId: post_nodes_nodes_node_nodes_node_storage_nodes_node_storage_storage_nodes_node_storage_storage_upload
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                checksum:
                  description: The expected checksum of the file.
                  type: string
                checksum-algorithm:
                  description: The algorithm to calculate the checksum of the file.
                  enum:
                  - md5
                  - sha1
                  - sha224
                  - sha256
                  - sha384
                  - sha512
                  type: string
                content:
                  description: Content type.
                  enum:
                  - iso
                  - vztmpl
                  - import
                  format: pve-storage-content
                  type: string
                filename:
                  description: 'The name of the file to create. Caution: This will
                    be normalized!'
                  maxLength: 255
                  type: string
                tmpfilename:
                  description: The source file name. This parameter is usually set
                    by the REST handler. You can only overwrite it when connecting
                    to the trusted port on localhost.
                  pattern: /var/tmp/pveupload-[0-9a-f]+
                  type: string
              required:
              - content
              - filename
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload templates, ISO images, OVAs and VM images.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/subscription:
    delete:
      description: Delete subscription key of this node.
      operationId: delete_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete subscription key of this node.
      tags:
      - Nodes
    get:
      description: Read subscription info.
      operationId: get_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  checktime:
                    description: Timestamp of the last check done.
                    type: integer
                  key:
                    description: The subscription key, if set and permitted to access.
                    type: string
                  level:
                    description: A short code for the subscription level.
                    type: string
                  message:
                    description: A more human readable status message.
                    type: string
                  nextduedate:
                    description: Next due date of the set subscription.
                    type: string
                  productname:
                    description: Human readable productname of the set subscription.
                    type: string
                  regdate:
                    description: Register date of the set subscription.
                    type: string
                  serverid:
                    description: The server ID, if permitted to access.
                    type: string
                  signature:
                    description: Signature for offline keys
                    type: string
                  sockets:
                    description: The number of sockets for this host.
                    type: integer
                  status:
                    description: The current subscription status.
                    type: string
                  url:
                    description: URL to the web shop.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read subscription info.
      tags:
      - Nodes
    post:
      description: Update subscription info.
      operationId: post_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: 0
                  description: Always connect to server, even if local cache is still
                    valid.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update subscription info.
      tags:
      - Nodes
    put:
      description: Set subscription key.
      operationId: put_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: Proxmox VE subscription key
                  maxLength: 32
                  pattern: \s*pve([1248])([cbsp])-[0-9a-f]{10}\s*
                  type: string
              required:
              - key
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set subscription key.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/suspendall:
    post:
      description: Suspend all VMs.
      operationId: post_nodes_nodes_node_nodes_node_suspendall
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                vms:
                  description: Only consider Guests with these IDs.
                  format: pve-vmid-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Suspend all VMs.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/syslog:
    get:
      description: Read system log
      operationId: get_nodes_nodes_node_nodes_node_syslog
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Service ID
        in: query
        name: service
        required: false
        schema:
          description: Service ID
          maxLength: 128
          type: string
      - description: Display all log since this date-time string.
        in: query
        name: since
        required: false
        schema:
          description: Display all log since this date-time string.
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
      - in: query
        name: start
        required: false
        schema:
          minimum: 0
          type: integer
      - description: Display all log until this date-time string.
        in: query
        name: until
        required: false
        schema:
          description: Display all log until this date-time string.
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read system log
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/tasks:
    get:
      description: Read task list for one node (finished tasks).
      operationId: get_nodes_nodes_node_nodes_node_tasks
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Only list tasks with a status of ERROR.
        in: query
        name: errors
        required: false
        schema:
          default: 0
          description: Only list tasks with a status of ERROR.
          type: boolean
      - description: Only list this amount of tasks.
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Only list this amount of tasks.
          minimum: 0
          type: integer
      - description: Only list tasks since this UNIX epoch.
        in: query
        name: since
        required: false
        schema:
          description: Only list tasks since this UNIX epoch.
          type: integer
      - description: List archived, active or all tasks.
        in: query
        name: source
        required: false
        schema:
          default: archive
          description: List archived, active or all tasks.
          enum:
          - archive
          - active
          - all
          type: string
      - description: List tasks beginning from this offset.
        in: query
        name: start
        required: false
        schema:
          default: 0
          description: List tasks beginning from this offset.
          minimum: 0
          type: integer
      - description: List of Task States that should be returned.
        in: query
        name: statusfilter
        required: false
        schema:
          description: List of Task States that should be returned.
          format: pve-task-status-type-list
          type: string
      - description: Only list tasks of this type (e.g., vzstart, vzdump).
        in: query
        name: typefilter
        required: false
        schema:
          description: Only list tasks of this type (e.g., vzstart, vzdump).
          type: string
      - description: Only list tasks until this UNIX epoch.
        in: query
        name: until
        required: false
        schema:
          description: Only list tasks until this UNIX epoch.
          type: integer
      - description: Only list tasks from this user.
        in: query
        name: userfilter
        required: false
        schema:
          description: Only list tasks from this user.
          type: string
      - description: Only list tasks for this VM.
        in: query
        name: vmid
        required: false
        schema:
          description: Only list tasks for this VM.
          format: pve-vmid
          maximum: 999999999
          minimum: 100
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    endtime:
                      type: integer
                    id:
                      type: string
                    node:
                      type: string
                    pid:
                      type: integer
                    pstart:
                      type: integer
                    starttime:
                      type: integer
                    status:
                      type: string
                    type:
                      type: string
                    upid:
                      type: string
                    user:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read task list for one node (finished tasks).
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}:
    delete:
      description: Stop a task.
      operationId: delete_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop a task.
      tags:
      - Nodes
    get:
      description: ''
      operationId: get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: ''
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}/nodes/{node}/tasks/{upid}/log:
    get:
      description: Read task log.
      operationId: get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid_nodes_node_tasks_upid_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      - description: Whether the tasklog file should be downloaded. This parameter
          can't be used in conjunction with other parameters
        in: query
        name: download
        required: false
        schema:
          description: Whether the tasklog file should be downloaded. This parameter
            can't be used in conjunction with other parameters
          type: boolean
      - description: The amount of lines to read from the tasklog.
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: The amount of lines to read from the tasklog.
          minimum: 0
          type: integer
      - description: Start at this line when reading the tasklog
        in: query
        name: start
        required: false
        schema:
          default: 0
          description: Start at this line when reading the tasklog
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    n:
                      description: Line number
                      type: integer
                    t:
                      description: Line text
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read task log.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}/nodes/{node}/tasks/{upid}/status:
    get:
      description: Read task status.
      operationId: get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid_nodes_node_tasks_upid_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  exitstatus:
                    type: string
                  id:
                    type: string
                  node:
                    type: string
                  pid:
                    type: integer
                  pstart:
                    type: integer
                  starttime:
                    type: integer
                  status:
                    type: string
                  type:
                    type: string
                  upid:
                    type: string
                  user:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read task status.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/termproxy:
    post:
      description: Creates a VNC Shell proxy.
      operationId: post_nodes_nodes_node_nodes_node_termproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cmd:
                  default: login
                  description: Run specific command or default to login (requires
                    'root@pam')
                  enum:
                  - ceph_install
                  - upgrade
                  - login
                  type: string
                cmd-opts:
                  default: ''
                  description: Add parameters to a command. Encoded as null terminated
                    strings.
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a VNC Shell proxy.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/time:
    get:
      description: Read server time and time zone settings.
      operationId: get_nodes_nodes_node_nodes_node_time
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  localtime:
                    description: Seconds since 1970-01-01 00:00:00 (local time)
                    type: integer
                  time:
                    description: Seconds since 1970-01-01 00:00:00 UTC.
                    type: integer
                  timezone:
                    description: Time zone
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read server time and time zone settings.
      tags:
      - Nodes
    put:
      description: Set time zone.
      operationId: put_nodes_nodes_node_nodes_node_time
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                timezone:
                  description: Time zone. The file '/usr/share/zoneinfo/zone.tab'
                    contains the list of valid names.
                  type: string
              required:
              - timezone
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set time zone.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/version:
    get:
      description: API version details
      operationId: get_nodes_nodes_node_nodes_node_version
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  release:
                    description: The current installed Proxmox VE Release
                    type: string
                  repoid:
                    description: The short git commit hash ID from which this version
                      was build
                    type: string
                  version:
                    description: The current installed pve-manager package version
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: API version details
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/vncshell:
    post:
      description: Creates a VNC Shell proxy.
      operationId: post_nodes_nodes_node_nodes_node_vncshell
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cmd:
                  default: login
                  description: Run specific command or default to login (requires
                    'root@pam')
                  enum:
                  - ceph_install
                  - upgrade
                  - login
                  type: string
                cmd-opts:
                  default: ''
                  description: Add parameters to a command. Encoded as null terminated
                    strings.
                  type: string
                height:
                  description: sets the height of the console in pixels.
                  maximum: 2160
                  minimum: 16
                  type: integer
                websocket:
                  description: use websocket instead of standard vnc.
                  type: boolean
                width:
                  description: sets the width of the console in pixels.
                  maximum: 4096
                  minimum: 16
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Creates a VNC Shell proxy.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/vncwebsocket:
    get:
      description: Opens a websocket for VNC traffic.
      operationId: get_nodes_nodes_node_nodes_node_vncwebsocket
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Port number returned by previous vncproxy call.
        in: query
        name: port
        required: true
        schema:
          description: Port number returned by previous vncproxy call.
          maximum: 5999
          minimum: 5900
          type: integer
      - description: Ticket from previous call to vncproxy.
        in: query
        name: vncticket
        required: true
        schema:
          description: Ticket from previous call to vncproxy.
          maxLength: 512
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  port:
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Opens a websocket for VNC traffic.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/vzdump:
    post:
      description: Create backup.
      operationId: post_nodes_nodes_node_nodes_node_vzdump
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                all:
                  default: 0
                  description: Backup all known guest systems on this host.
                  type: boolean
                bwlimit:
                  default: 0
                  description: Limit I/O bandwidth (in KiB/s).
                  minimum: 0
                  type: integer
                compress:
                  default: '0'
                  description: Compress dump file.
                  enum:
                  - '0'
                  - '1'
                  - gzip
                  - lzo
                  - zstd
                  type: string
                dumpdir:
                  description: Store resulting files to specified directory.
                  type: string
                exclude:
                  description: Exclude specified guest systems (assumes --all)
                  format: pve-vmid-list
                  type: string
                exclude-path:
                  description: Exclude certain files/directories (shell globs). Paths
                    starting with '/' are anchored to the container's root, other
                    paths match relative to each subdirectory.
                  items:
                    type: string
                  type: array
                fleecing:
                  description: Options for backup fleecing (VM only).
                  format: backup-fleecing
                  type: string
                ionice:
                  default: 7
                  description: Set IO priority when using the BFQ scheduler. For snapshot
                    and suspend mode backups of VMs, this only affects the compressor.
                    A value of 8 means the idle priority is used, otherwise the best-effort
                    priority is used with the specified value.
                  maximum: 8
                  minimum: 0
                  type: integer
                job-id:
                  description: The ID of the backup job. If set, the 'backup-job'
                    metadata field of the backup notification will be set to this
                    value. Only root@pam can set this parameter.
                  maxLength: 50
                  pattern: \S+
                  type: string
                lockwait:
                  default: 180
                  description: Maximal time to wait for the global lock (minutes).
                  minimum: 0
                  type: integer
                mailnotification:
                  default: always
                  description: 'Deprecated: use notification targets/matchers instead.
                    Specify when to send a notification mail'
                  enum:
                  - always
                  - failure
                  type: string
                mailto:
                  description: 'Deprecated: Use notification targets/matchers instead.
                    Comma-separated list of email addresses or users that should receive
                    email notifications.'
                  format: email-or-username-list
                  type: string
                maxfiles:
                  description: 'Deprecated: use ''prune-backups'' instead. Maximal
                    number of backup files per guest system.'
                  minimum: 1
                  type: integer
                mode:
                  default: snapshot
                  description: Backup mode.
                  enum:
                  - snapshot
                  - suspend
                  - stop
                  type: string
                notes-template:
                  description: Template string for generating notes for the backup(s).
                    It can contain variables which will be replaced by their values.
                    Currently supported are {{cluster}}, {{guestname}}, {{node}},
                    and {{vmid}}, but more might be added in the future. Needs to
                    be a single line, newline and backslash need to be escaped as
                    '\n' and '\\' respectively.
                  maxLength: 1024
                  type: string
                notification-mode:
                  default: auto
                  description: Determine which notification system to use. If set
                    to 'legacy-sendmail', vzdump will consider the mailto/mailnotification
                    parameters and send emails to the specified address(es) via the
                    'sendmail' command. If set to 'notification-system', a notification
                    will be sent via PVE's notification system, and the mailto and
                    mailnotification will be ignored. If set to 'auto' (default setting),
                    an email will be sent if mailto is set, and the notification system
                    will be used if not.
                  enum:
                  - auto
                  - legacy-sendmail
                  - notification-system
                  type: string
                notification-policy:
                  default: always
                  description: 'Deprecated: Do not use'
                  enum:
                  - always
                  - failure
                  - never
                  type: string
                notification-target:
                  description: 'Deprecated: Do not use'
                  format: pve-configid
                  type: string
                pbs-change-detection-mode:
                  description: PBS mode used to detect file changes and switch encoding
                    format for container backups.
                  enum:
                  - legacy
                  - data
                  - metadata
                  type: string
                performance:
                  description: Other performance-related settings.
                  format: backup-performance
                  type: string
                pigz:
                  default: 0
                  description: Use pigz instead of gzip when N>0. N=1 uses half of
                    cores, N>1 uses N as thread count.
                  type: integer
                pool:
                  description: Backup all known guest systems included in the specified
                    pool.
                  type: string
                protected:
                  description: If true, mark backup(s) as protected.
                  type: boolean
                prune-backups:
                  default: keep-all=1
                  description: Use these retention options instead of those from the
                    storage configuration.
                  format: prune-backups
                  type: string
                quiet:
                  default: 0
                  description: Be quiet.
                  type: boolean
                remove:
                  default: 1
                  description: Prune older backups according to 'prune-backups'.
                  type: boolean
                script:
                  description: Use specified hook script.
                  type: string
                stdexcludes:
                  default: 1
                  description: Exclude temporary files and logs.
                  type: boolean
                stdout:
                  description: Write tar to stdout, not to a file.
                  type: boolean
                stop:
                  default: 0
                  description: Stop running backup jobs on this host.
                  type: boolean
                stopwait:
                  default: 10
                  description: Maximal time to wait until a guest system is stopped
                    (minutes).
                  minimum: 0
                  type: integer
                storage:
                  description: Store resulting file to this storage.
                  format: pve-storage-id
                  type: string
                tmpdir:
                  description: Store temporary files to specified directory.
                  type: string
                vmid:
                  description: The ID of the guest system you want to backup.
                  format: pve-vmid-list
                  type: string
                zstd:
                  default: 1
                  description: Zstd threads. N=0 uses half of the available cores,
                    if N is set to a value bigger than 0, N is used as thread count.
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create backup.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/vzdump/nodes/{node}/vzdump/defaults:
    get:
      description: Get the currently configured vzdump defaults.
      operationId: get_nodes_nodes_node_nodes_node_vzdump_nodes_node_vzdump_defaults
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The storage identifier.
        in: query
        name: storage
        required: false
        schema:
          description: The storage identifier.
          format: pve-storage-id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  all:
                    description: Backup all known guest systems on this host.
                    type: boolean
                  bwlimit:
                    description: Limit I/O bandwidth (in KiB/s).
                    type: integer
                  compress:
                    description: Compress dump file.
                    type: string
                  dumpdir:
                    description: Store resulting files to specified directory.
                    type: string
                  exclude:
                    description: Exclude specified guest systems (assumes --all)
                    format: pve-vmid-list
                    type: string
                  exclude-path:
                    description: Exclude certain files/directories (shell globs).
                      Paths starting with '/' are anchored to the container's root,
                      other paths match relative to each subdirectory.
                    items:
                      type: string
                    type: array
                  fleecing:
                    description: Options for backup fleecing (VM only).
                    format: backup-fleecing
                    type: string
                  ionice:
                    description: Set IO priority when using the BFQ scheduler. For
                      snapshot and suspend mode backups of VMs, this only affects
                      the compressor. A value of 8 means the idle priority is used,
                      otherwise the best-effort priority is used with the specified
                      value.
                    type: integer
                  lockwait:
                    description: Maximal time to wait for the global lock (minutes).
                    type: integer
                  mailnotification:
                    description: 'Deprecated: use notification targets/matchers instead.
                      Specify when to send a notification mail'
                    type: string
                  mailto:
                    description: 'Deprecated: Use notification targets/matchers instead.
                      Comma-separated list of email addresses or users that should
                      receive email notifications.'
                    format: email-or-username-list
                    type: string
                  maxfiles:
                    description: 'Deprecated: use ''prune-backups'' instead. Maximal
                      number of backup files per guest system.'
                    type: integer
                  mode:
                    description: Backup mode.
                    type: string
                  node:
                    description: Only run if executed on this node.
                    format: pve-node
                    type: string
                  notes-template:
                    description: Template string for generating notes for the backup(s).
                      It can contain variables which will be replaced by their values.
                      Currently supported are {{cluster}}, {{guestname}}, {{node}},
                      and {{vmid}}, but more might be added in the future. Needs to
                      be a single line, newline and backslash need to be escaped as
                      '\n' and '\\' respectively.
                    type: string
                  notification-mode:
                    description: Determine which notification system to use. If set
                      to 'legacy-sendmail', vzdump will consider the mailto/mailnotification
                      parameters and send emails to the specified address(es) via
                      the 'sendmail' command. If set to 'notification-system', a notification
                      will be sent via PVE's notification system, and the mailto and
                      mailnotification will be ignored. If set to 'auto' (default
                      setting), an email will be sent if mailto is set, and the notification
                      system will be used if not.
                    type: string
                  notification-policy:
                    description: 'Deprecated: Do not use'
                    type: string
                  notification-target:
                    description: 'Deprecated: Do not use'
                    format: pve-configid
                    type: string
                  pbs-change-detection-mode:
                    description: PBS mode used to detect file changes and switch encoding
                      format for container backups.
                    type: string
                  performance:
                    description: Other performance-related settings.
                    format: backup-performance
                    type: string
                  pigz:
                    description: Use pigz instead of gzip when N>0. N=1 uses half
                      of cores, N>1 uses N as thread count.
                    type: integer
                  pool:
                    description: Backup all known guest systems included in the specified
                      pool.
                    type: string
                  protected:
                    description: If true, mark backup(s) as protected.
                    type: boolean
                  prune-backups:
                    description: Use these retention options instead of those from
                      the storage configuration.
                    format: prune-backups
                    type: string
                  quiet:
                    description: Be quiet.
                    type: boolean
                  remove:
                    description: Prune older backups according to 'prune-backups'.
                    type: boolean
                  script:
                    description: Use specified hook script.
                    type: string
                  stdexcludes:
                    description: Exclude temporary files and logs.
                    type: boolean
                  stop:
                    description: Stop running backup jobs on this host.
                    type: boolean
                  stopwait:
                    description: Maximal time to wait until a guest system is stopped
                      (minutes).
                    type: integer
                  storage:
                    description: Store resulting file to this storage.
                    format: pve-storage-id
                    type: string
                  tmpdir:
                    description: Store temporary files to specified directory.
                    type: string
                  vmid:
                    description: The ID of the guest system you want to backup.
                    format: pve-vmid-list
                    type: string
                  zstd:
                    description: Zstd threads. N=0 uses half of the available cores,
                      if N is set to a value bigger than 0, N is used as thread count.
                    type: integer
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the currently configured vzdump defaults.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/vzdump/nodes/{node}/vzdump/extractconfig:
    get:
      description: Extract configuration from vzdump backup archive.
      operationId: get_nodes_nodes_node_nodes_node_vzdump_nodes_node_vzdump_extractconfig
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Volume identifier
        in: query
        name: volume
        required: true
        schema:
          description: Volume identifier
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Extract configuration from vzdump backup archive.
      tags:
      - Nodes
  /nodes/nodes/{node}/nodes/{node}/wakeonlan:
    post:
      description: Try to wake a node via 'wake on LAN' network packet.
      operationId: post_nodes_nodes_node_nodes_node_wakeonlan
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: MAC address used to assemble the WoL magic packet.
                format: mac-addr
                type: string
          description: MAC address used to assemble the WoL magic packet.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Try to wake a node via 'wake on LAN' network packet.
      tags:
      - Nodes
  /pools:
    delete:
      description: Delete pool.
      operationId: delete_pools
      parameters:
      - in: query
        name: poolid
        required: true
        schema:
          format: pve-poolid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete pool.
      tags:
      - Resource Pools
    get:
      description: List pools or get pool configuration.
      operationId: get_pools
      parameters:
      - in: query
        name: poolid
        required: false
        schema:
          format: pve-poolid
          type: string
      - in: query
        name: type
        required: false
        schema:
          enum:
          - qemu
          - lxc
          - storage
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    comment:
                      type: string
                    members:
                      items:
                        properties:
                          id:
                            type: string
                          node:
                            type: string
                          storage:
                            type: string
                          type:
                            type: string
                          vmid:
                            type: integer
                        type: object
                      type: array
                    poolid:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List pools or get pool configuration.
      tags:
      - Resource Pools
    post:
      description: Create new pool.
      operationId: post_pools
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  type: string
                poolid:
                  format: pve-poolid
                  type: string
              required:
              - poolid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new pool.
      tags:
      - Resource Pools
    put:
      description: Update pool.
      operationId: put_pools
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow-move:
                  default: 0
                  description: Allow adding a guest even if already in another pool.
                    The guest will be removed from its current pool and added to this
                    one.
                  type: boolean
                comment:
                  type: string
                delete:
                  default: 0
                  description: Remove the passed VMIDs and/or storage IDs instead
                    of adding them.
                  type: boolean
                poolid:
                  format: pve-poolid
                  type: string
                storage:
                  description: List of storage IDs to add or remove from this pool.
                  format: pve-storage-id-list
                  type: string
                vms:
                  description: List of guest VMIDs to add or remove from this pool.
                  format: pve-vmid-list
                  type: string
              required:
              - poolid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update pool.
      tags:
      - Resource Pools
  /pools/pools/{poolid}:
    delete:
      description: Delete pool (deprecated, no support for nested pools, use 'DELETE
        /pools/?poolid={poolid}').
      operationId: delete_pools_pools_poolid
      parameters:
      - description: The poolid parameter
        in: path
        name: poolid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').
      tags:
      - Resource Pools
    get:
      description: Get pool configuration (deprecated, no support for nested pools,
        use 'GET /pools/?poolid={poolid}').
      operationId: get_pools_pools_poolid
      parameters:
      - description: The poolid parameter
        in: path
        name: poolid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - in: query
        name: type
        required: false
        schema:
          enum:
          - qemu
          - lxc
          - storage
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comment:
                    type: string
                  members:
                    items:
                      properties:
                        id:
                          type: string
                        node:
                          type: string
                        storage:
                          type: string
                        type:
                          type: string
                        vmid:
                          type: integer
                      type: object
                    type: array
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get pool configuration (deprecated, no support for nested pools, use
        'GET /pools/?poolid={poolid}').
      tags:
      - Resource Pools
    put:
      description: Update pool data (deprecated, no support for nested pools - use
        'PUT /pools/?poolid={poolid}' instead).
      operationId: put_pools_pools_poolid
      parameters:
      - description: The poolid parameter
        in: path
        name: poolid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow-move:
                  default: 0
                  description: Allow adding a guest even if already in another pool.
                    The guest will be removed from its current pool and added to this
                    one.
                  type: boolean
                comment:
                  type: string
                delete:
                  default: 0
                  description: Remove the passed VMIDs and/or storage IDs instead
                    of adding them.
                  type: boolean
                storage:
                  description: List of storage IDs to add or remove from this pool.
                  format: pve-storage-id-list
                  type: string
                vms:
                  description: List of guest VMIDs to add or remove from this pool.
                  format: pve-vmid-list
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update pool data (deprecated, no support for nested pools - use 'PUT
        /pools/?poolid={poolid}' instead).
      tags:
      - Resource Pools
  /storage:
    get:
      description: Storage index.
      operationId: get_storage
      parameters:
      - description: Only list storage of specific type
        in: query
        name: type
        required: false
        schema:
          description: Only list storage of specific type
          enum:
          - btrfs
          - cephfs
          - cifs
          - dir
          - esxi
          - glusterfs
          - iscsi
          - iscsidirect
          - lvm
          - lvmthin
          - nfs
          - pbs
          - rbd
          - zfs
          - zfspool
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    storage:
                      type: string
                  type: object
                type: array
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Storage index.
      tags:
      - Storage
    post:
      description: Create a new storage.
      operationId: post_storage
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authsupported:
                  description: Authsupported.
                  type: string
                base:
                  description: Base volume. This volume is automatically activated.
                  format: pve-volume-id
                  type: string
                blocksize:
                  description: block size
                  type: string
                bwlimit:
                  description: Set I/O bandwidth limit for various operations (in
                    KiB/s).
                  format:
                    clone:
                      description: bandwidth limit in KiB/s for cloning disks
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    default:
                      description: default bandwidth limit in KiB/s
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    migration:
                      description: bandwidth limit in KiB/s for migrating guests (including
                        moving local disks)
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    move:
                      description: bandwidth limit in KiB/s for moving disks
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    restore:
                      description: bandwidth limit in KiB/s for restoring guests from
                        backups
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                  type: string
                comstar_hg:
                  description: host group for comstar views
                  type: string
                comstar_tg:
                  description: target group for comstar views
                  type: string
                content:
                  description: 'Allowed content types.


                    NOTE: the value ''rootdir'' is used for Containers, and value
                    ''images'' for VMs.

                    '
                  format: pve-storage-content-list
                  type: string
                content-dirs:
                  description: Overrides for default content type directories.
                  format: pve-dir-override-list
                  type: string
                create-base-path:
                  default: 'yes'
                  description: Create the base directory if it doesn't exist.
                  type: boolean
                create-subdirs:
                  default: 'yes'
                  description: Populate the directory with the default structure.
                  type: boolean
                data-pool:
                  description: Data Pool (for erasure coding only)
                  type: string
                datastore:
                  description: Proxmox Backup Server datastore name.
                  type: string
                disable:
                  description: Flag to disable the storage.
                  type: boolean
                domain:
                  description: CIFS domain.
                  maxLength: 256
                  type: string
                encryption-key:
                  description: Encryption key. Use 'autogen' to generate one automatically
                    without passphrase.
                  type: string
                export:
                  description: NFS export path.
                  format: pve-storage-path
                  type: string
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                format:
                  description: Default image format.
                  enum:
                  - raw
                  - qcow2
                  - subvol
                  - vmdk
                  type: string
                fs-name:
                  description: The Ceph filesystem name.
                  format: pve-configid
                  type: string
                fuse:
                  description: Mount CephFS through FUSE.
                  type: boolean
                is_mountpoint:
                  default: 'no'
                  description: Assume the given path is an externally managed mountpoint
                    and consider the storage offline if it is not mounted. Using a
                    boolean (yes/no) value serves as a shortcut to using the target
                    path in this field.
                  type: string
                iscsiprovider:
                  description: iscsi provider
                  type: string
                keyring:
                  description: Client keyring contents (for external clusters).
                  type: string
                krbd:
                  default: 0
                  description: Always access rbd through krbd kernel module.
                  type: boolean
                lio_tpg:
                  description: target portal group for Linux LIO targets
                  type: string
                master-pubkey:
                  description: Base64-encoded, PEM-formatted public RSA key. Used
                    to encrypt a copy of the encryption-key which will be added to
                    each encrypted backup.
                  type: string
                max-protected-backups:
                  default: Unlimited for users with Datastore.Allocate privilege,
                    5 for other users
                  description: Maximal number of protected backups per guest. Use
                    '-1' for unlimited.
                  minimum: -1
                  type: integer
                maxfiles:
                  description: 'Deprecated: use ''prune-backups'' instead. Maximal
                    number of backup files per VM. Use ''0'' for unlimited.'
                  minimum: 0
                  type: integer
                mkdir:
                  default: 'yes'
                  description: 'Create the directory if it doesn''t exist and populate
                    it with default sub-dirs. NOTE: Deprecated, use the ''create-base-path''
                    and ''create-subdirs'' options instead.'
                  type: boolean
                monhost:
                  description: IP addresses of monitors (for external clusters).
                  format: pve-storage-portal-dns-list
                  type: string
                mountpoint:
                  description: mount point
                  format: pve-storage-path
                  type: string
                namespace:
                  description: Namespace.
                  type: string
                nocow:
                  default: 0
                  description: Set the NOCOW flag on files. Disables data checksumming
                    and causes data errors to be unrecoverable from while allowing
                    direct I/O. Only use this if data does not need to be any more
                    safe than on a single ext4 formatted disk with no underlying raid
                    system.
                  type: boolean
                nodes:
                  description: List of nodes for which the storage configuration applies.
                  format: pve-node-list
                  type: string
                nowritecache:
                  description: disable write caching on the target
                  type: boolean
                options:
                  description: NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')
                  format: pve-storage-options
                  type: string
                password:
                  description: Password for accessing the share/datastore.
                  maxLength: 256
                  type: string
                path:
                  description: File system path.
                  format: pve-storage-path
                  type: string
                pool:
                  description: Pool.
                  type: string
                port:
                  description: Use this port to connect to the storage instead of
                    the default one (for example, with PBS or ESXi). For NFS and CIFS,
                    use the 'options' option to configure the port via the mount options.
                  maximum: 65535
                  minimum: 1
                  type: integer
                portal:
                  description: iSCSI portal (IP or DNS name with optional port).
                  format: pve-storage-portal-dns
                  type: string
                preallocation:
                  default: metadata
                  description: Preallocation mode for raw and qcow2 images. Using
                    'metadata' on raw images results in preallocation=off.
                  enum:
                  - 'off'
                  - metadata
                  - falloc
                  - full
                  type: string
                prune-backups:
                  description: The retention options with shorter intervals are processed
                    first with --keep-last being the very first one. Each option covers
                    a specific period of time. We say that backups within this period
                    are covered by this option. The next option does not take care
                    of already covered backups and only considers older backups.
                  format: prune-backups
                  type: string
                saferemove:
                  description: Zero-out data when removing LVs.
                  type: boolean
                saferemove_throughput:
                  description: Wipe throughput (cstream -t parameter value).
                  type: string
                server:
                  description: Server IP or DNS name.
                  format: pve-storage-server
                  type: string
                server2:
                  description: Backup volfile server IP or DNS name.
                  format: pve-storage-server
                  type: string
                share:
                  description: CIFS share.
                  type: string
                shared:
                  description: Indicate that this is a single storage with the same
                    contents on all nodes (or all listed in the 'nodes' option). It
                    will not make the contents of a local storage automatically accessible
                    to other nodes, it just marks an already shared storage as such!
                  type: boolean
                skip-cert-verification:
                  default: 'false'
                  description: Disable TLS certificate verification, only enable on
                    fully trusted networks!
                  type: boolean
                smbversion:
                  default: default
                  description: SMB protocol version. 'default' if not set, negotiates
                    the highest SMB2+ version supported by both the client and server.
                  enum:
                  - default
                  - '2.0'
                  - '2.1'
                  - '3'
                  - '3.0'
                  - '3.11'
                  type: string
                sparse:
                  description: use sparse volumes
                  type: boolean
                storage:
                  description: The storage identifier.
                  format: pve-storage-id
                  type: string
                subdir:
                  description: Subdir to mount.
                  format: pve-storage-path
                  type: string
                tagged_only:
                  description: Only use logical volumes tagged with 'pve-vm-ID'.
                  type: boolean
                target:
                  description: iSCSI target.
                  type: string
                thinpool:
                  description: LVM thin pool LV name.
                  format: pve-storage-vgname
                  type: string
                transport:
                  description: 'Gluster transport: tcp or rdma'
                  enum:
                  - tcp
                  - rdma
                  - unix
                  type: string
                type:
                  description: Storage type.
                  enum:
                  - btrfs
                  - cephfs
                  - cifs
                  - dir
                  - esxi
                  - glusterfs
                  - iscsi
                  - iscsidirect
                  - lvm
                  - lvmthin
                  - nfs
                  - pbs
                  - rbd
                  - zfs
                  - zfspool
                  type: string
                username:
                  description: RBD Id.
                  type: string
                vgname:
                  description: Volume group name.
                  format: pve-storage-vgname
                  type: string
                volume:
                  description: Glusterfs Volume.
                  type: string
              required:
              - storage
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  config:
                    description: Partial, possible server generated, configuration
                      properties.
                    properties:
                      encryption-key:
                        description: The, possible auto-generated, encryption-key.
                        type: string
                    type: object
                  storage:
                    description: The ID of the created storage.
                    type: string
                  type:
                    description: The type of the created storage.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new storage.
      tags:
      - Storage
  /storage/storage/{storage}:
    delete:
      description: Delete storage configuration.
      operationId: delete_storage_storage_storage
      parameters:
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: 'null'
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete storage configuration.
      tags:
      - Storage
    get:
      description: Read storage configuration.
      operationId: get_storage_storage_storage
      parameters:
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read storage configuration.
      tags:
      - Storage
    put:
      description: Update storage configuration.
      operationId: put_storage_storage_storage
      parameters:
      - description: The storage parameter
        in: path
        name: storage
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxStorageId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                blocksize:
                  description: block size
                  type: string
                bwlimit:
                  description: Set I/O bandwidth limit for various operations (in
                    KiB/s).
                  format:
                    clone:
                      description: bandwidth limit in KiB/s for cloning disks
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    default:
                      description: default bandwidth limit in KiB/s
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    migration:
                      description: bandwidth limit in KiB/s for migrating guests (including
                        moving local disks)
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    move:
                      description: bandwidth limit in KiB/s for moving disks
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                    restore:
                      description: bandwidth limit in KiB/s for restoring guests from
                        backups
                      format_description: LIMIT
                      minimum: '0'
                      optional: 1
                      type: number
                  type: string
                comstar_hg:
                  description: host group for comstar views
                  type: string
                comstar_tg:
                  description: target group for comstar views
                  type: string
                content:
                  description: 'Allowed content types.


                    NOTE: the value ''rootdir'' is used for Containers, and value
                    ''images'' for VMs.

                    '
                  format: pve-storage-content-list
                  type: string
                content-dirs:
                  description: Overrides for default content type directories.
                  format: pve-dir-override-list
                  type: string
                create-base-path:
                  default: 'yes'
                  description: Create the base directory if it doesn't exist.
                  type: boolean
                create-subdirs:
                  default: 'yes'
                  description: Populate the directory with the default structure.
                  type: boolean
                data-pool:
                  description: Data Pool (for erasure coding only)
                  type: string
                delete:
                  description: A list of settings you want to delete.
                  format: pve-configid-list
                  maxLength: 4096
                  type: string
                digest:
                  description: Prevent changes if current configuration file has a
                    different digest. This can be used to prevent concurrent modifications.
                  maxLength: 64
                  type: string
                disable:
                  description: Flag to disable the storage.
                  type: boolean
                domain:
                  description: CIFS domain.
                  maxLength: 256
                  type: string
                encryption-key:
                  description: Encryption key. Use 'autogen' to generate one automatically
                    without passphrase.
                  type: string
                fingerprint:
                  description: Certificate SHA 256 fingerprint.
                  pattern: ([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}
                  type: string
                format:
                  description: Default image format.
                  enum:
                  - raw
                  - qcow2
                  - subvol
                  - vmdk
                  type: string
                fs-name:
                  description: The Ceph filesystem name.
                  format: pve-configid
                  type: string
                fuse:
                  description: Mount CephFS through FUSE.
                  type: boolean
                is_mountpoint:
                  default: 'no'
                  description: Assume the given path is an externally managed mountpoint
                    and consider the storage offline if it is not mounted. Using a
                    boolean (yes/no) value serves as a shortcut to using the target
                    path in this field.
                  type: string
                keyring:
                  description: Client keyring contents (for external clusters).
                  type: string
                krbd:
                  default: 0
                  description: Always access rbd through krbd kernel module.
                  type: boolean
                lio_tpg:
                  description: target portal group for Linux LIO targets
                  type: string
                master-pubkey:
                  description: Base64-encoded, PEM-formatted public RSA key. Used
                    to encrypt a copy of the encryption-key which will be added to
                    each encrypted backup.
                  type: string
                max-protected-backups:
                  default: Unlimited for users with Datastore.Allocate privilege,
                    5 for other users
                  description: Maximal number of protected backups per guest. Use
                    '-1' for unlimited.
                  minimum: -1
                  type: integer
                maxfiles:
                  description: 'Deprecated: use ''prune-backups'' instead. Maximal
                    number of backup files per VM. Use ''0'' for unlimited.'
                  minimum: 0
                  type: integer
                mkdir:
                  default: 'yes'
                  description: 'Create the directory if it doesn''t exist and populate
                    it with default sub-dirs. NOTE: Deprecated, use the ''create-base-path''
                    and ''create-subdirs'' options instead.'
                  type: boolean
                monhost:
                  description: IP addresses of monitors (for external clusters).
                  format: pve-storage-portal-dns-list
                  type: string
                mountpoint:
                  description: mount point
                  format: pve-storage-path
                  type: string
                namespace:
                  description: Namespace.
                  type: string
                nocow:
                  default: 0
                  description: Set the NOCOW flag on files. Disables data checksumming
                    and causes data errors to be unrecoverable from while allowing
                    direct I/O. Only use this if data does not need to be any more
                    safe than on a single ext4 formatted disk with no underlying raid
                    system.
                  type: boolean
                nodes:
                  description: List of nodes for which the storage configuration applies.
                  format: pve-node-list
                  type: string
                nowritecache:
                  description: disable write caching on the target
                  type: boolean
                options:
                  description: NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')
                  format: pve-storage-options
                  type: string
                password:
                  description: Password for accessing the share/datastore.
                  maxLength: 256
                  type: string
                pool:
                  description: Pool.
                  type: string
                port:
                  description: Use this port to connect to the storage instead of
                    the default one (for example, with PBS or ESXi). For NFS and CIFS,
                    use the 'options' option to configure the port via the mount options.
                  maximum: 65535
                  minimum: 1
                  type: integer
                preallocation:
                  default: metadata
                  description: Preallocation mode for raw and qcow2 images. Using
                    'metadata' on raw images results in preallocation=off.
                  enum:
                  - 'off'
                  - metadata
                  - falloc
                  - full
                  type: string
                prune-backups:
                  description: The retention options with shorter intervals are processed
                    first with --keep-last being the very first one. Each option covers
                    a specific period of time. We say that backups within this period
                    are covered by this option. The next option does not take care
                    of already covered backups and only considers older backups.
                  format: prune-backups
                  type: string
                saferemove:
                  description: Zero-out data when removing LVs.
                  type: boolean
                saferemove_throughput:
                  description: Wipe throughput (cstream -t parameter value).
                  type: string
                server:
                  description: Server IP or DNS name.
                  format: pve-storage-server
                  type: string
                server2:
                  description: Backup volfile server IP or DNS name.
                  format: pve-storage-server
                  type: string
                shared:
                  description: Indicate that this is a single storage with the same
                    contents on all nodes (or all listed in the 'nodes' option). It
                    will not make the contents of a local storage automatically accessible
                    to other nodes, it just marks an already shared storage as such!
                  type: boolean
                skip-cert-verification:
                  default: 'false'
                  description: Disable TLS certificate verification, only enable on
                    fully trusted networks!
                  type: boolean
                smbversion:
                  default: default
                  description: SMB protocol version. 'default' if not set, negotiates
                    the highest SMB2+ version supported by both the client and server.
                  enum:
                  - default
                  - '2.0'
                  - '2.1'
                  - '3'
                  - '3.0'
                  - '3.11'
                  type: string
                sparse:
                  description: use sparse volumes
                  type: boolean
                subdir:
                  description: Subdir to mount.
                  format: pve-storage-path
                  type: string
                tagged_only:
                  description: Only use logical volumes tagged with 'pve-vm-ID'.
                  type: boolean
                transport:
                  description: 'Gluster transport: tcp or rdma'
                  enum:
                  - tcp
                  - rdma
                  - unix
                  type: string
                username:
                  description: RBD Id.
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  config:
                    description: Partial, possible server generated, configuration
                      properties.
                    properties:
                      encryption-key:
                        description: The, possible auto-generated, encryption-key.
                        type: string
                    type: object
                  storage:
                    description: The ID of the created storage.
                    type: string
                  type:
                    description: The type of the created storage.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update storage configuration.
      tags:
      - Storage
  /version:
    get:
      description: API version details, including some parts of the global datacenter
        config.
      operationId: get_version
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  console:
                    description: The default console viewer to use.
                    type: string
                  release:
                    description: The current Proxmox VE point release in `x.y` format.
                    type: string
                  repoid:
                    description: The short git revision from which this version was
                      build.
                    type: string
                  version:
                    description: The full pve-manager package version of this node.
                    type: string
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: API version details, including some parts of the global datacenter
        config.
      tags:
      - System Info
security: *id001
servers:
- description: Proxmox VE Server
  url: https://{host}:8006/api2/json
  variables:
    host:
      default: localhost
      description: Proxmox VE server hostname or IP address
tags:
- description: Access Control related operations
  name: Access Control
- description: Cluster related operations
  name: Cluster
- description: Nodes related operations
  name: Nodes
- description: Resource Pools related operations
  name: Resource Pools
- description: Storage related operations
  name: Storage
- description: System Info related operations
  name: System Info
