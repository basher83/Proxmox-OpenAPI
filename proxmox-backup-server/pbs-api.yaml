components:
  schemas:
    ProxmoxBackupId:
      description: Backup ID following PBS naming conventions
      example: vm-100-disk-0
      pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
      type: string
    ProxmoxDatastoreName:
      description: Datastore name in PBS
      example: backup-storage
      maxLength: 32
      minLength: 1
      pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
      type: string
    ProxmoxEmail:
      description: Email address format
      example: admin@example.com
      format: email
      pattern: ^[^@]+@[^@]+$
      type: string
    ProxmoxError:
      description: Standard Proxmox API error response
      properties:
        data:
          description: Additional error context data
          nullable: true
          type: object
        errors:
          additionalProperties:
            type: string
          description: Detailed error messages keyed by field or error type
          type: object
        message:
          description: Human-readable error message
          type: string
      type: object
    ProxmoxNodeId:
      description: Proxmox node identifier following DNS hostname standards
      example: pve-node-01
      maxLength: 63
      minLength: 1
      pattern: ^[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?$
      type: string
    ProxmoxResourceName:
      description: General resource name following Proxmox naming conventions
      example: my-resource
      maxLength: 64
      minLength: 1
      pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
      type: string
    ProxmoxSha256:
      description: SHA256 hash for backup integrity verification
      example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      maxLength: 64
      minLength: 64
      pattern: ^[a-f0-9]{64}$
      type: string
    ProxmoxStorageId:
      description: Storage identifier
      example: local-lvm
      maxLength: 64
      minLength: 1
      pattern: ^[A-Za-z][A-Za-z0-9\-\_]+$
      type: string
    ProxmoxSuccess:
      description: Standard success response
      properties:
        data:
          description: Response data (varies by endpoint)
        success:
          description: Operation success indicator
          type: boolean
      type: object
    ProxmoxTask:
      description: Proxmox async task response
      properties:
        data:
          description: Task ID for tracking async operations
          pattern: ^UPID:[^:]+:[0-9A-F]+:[^:]*:[^:]+:[^:]*:[^:]*:$
          type: string
      required:
      - data
      type: object
    ProxmoxUserId:
      description: User ID in format user@realm
      example: admin@pve
      pattern: ^[^@]+@[^@]+$
      type: string
    ProxmoxVmId:
      description: Virtual machine or container ID
      example: 100
      maximum: 999999999
      minimum: 1
      type: integer
  securitySchemes:
    ProxmoxApiToken:
      description: 'API token authentication. Format: PBSAPIToken=USER@REALM!TOKENID=UUID'
      in: header
      name: Authorization
      type: apiKey
    ProxmoxCSRFToken:
      description: CSRF prevention token required for state-changing operations
      in: header
      name: CSRFPreventionToken
      type: apiKey
info:
  contact:
    email: support@proxmox.com
    name: Proxmox Support
    url: https://www.proxmox.com
  description: 'Complete Proxmox Backup Server API specification for comprehensive
    data protection and backup management.


    This specification covers all aspects of Proxmox Backup Server operations including:

    - **Backup Operations**: Create, manage, and monitor backup jobs

    - **Data Store Management**: Configure and manage backup storage

    - **Access Control**: User authentication and authorization

    - **Sync & Replication**: Cross-site backup synchronization

    - **Prune & GC**: Automated cleanup and garbage collection

    - **Encryption**: Client-side encryption and key management

    - **Monitoring**: Backup status and performance tracking

    - **Configuration**: Server and client configuration management


    The API supports token-based authentication with CSRF protection for secure backup
    operations.'
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.html
  title: Proxmox Backup Server API
  version: 3.0.0
openapi: 3.0.3
paths:
  /:
    get:
      description: Directory index.
      operationId: get_
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: &id001
      - ProxmoxApiToken: []
        ProxmoxCSRFToken: []
      summary: Directory index.
      tags:
      - Default
  //access:
    get:
      description: Directory index.
      operationId: get_access
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Access Control
  //access/access/acl:
    get:
      description: Read Access Control List (ACLs).
      operationId: get_access_access_acl
      parameters:
      - description: If set, returns only ACL for the exact path.
        in: query
        name: exact
        required: false
        schema:
          default: false
          description: If set, returns only ACL for the exact path.
          type: boolean
      - description: Access control path.
        in: query
        name: path
        required: false
        schema:
          description: Access control path.
          maxLength: 128
          minLength: 1
          pattern: ^(?:/|(?:/(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))+)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: ACL entry list.
                items:
                  description: ACL list entry.
                  properties:
                    path:
                      description: Access control path.
                      type: string
                    propagate:
                      description: Allow to propagate (inherit) permissions.
                      type: boolean
                    roleid:
                      description: 'Enum representing roles via their [PRIVILEGES]
                        combination.


                        Since privileges are implemented as bitflags, each unique
                        combination of privileges maps to a

                        single, unique `u64` value that is used in this enum definition.'
                      type: string
                    ugid:
                      description: User or Group ID.
                      type: string
                    ugid_type:
                      description: Type of 'ugid' property.
                      type: string
                  type: object
                type: array
          description: ACL entry list.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read Access Control List (ACLs).
      tags:
      - Access Control
    put:
      description: Update Access Control List (ACLs).
      operationId: put_access_access_acl
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth-id:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                delete:
                  description: Remove permissions (instead of adding it).
                  type: boolean
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                group:
                  description: Group ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)$
                  type: string
                path:
                  description: Access control path.
                  maxLength: 128
                  minLength: 1
                  pattern: ^(?:/|(?:/(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))+)$
                  type: string
                propagate:
                  default: true
                  description: Allow to propagate (inherit) permissions.
                  type: boolean
                role:
                  description: 'Enum representing roles via their [PRIVILEGES] combination.


                    Since privileges are implemented as bitflags, each unique combination
                    of privileges maps to a

                    single, unique `u64` value that is used in this enum definition.'
                  enum:
                  - Admin
                  - Audit
                  - NoAccess
                  - DatastoreAdmin
                  - DatastoreReader
                  - DatastoreBackup
                  - DatastorePowerUser
                  - DatastoreAudit
                  - RemoteAudit
                  - RemoteAdmin
                  - RemoteSyncOperator
                  - RemoteSyncPushOperator
                  - RemoteDatastorePowerUser
                  - RemoteDatastoreAdmin
                  - TapeAudit
                  - TapeAdmin
                  - TapeOperator
                  - TapeReader
                  type: string
              required:
              - path
              - role
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update Access Control List (ACLs).
      tags:
      - Access Control
  //access/access/domains:
    get:
      description: Authentication domain/realm index.
      operationId: get_access_access_domains
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of realms with basic info.
                items:
                  description: Basic Information about a realm
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    default:
                      description: True if it is the default realm
                      type: boolean
                    realm:
                      description: Realm name.
                      type: string
                    type:
                      description: type of the realm
                      type: string
                  type: object
                type: array
          description: List of realms with basic info.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Authentication domain/realm index.
      tags:
      - Access Control
  //access/access/domains/access/domains/{realm}/access/domains/{realm}/sync:
    post:
      description: Synchronize users of a given realm
      operationId: post_access_access_domains_access_domains_realm_access_domains_realm_sync
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dry-run:
                  default: false
                  description: If set, do not create/delete anything
                  type: boolean
                enable-new:
                  description: Enable newly synced users immediately
                  type: boolean
                remove-vanished:
                  description: 'A semicolon-separated list of things to remove when
                    they or the user vanishes during user synchronization. The following
                    values are possible: ``entry`` removes the user when not returned
                    from the sync; ``properties`` removes any  properties on existing
                    user that do not appear in the source. ``acl`` removes ACLs when
                    the user is not returned from the sync.'
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Synchronize users of a given realm
      tags:
      - Access Control
  //access/access/openid:
    get:
      description: Directory index.
      operationId: get_access_access_openid
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Access Control
  //access/access/openid/access/openid/auth-url:
    post:
      description: Create OpenID Redirect Session
      operationId: post_access_access_openid_access_openid_auth-url
      requestBody:
        content:
          application/json:
            schema:
              properties:
                realm:
                  description: Realm name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                redirect-url:
                  description: Redirection Url. The client should set this to used
                    server url.
                  type: string
              required:
              - realm
              - redirect-url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Redirection URL.
                type: string
          description: Redirection URL.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create OpenID Redirect Session
      tags:
      - Access Control
  //access/access/openid/access/openid/login:
    post:
      description: Verify OpenID authorization code and create a ticket
      operationId: post_access_access_openid_access_openid_login
      requestBody:
        content:
          application/json:
            schema:
              properties:
                code:
                  description: OpenId authorization code.
                  type: string
                redirect-url:
                  description: Redirection Url. The client should set this to used
                    server url.
                  type: string
                state:
                  description: OpenId state.
                  type: string
              required:
              - code
              - redirect-url
              - state
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: An authentication ticket with additional infos.
                properties:
                  CSRFPreventionToken:
                    description: Cross Site Request Forgery Prevention Token.
                    type: string
                  ticket:
                    description: Auth ticket.
                    type: string
                  username:
                    description: User name.
                    type: string
                type: object
          description: An authentication ticket with additional infos.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Verify OpenID authorization code and create a ticket
      tags:
      - Access Control
  //access/access/password:
    put:
      description: 'Change user password


        Each user is allowed to change his own password. Superuser

        can change all passwords.'
      operationId: put_access_access_password
      requestBody:
        content:
          application/json:
            schema:
              properties:
                confirmation-password:
                  description: The current password for confirmation, unless logged
                    in as root@pam
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                password:
                  description: User Password.
                  maxLength: 64
                  minLength: 8
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                userid:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - password
              - userid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Change user password


        Each user is allowed to change his own password. Superuser

        can change all passwords.'
      tags:
      - Access Control
  //access/access/permissions:
    get:
      description: 'List permissions of given or currently authenticated user / API
        token.


        Optionally limited to specific path.'
      operationId: get_access_access_permissions
      parameters:
      - description: Authentication ID
        in: query
        name: auth-id
        required: false
        schema:
          description: Authentication ID
          maxLength: 64
          minLength: 3
          pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
          type: string
      - description: Access control path.
        in: query
        name: path
        required: false
        schema:
          description: Access control path.
          maxLength: 128
          minLength: 1
          pattern: ^(?:/|(?:/(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))+)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Map of ACL path to Map of privilege to propagate bit
                type: object
          description: Map of ACL path to Map of privilege to propagate bit
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'List permissions of given or currently authenticated user / API token.


        Optionally limited to specific path.'
      tags:
      - Access Control
  //access/access/roles:
    get:
      description: Role list
      operationId: get_access_access_roles
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of roles.
                items:
                  description: Role with description and privileges.
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    privs:
                      description: List of Privileges
                      items:
                        description: A Privilege
                        type: string
                      type: array
                    roleid:
                      description: 'Enum representing roles via their [PRIVILEGES]
                        combination.


                        Since privileges are implemented as bitflags, each unique
                        combination of privileges maps to a

                        single, unique `u64` value that is used in this enum definition.'
                      type: string
                  type: object
                type: array
          description: List of roles.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Role list
      tags:
      - Access Control
  //access/access/tfa:
    get:
      description: List user TFA configuration.
      operationId: get_access_access_tfa
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list tuples of user and TFA entries.
                items:
                  description: Over the API we only provide the descriptions for TFA
                    data.
                  properties:
                    entries:
                      description: TFA entries.
                      items:
                        description: A TFA entry for a user.
                        properties:
                          created:
                            description: Creation time of this entry as unix epoch.
                            type: integer
                          description:
                            description: User chosen description for this entry.
                            type: string
                          enable:
                            description: Whether this TFA entry is currently enabled.
                            type: boolean
                          id:
                            description: The id used to reference this entry.
                            type: string
                          type:
                            description: A TFA entry type.
                            type: string
                        type: object
                      type: array
                    tfa-locked-until:
                      description: If a user's second factor is blocked, this contains
                        the block's expiration time.
                      type: integer
                    totp-locked:
                      description: The user is locked out of TOTP authentication.
                      type: boolean
                    userid:
                      description: The user this entry belongs to.
                      type: string
                  type: object
                type: array
          description: The list tuples of user and TFA entries.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List user TFA configuration.
      tags:
      - Access Control
  //access/access/tfa/access/tfa/{userid}:
    get:
      description: Add a TOTP secret to the user.
      operationId: get_access_access_tfa_access_tfa_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of TFA entries.
                items:
                  description: A TFA entry for a user.
                  properties:
                    created:
                      description: Creation time of this entry as unix epoch.
                      type: integer
                    description:
                      description: User chosen description for this entry.
                      type: string
                    enable:
                      description: Whether this TFA entry is currently enabled.
                      type: boolean
                    id:
                      description: The id used to reference this entry.
                      type: string
                    type:
                      description: A TFA entry type.
                      type: string
                  type: object
                type: array
          description: The list of TFA entries.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a TOTP secret to the user.
      tags:
      - Access Control
    post:
      description: Add a TFA entry to the user.
      operationId: post_access_access_tfa_access_tfa_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                challenge:
                  description: 'When responding to a u2f challenge: the original challenge
                    string'
                  type: string
                description:
                  description: A description to distinguish multiple entries from
                    one another
                  maxLength: 255
                  type: string
                password:
                  description: Password.
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                totp:
                  description: A totp URI.
                  type: string
                type:
                  description: A TFA entry type.
                  enum:
                  - totp
                  - u2f
                  - webauthn
                  - recovery
                  - yubico
                  type: string
                value:
                  description: The current value for the provided totp URI, or a Webauthn/U2F
                    challenge response
                  type: string
              required:
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The result returned when adding TFA entries to a user.
                properties:
                  challenge:
                    description: 'When adding u2f entries, this contains a challenge
                      the user must respond to in order to

                      finish the registration.'
                    type: string
                  id:
                    description: The id if a newly added TFA entry.
                    type: string
                  recovery:
                    description: A list of recovery codes as integers.
                    items:
                      description: A one-time usable recovery code entry.
                      type: integer
                    type: array
                type: object
          description: The result returned when adding TFA entries to a user.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a TFA entry to the user.
      tags:
      - Access Control
  //access/access/tfa/access/tfa/{userid}/access/tfa/{userid}/{id}:
    delete:
      description: Delete a single TFA entry.
      operationId: delete_access_access_tfa_access_tfa_userid_access_tfa_userid_id
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: Password.
        in: query
        name: password
        required: false
        schema:
          description: Password.
          maxLength: 1024
          minLength: 1
          pattern: ^[[:^cntrl:]]*$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a single TFA entry.
      tags:
      - Access Control
    get:
      description: Get a single TFA entry.
      operationId: get_access_access_tfa_access_tfa_userid_access_tfa_userid_id
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get a single TFA entry.
      tags:
      - Access Control
    put:
      description: Update user's TFA entry description.
      operationId: put_access_access_tfa_access_tfa_userid_access_tfa_userid_id
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A description to distinguish multiple entries from
                    one another
                  maxLength: 255
                  type: string
                enable:
                  description: Whether this entry should currently be enabled or disabled
                  type: boolean
                password:
                  description: Password.
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update user's TFA entry description.
      tags:
      - Access Control
  //access/access/ticket:
    post:
      description: Create or verify authentication ticket.
      operationId: post_access_access_ticket
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  description: 'The secret password. This can also be a valid ticket.
                    Only optional if the ticket is

                    provided in a cookie header and only if the endpoint supports
                    this.'
                  type: string
                path:
                  description: Verify ticket, and check if user have access 'privs'
                    on 'path'.
                  type: string
                port:
                  description: Port for verifying terminal tickets.
                  maximum: 65535
                  minimum: 0
                  type: integer
                privs:
                  description: Verify ticket, and check if user have access 'privs'
                    on 'path'.
                  type: string
                tfa-challenge:
                  description: The signed TFA challenge string the user wants to respond
                    to.
                  type: string
                username:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - username
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The API response for a ticket call.
                properties:
                  CSRFPreventionToken:
                    description: The CSRF prevention token.
                    type: string
                  ticket:
                    description: 'The ticket as is supposed to be used in the authentication
                      header. Not provided here if the

                      endpoint uses HttpOnly cookies to supply the actual ticket.'
                    type: string
                  ticket-info:
                    description: 'Like a full ticket, except the signature is missing.
                      Useful in HttpOnly-contexts

                      (browsers).'
                    type: string
                  username:
                    description: User ID
                    type: string
                type: object
          description: The API response for a ticket call.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create or verify authentication ticket.
      tags:
      - Access Control
  //access/access/users:
    get:
      description: List users
      operationId: get_access_access_users
      parameters:
      - description: Include user's API tokens in returned list.
        in: query
        name: include_tokens
        required: false
        schema:
          default: false
          description: Include user's API tokens in returned list.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List users (with config digest).
                items:
                  description: User properties with added list of ApiTokens
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    email:
                      description: E-Mail Address.
                      type: string
                    enable:
                      description: Enable the account (default). You can set this
                        to '0' to disable the account.
                      type: boolean
                    expire:
                      description: Account expiration date (seconds since epoch).
                        '0' means no expiration date.
                      type: integer
                    firstname:
                      description: First name.
                      type: string
                    lastname:
                      description: Last name.
                      type: string
                    tfa-locked-until:
                      description: Contains a timestamp until when a user is locked
                        out of 2nd factors
                      type: integer
                    tokens:
                      description: List of user's API tokens.
                      items:
                        description: ApiToken properties.
                        properties:
                          comment:
                            description: Comment.
                            type: string
                          enable:
                            description: Enable the account (default). You can set
                              this to '0' to disable the account.
                            type: boolean
                          expire:
                            description: Account expiration date (seconds since epoch).
                              '0' means no expiration date.
                            type: integer
                          tokenid:
                            description: API Token ID
                            type: string
                        type: object
                      type: array
                    totp-locked:
                      description: True if the user is currently locked out of TOTP
                        factors
                      type: boolean
                    userid:
                      description: User ID
                      type: string
                  type: object
                type: array
          description: List users (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List users
      tags:
      - Access Control
    post:
      description: Create new user.
      operationId: post_access_access_users
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                email:
                  description: E-Mail Address.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                enable:
                  default: true
                  description: Enable the account (default). You can set this to '0'
                    to disable the account.
                  type: boolean
                expire:
                  default: 0
                  description: Account expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                firstname:
                  description: First name.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                lastname:
                  description: Last name.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                password:
                  description: User Password.
                  maxLength: 64
                  minLength: 8
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                userid:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - userid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new user.
      tags:
      - Access Control
  //access/access/users/access/users/{userid}:
    delete:
      description: Remove a user from the configuration file.
      operationId: delete_access_access_users_access_users_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a user from the configuration file.
      tags:
      - Access Control
    get:
      description: Read user configuration data.
      operationId: get_access_access_users_access_users_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: User properties.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  email:
                    description: E-Mail Address.
                    type: string
                  enable:
                    description: Enable the account (default). You can set this to
                      '0' to disable the account.
                    type: boolean
                  expire:
                    description: Account expiration date (seconds since epoch). '0'
                      means no expiration date.
                    type: integer
                  firstname:
                    description: First name.
                    type: string
                  lastname:
                    description: Last name.
                    type: string
                  userid:
                    description: User ID
                    type: string
                type: object
          description: User properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read user configuration data.
      tags:
      - Access Control
    put:
      description: Update user configuration. To change a user's password use the
        'PUT /access/password' endpoint.
      operationId: put_access_access_users_access_users_userid
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                email:
                  description: E-Mail Address.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                enable:
                  default: true
                  description: Enable the account (default). You can set this to '0'
                    to disable the account.
                  type: boolean
                expire:
                  default: 0
                  description: Account expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                firstname:
                  description: First name.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                lastname:
                  description: Last name.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                password:
                  description: This parameter is ignored, please use 'PUT /access/password'
                    to change a user's password
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update user configuration. To change a user's password use the 'PUT
        /access/password' endpoint.
      tags:
      - Access Control
  //access/access/users/access/users/{userid}/access/users/{userid}/token:
    get:
      description: List user's API tokens
      operationId: get_access_access_users_access_users_userid_access_users_userid_token
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List user's API tokens (with config digest).
                items:
                  description: A Token Entry that contains the token-name
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    enable:
                      description: Enable the account (default). You can set this
                        to '0' to disable the account.
                      type: boolean
                    expire:
                      description: Account expiration date (seconds since epoch).
                        '0' means no expiration date.
                      type: integer
                    token-name:
                      description: 'The token ID part of an API token authentication
                        id.


                        This alone does NOT uniquely identify the API token - use
                        a full `Authid` for such use cases.'
                      type: string
                    tokenid:
                      description: API Token ID
                      type: string
                  type: object
                type: array
          description: List user's API tokens (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List user's API tokens
      tags:
      - Access Control
  //access/access/users/access/users/{userid}/access/users/{userid}/token/access/users/{userid}/token/{token-name}:
    delete:
      description: Delete a user's API token
      operationId: delete_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_token-name
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The token-name parameter
        in: path
        name: token-name
        required: true
        schema:
          description: The token-name parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a user's API token
      tags:
      - Access Control
    get:
      description: Read user's API token metadata
      operationId: get_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_token-name
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The token-name parameter
        in: path
        name: token-name
        required: true
        schema:
          description: The token-name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: ApiToken properties.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  enable:
                    description: Enable the account (default). You can set this to
                      '0' to disable the account.
                    type: boolean
                  expire:
                    description: Account expiration date (seconds since epoch). '0'
                      means no expiration date.
                    type: integer
                  tokenid:
                    description: API Token ID
                    type: string
                type: object
          description: ApiToken properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read user's API token metadata
      tags:
      - Access Control
    post:
      description: Generate a new API token with given metadata
      operationId: post_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_token-name
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The token-name parameter
        in: path
        name: token-name
        required: true
        schema:
          description: The token-name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                enable:
                  default: true
                  description: Enable the account (default). You can set this to '0'
                    to disable the account.
                  type: boolean
                expire:
                  default: 0
                  description: Account expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: API token identifier + generated secret.
                properties:
                  tokenid:
                    description: The API token identifier
                    type: string
                  value:
                    description: The API token secret
                    type: string
                type: object
          description: API token identifier + generated secret.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Generate a new API token with given metadata
      tags:
      - Access Control
    put:
      description: Update user's API token metadata
      operationId: put_access_access_users_access_users_userid_access_users_userid_token_access_users_userid_token_token-name
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      - description: The token-name parameter
        in: path
        name: token-name
        required: true
        schema:
          description: The token-name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                enable:
                  default: true
                  description: Enable the account (default). You can set this to '0'
                    to disable the account.
                  type: boolean
                expire:
                  default: 0
                  description: Account expiration date (seconds since epoch). '0'
                    means no expiration date.
                  minimum: 0
                  type: integer
                regenerate:
                  default: false
                  description: Regenerate token secret while keeping permissions.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Regenerated secret, if regenerate is set.
                properties:
                  secret:
                    description: The new API token secret
                    type: string
                type: object
          description: Regenerated secret, if regenerate is set.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update user's API token metadata
      tags:
      - Access Control
  //access/access/users/access/users/{userid}/access/users/{userid}/unlock-tfa:
    put:
      description: Unlock a user's TFA authentication.
      operationId: put_access_access_users_access_users_userid_access_users_userid_unlock-tfa
      parameters:
      - description: The userid parameter
        in: path
        name: userid
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxUserId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Whether the user was previously locked out of any 2nd
                  factor.
                type: boolean
          description: Whether the user was previously locked out of any 2nd factor.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Unlock a user's TFA authentication.
      tags:
      - Access Control
  //admin:
    get:
      description: Directory index.
      operationId: get_admin
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Administration
  //admin/admin/datastore:
    get:
      description: Datastore list
      operationId: get_admin_admin_datastore
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List the accessible datastores.
                items:
                  description: Basic information about a datastore.
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    maintenance:
                      description: If the datastore is in maintenance mode, information
                        about it
                      type: string
                    mount-status:
                      description: Current mounting status of a datastore, useful
                        for removable datastores.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                  type: object
                type: array
          description: List the accessible datastores.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Datastore list
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}:
    get:
      description: Directory index.
      operationId: get_admin_admin_datastore_admin_datastore_store
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/active-operations:
    get:
      description: Read datastore stats
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_active-operations
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read datastore stats
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/catalog:
    get:
      description: Get the entries of the given path of the catalog
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_catalog
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup archive name.
        in: query
        name: archive-name
        required: false
        schema:
          description: Backup archive name.
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Base64 encoded path.
        in: query
        name: filepath
        required: true
        schema:
          description: Base64 encoded path.
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the entries of the given path of the catalog
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/change-owner:
    post:
      description: Change owner of a backup group
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_change-owner
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-type:
                  description: Backup types.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                new-owner:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
              required:
              - backup-id
              - backup-type
              - new-owner
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Change owner of a backup group
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/download:
    get:
      description: Download single raw file from backup snapshot.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_download
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup type.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup type.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Backup archive name.
        in: query
        name: file-name
        required: true
        schema:
          description: Backup archive name.
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download single raw file from backup snapshot.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/download-decoded:
    get:
      description: Download single decoded file from backup snapshot. Only works if
        it's not encrypted.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_download-decoded
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup type.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup type.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Backup archive name.
        in: query
        name: file-name
        required: true
        schema:
          description: Backup archive name.
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download single decoded file from backup snapshot. Only works if it's
        not encrypted.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/files:
    get:
      description: List snapshot files.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_files
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns the list of archive files inside a backup snapshots.
                items:
                  description: Basic information about archive files inside a backup
                    snapshot.
                  properties:
                    crypt-mode:
                      description: Defines whether data is encrypted (using an AEAD
                        cipher), only signed, or neither.
                      type: string
                    filename:
                      description: Backup archive name.
                      type: string
                    size:
                      description: Archive size (from backup manifest).
                      type: integer
                  type: object
                type: array
          description: Returns the list of archive files inside a backup snapshots.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List snapshot files.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/gc:
    get:
      description: Garbage collection status.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_gc
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Garbage Collection general info
                properties:
                  disk-bytes:
                    description: Bytes used on disk.
                    type: integer
                  disk-chunks:
                    description: Chunks used on disk.
                    type: integer
                  duration:
                    description: Duration of last gc run
                    type: integer
                  index-data-bytes:
                    description: Sum of bytes referred by index files.
                    type: integer
                  index-file-count:
                    description: Number of processed index files.
                    type: integer
                  last-run-endtime:
                    description: Endtime of the last gc run
                    type: integer
                  last-run-state:
                    description: State of the last gc run
                    type: string
                  next-run:
                    description: Time of the next gc run
                    type: integer
                  pending-bytes:
                    description: Sum of pending bytes (pending removal - kept for
                      safety).
                    type: integer
                  pending-chunks:
                    description: Number of pending chunks (pending removal - kept
                      for safety).
                    type: integer
                  removed-bad:
                    description: Number of chunks marked as .bad by verify that have
                      been removed by GC.
                    type: integer
                  removed-bytes:
                    description: Sum of removed bytes.
                    type: integer
                  removed-chunks:
                    description: Number of removed chunks.
                    type: integer
                  schedule:
                    description: Schedule of the gc job
                    type: string
                  still-bad:
                    description: Number of chunks still marked as .bad after garbage
                      collection.
                    type: integer
                  store:
                    description: Datastore
                    type: string
                  upid:
                    description: Unique Process/Task Identifier
                    type: string
                type: object
          description: Garbage Collection general info
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Garbage collection status.
      tags:
      - Administration
    post:
      description: Start garbage collection.
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_gc
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start garbage collection.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/group-notes:
    get:
      description: Get "notes" for a backup group
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_group-notes
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get "notes" for a backup group
      tags:
      - Administration
    put:
      description: Set "notes" for a backup group
      operationId: put_admin_admin_datastore_admin_datastore_store_admin_datastore_store_group-notes
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-type:
                  description: Backup types.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                notes:
                  description: A multiline text.
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
              required:
              - backup-id
              - backup-type
              - notes
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set "notes" for a backup group
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/groups:
    delete:
      description: Delete backup group including all snapshots.
      operationId: delete_admin_admin_datastore_admin_datastore_store_admin_datastore_store_groups
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Return error when group cannot be deleted because of protected
          snapshots
        in: query
        name: error-on-protected
        required: false
        schema:
          default: true
          description: Return error when group cannot be deleted because of protected
            snapshots
          type: boolean
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Statistics for removed backup groups
                properties:
                  protected-snapshots:
                    description: Number of entities
                    type: integer
                  removed-groups:
                    description: Number of entities
                    type: integer
                  removed-snapshots:
                    description: Number of entities
                    type: integer
                type: object
          description: Statistics for removed backup groups
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete backup group including all snapshots.
      tags:
      - Administration
    get:
      description: List backup groups.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_groups
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns the list of backup groups.
                items:
                  description: Basic information about a backup group.
                  properties:
                    backup-count:
                      description: Number of contained snapshots
                      type: integer
                    backup-id:
                      description: Backup ID.
                      type: string
                    backup-type:
                      description: Backup types.
                      type: string
                    comment:
                      description: The first line from group "notes"
                      type: string
                    files:
                      description: List of contained archive files.
                      items:
                        description: Backup archive name.
                        type: string
                      type: array
                    last-backup:
                      description: Backup time (Unix epoch.)
                      type: integer
                    owner:
                      description: Authentication ID
                      type: string
                  type: object
                type: array
          description: Returns the list of backup groups.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List backup groups.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/mount:
    post:
      description: Mount removable datastore.
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_mount
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Mount removable datastore.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/namespace:
    delete:
      description: Delete a backup namespace including all snapshots.
      operationId: delete_admin_admin_datastore_admin_datastore_store_admin_datastore_store_namespace
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: If set, all groups will be destroyed in the whole hierarchy below
          andincluding `ns`. If not set, only empty namespaces will be pruned.
        in: query
        name: delete-groups
        required: false
        schema:
          default: false
          description: If set, all groups will be destroyed in the whole hierarchy
            below andincluding `ns`. If not set, only empty namespaces will be pruned.
          type: boolean
      - description: Return error when namespace cannot be deleted because of protected
          snapshots
        in: query
        name: error-on-protected
        required: false
        schema:
          default: true
          description: Return error when namespace cannot be deleted because of protected
            snapshots
          type: boolean
      - description: Namespace.
        in: query
        name: ns
        required: true
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a backup namespace including all snapshots.
      tags:
      - Administration
    get:
      description: List the namespaces of a datastore.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_namespace
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: How many levels of namespaces should be operated on (0 == no
          recursion)
        in: query
        name: max-depth
        required: false
        schema:
          default: 7
          description: How many levels of namespaces should be operated on (0 == no
            recursion)
          maximum: 7
          minimum: 0
          type: integer
      - description: Namespace.
        in: query
        name: parent
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns the list of backup namespaces.
                items:
                  description: Basic information about a backup namespace.
                  properties:
                    comment:
                      description: The first line from the namespace's "notes"
                      type: string
                    ns:
                      description: Namespace.
                      type: string
                  type: object
                type: array
          description: Returns the list of backup namespaces.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List the namespaces of a datastore.
      tags:
      - Administration
    post:
      description: Create a new datastore namespace.
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_namespace
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the new namespace to add at the parent.
                  maxLength: 32
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                parent:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Namespace.
                type: string
          description: Namespace.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new datastore namespace.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/notes:
    get:
      description: Get "notes" for a specific backup
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_notes
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get "notes" for a specific backup
      tags:
      - Administration
    put:
      description: Set "notes" for a specific backup
      operationId: put_admin_admin_datastore_admin_datastore_store_admin_datastore_store_notes
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-time:
                  description: Backup time (Unix epoch.)
                  minimum: 1
                  type: integer
                backup-type:
                  description: Backup types.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                notes:
                  description: A multiline text.
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
              required:
              - backup-id
              - backup-time
              - backup-type
              - notes
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set "notes" for a specific backup
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/protected:
    get:
      description: Query protection for a specific backup
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_protected
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Query protection for a specific backup
      tags:
      - Administration
    put:
      description: En- or disable protection for a specific backup
      operationId: put_admin_admin_datastore_admin_datastore_store_admin_datastore_store_protected
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-time:
                  description: Backup time (Unix epoch.)
                  minimum: 1
                  type: integer
                backup-type:
                  description: Backup types.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                protected:
                  description: Enable/disable protection.
                  type: boolean
              required:
              - backup-id
              - backup-time
              - backup-type
              - protected
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: En- or disable protection for a specific backup
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/prune:
    post:
      description: Prune a group on the datastore
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_prune
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-type:
                  description: Backup types.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                dry-run:
                  default: false
                  description: Just show what prune would do, but do not delete anything.
                  type: boolean
                keep-daily:
                  description: Number of daily backups to keep.
                  minimum: 1
                  type: integer
                keep-hourly:
                  description: Number of hourly backups to keep.
                  minimum: 1
                  type: integer
                keep-last:
                  description: Number of backups to keep.
                  minimum: 1
                  type: integer
                keep-monthly:
                  description: Number of monthly backups to keep.
                  minimum: 1
                  type: integer
                keep-weekly:
                  description: Number of weekly backups to keep.
                  minimum: 1
                  type: integer
                keep-yearly:
                  description: Number of yearly backups to keep.
                  minimum: 1
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                use-task:
                  default: false
                  description: Spins up an asynchronous task that does the work.
                  type: boolean
              required:
              - backup-id
              - backup-type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns the list of snapshots and a flag indicating if
                  there are kept or removed.
                items:
                  description: Prune result.
                  properties:
                    backup-id:
                      description: Backup ID.
                      type: string
                    backup-time:
                      description: Backup time (Unix epoch.)
                      type: integer
                    backup-type:
                      description: Backup types.
                      type: string
                    keep:
                      description: Keep snapshot
                      type: boolean
                  type: object
                type: array
          description: Returns the list of snapshots and a flag indicating if there
            are kept or removed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Prune a group on the datastore
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/prune-datastore:
    post:
      description: Prune the datastore
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_prune-datastore
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dry-run:
                  default: false
                  description: Just show what prune would do, but do not delete anything.
                  type: boolean
                keep-daily:
                  description: Number of daily backups to keep.
                  minimum: 1
                  type: integer
                keep-hourly:
                  description: Number of hourly backups to keep.
                  minimum: 1
                  type: integer
                keep-last:
                  description: Number of backups to keep.
                  minimum: 1
                  type: integer
                keep-monthly:
                  description: Number of monthly backups to keep.
                  minimum: 1
                  type: integer
                keep-weekly:
                  description: Number of weekly backups to keep.
                  minimum: 1
                  type: integer
                keep-yearly:
                  description: Number of yearly backups to keep.
                  minimum: 1
                  type: integer
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Prune the datastore
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/pxar-file-download:
    get:
      description: Download single file from pxar file of a backup snapshot. Only
        works if it's not encrypted.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_pxar-file-download
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup archive name.
        in: query
        name: archive-name
        required: false
        schema:
          description: Backup archive name.
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup type.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup type.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Base64 encoded path
        in: query
        name: filepath
        required: true
        schema:
          description: Base64 encoded path
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      - description: Download as .tar.zst
        in: query
        name: tar
        required: false
        schema:
          description: Download as .tar.zst
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download single file from pxar file of a backup snapshot. Only works
        if it's not encrypted.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/rrd:
    get:
      description: Read datastore stats
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_rrd
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: RRD consolidation mode
        in: query
        name: cf
        required: true
        schema:
          description: RRD consolidation mode
          enum:
          - MAX
          - AVERAGE
          type: string
      - description: RRD time frame
        in: query
        name: timeframe
        required: true
        schema:
          description: RRD time frame
          enum:
          - hour
          - day
          - week
          - month
          - year
          - decade
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read datastore stats
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/snapshots:
    delete:
      description: Delete backup snapshot.
      operationId: delete_admin_admin_datastore_admin_datastore_store_admin_datastore_store_snapshots
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup types.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete backup snapshot.
      tags:
      - Administration
    get:
      description: List backup snapshots.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_snapshots
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Backup ID.
        in: query
        name: backup-id
        required: false
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup types.
        in: query
        name: backup-type
        required: false
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns the list of snapshots.
                items:
                  description: Basic information about backup snapshot.
                  properties:
                    backup-id:
                      description: Backup ID.
                      type: string
                    backup-time:
                      description: Backup time (Unix epoch.)
                      type: integer
                    backup-type:
                      description: Backup types.
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    files:
                      description: List of contained archive files.
                      items:
                        description: Backup archive name.
                        type: string
                      type: array
                    fingerprint:
                      description: Fingerprint of encryption key
                      type: string
                    owner:
                      description: Authentication ID
                      type: string
                    protected:
                      description: Protection from prunes
                      type: boolean
                    size:
                      description: Overall snapshot size (sum of all archive sizes).
                      type: integer
                    verification:
                      description: Task properties.
                      properties:
                        state:
                          description: Result of a verify operation.
                          type: string
                        upid:
                          description: Unique Process/Task Identifier
                          type: string
                      type: object
                  type: object
                type: array
          description: Returns the list of snapshots.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List backup snapshots.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/status:
    get:
      description: Get datastore status.
      operationId: get_admin_admin_datastore_admin_datastore_store_admin_datastore_store_status
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Include additional information like snapshot counts and GC status.
        in: query
        name: verbose
        required: false
        schema:
          default: false
          description: Include additional information like snapshot counts and GC
            status.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Overall Datastore status and useful information.
                properties:
                  avail:
                    description: Available space (bytes).
                    type: integer
                  counts:
                    description: Counts of groups/snapshots per BackupType.
                    properties:
                      ct:
                        description: Backup Type group/snapshot counts.
                        properties:
                          groups:
                            description: The number of groups of the type.
                            type: integer
                          snapshots:
                            description: The number of snapshots of the type.
                            type: integer
                        type: object
                      host:
                        description: Backup Type group/snapshot counts.
                        properties:
                          groups:
                            description: The number of groups of the type.
                            type: integer
                          snapshots:
                            description: The number of snapshots of the type.
                            type: integer
                        type: object
                      other:
                        description: Backup Type group/snapshot counts.
                        properties:
                          groups:
                            description: The number of groups of the type.
                            type: integer
                          snapshots:
                            description: The number of snapshots of the type.
                            type: integer
                        type: object
                      vm:
                        description: Backup Type group/snapshot counts.
                        properties:
                          groups:
                            description: The number of groups of the type.
                            type: integer
                          snapshots:
                            description: The number of snapshots of the type.
                            type: integer
                        type: object
                    type: object
                  gc-status:
                    description: Garbage collection status.
                    properties:
                      disk-bytes:
                        description: Bytes used on disk.
                        type: integer
                      disk-chunks:
                        description: Chunks used on disk.
                        type: integer
                      index-data-bytes:
                        description: Sum of bytes referred by index files.
                        type: integer
                      index-file-count:
                        description: Number of processed index files.
                        type: integer
                      pending-bytes:
                        description: Sum of pending bytes (pending removal - kept
                          for safety).
                        type: integer
                      pending-chunks:
                        description: Number of pending chunks (pending removal - kept
                          for safety).
                        type: integer
                      removed-bad:
                        description: Number of chunks marked as .bad by verify that
                          have been removed by GC.
                        type: integer
                      removed-bytes:
                        description: Sum of removed bytes.
                        type: integer
                      removed-chunks:
                        description: Number of removed chunks.
                        type: integer
                      still-bad:
                        description: Number of chunks still marked as .bad after garbage
                          collection.
                        type: integer
                      upid:
                        description: Unique Process/Task Identifier
                        type: string
                    type: object
                  total:
                    description: Total space (bytes).
                    type: integer
                  used:
                    description: Used space (bytes).
                    type: integer
                type: object
          description: Overall Datastore status and useful information.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get datastore status.
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/unmount:
    post:
      description: Unmount a removable device that is associated with the datastore
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_unmount
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Unmount a removable device that is associated with the datastore
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/upload-backup-log:
    post:
      description: Upload the client backup log file into a backup snapshot ('client.log.blob').
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_upload-backup-log
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-time:
                  description: Backup time (Unix epoch.)
                  minimum: 1
                  type: integer
                backup-type:
                  description: Backup type.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
              required:
              - backup-id
              - backup-time
              - backup-type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload the client backup log file into a backup snapshot ('client.log.blob').
      tags:
      - Administration
  //admin/admin/datastore/admin/datastore/{store}/admin/datastore/{store}/verify:
    post:
      description: 'Verify backups.


        This function can verify a single backup snapshot, all backup from a backup
        group,

        or all backups in the datastore.'
      operationId: post_admin_admin_datastore_admin_datastore_store_admin_datastore_store_verify
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backup-id:
                  description: Backup ID.
                  pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
                  type: string
                backup-time:
                  description: Backup time (Unix epoch.)
                  minimum: 1
                  type: integer
                backup-type:
                  description: Backup types.
                  enum:
                  - vm
                  - ct
                  - host
                  type: string
                ignore-verified:
                  default: true
                  description: Do not verify backups that are already verified if
                    their verification is not outdated.
                  type: boolean
                max-depth:
                  default: 7
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                outdated-after:
                  description: Days after that a verification becomes outdated. (0
                    is deprecated)'
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Verify backups.


        This function can verify a single backup snapshot, all backup from a backup
        group,

        or all backups in the datastore.'
      tags:
      - Administration
  //admin/admin/gc:
    get:
      description: List all GC jobs (max one per datastore)
      operationId: get_admin_admin_gc
      parameters:
      - description: Datastore name.
        in: query
        name: store
        required: false
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured gc jobs and their status
                items:
                  description: Garbage Collection general info
                  properties:
                    disk-bytes:
                      description: Bytes used on disk.
                      type: integer
                    disk-chunks:
                      description: Chunks used on disk.
                      type: integer
                    duration:
                      description: Duration of last gc run
                      type: integer
                    index-data-bytes:
                      description: Sum of bytes referred by index files.
                      type: integer
                    index-file-count:
                      description: Number of processed index files.
                      type: integer
                    last-run-endtime:
                      description: Endtime of the last gc run
                      type: integer
                    last-run-state:
                      description: State of the last gc run
                      type: string
                    next-run:
                      description: Time of the next gc run
                      type: integer
                    pending-bytes:
                      description: Sum of pending bytes (pending removal - kept for
                        safety).
                      type: integer
                    pending-chunks:
                      description: Number of pending chunks (pending removal - kept
                        for safety).
                      type: integer
                    removed-bad:
                      description: Number of chunks marked as .bad by verify that
                        have been removed by GC.
                      type: integer
                    removed-bytes:
                      description: Sum of removed bytes.
                      type: integer
                    removed-chunks:
                      description: Number of removed chunks.
                      type: integer
                    schedule:
                      description: Schedule of the gc job
                      type: string
                    still-bad:
                      description: Number of chunks still marked as .bad after garbage
                        collection.
                      type: integer
                    store:
                      description: Datastore
                      type: string
                    upid:
                      description: Unique Process/Task Identifier
                      type: string
                  type: object
                type: array
          description: List configured gc jobs and their status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all GC jobs (max one per datastore)
      tags:
      - Administration
  //admin/admin/gc/admin/gc/{store}:
    get:
      description: List all GC jobs (max one per datastore)
      operationId: get_admin_admin_gc_admin_gc_store
      parameters:
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured gc jobs and their status
                items:
                  description: Garbage Collection general info
                  properties:
                    disk-bytes:
                      description: Bytes used on disk.
                      type: integer
                    disk-chunks:
                      description: Chunks used on disk.
                      type: integer
                    duration:
                      description: Duration of last gc run
                      type: integer
                    index-data-bytes:
                      description: Sum of bytes referred by index files.
                      type: integer
                    index-file-count:
                      description: Number of processed index files.
                      type: integer
                    last-run-endtime:
                      description: Endtime of the last gc run
                      type: integer
                    last-run-state:
                      description: State of the last gc run
                      type: string
                    next-run:
                      description: Time of the next gc run
                      type: integer
                    pending-bytes:
                      description: Sum of pending bytes (pending removal - kept for
                        safety).
                      type: integer
                    pending-chunks:
                      description: Number of pending chunks (pending removal - kept
                        for safety).
                      type: integer
                    removed-bad:
                      description: Number of chunks marked as .bad by verify that
                        have been removed by GC.
                      type: integer
                    removed-bytes:
                      description: Sum of removed bytes.
                      type: integer
                    removed-chunks:
                      description: Number of removed chunks.
                      type: integer
                    schedule:
                      description: Schedule of the gc job
                      type: string
                    still-bad:
                      description: Number of chunks still marked as .bad after garbage
                        collection.
                      type: integer
                    store:
                      description: Datastore
                      type: string
                    upid:
                      description: Unique Process/Task Identifier
                      type: string
                  type: object
                type: array
          description: List configured gc jobs and their status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all GC jobs (max one per datastore)
      tags:
      - Administration
  //admin/admin/metrics:
    get:
      description: List configured metric servers.
      operationId: get_admin_admin_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of configured metric servers.
                items:
                  description: Basic information about a metric server that's available
                    for all types
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    enable:
                      description: Enables or disables the metrics server
                      type: boolean
                    name:
                      description: Metrics Server ID.
                      type: string
                    server:
                      description: The target server
                      type: string
                    type:
                      description: Type of the metric server
                      type: string
                  type: object
                type: array
          description: List of configured metric servers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured metric servers.
      tags:
      - Administration
  //admin/admin/prune:
    get:
      description: List all prune jobs
      operationId: get_admin_admin_prune
      parameters:
      - description: Datastore name.
        in: query
        name: store
        required: false
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured jobs and their status (filtered by access)
                items:
                  description: Status of prune job
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this job.
                      type: boolean
                    id:
                      description: Job ID.
                      type: string
                    keep-daily:
                      description: Number of daily backups to keep.
                      type: integer
                    keep-hourly:
                      description: Number of hourly backups to keep.
                      type: integer
                    keep-last:
                      description: Number of backups to keep.
                      type: integer
                    keep-monthly:
                      description: Number of monthly backups to keep.
                      type: integer
                    keep-weekly:
                      description: Number of weekly backups to keep.
                      type: integer
                    keep-yearly:
                      description: Number of yearly backups to keep.
                      type: integer
                    last-run-endtime:
                      description: Endtime of the last run.
                      type: integer
                    last-run-state:
                      description: Result of the last run.
                      type: string
                    last-run-upid:
                      description: Task UPID of the last run.
                      type: string
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion, empty == automatic full recursion,
                        namespace depths reduce maximum allowed value)
                      type: integer
                    next-run:
                      description: Estimated time of the next run (UNIX epoch).
                      type: integer
                    ns:
                      description: Namespace.
                      type: string
                    schedule:
                      description: Run prune job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                  type: object
                type: array
          description: List configured jobs and their status (filtered by access)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all prune jobs
      tags:
      - Administration
  //admin/admin/prune/admin/prune/{id}:
    get:
      description: Directory index.
      operationId: get_admin_admin_prune_admin_prune_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Administration
  //admin/admin/prune/admin/prune/{id}/admin/prune/{id}/run:
    post:
      description: Runs a prune job manually.
      operationId: post_admin_admin_prune_admin_prune_id_admin_prune_id_run
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Runs a prune job manually.
      tags:
      - Administration
  //admin/admin/sync:
    get:
      description: List all configured sync jobs
      operationId: get_admin_admin_sync
      parameters:
      - description: Datastore name.
        in: query
        name: store
        required: false
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: 'The direction of the listed sync jobs: push, pull or all.'
        in: query
        name: sync-direction
        required: false
        schema:
          default: pull
          description: 'The direction of the listed sync jobs: push, pull or all.'
          enum:
          - all
          - push
          - pull
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured jobs and their status.
                items:
                  description: Status of Sync Job
                  properties:
                    burst-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    burst-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    encrypted-only:
                      description: Only synchronize encrypted backup snapshots, exclude
                        others.
                      type: boolean
                    group-filter:
                      description: List of group filters.
                      items:
                        description: Group filter based on group identifier ('group:GROUP'),
                          group type ('type:<vm|ct|host>'), or regex ('regex:RE').
                          Can be inverted by prepending 'exclude:'.
                        type: string
                      type: array
                    id:
                      description: Job ID.
                      type: string
                    last-run-endtime:
                      description: Endtime of the last run.
                      type: integer
                    last-run-state:
                      description: Result of the last run.
                      type: string
                    last-run-upid:
                      description: Task UPID of the last run.
                      type: string
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion, empty == automatic full recursion,
                        namespace depths reduce maximum allowed value)
                      type: integer
                    next-run:
                      description: Estimated time of the next run (UNIX epoch).
                      type: integer
                    ns:
                      description: Namespace.
                      type: string
                    owner:
                      description: Authentication ID
                      type: string
                    rate-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    rate-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    remote:
                      description: Remote ID.
                      type: string
                    remote-ns:
                      description: Namespace.
                      type: string
                    remote-store:
                      description: Datastore name.
                      type: string
                    remove-vanished:
                      description: Delete vanished backups. This remove the local
                        copy if the remote backup was deleted.
                      type: boolean
                    resync-corrupt:
                      description: If the verification failed for a local snapshot,
                        try to pull it again.
                      type: boolean
                    schedule:
                      description: Run sync job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                    sync-direction:
                      description: Direction of the sync job, push or pull
                      type: string
                    transfer-last:
                      description: Limit transfer to last N snapshots (per group),
                        skipping others
                      type: integer
                    verified-only:
                      description: Only synchronize verified backup snapshots, exclude
                        others.
                      type: boolean
                  type: object
                type: array
          description: List configured jobs and their status.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all configured sync jobs
      tags:
      - Administration
  //admin/admin/sync/admin/sync/{id}:
    get:
      description: Directory index.
      operationId: get_admin_admin_sync_admin_sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Administration
  //admin/admin/sync/admin/sync/{id}/admin/sync/{id}/run:
    post:
      description: Runs the sync jobs manually.
      operationId: post_admin_admin_sync_admin_sync_id_admin_sync_id_run
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Runs the sync jobs manually.
      tags:
      - Administration
  //admin/admin/traffic-control:
    get:
      description: Show current traffic for all traffic control rules.
      operationId: get_admin_admin_traffic-control
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Show current traffic control rates.
                items:
                  description: Traffic control rule config with current rates
                  properties:
                    burst-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    burst-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    cur-rate-in:
                      description: Current ingress rate in bytes/second
                      type: integer
                    cur-rate-out:
                      description: Current egress rate in bytes/second
                      type: integer
                    name:
                      description: Rule ID.
                      type: string
                    network:
                      description: Rule applies to Source IPs within this networks
                      items:
                        description: IP address (IPv4 or IPv6) with netmask (CIDR
                          notation).
                        type: string
                      type: array
                    rate-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    rate-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    timeframe:
                      description: Enable the rule at specific times
                      items:
                        description: Timeframe to specify when the rule is active.
                        type: string
                      type: array
                  type: object
                type: array
          description: Show current traffic control rates.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Show current traffic for all traffic control rules.
      tags:
      - Administration
  //admin/admin/verify:
    get:
      description: List all verification jobs
      operationId: get_admin_admin_verify
      parameters:
      - description: Datastore name.
        in: query
        name: store
        required: false
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured jobs and their status (filtered by access)
                items:
                  description: Status of Verification Job
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    id:
                      description: Job ID.
                      type: string
                    ignore-verified:
                      description: Do not verify backups that are already verified
                        if their verification is not outdated.
                      type: boolean
                    last-run-endtime:
                      description: Endtime of the last run.
                      type: integer
                    last-run-state:
                      description: Result of the last run.
                      type: string
                    last-run-upid:
                      description: Task UPID of the last run.
                      type: string
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion)
                      type: integer
                    next-run:
                      description: Estimated time of the next run (UNIX epoch).
                      type: integer
                    ns:
                      description: Namespace.
                      type: string
                    outdated-after:
                      description: Days after that a verification becomes outdated.
                        (0 is deprecated)'
                      type: integer
                    schedule:
                      description: Run verify job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                  type: object
                type: array
          description: List configured jobs and their status (filtered by access)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all verification jobs
      tags:
      - Administration
  //admin/admin/verify/admin/verify/{id}:
    get:
      description: Directory index.
      operationId: get_admin_admin_verify_admin_verify_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Administration
  //admin/admin/verify/admin/verify/{id}/admin/verify/{id}/run:
    post:
      description: Runs a verification job manually.
      operationId: post_admin_admin_verify_admin_verify_id_admin_verify_id_run
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Runs a verification job manually.
      tags:
      - Administration
  //backup:
    get:
      description: Upgraded to backup protocol ('proxmox-backup-protocol-v1').
      operationId: get_backup
      parameters:
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup type.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup type.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Job is a benchmark (do not keep data).
        in: query
        name: benchmark
        required: false
        schema:
          description: Job is a benchmark (do not keep data).
          type: boolean
      - description: Enable verbose debug logging.
        in: query
        name: debug
        required: false
        schema:
          description: Enable verbose debug logging.
          type: boolean
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      - description: Datastore name.
        in: query
        name: store
        required: true
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upgraded to backup protocol ('proxmox-backup-protocol-v1').
      tags:
      - Backup Operations
  //config:
    get:
      description: Directory index.
      operationId: get_config
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/access:
    get:
      description: Directory index.
      operationId: get_config_config_access
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/access/config/access/ad:
    get:
      description: List configured AD realms
      operationId: get_config_config_access_config_access_ad
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of configured AD realms.
                items:
                  description: AD realm configuration properties.
                  properties:
                    base-dn:
                      description: LDAP Domain
                      type: string
                    bind-dn:
                      description: LDAP Domain
                      type: string
                    capath:
                      description: 'CA certificate to use for the server. The path
                        can point to

                        either a file, or a directory. If it points to a file,

                        the PEM-formatted X.509 certificate stored at the path

                        will be added as a trusted certificate.

                        If the path points to a directory,

                        the directory replaces the system''s default certificate

                        store at `/etc/ssl/certs` - Every file in the directory

                        will be loaded as a trusted certificate.'
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    default:
                      description: True if you want this to be the default realm selected
                        on login.
                      type: boolean
                    filter:
                      description: Custom LDAP search filter for user sync
                      type: string
                    mode:
                      description: LDAP connection type
                      type: string
                    port:
                      description: AD server Port
                      type: integer
                    realm:
                      description: Realm name.
                      type: string
                    server1:
                      description: AD server address
                      type: string
                    server2:
                      description: Fallback AD server address
                      type: string
                    sync-attributes:
                      description: Comma-separated list of key=value pairs for specifying
                        which LDAP attributes map to which PBS user field. For example,
                        to map the LDAP attribute ``mail`` to PBS's ``email``, write
                        ``email=mail``.
                      type: string
                    sync-defaults-options:
                      description: sync defaults options
                      type: string
                    user-classes:
                      description: 'Comma-separated list of allowed objectClass values
                        for user synchronization. For instance, if ``user-classes``
                        is set to ``person,user``, then user synchronization will
                        consider all LDAP entities where ``objectClass: person`` `or`
                        ``objectClass: user``.'
                      type: string
                    verify:
                      description: Verify server certificate
                      type: boolean
                  type: object
                type: array
          description: List of configured AD realms.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured AD realms
      tags:
      - Configuration
    post:
      description: Create a new AD realm
      operationId: post_config_config_access_config_access_ad
      requestBody:
        content:
          application/json:
            schema:
              properties:
                base-dn:
                  description: LDAP Domain
                  type: string
                bind-dn:
                  description: LDAP Domain
                  type: string
                capath:
                  description: 'CA certificate to use for the server. The path can
                    point to

                    either a file, or a directory. If it points to a file,

                    the PEM-formatted X.509 certificate stored at the path

                    will be added as a trusted certificate.

                    If the path points to a directory,

                    the directory replaces the system''s default certificate

                    store at `/etc/ssl/certs` - Every file in the directory

                    will be loaded as a trusted certificate.'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                filter:
                  description: Custom LDAP search filter for user sync
                  type: string
                mode:
                  default: ldap
                  description: LDAP connection type
                  enum:
                  - ldap
                  - ldap+starttls
                  - ldaps
                  type: string
                password:
                  description: AD bind password
                  type: string
                port:
                  description: AD server Port
                  maximum: 65535
                  minimum: 0
                  type: integer
                realm:
                  description: Realm name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                server1:
                  description: AD server address
                  type: string
                server2:
                  description: Fallback AD server address
                  type: string
                sync-attributes:
                  description: Comma-separated list of key=value pairs for specifying
                    which LDAP attributes map to which PBS user field. For example,
                    to map the LDAP attribute ``mail`` to PBS's ``email``, write ``email=mail``.
                  type: string
                sync-defaults-options:
                  description: sync defaults options
                  type: string
                user-classes:
                  default: inetorgperson,posixaccount,person,user
                  description: 'Comma-separated list of allowed objectClass values
                    for user synchronization. For instance, if ``user-classes`` is
                    set to ``person,user``, then user synchronization will consider
                    all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                    user``.'
                  type: string
                verify:
                  default: false
                  description: Verify server certificate
                  type: boolean
              required:
              - realm
              - server1
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new AD realm
      tags:
      - Configuration
  //config/config/access/config/access/ad/config/access/ad/{realm}:
    delete:
      description: Remove an LDAP realm configuration
      operationId: delete_config_config_access_config_access_ad_config_access_ad_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove an LDAP realm configuration
      tags:
      - Configuration
    get:
      description: Read the AD realm configuration
      operationId: get_config_config_access_config_access_ad_config_access_ad_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: AD realm configuration properties.
                properties:
                  base-dn:
                    description: LDAP Domain
                    type: string
                  bind-dn:
                    description: LDAP Domain
                    type: string
                  capath:
                    description: 'CA certificate to use for the server. The path can
                      point to

                      either a file, or a directory. If it points to a file,

                      the PEM-formatted X.509 certificate stored at the path

                      will be added as a trusted certificate.

                      If the path points to a directory,

                      the directory replaces the system''s default certificate

                      store at `/etc/ssl/certs` - Every file in the directory

                      will be loaded as a trusted certificate.'
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  filter:
                    description: Custom LDAP search filter for user sync
                    type: string
                  mode:
                    description: LDAP connection type
                    type: string
                  port:
                    description: AD server Port
                    type: integer
                  realm:
                    description: Realm name.
                    type: string
                  server1:
                    description: AD server address
                    type: string
                  server2:
                    description: Fallback AD server address
                    type: string
                  sync-attributes:
                    description: Comma-separated list of key=value pairs for specifying
                      which LDAP attributes map to which PBS user field. For example,
                      to map the LDAP attribute ``mail`` to PBS's ``email``, write
                      ``email=mail``.
                    type: string
                  sync-defaults-options:
                    description: sync defaults options
                    type: string
                  user-classes:
                    description: 'Comma-separated list of allowed objectClass values
                      for user synchronization. For instance, if ``user-classes``
                      is set to ``person,user``, then user synchronization will consider
                      all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                      user``.'
                    type: string
                  verify:
                    description: Verify server certificate
                    type: boolean
                type: object
          description: AD realm configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the AD realm configuration
      tags:
      - Configuration
    put:
      description: Update an AD realm configuration
      operationId: put_config_config_access_config_access_ad_config_access_ad_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                base-dn:
                  description: LDAP Domain
                  type: string
                bind-dn:
                  description: LDAP Domain
                  type: string
                capath:
                  description: 'CA certificate to use for the server. The path can
                    point to

                    either a file, or a directory. If it points to a file,

                    the PEM-formatted X.509 certificate stored at the path

                    will be added as a trusted certificate.

                    If the path points to a directory,

                    the directory replaces the system''s default certificate

                    store at `/etc/ssl/certs` - Every file in the directory

                    will be loaded as a trusted certificate.'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                filter:
                  description: Custom LDAP search filter for user sync
                  type: string
                mode:
                  default: ldap
                  description: LDAP connection type
                  enum:
                  - ldap
                  - ldap+starttls
                  - ldaps
                  type: string
                password:
                  description: AD bind password
                  type: string
                port:
                  description: AD server Port
                  maximum: 65535
                  minimum: 0
                  type: integer
                server1:
                  description: AD server address
                  type: string
                server2:
                  description: Fallback AD server address
                  type: string
                sync-attributes:
                  description: Comma-separated list of key=value pairs for specifying
                    which LDAP attributes map to which PBS user field. For example,
                    to map the LDAP attribute ``mail`` to PBS's ``email``, write ``email=mail``.
                  type: string
                sync-defaults-options:
                  description: sync defaults options
                  type: string
                user-classes:
                  default: inetorgperson,posixaccount,person,user
                  description: 'Comma-separated list of allowed objectClass values
                    for user synchronization. For instance, if ``user-classes`` is
                    set to ``person,user``, then user synchronization will consider
                    all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                    user``.'
                  type: string
                verify:
                  default: false
                  description: Verify server certificate
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: AD realm configuration properties.
                properties:
                  base-dn:
                    description: LDAP Domain
                    type: string
                  bind-dn:
                    description: LDAP Domain
                    type: string
                  capath:
                    description: 'CA certificate to use for the server. The path can
                      point to

                      either a file, or a directory. If it points to a file,

                      the PEM-formatted X.509 certificate stored at the path

                      will be added as a trusted certificate.

                      If the path points to a directory,

                      the directory replaces the system''s default certificate

                      store at `/etc/ssl/certs` - Every file in the directory

                      will be loaded as a trusted certificate.'
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  filter:
                    description: Custom LDAP search filter for user sync
                    type: string
                  mode:
                    description: LDAP connection type
                    type: string
                  port:
                    description: AD server Port
                    type: integer
                  realm:
                    description: Realm name.
                    type: string
                  server1:
                    description: AD server address
                    type: string
                  server2:
                    description: Fallback AD server address
                    type: string
                  sync-attributes:
                    description: Comma-separated list of key=value pairs for specifying
                      which LDAP attributes map to which PBS user field. For example,
                      to map the LDAP attribute ``mail`` to PBS's ``email``, write
                      ``email=mail``.
                    type: string
                  sync-defaults-options:
                    description: sync defaults options
                    type: string
                  user-classes:
                    description: 'Comma-separated list of allowed objectClass values
                      for user synchronization. For instance, if ``user-classes``
                      is set to ``person,user``, then user synchronization will consider
                      all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                      user``.'
                    type: string
                  verify:
                    description: Verify server certificate
                    type: boolean
                type: object
          description: AD realm configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an AD realm configuration
      tags:
      - Configuration
  //config/config/access/config/access/ldap:
    get:
      description: List configured LDAP realms
      operationId: get_config_config_access_config_access_ldap
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of configured LDAP realms.
                items:
                  description: LDAP configuration properties.
                  properties:
                    base-dn:
                      description: LDAP Domain
                      type: string
                    bind-dn:
                      description: LDAP Domain
                      type: string
                    capath:
                      description: 'CA certificate to use for the server. The path
                        can point to

                        either a file, or a directory. If it points to a file,

                        the PEM-formatted X.509 certificate stored at the path

                        will be added as a trusted certificate.

                        If the path points to a directory,

                        the directory replaces the system''s default certificate

                        store at `/etc/ssl/certs` - Every file in the directory

                        will be loaded as a trusted certificate.'
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    default:
                      description: True if you want this to be the default realm selected
                        on login.
                      type: boolean
                    filter:
                      description: Custom LDAP search filter for user sync
                      type: string
                    mode:
                      description: LDAP connection type
                      type: string
                    port:
                      description: Port
                      type: integer
                    realm:
                      description: Realm name.
                      type: string
                    server1:
                      description: LDAP server address
                      type: string
                    server2:
                      description: Fallback LDAP server address
                      type: string
                    sync-attributes:
                      description: Comma-separated list of key=value pairs for specifying
                        which LDAP attributes map to which PBS user field. For example,
                        to map the LDAP attribute ``mail`` to PBS's ``email``, write
                        ``email=mail``.
                      type: string
                    sync-defaults-options:
                      description: sync defaults options
                      type: string
                    user-attr:
                      description: Username attribute. Used to map a ``userid`` to
                        LDAP to an LDAP ``dn``.
                      type: string
                    user-classes:
                      description: 'Comma-separated list of allowed objectClass values
                        for user synchronization. For instance, if ``user-classes``
                        is set to ``person,user``, then user synchronization will
                        consider all LDAP entities where ``objectClass: person`` `or`
                        ``objectClass: user``.'
                      type: string
                    verify:
                      description: Verify server certificate
                      type: boolean
                  type: object
                type: array
          description: List of configured LDAP realms.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured LDAP realms
      tags:
      - Configuration
    post:
      description: Create a new LDAP realm
      operationId: post_config_config_access_config_access_ldap
      requestBody:
        content:
          application/json:
            schema:
              properties:
                base-dn:
                  description: LDAP Domain
                  type: string
                bind-dn:
                  description: LDAP Domain
                  type: string
                capath:
                  description: 'CA certificate to use for the server. The path can
                    point to

                    either a file, or a directory. If it points to a file,

                    the PEM-formatted X.509 certificate stored at the path

                    will be added as a trusted certificate.

                    If the path points to a directory,

                    the directory replaces the system''s default certificate

                    store at `/etc/ssl/certs` - Every file in the directory

                    will be loaded as a trusted certificate.'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                filter:
                  description: Custom LDAP search filter for user sync
                  type: string
                mode:
                  default: ldap
                  description: LDAP connection type
                  enum:
                  - ldap
                  - ldap+starttls
                  - ldaps
                  type: string
                password:
                  description: LDAP bind password
                  type: string
                port:
                  description: Port
                  maximum: 65535
                  minimum: 0
                  type: integer
                realm:
                  description: Realm name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                server1:
                  description: LDAP server address
                  type: string
                server2:
                  description: Fallback LDAP server address
                  type: string
                sync-attributes:
                  description: Comma-separated list of key=value pairs for specifying
                    which LDAP attributes map to which PBS user field. For example,
                    to map the LDAP attribute ``mail`` to PBS's ``email``, write ``email=mail``.
                  type: string
                sync-defaults-options:
                  description: sync defaults options
                  type: string
                user-attr:
                  description: Username attribute. Used to map a ``userid`` to LDAP
                    to an LDAP ``dn``.
                  type: string
                user-classes:
                  default: inetorgperson,posixaccount,person,user
                  description: 'Comma-separated list of allowed objectClass values
                    for user synchronization. For instance, if ``user-classes`` is
                    set to ``person,user``, then user synchronization will consider
                    all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                    user``.'
                  type: string
                verify:
                  default: false
                  description: Verify server certificate
                  type: boolean
              required:
              - base-dn
              - realm
              - server1
              - user-attr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new LDAP realm
      tags:
      - Configuration
  //config/config/access/config/access/ldap/config/access/ldap/{realm}:
    delete:
      description: Remove an LDAP realm configuration
      operationId: delete_config_config_access_config_access_ldap_config_access_ldap_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove an LDAP realm configuration
      tags:
      - Configuration
    get:
      description: Read the LDAP realm configuration
      operationId: get_config_config_access_config_access_ldap_config_access_ldap_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: LDAP configuration properties.
                properties:
                  base-dn:
                    description: LDAP Domain
                    type: string
                  bind-dn:
                    description: LDAP Domain
                    type: string
                  capath:
                    description: 'CA certificate to use for the server. The path can
                      point to

                      either a file, or a directory. If it points to a file,

                      the PEM-formatted X.509 certificate stored at the path

                      will be added as a trusted certificate.

                      If the path points to a directory,

                      the directory replaces the system''s default certificate

                      store at `/etc/ssl/certs` - Every file in the directory

                      will be loaded as a trusted certificate.'
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  filter:
                    description: Custom LDAP search filter for user sync
                    type: string
                  mode:
                    description: LDAP connection type
                    type: string
                  port:
                    description: Port
                    type: integer
                  realm:
                    description: Realm name.
                    type: string
                  server1:
                    description: LDAP server address
                    type: string
                  server2:
                    description: Fallback LDAP server address
                    type: string
                  sync-attributes:
                    description: Comma-separated list of key=value pairs for specifying
                      which LDAP attributes map to which PBS user field. For example,
                      to map the LDAP attribute ``mail`` to PBS's ``email``, write
                      ``email=mail``.
                    type: string
                  sync-defaults-options:
                    description: sync defaults options
                    type: string
                  user-attr:
                    description: Username attribute. Used to map a ``userid`` to LDAP
                      to an LDAP ``dn``.
                    type: string
                  user-classes:
                    description: 'Comma-separated list of allowed objectClass values
                      for user synchronization. For instance, if ``user-classes``
                      is set to ``person,user``, then user synchronization will consider
                      all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                      user``.'
                    type: string
                  verify:
                    description: Verify server certificate
                    type: boolean
                type: object
          description: LDAP configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the LDAP realm configuration
      tags:
      - Configuration
    put:
      description: Update an LDAP realm configuration
      operationId: put_config_config_access_config_access_ldap_config_access_ldap_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                base-dn:
                  description: LDAP Domain
                  type: string
                bind-dn:
                  description: LDAP Domain
                  type: string
                capath:
                  description: 'CA certificate to use for the server. The path can
                    point to

                    either a file, or a directory. If it points to a file,

                    the PEM-formatted X.509 certificate stored at the path

                    will be added as a trusted certificate.

                    If the path points to a directory,

                    the directory replaces the system''s default certificate

                    store at `/etc/ssl/certs` - Every file in the directory

                    will be loaded as a trusted certificate.'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                filter:
                  description: Custom LDAP search filter for user sync
                  type: string
                mode:
                  default: ldap
                  description: LDAP connection type
                  enum:
                  - ldap
                  - ldap+starttls
                  - ldaps
                  type: string
                password:
                  description: LDAP bind password
                  type: string
                port:
                  description: Port
                  maximum: 65535
                  minimum: 0
                  type: integer
                server1:
                  description: LDAP server address
                  type: string
                server2:
                  description: Fallback LDAP server address
                  type: string
                sync-attributes:
                  description: Comma-separated list of key=value pairs for specifying
                    which LDAP attributes map to which PBS user field. For example,
                    to map the LDAP attribute ``mail`` to PBS's ``email``, write ``email=mail``.
                  type: string
                sync-defaults-options:
                  description: sync defaults options
                  type: string
                user-attr:
                  description: Username attribute. Used to map a ``userid`` to LDAP
                    to an LDAP ``dn``.
                  type: string
                user-classes:
                  default: inetorgperson,posixaccount,person,user
                  description: 'Comma-separated list of allowed objectClass values
                    for user synchronization. For instance, if ``user-classes`` is
                    set to ``person,user``, then user synchronization will consider
                    all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                    user``.'
                  type: string
                verify:
                  default: false
                  description: Verify server certificate
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: LDAP configuration properties.
                properties:
                  base-dn:
                    description: LDAP Domain
                    type: string
                  bind-dn:
                    description: LDAP Domain
                    type: string
                  capath:
                    description: 'CA certificate to use for the server. The path can
                      point to

                      either a file, or a directory. If it points to a file,

                      the PEM-formatted X.509 certificate stored at the path

                      will be added as a trusted certificate.

                      If the path points to a directory,

                      the directory replaces the system''s default certificate

                      store at `/etc/ssl/certs` - Every file in the directory

                      will be loaded as a trusted certificate.'
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  filter:
                    description: Custom LDAP search filter for user sync
                    type: string
                  mode:
                    description: LDAP connection type
                    type: string
                  port:
                    description: Port
                    type: integer
                  realm:
                    description: Realm name.
                    type: string
                  server1:
                    description: LDAP server address
                    type: string
                  server2:
                    description: Fallback LDAP server address
                    type: string
                  sync-attributes:
                    description: Comma-separated list of key=value pairs for specifying
                      which LDAP attributes map to which PBS user field. For example,
                      to map the LDAP attribute ``mail`` to PBS's ``email``, write
                      ``email=mail``.
                    type: string
                  sync-defaults-options:
                    description: sync defaults options
                    type: string
                  user-attr:
                    description: Username attribute. Used to map a ``userid`` to LDAP
                      to an LDAP ``dn``.
                    type: string
                  user-classes:
                    description: 'Comma-separated list of allowed objectClass values
                      for user synchronization. For instance, if ``user-classes``
                      is set to ``person,user``, then user synchronization will consider
                      all LDAP entities where ``objectClass: person`` `or` ``objectClass:
                      user``.'
                    type: string
                  verify:
                    description: Verify server certificate
                    type: boolean
                type: object
          description: LDAP configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an LDAP realm configuration
      tags:
      - Configuration
  //config/config/access/config/access/openid:
    get:
      description: List configured OpenId realms
      operationId: get_config_config_access_config_access_openid
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of configured OpenId realms.
                items:
                  description: OpenID configuration properties.
                  properties:
                    acr-values:
                      description: OpenID ACR List
                      type: string
                    autocreate:
                      description: Automatically create users if they do not exist.
                      type: boolean
                    client-id:
                      description: OpenID Client ID
                      type: string
                    client-key:
                      description: OpenID Client Key
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    default:
                      description: True if you want this to be the default realm selected
                        on login.
                      type: boolean
                    issuer-url:
                      description: OpenID Issuer Url
                      type: string
                    prompt:
                      description: OpenID Prompt
                      type: string
                    realm:
                      description: Realm name.
                      type: string
                    scopes:
                      description: OpenID Scope List
                      type: string
                    username-claim:
                      description: Use the value of this attribute/claim as unique
                        user name. It is up to the identity provider to guarantee
                        the uniqueness. The OpenID specification only guarantees that
                        Subject ('sub') is unique. Also make sure that the user is
                        not allowed to change that attribute by himself!
                      type: string
                  type: object
                type: array
          description: List of configured OpenId realms.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured OpenId realms
      tags:
      - Configuration
    post:
      description: Create a new OpenId realm
      operationId: post_config_config_access_config_access_openid
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acr-values:
                  description: OpenID ACR List
                  type: string
                autocreate:
                  default: false
                  description: Automatically create users if they do not exist.
                  type: boolean
                client-id:
                  description: OpenID Client ID
                  type: string
                client-key:
                  description: OpenID Client Key
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                issuer-url:
                  description: OpenID Issuer Url
                  type: string
                prompt:
                  description: OpenID Prompt
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                realm:
                  description: Realm name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                scopes:
                  default: email profile
                  description: OpenID Scope List
                  type: string
                username-claim:
                  description: Use the value of this attribute/claim as unique user
                    name. It is up to the identity provider to guarantee the uniqueness.
                    The OpenID specification only guarantees that Subject ('sub')
                    is unique. Also make sure that the user is not allowed to change
                    that attribute by himself!
                  maxLength: 64
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - client-id
              - issuer-url
              - realm
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new OpenId realm
      tags:
      - Configuration
  //config/config/access/config/access/openid/config/access/openid/{realm}:
    delete:
      description: Remove a OpenID realm configuration
      operationId: delete_config_config_access_config_access_openid_config_access_openid_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a OpenID realm configuration
      tags:
      - Configuration
    get:
      description: Read the OpenID realm configuration
      operationId: get_config_config_access_config_access_openid_config_access_openid_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: OpenID configuration properties.
                properties:
                  acr-values:
                    description: OpenID ACR List
                    type: string
                  autocreate:
                    description: Automatically create users if they do not exist.
                    type: boolean
                  client-id:
                    description: OpenID Client ID
                    type: string
                  client-key:
                    description: OpenID Client Key
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  issuer-url:
                    description: OpenID Issuer Url
                    type: string
                  prompt:
                    description: OpenID Prompt
                    type: string
                  realm:
                    description: Realm name.
                    type: string
                  scopes:
                    description: OpenID Scope List
                    type: string
                  username-claim:
                    description: Use the value of this attribute/claim as unique user
                      name. It is up to the identity provider to guarantee the uniqueness.
                      The OpenID specification only guarantees that Subject ('sub')
                      is unique. Also make sure that the user is not allowed to change
                      that attribute by himself!
                    type: string
                type: object
          description: OpenID configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the OpenID realm configuration
      tags:
      - Configuration
    put:
      description: Update an OpenID realm configuration
      operationId: put_config_config_access_config_access_openid_config_access_openid_realm
      parameters:
      - description: The realm parameter
        in: path
        name: realm
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxResourceName'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acr-values:
                  description: OpenID ACR List
                  type: string
                autocreate:
                  default: false
                  description: Automatically create users if they do not exist.
                  type: boolean
                client-id:
                  description: OpenID Client ID
                  type: string
                client-key:
                  description: OpenID Client Key
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                issuer-url:
                  description: OpenID Issuer Url
                  type: string
                prompt:
                  description: OpenID Prompt
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                scopes:
                  default: email profile
                  description: OpenID Scope List
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: OpenID configuration properties.
                properties:
                  acr-values:
                    description: OpenID ACR List
                    type: string
                  autocreate:
                    description: Automatically create users if they do not exist.
                    type: boolean
                  client-id:
                    description: OpenID Client ID
                    type: string
                  client-key:
                    description: OpenID Client Key
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  issuer-url:
                    description: OpenID Issuer Url
                    type: string
                  prompt:
                    description: OpenID Prompt
                    type: string
                  realm:
                    description: Realm name.
                    type: string
                  scopes:
                    description: OpenID Scope List
                    type: string
                  username-claim:
                    description: Use the value of this attribute/claim as unique user
                      name. It is up to the identity provider to guarantee the uniqueness.
                      The OpenID specification only guarantees that Subject ('sub')
                      is unique. Also make sure that the user is not allowed to change
                      that attribute by himself!
                    type: string
                type: object
          description: OpenID configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an OpenID realm configuration
      tags:
      - Configuration
  //config/config/access/config/access/pam:
    get:
      description: Read the PAM realm configuration
      operationId: get_config_config_access_config_access_pam
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Built-in PAM realm configuration properties.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  realm:
                    description: Realm name.
                    type: string
                  type:
                    description: type of the realm
                    type: string
                type: object
          description: Built-in PAM realm configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the PAM realm configuration
      tags:
      - Configuration
    put:
      description: Update the PAM realm configuration
      operationId: put_config_config_access_config_access_pam
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Built-in PAM realm configuration properties.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  realm:
                    description: Realm name.
                    type: string
                  type:
                    description: type of the realm
                    type: string
                type: object
          description: Built-in PAM realm configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update the PAM realm configuration
      tags:
      - Configuration
  //config/config/access/config/access/pbs:
    get:
      description: Read the Proxmox Backup authentication server realm configuration
      operationId: get_config_config_access_config_access_pbs
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Built-in Proxmox Backup Server realm configuration properties.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  realm:
                    description: Realm name.
                    type: string
                  type:
                    description: type of the realm
                    type: string
                type: object
          description: Built-in Proxmox Backup Server realm configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the Proxmox Backup authentication server realm configuration
      tags:
      - Configuration
    put:
      description: Update the Proxmox Backup authentication server realm configuration
      operationId: put_config_config_access_config_access_pbs
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                default:
                  default: false
                  description: True if you want this to be the default realm selected
                    on login.
                  type: boolean
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Built-in Proxmox Backup Server realm configuration properties.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  default:
                    description: True if you want this to be the default realm selected
                      on login.
                    type: boolean
                  realm:
                    description: Realm name.
                    type: string
                  type:
                    description: type of the realm
                    type: string
                type: object
          description: Built-in Proxmox Backup Server realm configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update the Proxmox Backup authentication server realm configuration
      tags:
      - Configuration
  //config/config/access/config/access/tfa:
    get:
      description: Directory index.
      operationId: get_config_config_access_config_access_tfa
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/access/config/access/tfa/config/access/tfa/webauthn:
    get:
      description: Get the TFA configuration.
      operationId: get_config_config_access_config_access_tfa_config_access_tfa_webauthn
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Server side webauthn server configuration.
                properties:
                  allow-subdomains:
                    description: 'If an `origin` is specified, this specifies whether
                      subdomains should be considered valid

                      as well.


                      May be changed at any time.


                      Defaults to `true`.'
                    type: boolean
                  id:
                    description: 'Relying party ID. Must be the domain name without
                      protocol, port or location.


                      Changing this *will* break existing credentials.'
                    type: string
                  origin:
                    description: 'Site origin. Must be a `https://` URL (or `http://localhost`).
                      Should contain the address

                      users type in their browsers to access the web interface.


                      Changing this *may* break existing credentials.'
                    type: string
                  rp:
                    description: 'Relying party name. Any text identifier.


                      Changing this *may* break existing credentials.'
                    type: string
                type: object
          description: Server side webauthn server configuration.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the TFA configuration.
      tags:
      - Configuration
    put:
      description: Update the TFA configuration.
      operationId: put_config_config_access_config_access_tfa_config_access_tfa_webauthn
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allow-subdomains:
                  description: 'If an `origin` is specified, this specifies whether
                    subdomains should be considered valid

                    as well.


                    May be changed at any time.


                    Defaults to `true`.'
                  type: boolean
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                id:
                  description: 'Relying party ID. Must be the domain name without
                    protocol, port or location.


                    Changing this *will* break existing credentials.'
                  type: string
                origin:
                  description: 'Site origin. Must be a `https://` URL (or `http://localhost`).
                    Should contain the address

                    users type in their browsers to access the web interface.


                    Changing this *may* break existing credentials.'
                  type: string
                rp:
                  description: 'Relying party name. Any text identifier.


                    Changing this *may* break existing credentials.'
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update the TFA configuration.
      tags:
      - Configuration
  //config/config/acme:
    get:
      description: Directory index.
      operationId: get_config_config_acme
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/acme/config/acme/account:
    get:
      description: List ACME accounts.
      operationId: get_config_config_acme_config_acme_account
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of ACME accounts.
                items:
                  description: 'An ACME Account entry.


                    Currently only contains a ''name'' property.'
                  properties:
                    name:
                      description: ACME account name.
                      type: string
                  type: object
                type: array
          description: List of ACME accounts.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List ACME accounts.
      tags:
      - Configuration
    post:
      description: Register an ACME account.
      operationId: post_config_config_acme_config_acme_account
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact:
                  description: List of email addresses.
                  type: string
                directory:
                  description: The ACME Directory.
                  type: string
                eab_hmac_key:
                  description: HMAC Key for External Account Binding.
                  type: string
                eab_kid:
                  description: Key Identifier for External Account Binding.
                  type: string
                name:
                  description: ACME account name.
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                tos_url:
                  description: URL of CA TermsOfService - setting this indicates agreement.
                  type: string
              required:
              - contact
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Register an ACME account.
      tags:
      - Configuration
  //config/config/acme/config/acme/account/config/acme/account/{name}:
    delete:
      description: Deactivate an ACME account.
      operationId: delete_config_config_acme_config_acme_account_config_acme_account_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Delete account data even if the server refuses to deactivate
          the account.
        in: query
        name: force
        required: false
        schema:
          default: false
          description: Delete account data even if the server refuses to deactivate
            the account.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Deactivate an ACME account.
      tags:
      - Configuration
    get:
      description: Return existing ACME account information.
      operationId: get_config_config_acme_config_acme_account_config_acme_account_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: 'ACME Account information.


                  This is what we return via the API.'
                properties:
                  account:
                    description: Raw account data.
                    type: object
                  directory:
                    description: The ACME directory URL the account was created at.
                    type: string
                  location:
                    description: The account's own URL within the ACME directory.
                    type: string
                  tos:
                    description: The ToS URL, if the user agreed to one.
                    type: string
                type: object
          description: 'ACME Account information.


            This is what we return via the API.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return existing ACME account information.
      tags:
      - Configuration
    put:
      description: Update an ACME account.
      operationId: put_config_config_acme_config_acme_account_config_acme_account_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contact:
                  description: List of email addresses.
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an ACME account.
      tags:
      - Configuration
  //config/config/acme/config/acme/challenge-schema:
    get:
      description: Get named known ACME directory endpoints.
      operationId: get_config_config_acme_config_acme_challenge-schema
      responses:
        '200':
          content:
            application/json:
              schema:
                description: ACME Challenge Plugin Shema.
                items:
                  description: Schema for an ACME challenge plugin.
                  properties:
                    id:
                      description: Plugin ID.
                      type: string
                    name:
                      description: Human readable name, falls back to id.
                      type: string
                    schema:
                      description: The plugin's parameter schema.
                      type: object
                    type:
                      description: Plugin Type.
                      type: string
                  type: object
                type: array
          description: ACME Challenge Plugin Shema.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get named known ACME directory endpoints.
      tags:
      - Configuration
  //config/config/acme/config/acme/directories:
    get:
      description: Get named known ACME directory endpoints.
      operationId: get_config_config_acme_config_acme_directories
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of known ACME directories.
                items:
                  description: An ACME directory endpoint with a name and URL.
                  properties:
                    name:
                      description: The ACME directory's name.
                      type: string
                    url:
                      description: The ACME directory's endpoint URL.
                      type: string
                  type: object
                type: array
          description: List of known ACME directories.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get named known ACME directory endpoints.
      tags:
      - Configuration
  //config/config/acme/config/acme/plugins:
    get:
      description: List ACME challenge plugins.
      operationId: get_config_config_acme_config_acme_plugins
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of ACME plugin configurations.
                items:
                  description: 'The API''s format is inherited from PVE/PMG:'
                  properties:
                    api:
                      description: DNS Api name.
                      type: string
                    data:
                      description: Plugin configuration data.
                      type: string
                    disable:
                      description: Flag to disable the config.
                      type: boolean
                    plugin:
                      description: Plugin ID.
                      type: string
                    type:
                      description: Plugin type.
                      type: string
                    validation-delay:
                      description: 'Extra delay in seconds to wait before requesting
                        validation.


                        Allows to cope with long TTL of DNS records.'
                      type: integer
                  type: object
                type: array
          description: List of ACME plugin configurations.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List ACME challenge plugins.
      tags:
      - Configuration
    post:
      description: Add ACME plugin configuration.
      operationId: post_config_config_acme_config_acme_plugins
      requestBody:
        content:
          application/json:
            schema:
              properties:
                api:
                  description: DNS API Plugin Id.
                  type: string
                data:
                  description: DNS plugin data (base64 encoded with padding).
                  type: string
                disable:
                  default: false
                  description: Flag to disable the config.
                  type: boolean
                id:
                  description: ACME Challenge Plugin ID.
                  maxLength: 32
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                type:
                  description: The ACME challenge plugin type.
                  type: string
                validation-delay:
                  default: 30
                  description: 'Extra delay in seconds to wait before requesting validation.


                    Allows to cope with long TTL of DNS records.'
                  maximum: 172800
                  minimum: 0
                  type: integer
              required:
              - api
              - data
              - id
              - type
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add ACME plugin configuration.
      tags:
      - Configuration
  //config/config/acme/config/acme/plugins/config/acme/plugins/{id}:
    delete:
      description: Delete an ACME plugin configuration.
      operationId: delete_config_config_acme_config_acme_plugins_config_acme_plugins_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete an ACME plugin configuration.
      tags:
      - Configuration
    get:
      description: List ACME challenge plugins.
      operationId: get_config_config_acme_config_acme_plugins_config_acme_plugins_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: 'The API''s format is inherited from PVE/PMG:'
                properties:
                  api:
                    description: DNS Api name.
                    type: string
                  data:
                    description: Plugin configuration data.
                    type: string
                  disable:
                    description: Flag to disable the config.
                    type: boolean
                  plugin:
                    description: Plugin ID.
                    type: string
                  type:
                    description: Plugin type.
                    type: string
                  validation-delay:
                    description: 'Extra delay in seconds to wait before requesting
                      validation.


                      Allows to cope with long TTL of DNS records.'
                    type: integer
                type: object
          description: 'The API''s format is inherited from PVE/PMG:'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List ACME challenge plugins.
      tags:
      - Configuration
    put:
      description: Update an ACME plugin configuration.
      operationId: put_config_config_acme_config_acme_plugins_config_acme_plugins_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                api:
                  description: DNS API Plugin Id.
                  type: string
                data:
                  description: DNS plugin data (base64 encoded with padding).
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Digest to protect against concurrent updates
                  type: string
                disable:
                  default: false
                  description: Flag to disable the config.
                  type: boolean
                validation-delay:
                  default: 30
                  description: 'Extra delay in seconds to wait before requesting validation.


                    Allows to cope with long TTL of DNS records.'
                  maximum: 172800
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an ACME plugin configuration.
      tags:
      - Configuration
  //config/config/acme/config/acme/tos:
    get:
      description: Get the Terms of Service URL for an ACME directory.
      operationId: get_config_config_acme_config_acme_tos
      parameters:
      - description: The ACME Directory.
        in: query
        name: directory
        required: false
        schema:
          description: The ACME Directory.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The ACME Directory's ToS URL, if any.
                type: string
          description: The ACME Directory's ToS URL, if any.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the Terms of Service URL for an ACME directory.
      tags:
      - Configuration
  //config/config/changer:
    get:
      description: List changers
      operationId: get_config_config_changer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured changers (with config digest).
                items:
                  description: SCSI tape changer
                  properties:
                    eject-before-unload:
                      description: if set to true, tapes are ejected manually before
                        unloading
                      type: boolean
                    export-slots:
                      description: 'A list of slot numbers, comma separated. Those
                        slots are reserved for

                        Import/Export, i.e. any media in those slots are considered
                        to be

                        ''offline''.

                        '
                      type: string
                    name:
                      description: Tape Changer Identifier.
                      type: string
                    path:
                      description: Path to Linux generic SCSI device (e.g. '/dev/sg4')
                      type: string
                  type: object
                type: array
          description: The list of configured changers (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List changers
      tags:
      - Configuration
    post:
      description: Create a new changer device
      operationId: post_config_config_changer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                eject-before-unload:
                  default: false
                  description: if set to true, tapes are ejected manually before unloading
                  type: boolean
                export-slots:
                  description: 'A list of slot numbers, comma separated. Those slots
                    are reserved for

                    Import/Export, i.e. any media in those slots are considered to
                    be

                    ''offline''.

                    '
                  type: string
                name:
                  description: Tape Changer Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                path:
                  description: Path to Linux generic SCSI device (e.g. '/dev/sg4')
                  type: string
              required:
              - name
              - path
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new changer device
      tags:
      - Configuration
  //config/config/changer/config/changer/{name}:
    delete:
      description: Delete a tape changer configuration
      operationId: delete_config_config_changer_config_changer_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a tape changer configuration
      tags:
      - Configuration
    get:
      description: Get tape changer configuration
      operationId: get_config_config_changer_config_changer_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: SCSI tape changer
                properties:
                  eject-before-unload:
                    description: if set to true, tapes are ejected manually before
                      unloading
                    type: boolean
                  export-slots:
                    description: 'A list of slot numbers, comma separated. Those slots
                      are reserved for

                      Import/Export, i.e. any media in those slots are considered
                      to be

                      ''offline''.

                      '
                    type: string
                  name:
                    description: Tape Changer Identifier.
                    type: string
                  path:
                    description: Path to Linux generic SCSI device (e.g. '/dev/sg4')
                    type: string
                type: object
          description: SCSI tape changer
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get tape changer configuration
      tags:
      - Configuration
    put:
      description: Update a tape changer configuration
      operationId: put_config_config_changer_config_changer_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                eject-before-unload:
                  default: false
                  description: if set to true, tapes are ejected manually before unloading
                  type: boolean
                export-slots:
                  description: 'A list of slot numbers, comma separated. Those slots
                    are reserved for

                    Import/Export, i.e. any media in those slots are considered to
                    be

                    ''offline''.

                    '
                  type: string
                path:
                  description: Path to Linux generic SCSI device (e.g. '/dev/sg4')
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update a tape changer configuration
      tags:
      - Configuration
  //config/config/datastore:
    get:
      description: List all datastores
      operationId: get_config_config_datastore
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List the configured datastores (with config digest).
                items:
                  description: Datastore configuration properties.
                  properties:
                    backing-device:
                      description: The UUID of the filesystem partition for removable
                        datastores.
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    gc-schedule:
                      description: Run garbage collection job at specified schedule.
                      type: string
                    keep-daily:
                      description: Number of daily backups to keep.
                      type: integer
                    keep-hourly:
                      description: Number of hourly backups to keep.
                      type: integer
                    keep-last:
                      description: Number of backups to keep.
                      type: integer
                    keep-monthly:
                      description: Number of monthly backups to keep.
                      type: integer
                    keep-weekly:
                      description: Number of weekly backups to keep.
                      type: integer
                    keep-yearly:
                      description: Number of yearly backups to keep.
                      type: integer
                    maintenance-mode:
                      description: Maintenance mode, type is either 'offline' or 'read-only',
                        message should be enclosed in "
                      type: string
                    name:
                      description: Datastore name.
                      type: string
                    notification-mode:
                      description: 'Configure how notifications for this datastore
                        should be sent.

                        `legacy-sendmail` sends email notifications to the user configured

                        in `notify-user` via the system''s `sendmail` executable.

                        `notification-system` emits matchable notification events
                        to the

                        notification system.'
                      type: string
                    notify:
                      description: Datastore notification setting, enum can be one
                        of 'always', 'never', or 'error'.
                      type: string
                    notify-user:
                      description: User ID
                      type: string
                    path:
                      description: Either the absolute path to the datastore directory,
                        or a relative on-device path for removable datastores.
                      type: string
                    prune-schedule:
                      description: Run prune job at specified schedule.
                      type: string
                    tuning:
                      description: Datastore tuning options
                      type: string
                    verify-new:
                      description: If enabled, all new backups will be verified right
                        after completion.
                      type: boolean
                  type: object
                type: array
          description: List the configured datastores (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all datastores
      tags:
      - Configuration
    post:
      description: Create new datastore config.
      operationId: post_config_config_datastore
      requestBody:
        content:
          application/json:
            schema:
              properties:
                backing-device:
                  description: The UUID of the filesystem partition for removable
                    datastores.
                  pattern: ^[0-9a-f]{8}(?:-[0-9a-f]{4}){3}-[0-9a-f]{12}$
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                gc-schedule:
                  description: Run garbage collection job at specified schedule.
                  type: string
                keep-daily:
                  description: Number of daily backups to keep.
                  minimum: 1
                  type: integer
                keep-hourly:
                  description: Number of hourly backups to keep.
                  minimum: 1
                  type: integer
                keep-last:
                  description: Number of backups to keep.
                  minimum: 1
                  type: integer
                keep-monthly:
                  description: Number of monthly backups to keep.
                  minimum: 1
                  type: integer
                keep-weekly:
                  description: Number of weekly backups to keep.
                  minimum: 1
                  type: integer
                keep-yearly:
                  description: Number of yearly backups to keep.
                  minimum: 1
                  type: integer
                maintenance-mode:
                  description: Maintenance mode, type is either 'offline' or 'read-only',
                    message should be enclosed in "
                  type: string
                name:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                notification-mode:
                  default: legacy-sendmail
                  description: 'Configure how notifications for this datastore should
                    be sent.

                    `legacy-sendmail` sends email notifications to the user configured

                    in `notify-user` via the system''s `sendmail` executable.

                    `notification-system` emits matchable notification events to the

                    notification system.'
                  enum:
                  - legacy-sendmail
                  - notification-system
                  type: string
                notify:
                  description: Datastore notification setting, enum can be one of
                    'always', 'never', or 'error'.
                  type: string
                notify-user:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                path:
                  description: Either the absolute path to the datastore directory,
                    or a relative on-device path for removable datastores.
                  maxLength: 4096
                  minLength: 1
                  type: string
                prune-schedule:
                  description: Run prune job at specified schedule.
                  type: string
                reuse-datastore:
                  default: false
                  description: Re-use existing datastore directory.
                  type: boolean
                tuning:
                  description: Datastore tuning options
                  type: string
                verify-new:
                  description: If enabled, all new backups will be verified right
                    after completion.
                  type: boolean
              required:
              - name
              - path
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new datastore config.
      tags:
      - Configuration
  //config/config/datastore/config/datastore/{name}:
    delete:
      description: Remove a datastore configuration and optionally delete all its
        contents.
      operationId: delete_config_config_datastore_config_datastore_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Delete the datastore's underlying contents
        in: query
        name: destroy-data
        required: false
        schema:
          default: false
          description: Delete the datastore's underlying contents
          type: boolean
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      - description: If enabled, the job configurations related to this datastore
          will be kept.
        in: query
        name: keep-job-configs
        required: false
        schema:
          default: false
          description: If enabled, the job configurations related to this datastore
            will be kept.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a datastore configuration and optionally delete all its contents.
      tags:
      - Configuration
    get:
      description: Read a datastore configuration.
      operationId: get_config_config_datastore_config_datastore_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Datastore configuration properties.
                properties:
                  backing-device:
                    description: The UUID of the filesystem partition for removable
                      datastores.
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  gc-schedule:
                    description: Run garbage collection job at specified schedule.
                    type: string
                  keep-daily:
                    description: Number of daily backups to keep.
                    type: integer
                  keep-hourly:
                    description: Number of hourly backups to keep.
                    type: integer
                  keep-last:
                    description: Number of backups to keep.
                    type: integer
                  keep-monthly:
                    description: Number of monthly backups to keep.
                    type: integer
                  keep-weekly:
                    description: Number of weekly backups to keep.
                    type: integer
                  keep-yearly:
                    description: Number of yearly backups to keep.
                    type: integer
                  maintenance-mode:
                    description: Maintenance mode, type is either 'offline' or 'read-only',
                      message should be enclosed in "
                    type: string
                  name:
                    description: Datastore name.
                    type: string
                  notification-mode:
                    description: 'Configure how notifications for this datastore should
                      be sent.

                      `legacy-sendmail` sends email notifications to the user configured

                      in `notify-user` via the system''s `sendmail` executable.

                      `notification-system` emits matchable notification events to
                      the

                      notification system.'
                    type: string
                  notify:
                    description: Datastore notification setting, enum can be one of
                      'always', 'never', or 'error'.
                    type: string
                  notify-user:
                    description: User ID
                    type: string
                  path:
                    description: Either the absolute path to the datastore directory,
                      or a relative on-device path for removable datastores.
                    type: string
                  prune-schedule:
                    description: Run prune job at specified schedule.
                    type: string
                  tuning:
                    description: Datastore tuning options
                    type: string
                  verify-new:
                    description: If enabled, all new backups will be verified right
                      after completion.
                    type: boolean
                type: object
          description: Datastore configuration properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read a datastore configuration.
      tags:
      - Configuration
    put:
      description: Update datastore config.
      operationId: put_config_config_datastore_config_datastore_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                gc-schedule:
                  description: Run garbage collection job at specified schedule.
                  type: string
                keep-daily:
                  description: Number of daily backups to keep.
                  minimum: 1
                  type: integer
                keep-hourly:
                  description: Number of hourly backups to keep.
                  minimum: 1
                  type: integer
                keep-last:
                  description: Number of backups to keep.
                  minimum: 1
                  type: integer
                keep-monthly:
                  description: Number of monthly backups to keep.
                  minimum: 1
                  type: integer
                keep-weekly:
                  description: Number of weekly backups to keep.
                  minimum: 1
                  type: integer
                keep-yearly:
                  description: Number of yearly backups to keep.
                  minimum: 1
                  type: integer
                maintenance-mode:
                  description: Maintenance mode, type is either 'offline' or 'read-only',
                    message should be enclosed in "
                  type: string
                notification-mode:
                  default: legacy-sendmail
                  description: 'Configure how notifications for this datastore should
                    be sent.

                    `legacy-sendmail` sends email notifications to the user configured

                    in `notify-user` via the system''s `sendmail` executable.

                    `notification-system` emits matchable notification events to the

                    notification system.'
                  enum:
                  - legacy-sendmail
                  - notification-system
                  type: string
                notify:
                  description: Datastore notification setting, enum can be one of
                    'always', 'never', or 'error'.
                  type: string
                notify-user:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                prune-schedule:
                  description: Run prune job at specified schedule.
                  type: string
                tuning:
                  description: Datastore tuning options
                  type: string
                verify-new:
                  description: If enabled, all new backups will be verified right
                    after completion.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update datastore config.
      tags:
      - Configuration
  //config/config/drive:
    get:
      description: List drives
      operationId: get_config_config_drive
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured drives (with config digest).
                items:
                  description: Lto SCSI tape driver
                  properties:
                    changer:
                      description: Tape Changer Identifier.
                      type: string
                    changer-drivenum:
                      description: Associated changer drive number (requires option
                        changer)
                      type: integer
                    name:
                      description: Drive Identifier.
                      type: string
                    path:
                      description: The path to a LTO SCSI-generic tape device (i.e.
                        '/dev/sg0')
                      type: string
                  type: object
                type: array
          description: The list of configured drives (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List drives
      tags:
      - Configuration
    post:
      description: Create a new drive
      operationId: post_config_config_drive
      requestBody:
        content:
          application/json:
            schema:
              properties:
                changer:
                  description: Tape Changer Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                changer-drivenum:
                  default: 0
                  description: Associated changer drive number (requires option changer)
                  maximum: 255
                  minimum: 0
                  type: integer
                name:
                  description: Drive Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                path:
                  description: The path to a LTO SCSI-generic tape device (i.e. '/dev/sg0')
                  type: string
              required:
              - name
              - path
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new drive
      tags:
      - Configuration
  //config/config/drive/config/drive/{name}:
    delete:
      description: Delete a drive configuration
      operationId: delete_config_config_drive_config_drive_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a drive configuration
      tags:
      - Configuration
    get:
      description: Get drive configuration
      operationId: get_config_config_drive_config_drive_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Lto SCSI tape driver
                properties:
                  changer:
                    description: Tape Changer Identifier.
                    type: string
                  changer-drivenum:
                    description: Associated changer drive number (requires option
                      changer)
                    type: integer
                  name:
                    description: Drive Identifier.
                    type: string
                  path:
                    description: The path to a LTO SCSI-generic tape device (i.e.
                      '/dev/sg0')
                    type: string
                type: object
          description: Lto SCSI tape driver
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get drive configuration
      tags:
      - Configuration
    put:
      description: Update a drive configuration
      operationId: put_config_config_drive_config_drive_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                changer:
                  description: Tape Changer Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                changer-drivenum:
                  default: 0
                  description: Associated changer drive number (requires option changer)
                  maximum: 255
                  minimum: 0
                  type: integer
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                path:
                  description: The path to a LTO SCSI-generic tape device (i.e. '/dev/sg0')
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update a drive configuration
      tags:
      - Configuration
  //config/config/media-pool:
    get:
      description: List media pools
      operationId: get_config_config_media-pool
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured media pools (with config digest).
                items:
                  description: Media pool configuration
                  properties:
                    allocation:
                      description: Media set allocation policy ('continue', 'always',
                        or a calendar event).
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    encrypt:
                      description: Tape encryption key fingerprint (sha256).
                      type: string
                    name:
                      description: Media pool name.
                      type: string
                    retention:
                      description: Media retention policy ('overwrite', 'keep', or
                        time span).
                      type: string
                    template:
                      description: Media set naming template (may contain strftime()
                        time format specifications).
                      type: string
                  type: object
                type: array
          description: The list of configured media pools (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List media pools
      tags:
      - Configuration
    post:
      description: Create a new media pool
      operationId: post_config_config_media-pool
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allocation:
                  description: Media set allocation policy ('continue', 'always',
                    or a calendar event).
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                encrypt:
                  description: Tape encryption key fingerprint (sha256).
                  pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])(?::[0-9a-fA-F][0-9a-fA-F]){31}$
                  type: string
                name:
                  description: Media pool name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                retention:
                  description: Media retention policy ('overwrite', 'keep', or time
                    span).
                  type: string
                template:
                  description: Media set naming template (may contain strftime() time
                    format specifications).
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new media pool
      tags:
      - Configuration
  //config/config/media-pool/config/media-pool/{name}:
    delete:
      description: Delete a media pool configuration
      operationId: delete_config_config_media-pool_config_media-pool_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete a media pool configuration
      tags:
      - Configuration
    get:
      description: Get media pool configuration
      operationId: get_config_config_media-pool_config_media-pool_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Media pool configuration
                properties:
                  allocation:
                    description: Media set allocation policy ('continue', 'always',
                      or a calendar event).
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  encrypt:
                    description: Tape encryption key fingerprint (sha256).
                    type: string
                  name:
                    description: Media pool name.
                    type: string
                  retention:
                    description: Media retention policy ('overwrite', 'keep', or time
                      span).
                    type: string
                  template:
                    description: Media set naming template (may contain strftime()
                      time format specifications).
                    type: string
                type: object
          description: Media pool configuration
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get media pool configuration
      tags:
      - Configuration
    put:
      description: Update media pool settings
      operationId: put_config_config_media-pool_config_media-pool_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                allocation:
                  description: Media set allocation policy ('continue', 'always',
                    or a calendar event).
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                encrypt:
                  description: Tape encryption key fingerprint (sha256).
                  pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])(?::[0-9a-fA-F][0-9a-fA-F]){31}$
                  type: string
                retention:
                  description: Media retention policy ('overwrite', 'keep', or time
                    span).
                  type: string
                template:
                  description: Media set naming template (may contain strftime() time
                    format specifications).
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update media pool settings
      tags:
      - Configuration
  //config/config/metrics:
    get:
      description: Directory index.
      operationId: get_config_config_metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/metrics/config/metrics/influxdb-http:
    get:
      description: List configured InfluxDB http metric servers.
      operationId: get_config_config_metrics_config_metrics_influxdb-http
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of configured InfluxDB http metric servers.
                items:
                  description: InfluxDB Server (HTTP(s))
                  properties:
                    bucket:
                      description: InfluxDB Bucket.
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    enable:
                      description: Enables or disables the metrics server
                      type: boolean
                    max-body-size:
                      description: The (optional) maximum body size
                      type: integer
                    name:
                      description: Metrics Server ID.
                      type: string
                    organization:
                      description: InfluxDB Organization.
                      type: string
                    token:
                      description: The (optional) API token
                      type: string
                    url:
                      description: HTTP(s) url with optional port.
                      type: string
                    verify-tls:
                      description: If true, the certificate will be validated.
                      type: boolean
                  type: object
                type: array
          description: List of configured InfluxDB http metric servers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured InfluxDB http metric servers.
      tags:
      - Configuration
    post:
      description: Create a new InfluxDB http server configuration
      operationId: post_config_config_metrics_config_metrics_influxdb-http
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bucket:
                  default: proxmox
                  description: InfluxDB Bucket.
                  maxLength: 32
                  minLength: 1
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                enable:
                  default: true
                  description: Enables or disables the metrics server
                  type: boolean
                max-body-size:
                  default: 25000000
                  description: The (optional) maximum body size
                  type: integer
                name:
                  description: Metrics Server ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                organization:
                  default: proxmox
                  description: InfluxDB Organization.
                  maxLength: 32
                  minLength: 1
                  type: string
                token:
                  description: The (optional) API token
                  type: string
                url:
                  description: HTTP(s) url with optional port.
                  pattern: "^https?://(?:(?:(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\\
                    -]*[a-zA-Z0-9])?)\\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|\\[(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))\\\
                    ]))(?::(?:[0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?)|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))(?:/[^\0\
                    -\x1F\x7F]*)?$"
                  type: string
                verify-tls:
                  default: true
                  description: If true, the certificate will be validated.
                  type: boolean
              required:
              - name
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new InfluxDB http server configuration
      tags:
      - Configuration
  //config/config/metrics/config/metrics/influxdb-http/config/metrics/influxdb-http/{name}:
    delete:
      description: Remove a InfluxDB http server configuration
      operationId: delete_config_config_metrics_config_metrics_influxdb-http_config_metrics_influxdb-http_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a InfluxDB http server configuration
      tags:
      - Configuration
    get:
      description: Read the InfluxDB http server configuration
      operationId: get_config_config_metrics_config_metrics_influxdb-http_config_metrics_influxdb-http_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: InfluxDB Server (HTTP(s))
                properties:
                  bucket:
                    description: InfluxDB Bucket.
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  enable:
                    description: Enables or disables the metrics server
                    type: boolean
                  max-body-size:
                    description: The (optional) maximum body size
                    type: integer
                  name:
                    description: Metrics Server ID.
                    type: string
                  organization:
                    description: InfluxDB Organization.
                    type: string
                  token:
                    description: The (optional) API token
                    type: string
                  url:
                    description: HTTP(s) url with optional port.
                    type: string
                  verify-tls:
                    description: If true, the certificate will be validated.
                    type: boolean
                type: object
          description: InfluxDB Server (HTTP(s))
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the InfluxDB http server configuration
      tags:
      - Configuration
    put:
      description: Update an InfluxDB http server configuration
      operationId: put_config_config_metrics_config_metrics_influxdb-http_config_metrics_influxdb-http_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bucket:
                  default: proxmox
                  description: InfluxDB Bucket.
                  maxLength: 32
                  minLength: 1
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                enable:
                  default: true
                  description: Enables or disables the metrics server
                  type: boolean
                max-body-size:
                  default: 25000000
                  description: The (optional) maximum body size
                  type: integer
                organization:
                  default: proxmox
                  description: InfluxDB Organization.
                  maxLength: 32
                  minLength: 1
                  type: string
                token:
                  description: The (optional) API token
                  type: string
                url:
                  description: HTTP(s) url with optional port.
                  pattern: "^https?://(?:(?:(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\\
                    -]*[a-zA-Z0-9])?)\\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|\\[(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))\\\
                    ]))(?::(?:[0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?)|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))(?:/[^\0\
                    -\x1F\x7F]*)?$"
                  type: string
                verify-tls:
                  default: true
                  description: If true, the certificate will be validated.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an InfluxDB http server configuration
      tags:
      - Configuration
  //config/config/metrics/config/metrics/influxdb-udp:
    get:
      description: List configured InfluxDB udp metric servers.
      operationId: get_config_config_metrics_config_metrics_influxdb-udp
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of configured InfluxDB udp metric servers.
                items:
                  description: InfluxDB Server (UDP)
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    enable:
                      description: Enables or disables the metrics server
                      type: boolean
                    host:
                      description: host:port combination (Host can be DNS name or
                        IP address).
                      type: string
                    mtu:
                      description: The MTU
                      type: integer
                    name:
                      description: Metrics Server ID.
                      type: string
                  type: object
                type: array
          description: List of configured InfluxDB udp metric servers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List configured InfluxDB udp metric servers.
      tags:
      - Configuration
    post:
      description: Create a new InfluxDB udp server configuration
      operationId: post_config_config_metrics_config_metrics_influxdb-udp
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                enable:
                  default: true
                  description: Enables or disables the metrics server
                  type: boolean
                host:
                  description: host:port combination (Host can be DNS name or IP address).
                  pattern: ^(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?)\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|\[(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))\])):(?:[0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                  type: string
                mtu:
                  default: 1500
                  description: The MTU
                  type: integer
                name:
                  description: Metrics Server ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - host
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new InfluxDB udp server configuration
      tags:
      - Configuration
  //config/config/metrics/config/metrics/influxdb-udp/config/metrics/influxdb-udp/{name}:
    delete:
      description: Remove a InfluxDB udp server configuration
      operationId: delete_config_config_metrics_config_metrics_influxdb-udp_config_metrics_influxdb-udp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a InfluxDB udp server configuration
      tags:
      - Configuration
    get:
      description: Read the InfluxDB udp server configuration
      operationId: get_config_config_metrics_config_metrics_influxdb-udp_config_metrics_influxdb-udp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: InfluxDB Server (UDP)
                properties:
                  comment:
                    description: Comment.
                    type: string
                  enable:
                    description: Enables or disables the metrics server
                    type: boolean
                  host:
                    description: host:port combination (Host can be DNS name or IP
                      address).
                    type: string
                  mtu:
                    description: The MTU
                    type: integer
                  name:
                    description: Metrics Server ID.
                    type: string
                type: object
          description: InfluxDB Server (UDP)
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the InfluxDB udp server configuration
      tags:
      - Configuration
    put:
      description: Update an InfluxDB udp server configuration
      operationId: put_config_config_metrics_config_metrics_influxdb-udp_config_metrics_influxdb-udp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                enable:
                  default: true
                  description: Enables or disables the metrics server
                  type: boolean
                host:
                  description: host:port combination (Host can be DNS name or IP address).
                  pattern: ^(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?)\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|\[(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))\])):(?:[0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                  type: string
                mtu:
                  default: 1500
                  description: The MTU
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update an InfluxDB udp server configuration
      tags:
      - Configuration
  //config/config/notifications:
    get:
      description: Directory index.
      operationId: get_config_config_notifications
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/endpoints:
    get:
      description: Directory index.
      operationId: get_config_config_notifications_config_notifications_endpoints
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/gotify:
    get:
      description: List all gotify endpoints.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_gotify
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of gotify endpoints.
                items:
                  description: Config for  Gotify notification endpoints
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this target.
                      type: boolean
                    filter:
                      description: Deprecated.
                      type: string
                    name:
                      description: Name schema for targets and matchers
                      type: string
                    origin:
                      description: The origin of a notification configuration entry.
                      type: string
                    server:
                      description: Gotify Server URL.
                      type: string
                  type: object
                type: array
          description: List of gotify endpoints.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all gotify endpoints.
      tags:
      - Configuration
    post:
      description: Add a new gotify endpoint.
      operationId: post_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_gotify
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                filter:
                  description: Deprecated.
                  type: string
                name:
                  description: Name schema for targets and matchers
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                origin:
                  description: The origin of a notification configuration entry.
                  enum:
                  - user-created
                  - builtin
                  - modified-builtin
                  type: string
                server:
                  description: Gotify Server URL.
                  type: string
                token:
                  description: Authentication token
                  type: string
              required:
              - name
              - server
              - token
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a new gotify endpoint.
      tags:
      - Configuration
  ? //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/gotify/config/notifications/endpoints/gotify/{name}
  : delete:
      description: Delete gotify endpoint.
      operationId: delete_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_gotify_config_notifications_endpoints_gotify_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete gotify endpoint.
      tags:
      - Configuration
    get:
      description: Get a gotify endpoint.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_gotify_config_notifications_endpoints_gotify_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Config for  Gotify notification endpoints
                properties:
                  comment:
                    description: Comment.
                    type: string
                  disable:
                    description: Disable this target.
                    type: boolean
                  filter:
                    description: Deprecated.
                    type: string
                  name:
                    description: Name schema for targets and matchers
                    type: string
                  origin:
                    description: The origin of a notification configuration entry.
                    type: string
                  server:
                    description: Gotify Server URL.
                    type: string
                type: object
          description: Config for  Gotify notification endpoints
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get a gotify endpoint.
      tags:
      - Configuration
    put:
      description: Update gotify endpoint.
      operationId: put_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_gotify_config_notifications_endpoints_gotify_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                server:
                  description: Gotify Server URL.
                  type: string
                token:
                  description: Authentication token
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update gotify endpoint.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/sendmail:
    get:
      description: List all sendmail endpoints.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_sendmail
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of sendmail endpoints.
                items:
                  description: Config for Sendmail notification endpoints
                  properties:
                    author:
                      description: Author of the mail. Defaults to 'Proxmox Backup
                        Server ($hostname)'
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this target.
                      type: boolean
                    filter:
                      description: Deprecated.
                      type: string
                    from-address:
                      description: '`From` address for sent E-Mails.

                        If the parameter is not set, the plugin will fall back to
                        the

                        email-from setting from node.cfg (PBS).

                        If that is also not set, the plugin will default to root@$hostname,

                        where $hostname is the hostname of the node.'
                      type: string
                    mailto:
                      description: Mail address to send a mail to.
                      items:
                        description: E-Mail Address.
                        type: string
                      type: array
                    mailto-user:
                      description: 'Users to send a mail to. The email address of
                        the user

                        will be looked up in users.cfg.'
                      items:
                        description: User ID including realm, e.g. root@pam.
                        type: string
                      type: array
                    name:
                      description: Name schema for targets and matchers
                      type: string
                    origin:
                      description: The origin of a notification configuration entry.
                      type: string
                  type: object
                type: array
          description: List of sendmail endpoints.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all sendmail endpoints.
      tags:
      - Configuration
    post:
      description: Add a new sendmail endpoint.
      operationId: post_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_sendmail
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail. Defaults to 'Proxmox Backup Server
                    ($hostname)'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                filter:
                  description: Deprecated.
                  type: string
                from-address:
                  description: '`From` address for sent E-Mails.

                    If the parameter is not set, the plugin will fall back to the

                    email-from setting from node.cfg (PBS).

                    If that is also not set, the plugin will default to root@$hostname,

                    where $hostname is the hostname of the node.'
                  type: string
                mailto:
                  description: Mail address to send a mail to.
                  items:
                    type: string
                  type: array
                mailto-user:
                  description: 'Users to send a mail to. The email address of the
                    user

                    will be looked up in users.cfg.'
                  items:
                    type: string
                  type: array
                name:
                  description: Name schema for targets and matchers
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                origin:
                  description: The origin of a notification configuration entry.
                  enum:
                  - user-created
                  - builtin
                  - modified-builtin
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a new sendmail endpoint.
      tags:
      - Configuration
  ? //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/sendmail/config/notifications/endpoints/sendmail/{name}
  : delete:
      description: Delete sendmail endpoint.
      operationId: delete_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_sendmail_config_notifications_endpoints_sendmail_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete sendmail endpoint.
      tags:
      - Configuration
    get:
      description: Get a sendmail endpoint.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_sendmail_config_notifications_endpoints_sendmail_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Config for Sendmail notification endpoints
                properties:
                  author:
                    description: Author of the mail. Defaults to 'Proxmox Backup Server
                      ($hostname)'
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  disable:
                    description: Disable this target.
                    type: boolean
                  filter:
                    description: Deprecated.
                    type: string
                  from-address:
                    description: '`From` address for sent E-Mails.

                      If the parameter is not set, the plugin will fall back to the

                      email-from setting from node.cfg (PBS).

                      If that is also not set, the plugin will default to root@$hostname,

                      where $hostname is the hostname of the node.'
                    type: string
                  mailto:
                    description: Mail address to send a mail to.
                    items:
                      description: E-Mail Address.
                      type: string
                    type: array
                  mailto-user:
                    description: 'Users to send a mail to. The email address of the
                      user

                      will be looked up in users.cfg.'
                    items:
                      description: User ID including realm, e.g. root@pam.
                      type: string
                    type: array
                  name:
                    description: Name schema for targets and matchers
                    type: string
                  origin:
                    description: The origin of a notification configuration entry.
                    type: string
                type: object
          description: Config for Sendmail notification endpoints
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get a sendmail endpoint.
      tags:
      - Configuration
    put:
      description: Update sendmail endpoint.
      operationId: put_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_sendmail_config_notifications_endpoints_sendmail_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail. Defaults to 'Proxmox Backup Server
                    ($hostname)'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                from-address:
                  description: '`From` address for sent E-Mails.

                    If the parameter is not set, the plugin will fall back to the

                    email-from setting from node.cfg (PBS).

                    If that is also not set, the plugin will default to root@$hostname,

                    where $hostname is the hostname of the node.'
                  type: string
                mailto:
                  description: Mail address to send a mail to.
                  items:
                    type: string
                  type: array
                mailto-user:
                  description: 'Users to send a mail to. The email address of the
                    user

                    will be looked up in users.cfg.'
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sendmail endpoint.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/smtp:
    get:
      description: List all smtp endpoints.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_smtp
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of smtp endpoints.
                items:
                  description: Config for Sendmail notification endpoints
                  properties:
                    author:
                      description: Author of the mail. Defaults to 'Proxmox Backup
                        Server ($hostname)'
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this target.
                      type: boolean
                    from-address:
                      description: '`From` address for the mail.

                        SMTP relays might require that this address is owned by the
                        user

                        in order to avoid spoofing. The `From` header in the email
                        will be

                        set to `$author <$from-address>`.'
                      type: string
                    mailto:
                      description: Mail address to send a mail to.
                      items:
                        description: E-Mail Address.
                        type: string
                      type: array
                    mailto-user:
                      description: 'Users to send a mail to. The email address of
                        the user

                        will be looked up in users.cfg.'
                      items:
                        description: User ID including realm, e.g. root@pam.
                        type: string
                      type: array
                    mode:
                      description: Connection security
                      type: string
                    name:
                      description: Name schema for targets and matchers
                      type: string
                    origin:
                      description: The origin of a notification configuration entry.
                      type: string
                    port:
                      description: 'The port to connect to.

                        If not set, the used port defaults to 25 (insecure), 465 (tls)

                        or 587 (starttls), depending on the value of mode'
                      type: integer
                    server:
                      description: Host name or IP of the SMTP relay.
                      type: string
                    username:
                      description: 'Username to use during authentication.

                        If no username is set, no authentication will be performed.

                        The PLAIN and LOGIN authentication methods are supported'
                      type: string
                  type: object
                type: array
          description: List of smtp endpoints.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all smtp endpoints.
      tags:
      - Configuration
    post:
      description: Add a new smtp endpoint.
      operationId: post_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_smtp
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail. Defaults to 'Proxmox Backup Server
                    ($hostname)'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                from-address:
                  description: '`From` address for the mail.

                    SMTP relays might require that this address is owned by the user

                    in order to avoid spoofing. The `From` header in the email will
                    be

                    set to `$author <$from-address>`.'
                  type: string
                mailto:
                  description: Mail address to send a mail to.
                  items:
                    type: string
                  type: array
                mailto-user:
                  description: 'Users to send a mail to. The email address of the
                    user

                    will be looked up in users.cfg.'
                  items:
                    type: string
                  type: array
                mode:
                  default: tls
                  description: Connection security
                  enum:
                  - insecure
                  - starttls
                  - tls
                  type: string
                name:
                  description: Name schema for targets and matchers
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                origin:
                  description: The origin of a notification configuration entry.
                  enum:
                  - user-created
                  - builtin
                  - modified-builtin
                  type: string
                password:
                  description: SMTP authentication password
                  type: string
                port:
                  description: 'The port to connect to.

                    If not set, the used port defaults to 25 (insecure), 465 (tls)

                    or 587 (starttls), depending on the value of mode'
                  maximum: 65535
                  minimum: 0
                  type: integer
                server:
                  description: Host name or IP of the SMTP relay.
                  type: string
                username:
                  description: 'Username to use during authentication.

                    If no username is set, no authentication will be performed.

                    The PLAIN and LOGIN authentication methods are supported'
                  type: string
              required:
              - from-address
              - name
              - server
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a new smtp endpoint.
      tags:
      - Configuration
  ? //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/smtp/config/notifications/endpoints/smtp/{name}
  : delete:
      description: Delete smtp endpoint.
      operationId: delete_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_smtp_config_notifications_endpoints_smtp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete smtp endpoint.
      tags:
      - Configuration
    get:
      description: Get a smtp endpoint.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_smtp_config_notifications_endpoints_smtp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Config for Sendmail notification endpoints
                properties:
                  author:
                    description: Author of the mail. Defaults to 'Proxmox Backup Server
                      ($hostname)'
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  disable:
                    description: Disable this target.
                    type: boolean
                  from-address:
                    description: '`From` address for the mail.

                      SMTP relays might require that this address is owned by the
                      user

                      in order to avoid spoofing. The `From` header in the email will
                      be

                      set to `$author <$from-address>`.'
                    type: string
                  mailto:
                    description: Mail address to send a mail to.
                    items:
                      description: E-Mail Address.
                      type: string
                    type: array
                  mailto-user:
                    description: 'Users to send a mail to. The email address of the
                      user

                      will be looked up in users.cfg.'
                    items:
                      description: User ID including realm, e.g. root@pam.
                      type: string
                    type: array
                  mode:
                    description: Connection security
                    type: string
                  name:
                    description: Name schema for targets and matchers
                    type: string
                  origin:
                    description: The origin of a notification configuration entry.
                    type: string
                  port:
                    description: 'The port to connect to.

                      If not set, the used port defaults to 25 (insecure), 465 (tls)

                      or 587 (starttls), depending on the value of mode'
                    type: integer
                  server:
                    description: Host name or IP of the SMTP relay.
                    type: string
                  username:
                    description: 'Username to use during authentication.

                      If no username is set, no authentication will be performed.

                      The PLAIN and LOGIN authentication methods are supported'
                    type: string
                type: object
          description: Config for Sendmail notification endpoints
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get a smtp endpoint.
      tags:
      - Configuration
    put:
      description: Update smtp endpoint.
      operationId: put_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_smtp_config_notifications_endpoints_smtp_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the mail. Defaults to 'Proxmox Backup Server
                    ($hostname)'
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                from-address:
                  description: '`From` address for the mail.

                    SMTP relays might require that this address is owned by the user

                    in order to avoid spoofing. The `From` header in the email will
                    be

                    set to `$author <$from-address>`.'
                  type: string
                mailto:
                  description: Mail address to send a mail to.
                  items:
                    type: string
                  type: array
                mailto-user:
                  description: 'Users to send a mail to. The email address of the
                    user

                    will be looked up in users.cfg.'
                  items:
                    type: string
                  type: array
                mode:
                  default: tls
                  description: Connection security
                  enum:
                  - insecure
                  - starttls
                  - tls
                  type: string
                password:
                  description: SMTP authentication password
                  type: string
                port:
                  description: 'The port to connect to.

                    If not set, the used port defaults to 25 (insecure), 465 (tls)

                    or 587 (starttls), depending on the value of mode'
                  maximum: 65535
                  minimum: 0
                  type: integer
                server:
                  description: Host name or IP of the SMTP relay.
                  type: string
                username:
                  description: 'Username to use during authentication.

                    If no username is set, no authentication will be performed.

                    The PLAIN and LOGIN authentication methods are supported'
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update smtp endpoint.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/webhook:
    get:
      description: List all webhook endpoints.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_webhook
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of webhook endpoints.
                items:
                  description: Config for  Webhook notification endpoints
                  properties:
                    body:
                      description: The HTTP body to send. Supports templating.
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this target.
                      type: boolean
                    header:
                      description: 'Array of HTTP headers. Each entry is a property
                        string with a name and a value.

                        The value property contains the header in base64 encoding.
                        Supports templating.'
                      items:
                        description: String schema for pairs of keys and base64 encoded
                          values
                        type: string
                      type: array
                    method:
                      description: HTTP Method to use.
                      type: string
                    name:
                      description: Name schema for targets and matchers
                      type: string
                    origin:
                      description: The origin of a notification configuration entry.
                      type: string
                    secret:
                      description: 'Array of secrets. Each entry is a property string
                        with a name and an optional value.

                        The value property contains the secret in base64 encoding.

                        For any API endpoints returning the endpoint config,

                        only the secret name but not the value will be returned.

                        When updating the config, also send all secrets that you want

                        to keep, setting only the name but not the value. Can be accessed
                        from templates.'
                      items:
                        description: String schema for pairs of keys and base64 encoded
                          values
                        type: string
                      type: array
                    url:
                      description: HTTP(s) url with optional port.
                      type: string
                  type: object
                type: array
          description: List of webhook endpoints.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all webhook endpoints.
      tags:
      - Configuration
    post:
      description: Add a new webhook endpoint.
      operationId: post_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_webhook
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The HTTP body to send. Supports templating.
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                header:
                  description: 'Array of HTTP headers. Each entry is a property string
                    with a name and a value.

                    The value property contains the header in base64 encoding. Supports
                    templating.'
                  items:
                    type: string
                  type: array
                method:
                  default: post
                  description: HTTP Method to use.
                  enum:
                  - post
                  - put
                  - get
                  type: string
                name:
                  description: Name schema for targets and matchers
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                origin:
                  description: The origin of a notification configuration entry.
                  enum:
                  - user-created
                  - builtin
                  - modified-builtin
                  type: string
                secret:
                  description: 'Array of secrets. Each entry is a property string
                    with a name and an optional value.

                    The value property contains the secret in base64 encoding.

                    For any API endpoints returning the endpoint config,

                    only the secret name but not the value will be returned.

                    When updating the config, also send all secrets that you want

                    to keep, setting only the name but not the value. Can be accessed
                    from templates.'
                  items:
                    type: string
                  type: array
                url:
                  description: HTTP(s) url with optional port.
                  pattern: "^https?://(?:(?:(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\\
                    -]*[a-zA-Z0-9])?)\\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|\\[(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))\\\
                    ]))(?::(?:[0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?)|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))(?:/[^\0\
                    -\x1F\x7F]*)?$"
                  type: string
              required:
              - method
              - name
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a new webhook endpoint.
      tags:
      - Configuration
  ? //config/config/notifications/config/notifications/endpoints/config/notifications/endpoints/webhook/config/notifications/endpoints/webhook/{name}
  : delete:
      description: Delete webhook endpoint.
      operationId: delete_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_webhook_config_notifications_endpoints_webhook_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete webhook endpoint.
      tags:
      - Configuration
    get:
      description: Get a webhook endpoint.
      operationId: get_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_webhook_config_notifications_endpoints_webhook_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Config for  Webhook notification endpoints
                properties:
                  body:
                    description: The HTTP body to send. Supports templating.
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  disable:
                    description: Disable this target.
                    type: boolean
                  header:
                    description: 'Array of HTTP headers. Each entry is a property
                      string with a name and a value.

                      The value property contains the header in base64 encoding. Supports
                      templating.'
                    items:
                      description: String schema for pairs of keys and base64 encoded
                        values
                      type: string
                    type: array
                  method:
                    description: HTTP Method to use.
                    type: string
                  name:
                    description: Name schema for targets and matchers
                    type: string
                  origin:
                    description: The origin of a notification configuration entry.
                    type: string
                  secret:
                    description: 'Array of secrets. Each entry is a property string
                      with a name and an optional value.

                      The value property contains the secret in base64 encoding.

                      For any API endpoints returning the endpoint config,

                      only the secret name but not the value will be returned.

                      When updating the config, also send all secrets that you want

                      to keep, setting only the name but not the value. Can be accessed
                      from templates.'
                    items:
                      description: String schema for pairs of keys and base64 encoded
                        values
                      type: string
                    type: array
                  url:
                    description: HTTP(s) url with optional port.
                    type: string
                type: object
          description: Config for  Webhook notification endpoints
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get a webhook endpoint.
      tags:
      - Configuration
    put:
      description: Update webhook endpoint.
      operationId: put_config_config_notifications_config_notifications_endpoints_config_notifications_endpoints_webhook_config_notifications_endpoints_webhook_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                body:
                  description: The HTTP body to send. Supports templating.
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                disable:
                  description: Disable this target.
                  type: boolean
                header:
                  description: 'Array of HTTP headers. Each entry is a property string
                    with a name and a value.

                    The value property contains the header in base64 encoding. Supports
                    templating.'
                  items:
                    type: string
                  type: array
                method:
                  default: post
                  description: HTTP Method to use.
                  enum:
                  - post
                  - put
                  - get
                  type: string
                secret:
                  description: 'Array of secrets. Each entry is a property string
                    with a name and an optional value.

                    The value property contains the secret in base64 encoding.

                    For any API endpoints returning the endpoint config,

                    only the secret name but not the value will be returned.

                    When updating the config, also send all secrets that you want

                    to keep, setting only the name but not the value. Can be accessed
                    from templates.'
                  items:
                    type: string
                  type: array
                url:
                  description: HTTP(s) url with optional port.
                  pattern: "^https?://(?:(?:(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\\
                    -]*[a-zA-Z0-9])?)\\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|\\[(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))\\\
                    ]))(?::(?:[0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?)|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\\\
                    .){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))(?:/[^\0\
                    -\x1F\x7F]*)?$"
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update webhook endpoint.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/matcher-field-values:
    get:
      description: List all known, matchable metadata field values.
      operationId: get_config_config_notifications_config_notifications_matcher-field-values
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of known metadata field values.
                items:
                  description: A matchable metadata field value.
                  properties:
                    comment:
                      description: Additional comment for this value.
                      type: string
                    field:
                      description: Field this value belongs to.
                      type: string
                    value:
                      description: Notification metadata value known by the system.
                      type: string
                  type: object
                type: array
          description: List of known metadata field values.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all known, matchable metadata field values.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/matcher-fields:
    get:
      description: Get all known metadata fields.
      operationId: get_config_config_notifications_config_notifications_matcher-fields
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of known metadata fields.
                items:
                  description: A matchable field.
                  properties:
                    name:
                      description: Name of the field
                      type: string
                  type: object
                type: array
          description: List of known metadata fields.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get all known metadata fields.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/matchers:
    get:
      description: List all notification matchers.
      operationId: get_config_config_notifications_config_notifications_matchers
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of matchers.
                items:
                  description: Config for Sendmail notification endpoints
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this matcher.
                      type: boolean
                    invert-match:
                      description: Invert match of the whole filter.
                      type: boolean
                    match-calendar:
                      description: List of matched severity levels.
                      items:
                        description: Time stamps to match
                        type: string
                      type: array
                    match-field:
                      description: List of matched metadata fields.
                      items:
                        description: Fields to match
                        type: string
                      type: array
                    match-severity:
                      description: List of matched severity levels.
                      items:
                        description: Severity level to match.
                        type: string
                      type: array
                    mode:
                      description: The mode in which the results of matches are combined.
                      type: string
                    name:
                      description: Name schema for targets and matchers
                      type: string
                    origin:
                      description: The origin of a notification configuration entry.
                      type: string
                    target:
                      description: Targets to notify.
                      items:
                        description: Name schema for targets and matchers
                        type: string
                      type: array
                  type: object
                type: array
          description: List of matchers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all notification matchers.
      tags:
      - Configuration
    post:
      description: Add a new notification matcher.
      operationId: post_config_config_notifications_config_notifications_matchers
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                disable:
                  description: Disable this matcher.
                  type: boolean
                invert-match:
                  description: Invert match of the whole filter.
                  type: boolean
                match-calendar:
                  description: List of matched severity levels.
                  items:
                    type: string
                  type: array
                match-field:
                  description: List of matched metadata fields.
                  items:
                    type: string
                  type: array
                match-severity:
                  description: List of matched severity levels.
                  items:
                    type: string
                  type: array
                mode:
                  default: all
                  description: The mode in which the results of matches are combined.
                  enum:
                  - all
                  - any
                  type: string
                name:
                  description: Name schema for targets and matchers
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                origin:
                  description: The origin of a notification configuration entry.
                  enum:
                  - user-created
                  - builtin
                  - modified-builtin
                  type: string
                target:
                  description: Targets to notify.
                  items:
                    type: string
                  type: array
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Add a new notification matcher.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/matchers/config/notifications/matchers/{name}:
    delete:
      description: Delete notification matcher.
      operationId: delete_config_config_notifications_config_notifications_matchers_config_notifications_matchers_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete notification matcher.
      tags:
      - Configuration
    get:
      description: Get a notification matcher.
      operationId: get_config_config_notifications_config_notifications_matchers_config_notifications_matchers_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Config for Sendmail notification endpoints
                properties:
                  comment:
                    description: Comment.
                    type: string
                  disable:
                    description: Disable this matcher.
                    type: boolean
                  invert-match:
                    description: Invert match of the whole filter.
                    type: boolean
                  match-calendar:
                    description: List of matched severity levels.
                    items:
                      description: Time stamps to match
                      type: string
                    type: array
                  match-field:
                    description: List of matched metadata fields.
                    items:
                      description: Fields to match
                      type: string
                    type: array
                  match-severity:
                    description: List of matched severity levels.
                    items:
                      description: Severity level to match.
                      type: string
                    type: array
                  mode:
                    description: The mode in which the results of matches are combined.
                    type: string
                  name:
                    description: Name schema for targets and matchers
                    type: string
                  origin:
                    description: The origin of a notification configuration entry.
                    type: string
                  target:
                    description: Targets to notify.
                    items:
                      description: Name schema for targets and matchers
                      type: string
                    type: array
                type: object
          description: Config for Sendmail notification endpoints
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get a notification matcher.
      tags:
      - Configuration
    put:
      description: Update notification matcher.
      operationId: put_config_config_notifications_config_notifications_matchers_config_notifications_matchers_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                disable:
                  description: Disable this matcher.
                  type: boolean
                invert-match:
                  description: Invert match of the whole filter.
                  type: boolean
                match-calendar:
                  description: List of matched severity levels.
                  items:
                    type: string
                  type: array
                match-field:
                  description: List of matched metadata fields.
                  items:
                    type: string
                  type: array
                match-severity:
                  description: List of matched severity levels.
                  items:
                    type: string
                  type: array
                mode:
                  default: all
                  description: The mode in which the results of matches are combined.
                  enum:
                  - all
                  - any
                  type: string
                target:
                  description: Targets to notify.
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update notification matcher.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/targets:
    get:
      description: List all notification targets.
      operationId: get_config_config_notifications_config_notifications_targets
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of all entities which can be used as notification
                  targets.
                items:
                  description: Target information
                  properties:
                    comment:
                      description: Comment
                      type: string
                    disable:
                      description: Target is disabled
                      type: boolean
                    name:
                      description: Name of the endpoint
                      type: string
                    origin:
                      description: The origin of a notification configuration entry.
                      type: string
                    type:
                      description: Type of the endpoint.
                      type: string
                  type: object
                type: array
          description: List of all entities which can be used as notification targets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all notification targets.
      tags:
      - Configuration
  //config/config/notifications/config/notifications/targets/config/notifications/targets/{name}:
    get:
      description: Directory index.
      operationId: get_config_config_notifications_config_notifications_targets_config_notifications_targets_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  ? //config/config/notifications/config/notifications/targets/config/notifications/targets/{name}/config/notifications/targets/{name}/test
  : post:
      description: Test a given notification target.
      operationId: post_config_config_notifications_config_notifications_targets_config_notifications_targets_name_config_notifications_targets_name_test
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Test a given notification target.
      tags:
      - Configuration
  //config/config/prune:
    get:
      description: List all scheduled prune jobs.
      operationId: get_config_config_prune
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured prune schedules.
                items:
                  description: Prune configuration.
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    disable:
                      description: Disable this job.
                      type: boolean
                    id:
                      description: Job ID.
                      type: string
                    keep-daily:
                      description: Number of daily backups to keep.
                      type: integer
                    keep-hourly:
                      description: Number of hourly backups to keep.
                      type: integer
                    keep-last:
                      description: Number of backups to keep.
                      type: integer
                    keep-monthly:
                      description: Number of monthly backups to keep.
                      type: integer
                    keep-weekly:
                      description: Number of weekly backups to keep.
                      type: integer
                    keep-yearly:
                      description: Number of yearly backups to keep.
                      type: integer
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion, empty == automatic full recursion,
                        namespace depths reduce maximum allowed value)
                      type: integer
                    ns:
                      description: Namespace.
                      type: string
                    schedule:
                      description: Run prune job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                  type: object
                type: array
          description: List configured prune schedules.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all scheduled prune jobs.
      tags:
      - Configuration
    post:
      description: Create a new prune job.
      operationId: post_config_config_prune
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                disable:
                  default: false
                  description: Disable this job.
                  type: boolean
                id:
                  description: Job ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                keep-daily:
                  description: Number of daily backups to keep.
                  minimum: 1
                  type: integer
                keep-hourly:
                  description: Number of hourly backups to keep.
                  minimum: 1
                  type: integer
                keep-last:
                  description: Number of backups to keep.
                  minimum: 1
                  type: integer
                keep-monthly:
                  description: Number of monthly backups to keep.
                  minimum: 1
                  type: integer
                keep-weekly:
                  description: Number of weekly backups to keep.
                  minimum: 1
                  type: integer
                keep-yearly:
                  description: Number of yearly backups to keep.
                  minimum: 1
                  type: integer
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                schedule:
                  description: Run prune job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - id
              - schedule
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new prune job.
      tags:
      - Configuration
  //config/config/prune/config/prune/{id}:
    delete:
      description: Remove a prune job configuration
      operationId: delete_config_config_prune_config_prune_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a prune job configuration
      tags:
      - Configuration
    get:
      description: Read a prune job configuration.
      operationId: get_config_config_prune_config_prune_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Prune configuration.
                properties:
                  comment:
                    description: Comment.
                    type: string
                  disable:
                    description: Disable this job.
                    type: boolean
                  id:
                    description: Job ID.
                    type: string
                  keep-daily:
                    description: Number of daily backups to keep.
                    type: integer
                  keep-hourly:
                    description: Number of hourly backups to keep.
                    type: integer
                  keep-last:
                    description: Number of backups to keep.
                    type: integer
                  keep-monthly:
                    description: Number of monthly backups to keep.
                    type: integer
                  keep-weekly:
                    description: Number of weekly backups to keep.
                    type: integer
                  keep-yearly:
                    description: Number of yearly backups to keep.
                    type: integer
                  max-depth:
                    description: How many levels of namespaces should be operated
                      on (0 == no recursion, empty == automatic full recursion, namespace
                      depths reduce maximum allowed value)
                    type: integer
                  ns:
                    description: Namespace.
                    type: string
                  schedule:
                    description: Run prune job at specified schedule.
                    type: string
                  store:
                    description: Datastore name.
                    type: string
                type: object
          description: Prune configuration.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read a prune job configuration.
      tags:
      - Configuration
    put:
      description: Update prune job config.
      operationId: put_config_config_prune_config_prune_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                disable:
                  default: false
                  description: Disable this job.
                  type: boolean
                keep-daily:
                  description: Number of daily backups to keep.
                  minimum: 1
                  type: integer
                keep-hourly:
                  description: Number of hourly backups to keep.
                  minimum: 1
                  type: integer
                keep-last:
                  description: Number of backups to keep.
                  minimum: 1
                  type: integer
                keep-monthly:
                  description: Number of monthly backups to keep.
                  minimum: 1
                  type: integer
                keep-weekly:
                  description: Number of weekly backups to keep.
                  minimum: 1
                  type: integer
                keep-yearly:
                  description: Number of yearly backups to keep.
                  minimum: 1
                  type: integer
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                schedule:
                  description: Run prune job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update prune job config.
      tags:
      - Configuration
  //config/config/remote:
    get:
      description: List all remotes
      operationId: get_config_config_remote
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured remotes (with config digest).
                items:
                  description: Remote properties.
                  properties:
                    auth-id:
                      description: Authentication ID
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    fingerprint:
                      description: X509 certificate fingerprint (sha256).
                      type: string
                    host:
                      description: DNS name or IP address.
                      type: string
                    name:
                      description: Remote ID.
                      type: string
                    port:
                      description: The (optional) port
                      type: integer
                  type: object
                type: array
          description: The list of configured remotes (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all remotes
      tags:
      - Configuration
    post:
      description: Create new remote.
      operationId: post_config_config_remote
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth-id:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                fingerprint:
                  description: X509 certificate fingerprint (sha256).
                  pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])(?::[0-9a-fA-F][0-9a-fA-F]){31}$
                  type: string
                host:
                  description: DNS name or IP address.
                  pattern: ^(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?)\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::)))))$
                  type: string
                name:
                  description: Remote ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                password:
                  description: Password or auth token for remote host.
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                port:
                  description: The (optional) port
                  type: integer
              required:
              - auth-id
              - host
              - name
              - password
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new remote.
      tags:
      - Configuration
  //config/config/remote/config/remote/{name}:
    delete:
      description: Remove a remote from the configuration file.
      operationId: delete_config_config_remote_config_remote_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a remote from the configuration file.
      tags:
      - Configuration
    get:
      description: Read remote configuration data.
      operationId: get_config_config_remote_config_remote_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Remote properties.
                properties:
                  auth-id:
                    description: Authentication ID
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  fingerprint:
                    description: X509 certificate fingerprint (sha256).
                    type: string
                  host:
                    description: DNS name or IP address.
                    type: string
                  name:
                    description: Remote ID.
                    type: string
                  port:
                    description: The (optional) port
                    type: integer
                type: object
          description: Remote properties.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read remote configuration data.
      tags:
      - Configuration
    put:
      description: Update remote configuration.
      operationId: put_config_config_remote_config_remote_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auth-id:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                fingerprint:
                  description: X509 certificate fingerprint (sha256).
                  pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])(?::[0-9a-fA-F][0-9a-fA-F]){31}$
                  type: string
                host:
                  description: DNS name or IP address.
                  pattern: ^(?:(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?)\.)*(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?))|(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::)))))$
                  type: string
                password:
                  description: Password or auth token for remote host.
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                port:
                  description: The (optional) port
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update remote configuration.
      tags:
      - Configuration
  //config/config/remote/config/remote/{name}/config/remote/{name}/scan:
    get:
      description: List datastores of a remote.cfg entry
      operationId: get_config_config_remote_config_remote_name_config_remote_name_scan
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List the accessible datastores.
                items:
                  description: Basic information about a datastore.
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    maintenance:
                      description: If the datastore is in maintenance mode, information
                        about it
                      type: string
                    mount-status:
                      description: Current mounting status of a datastore, useful
                        for removable datastores.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                  type: object
                type: array
          description: List the accessible datastores.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List datastores of a remote.cfg entry
      tags:
      - Configuration
  //config/config/remote/config/remote/{name}/config/remote/{name}/scan/config/remote/{name}/scan/{store}:
    get:
      description: Directory index.
      operationId: get_config_config_remote_config_remote_name_config_remote_name_scan_config_remote_name_scan_store
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Configuration
  ? //config/config/remote/config/remote/{name}/config/remote/{name}/scan/config/remote/{name}/scan/{store}/config/remote/{name}/scan/{store}/groups
  : get:
      description: List groups of a remote.cfg entry's datastore
      operationId: get_config_config_remote_config_remote_name_config_remote_name_scan_config_remote_name_scan_store_config_remote_name_scan_store_groups
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      - description: Namespace.
        in: query
        name: namespace
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Lists the accessible backup groups in a remote datastore.
                items:
                  description: Basic information about a backup group.
                  properties:
                    backup-count:
                      description: Number of contained snapshots
                      type: integer
                    backup-id:
                      description: Backup ID.
                      type: string
                    backup-type:
                      description: Backup types.
                      type: string
                    comment:
                      description: The first line from group "notes"
                      type: string
                    files:
                      description: List of contained archive files.
                      items:
                        description: Backup archive name.
                        type: string
                      type: array
                    last-backup:
                      description: Backup time (Unix epoch.)
                      type: integer
                    owner:
                      description: Authentication ID
                      type: string
                  type: object
                type: array
          description: Lists the accessible backup groups in a remote datastore.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List groups of a remote.cfg entry's datastore
      tags:
      - Configuration
  ? //config/config/remote/config/remote/{name}/config/remote/{name}/scan/config/remote/{name}/scan/{store}/config/remote/{name}/scan/{store}/namespaces
  : get:
      description: List namespaces of a datastore of a remote.cfg entry
      operationId: get_config_config_remote_config_remote_name_config_remote_name_scan_config_remote_name_scan_store_config_remote_name_scan_store_namespaces
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: The store parameter
        in: path
        name: store
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxDatastoreName'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List the accessible namespaces of a remote datastore.
                items:
                  description: Basic information about a backup namespace.
                  properties:
                    comment:
                      description: The first line from the namespace's "notes"
                      type: string
                    ns:
                      description: Namespace.
                      type: string
                  type: object
                type: array
          description: List the accessible namespaces of a remote datastore.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List namespaces of a datastore of a remote.cfg entry
      tags:
      - Configuration
  //config/config/sync:
    get:
      description: List all sync jobs
      operationId: get_config_config_sync
      parameters:
      - description: 'The direction of the listed sync jobs: push, pull or all.'
        in: query
        name: sync-direction
        required: false
        schema:
          default: pull
          description: 'The direction of the listed sync jobs: push, pull or all.'
          enum:
          - all
          - push
          - pull
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured jobs.
                items:
                  description: Sync Job
                  properties:
                    burst-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    burst-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    encrypted-only:
                      description: Only synchronize encrypted backup snapshots, exclude
                        others.
                      type: boolean
                    group-filter:
                      description: List of group filters.
                      items:
                        description: Group filter based on group identifier ('group:GROUP'),
                          group type ('type:<vm|ct|host>'), or regex ('regex:RE').
                          Can be inverted by prepending 'exclude:'.
                        type: string
                      type: array
                    id:
                      description: Job ID.
                      type: string
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion, empty == automatic full recursion,
                        namespace depths reduce maximum allowed value)
                      type: integer
                    ns:
                      description: Namespace.
                      type: string
                    owner:
                      description: Authentication ID
                      type: string
                    rate-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    rate-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    remote:
                      description: Remote ID.
                      type: string
                    remote-ns:
                      description: Namespace.
                      type: string
                    remote-store:
                      description: Datastore name.
                      type: string
                    remove-vanished:
                      description: Delete vanished backups. This remove the local
                        copy if the remote backup was deleted.
                      type: boolean
                    resync-corrupt:
                      description: If the verification failed for a local snapshot,
                        try to pull it again.
                      type: boolean
                    schedule:
                      description: Run sync job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                    sync-direction:
                      description: Direction of the sync job, push or pull
                      type: string
                    transfer-last:
                      description: Limit transfer to last N snapshots (per group),
                        skipping others
                      type: integer
                    verified-only:
                      description: Only synchronize verified backup snapshots, exclude
                        others.
                      type: boolean
                  type: object
                type: array
          description: List configured jobs.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all sync jobs
      tags:
      - Configuration
    post:
      description: Create a new sync job.
      operationId: post_config_config_sync
      requestBody:
        content:
          application/json:
            schema:
              properties:
                burst-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                burst-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                encrypted-only:
                  description: Only synchronize encrypted backup snapshots, exclude
                    others.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                id:
                  description: Job ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                owner:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                rate-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                rate-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                remote:
                  description: Remote ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remote-ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                remote-store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remove-vanished:
                  default: false
                  description: Delete vanished backups. This remove the local copy
                    if the remote backup was deleted.
                  type: boolean
                resync-corrupt:
                  description: If the verification failed for a local snapshot, try
                    to pull it again.
                  type: boolean
                schedule:
                  description: Run sync job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                sync-direction:
                  default: pull
                  description: Direction of the sync job, push or pull
                  enum:
                  - pull
                  - push
                  type: string
                transfer-last:
                  description: Limit transfer to last N snapshots (per group), skipping
                    others
                  minimum: 1
                  type: integer
                verified-only:
                  description: Only synchronize verified backup snapshots, exclude
                    others.
                  type: boolean
              required:
              - id
              - remote-store
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new sync job.
      tags:
      - Configuration
  //config/config/sync/config/sync/{id}:
    delete:
      description: Remove a sync job configuration
      operationId: delete_config_config_sync_config_sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a sync job configuration
      tags:
      - Configuration
    get:
      description: Read a sync job configuration.
      operationId: get_config_config_sync_config_sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Sync Job
                properties:
                  burst-in:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  burst-out:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  encrypted-only:
                    description: Only synchronize encrypted backup snapshots, exclude
                      others.
                    type: boolean
                  group-filter:
                    description: List of group filters.
                    items:
                      description: Group filter based on group identifier ('group:GROUP'),
                        group type ('type:<vm|ct|host>'), or regex ('regex:RE'). Can
                        be inverted by prepending 'exclude:'.
                      type: string
                    type: array
                  id:
                    description: Job ID.
                    type: string
                  max-depth:
                    description: How many levels of namespaces should be operated
                      on (0 == no recursion, empty == automatic full recursion, namespace
                      depths reduce maximum allowed value)
                    type: integer
                  ns:
                    description: Namespace.
                    type: string
                  owner:
                    description: Authentication ID
                    type: string
                  rate-in:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  rate-out:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  remote:
                    description: Remote ID.
                    type: string
                  remote-ns:
                    description: Namespace.
                    type: string
                  remote-store:
                    description: Datastore name.
                    type: string
                  remove-vanished:
                    description: Delete vanished backups. This remove the local copy
                      if the remote backup was deleted.
                    type: boolean
                  resync-corrupt:
                    description: If the verification failed for a local snapshot,
                      try to pull it again.
                    type: boolean
                  schedule:
                    description: Run sync job at specified schedule.
                    type: string
                  store:
                    description: Datastore name.
                    type: string
                  sync-direction:
                    description: Direction of the sync job, push or pull
                    type: string
                  transfer-last:
                    description: Limit transfer to last N snapshots (per group), skipping
                      others
                    type: integer
                  verified-only:
                    description: Only synchronize verified backup snapshots, exclude
                      others.
                    type: boolean
                type: object
          description: Sync Job
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read a sync job configuration.
      tags:
      - Configuration
    put:
      description: Update sync job config.
      operationId: put_config_config_sync_config_sync_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                burst-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                burst-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                encrypted-only:
                  description: Only synchronize encrypted backup snapshots, exclude
                    others.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                owner:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                rate-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                rate-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                remote:
                  description: Remote ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remote-ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                remote-store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remove-vanished:
                  default: false
                  description: Delete vanished backups. This remove the local copy
                    if the remote backup was deleted.
                  type: boolean
                resync-corrupt:
                  description: If the verification failed for a local snapshot, try
                    to pull it again.
                  type: boolean
                schedule:
                  description: Run sync job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                sync-direction:
                  default: pull
                  description: Direction of the sync job, push or pull
                  enum:
                  - pull
                  - push
                  type: string
                transfer-last:
                  description: Limit transfer to last N snapshots (per group), skipping
                    others
                  minimum: 1
                  type: integer
                verified-only:
                  description: Only synchronize verified backup snapshots, exclude
                    others.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update sync job config.
      tags:
      - Configuration
  //config/config/tape-backup-job:
    get:
      description: List all tape backup jobs
      operationId: get_config_config_tape-backup-job
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured jobs.
                items:
                  description: Tape Backup Job
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    drive:
                      description: Drive Identifier.
                      type: string
                    eject-media:
                      description: Eject media upon job completion.
                      type: boolean
                    export-media-set:
                      description: Export media set upon job completion.
                      type: boolean
                    group-filter:
                      description: List of group filters.
                      items:
                        description: Group filter based on group identifier ('group:GROUP'),
                          group type ('type:<vm|ct|host>'), or regex ('regex:RE').
                          Can be inverted by prepending 'exclude:'.
                        type: string
                      type: array
                    id:
                      description: Job ID.
                      type: string
                    latest-only:
                      description: Backup latest snapshots only.
                      type: boolean
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion)
                      type: integer
                    notification-mode:
                      description: 'Configure how notifications for this datastore
                        should be sent.

                        `legacy-sendmail` sends email notifications to the user configured

                        in `notify-user` via the system''s `sendmail` executable.

                        `notification-system` emits matchable notification events
                        to the

                        notification system.'
                      type: string
                    notify-user:
                      description: User ID
                      type: string
                    ns:
                      description: Namespace.
                      type: string
                    pool:
                      description: Media pool name.
                      type: string
                    schedule:
                      description: Run sync job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                    worker-threads:
                      description: Set the number of worker threads to use for the
                        job
                      type: integer
                  type: object
                type: array
          description: List configured jobs.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all tape backup jobs
      tags:
      - Configuration
    post:
      description: Create a new tape backup job.
      operationId: post_config_config_tape-backup-job
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                drive:
                  description: Drive Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                eject-media:
                  description: Eject media upon job completion.
                  type: boolean
                export-media-set:
                  description: Export media set upon job completion.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                id:
                  description: Job ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                latest-only:
                  description: Backup latest snapshots only.
                  type: boolean
                max-depth:
                  default: 7
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion)
                  maximum: 7
                  minimum: 0
                  type: integer
                notification-mode:
                  default: legacy-sendmail
                  description: 'Configure how notifications for this datastore should
                    be sent.

                    `legacy-sendmail` sends email notifications to the user configured

                    in `notify-user` via the system''s `sendmail` executable.

                    `notification-system` emits matchable notification events to the

                    notification system.'
                  enum:
                  - legacy-sendmail
                  - notification-system
                  type: string
                notify-user:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                pool:
                  description: Media pool name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                schedule:
                  description: Run sync job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                worker-threads:
                  default: 1
                  description: Set the number of worker threads to use for the job
                  maximum: 32
                  minimum: 1
                  type: integer
              required:
              - drive
              - id
              - pool
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new tape backup job.
      tags:
      - Configuration
  //config/config/tape-backup-job/config/tape-backup-job/{id}:
    delete:
      description: Remove a tape backup job configuration
      operationId: delete_config_config_tape-backup-job_config_tape-backup-job_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a tape backup job configuration
      tags:
      - Configuration
    get:
      description: Read a tape backup job configuration.
      operationId: get_config_config_tape-backup-job_config_tape-backup-job_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Tape Backup Job
                properties:
                  comment:
                    description: Comment.
                    type: string
                  drive:
                    description: Drive Identifier.
                    type: string
                  eject-media:
                    description: Eject media upon job completion.
                    type: boolean
                  export-media-set:
                    description: Export media set upon job completion.
                    type: boolean
                  group-filter:
                    description: List of group filters.
                    items:
                      description: Group filter based on group identifier ('group:GROUP'),
                        group type ('type:<vm|ct|host>'), or regex ('regex:RE'). Can
                        be inverted by prepending 'exclude:'.
                      type: string
                    type: array
                  id:
                    description: Job ID.
                    type: string
                  latest-only:
                    description: Backup latest snapshots only.
                    type: boolean
                  max-depth:
                    description: How many levels of namespaces should be operated
                      on (0 == no recursion)
                    type: integer
                  notification-mode:
                    description: 'Configure how notifications for this datastore should
                      be sent.

                      `legacy-sendmail` sends email notifications to the user configured

                      in `notify-user` via the system''s `sendmail` executable.

                      `notification-system` emits matchable notification events to
                      the

                      notification system.'
                    type: string
                  notify-user:
                    description: User ID
                    type: string
                  ns:
                    description: Namespace.
                    type: string
                  pool:
                    description: Media pool name.
                    type: string
                  schedule:
                    description: Run sync job at specified schedule.
                    type: string
                  store:
                    description: Datastore name.
                    type: string
                  worker-threads:
                    description: Set the number of worker threads to use for the job
                    type: integer
                type: object
          description: Tape Backup Job
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read a tape backup job configuration.
      tags:
      - Configuration
    put:
      description: Update the tape backup job
      operationId: put_config_config_tape-backup-job_config_tape-backup-job_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                drive:
                  description: Drive Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                eject-media:
                  description: Eject media upon job completion.
                  type: boolean
                export-media-set:
                  description: Export media set upon job completion.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                latest-only:
                  description: Backup latest snapshots only.
                  type: boolean
                max-depth:
                  default: 7
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion)
                  maximum: 7
                  minimum: 0
                  type: integer
                notification-mode:
                  default: legacy-sendmail
                  description: 'Configure how notifications for this datastore should
                    be sent.

                    `legacy-sendmail` sends email notifications to the user configured

                    in `notify-user` via the system''s `sendmail` executable.

                    `notification-system` emits matchable notification events to the

                    notification system.'
                  enum:
                  - legacy-sendmail
                  - notification-system
                  type: string
                notify-user:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                pool:
                  description: Media pool name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                schedule:
                  description: Run sync job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                worker-threads:
                  default: 1
                  description: Set the number of worker threads to use for the job
                  maximum: 32
                  minimum: 1
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update the tape backup job
      tags:
      - Configuration
  //config/config/tape-encryption-keys:
    get:
      description: List existing keys
      operationId: get_config_config_tape-encryption-keys
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of tape encryption keys (with config digest).
                items:
                  description: Encryption Key Information
                  properties:
                    created:
                      description: Key creation time
                      type: integer
                    fingerprint:
                      description: X509 certificate fingerprint (sha256).
                      type: string
                    hint:
                      description: Password hint
                      type: string
                    kdf:
                      description: Key derivation function for password protected
                        encryption keys.
                      type: string
                    modified:
                      description: Key modification time
                      type: integer
                    path:
                      description: Path to key (if stored in a file)
                      type: string
                  type: object
                type: array
          description: The list of tape encryption keys (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List existing keys
      tags:
      - Configuration
    post:
      description: Create a new encryption key
      operationId: post_config_config_tape-encryption-keys
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hint:
                  description: Password hint.
                  maxLength: 64
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                kdf:
                  default: scrypt
                  description: Key derivation function for password protected encryption
                    keys.
                  enum:
                  - none
                  - scrypt
                  - pbkdf2
                  type: string
                key:
                  description: Restore/Re-create a key from this JSON string.
                  maxLength: 600
                  minLength: 300
                  type: string
                password:
                  description: A secret password.
                  minLength: 5
                  type: string
              required:
              - password
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Tape encryption key fingerprint (sha256).
                type: string
          description: Tape encryption key fingerprint (sha256).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new encryption key
      tags:
      - Configuration
  //config/config/tape-encryption-keys/config/tape-encryption-keys/{fingerprint}:
    delete:
      description: 'Remove a encryption key from the database


        Please note that you can no longer access tapes using this key.'
      operationId: delete_config_config_tape-encryption-keys_config_tape-encryption-keys_fingerprint
      parameters:
      - description: The fingerprint parameter
        in: path
        name: fingerprint
        required: true
        schema:
          description: The fingerprint parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Remove a encryption key from the database


        Please note that you can no longer access tapes using this key.'
      tags:
      - Configuration
    get:
      description: Get key config (public key part)
      operationId: get_config_config_tape-encryption-keys_config_tape-encryption-keys_fingerprint
      parameters:
      - description: The fingerprint parameter
        in: path
        name: fingerprint
        required: true
        schema:
          description: The fingerprint parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Encryption Key Information
                properties:
                  created:
                    description: Key creation time
                    type: integer
                  fingerprint:
                    description: X509 certificate fingerprint (sha256).
                    type: string
                  hint:
                    description: Password hint
                    type: string
                  kdf:
                    description: Key derivation function for password protected encryption
                      keys.
                    type: string
                  modified:
                    description: Key modification time
                    type: integer
                  path:
                    description: Path to key (if stored in a file)
                    type: string
                type: object
          description: Encryption Key Information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get key config (public key part)
      tags:
      - Configuration
    put:
      description: Change the encryption key's password (and password hint).
      operationId: put_config_config_tape-encryption-keys_config_tape-encryption-keys_fingerprint
      parameters:
      - description: The fingerprint parameter
        in: path
        name: fingerprint
        required: true
        schema:
          description: The fingerprint parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                force:
                  default: false
                  description: Reset the passphrase for a tape key, using the root-only
                    accessible copy.
                  type: boolean
                hint:
                  description: Password hint.
                  maxLength: 64
                  minLength: 1
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                kdf:
                  default: scrypt
                  description: Key derivation function for password protected encryption
                    keys.
                  enum:
                  - none
                  - scrypt
                  - pbkdf2
                  type: string
                new-password:
                  description: The new password.
                  minLength: 5
                  type: string
                password:
                  description: The current password.
                  minLength: 5
                  type: string
              required:
              - hint
              - new-password
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Change the encryption key's password (and password hint).
      tags:
      - Configuration
  //config/config/traffic-control:
    get:
      description: List traffic control rules
      operationId: get_config_config_traffic-control
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured traffic control rules (with config
                  digest).
                items:
                  description: Traffic control rule
                  properties:
                    burst-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    burst-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    comment:
                      description: Comment.
                      type: string
                    name:
                      description: Rule ID.
                      type: string
                    network:
                      description: Rule applies to Source IPs within this networks
                      items:
                        description: IP address (IPv4 or IPv6) with netmask (CIDR
                          notation).
                        type: string
                      type: array
                    rate-in:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    rate-out:
                      description: Byte size with optional unit (B, KB (base 10),
                        MB, GB, ..., KiB (base 2), MiB, Gib, ...).
                      type: string
                    timeframe:
                      description: Enable the rule at specific times
                      items:
                        description: Timeframe to specify when the rule is active.
                        type: string
                      type: array
                  type: object
                type: array
          description: The list of configured traffic control rules (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List traffic control rules
      tags:
      - Configuration
    post:
      description: Create new traffic control rule.
      operationId: post_config_config_traffic-control
      requestBody:
        content:
          application/json:
            schema:
              properties:
                burst-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                burst-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                name:
                  description: Rule ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                network:
                  description: Rule applies to Source IPs within this networks
                  items:
                    type: string
                  type: array
                rate-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                rate-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                timeframe:
                  description: Enable the rule at specific times
                  items:
                    type: string
                  type: array
              required:
              - name
              - network
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create new traffic control rule.
      tags:
      - Configuration
  //config/config/traffic-control/config/traffic-control/{name}:
    delete:
      description: Remove a traffic control rule from the configuration file.
      operationId: delete_config_config_traffic-control_config_traffic-control_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a traffic control rule from the configuration file.
      tags:
      - Configuration
    get:
      description: Read traffic control configuration data.
      operationId: get_config_config_traffic-control_config_traffic-control_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Traffic control rule
                properties:
                  burst-in:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  burst-out:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  comment:
                    description: Comment.
                    type: string
                  name:
                    description: Rule ID.
                    type: string
                  network:
                    description: Rule applies to Source IPs within this networks
                    items:
                      description: IP address (IPv4 or IPv6) with netmask (CIDR notation).
                      type: string
                    type: array
                  rate-in:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  rate-out:
                    description: Byte size with optional unit (B, KB (base 10), MB,
                      GB, ..., KiB (base 2), MiB, Gib, ...).
                    type: string
                  timeframe:
                    description: Enable the rule at specific times
                    items:
                      description: Timeframe to specify when the rule is active.
                      type: string
                    type: array
                type: object
          description: Traffic control rule
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read traffic control configuration data.
      tags:
      - Configuration
    put:
      description: Update traffic control configuration.
      operationId: put_config_config_traffic-control_config_traffic-control_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                burst-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                burst-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                network:
                  description: Rule applies to Source IPs within this networks
                  items:
                    type: string
                  type: array
                rate-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                rate-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                timeframe:
                  description: Enable the rule at specific times
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update traffic control configuration.
      tags:
      - Configuration
  //config/config/verify:
    get:
      description: List all verification jobs
      operationId: get_config_config_verify
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured jobs.
                items:
                  description: Verification Job
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    id:
                      description: Job ID.
                      type: string
                    ignore-verified:
                      description: Do not verify backups that are already verified
                        if their verification is not outdated.
                      type: boolean
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion)
                      type: integer
                    ns:
                      description: Namespace.
                      type: string
                    outdated-after:
                      description: Days after that a verification becomes outdated.
                        (0 is deprecated)'
                      type: integer
                    schedule:
                      description: Run verify job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                  type: object
                type: array
          description: List configured jobs.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all verification jobs
      tags:
      - Configuration
    post:
      description: Create a new verification job.
      operationId: post_config_config_verify
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                id:
                  description: Job ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                ignore-verified:
                  default: true
                  description: Do not verify backups that are already verified if
                    their verification is not outdated.
                  type: boolean
                max-depth:
                  default: 7
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                outdated-after:
                  description: Days after that a verification becomes outdated. (0
                    is deprecated)'
                  minimum: 0
                  type: integer
                schedule:
                  description: Run verify job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - id
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new verification job.
      tags:
      - Configuration
  //config/config/verify/config/verify/{id}:
    delete:
      description: Remove a verification job configuration
      operationId: delete_config_config_verify_config_verify_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a verification job configuration
      tags:
      - Configuration
    get:
      description: Read a verification job configuration.
      operationId: get_config_config_verify_config_verify_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Verification Job
                properties:
                  comment:
                    description: Comment.
                    type: string
                  id:
                    description: Job ID.
                    type: string
                  ignore-verified:
                    description: Do not verify backups that are already verified if
                      their verification is not outdated.
                    type: boolean
                  max-depth:
                    description: How many levels of namespaces should be operated
                      on (0 == no recursion)
                    type: integer
                  ns:
                    description: Namespace.
                    type: string
                  outdated-after:
                    description: Days after that a verification becomes outdated.
                      (0 is deprecated)'
                    type: integer
                  schedule:
                    description: Run verify job at specified schedule.
                    type: string
                  store:
                    description: Datastore name.
                    type: string
                type: object
          description: Verification Job
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read a verification job configuration.
      tags:
      - Configuration
    put:
      description: Update verification job config.
      operationId: put_config_config_verify_config_verify_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comment:
                  description: Comment.
                  maxLength: 128
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                ignore-verified:
                  default: true
                  description: Do not verify backups that are already verified if
                    their verification is not outdated.
                  type: boolean
                max-depth:
                  default: 7
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                outdated-after:
                  description: Days after that a verification becomes outdated. (0
                    is deprecated)'
                  minimum: 0
                  type: integer
                schedule:
                  description: Run verify job at specified schedule.
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update verification job config.
      tags:
      - Configuration
  //nodes:
    get:
      description: List Nodes (only for compatibility)
      operationId: get_nodes
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List Nodes (only for compatibility)
      tags:
      - Nodes
  //nodes/nodes/{node}:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/apt:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_apt
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/changelog:
    get:
      description: Retrieve the changelog of the specified package.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_changelog
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Package name to get changelog of.
        in: query
        name: name
        required: true
        schema:
          description: Package name to get changelog of.
          type: string
      - description: Package version to get changelog of. Omit to use candidate version.
        in: query
        name: version
        required: false
        schema:
          description: Package version to get changelog of. Omit to use candidate
            version.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Retrieve the changelog of the specified package.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/repositories:
    get:
      description: Get APT repository information.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Result from parsing the APT repository files in /etc/apt/.
                properties:
                  digest:
                    description: Prevent changes if current configuration file has
                      different SHA256 digest. This can be used to prevent concurrent
                      modifications.
                    type: string
                  errors:
                    description: List of problematic files.
                    items:
                      description: Error type for problems with APT repository files.
                      properties:
                        error:
                          description: The error message.
                          type: string
                        path:
                          description: The path to the problematic file.
                          type: string
                      type: object
                    type: array
                  files:
                    description: List of parsed repository files.
                    items:
                      description: Represents an abstract APT repository file.
                      properties:
                        content:
                          description: The file content, if already parsed.
                          type: string
                        digest:
                          description: Prevent changes if current configuration file
                            has different SHA256 digest. This can be used to prevent
                            concurrent modifications.
                          type: string
                        file-type:
                          description: The type of format used for an APT repository.
                          type: string
                        path:
                          description: The path to the file. If None, `contents` must
                            be set directly.
                          type: string
                        repositories:
                          description: List of APT repositories.
                          items:
                            description: Describes an APT repository.
                            properties:
                              Comment:
                                description: Associated comment.
                                type: string
                              Components:
                                description: List of repository components.
                                items:
                                  description: Repository component.
                                  type: string
                                type: array
                              Enabled:
                                description: Whether the repository is enabled or
                                  not.
                                type: boolean
                              FileType:
                                description: The type of format used for an APT repository.
                                type: string
                              Options:
                                description: Additional options.
                                items:
                                  description: 'Additional options for an APT repository.

                                    Used for both single- and multi-value options.'
                                  properties:
                                    Key:
                                      description: Option key.
                                      type: string
                                    Values:
                                      description: Option values.
                                      items:
                                        description: Value.
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              Suites:
                                description: List of distributions.
                                items:
                                  description: Package distribution.
                                  type: string
                                type: array
                              Types:
                                description: List of package types.
                                items:
                                  description: The type of an APT package.
                                  type: string
                                type: array
                              URIs:
                                description: List of repository URIs.
                                items:
                                  description: Repository URI.
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  infos:
                    description: List of additional information/warnings about the
                      repositories
                    items:
                      description: Additional information for a repository.
                      properties:
                        index:
                          description: Index of the associated repository within the
                            file (starting from 0).
                          type: integer
                        kind:
                          description: Info kind (e.g. "warning")
                          type: string
                        message:
                          description: Info message
                          type: string
                        path:
                          description: Path to the defining file.
                          type: string
                        property:
                          description: The property from which the info originates
                            (e.g. "Suites")
                          type: string
                      type: object
                    type: array
                  standard-repos:
                    description: List of standard repositories and their configuration
                      status.
                    items:
                      description: Reference to a standard repository and configuration
                        status.
                      properties:
                        description:
                          description: Description of the repository.
                          type: string
                        handle:
                          description: Handle referencing a standard repository.
                          type: string
                        name:
                          description: Display name of the repository.
                          type: string
                        status:
                          description: 'Configuration status of the associated repository,
                            where `None` means

                            not configured, and `Some(bool)` indicates enabled or
                            disabled.'
                          type: boolean
                      type: object
                    type: array
                type: object
          description: Result from parsing the APT repository files in /etc/apt/.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get APT repository information.
      tags:
      - Nodes
    post:
      description: 'Change the properties of the specified repository.


        The `digest` parameter asserts that the configuration has not been modified.'
      operationId: post_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                enabled:
                  description: Whether the repository should be enabled or not.
                  type: boolean
                index:
                  description: Index within the file (starting from 0).
                  type: integer
                path:
                  description: Path to the containing file.
                  type: string
              required:
              - index
              - path
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Change the properties of the specified repository.


        The `digest` parameter asserts that the configuration has not been modified.'
      tags:
      - Nodes
    put:
      description: 'Add the repository identified by the `handle`.

        If the repository is already configured, it will be set to enabled.


        The `digest` parameter asserts that the configuration has not been modified.'
      operationId: put_nodes_nodes_node_nodes_node_apt_nodes_node_apt_repositories
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                handle:
                  description: Handles for Proxmox repositories.
                  enum:
                  - enterprise
                  - no-subscription
                  - test
                  - ceph-quincy-enterprise
                  - ceph-quincy-no-subscription
                  - ceph-quincy-test
                  - ceph-reef-enterprise
                  - ceph-reef-no-subscription
                  - ceph-reef-test
                  - ceph-squid-enterprise
                  - ceph-squid-no-subscription
                  - ceph-squid-test
                  type: string
              required:
              - handle
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Add the repository identified by the `handle`.

        If the repository is already configured, it will be set to enabled.


        The `digest` parameter asserts that the configuration has not been modified.'
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/update:
    get:
      description: List available APT updates
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_update
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list of packages with available updates.
                items:
                  description: Describes a package for which an update is available.
                  properties:
                    Arch:
                      description: Package architecture
                      type: string
                    Description:
                      description: Human readable package description
                      type: string
                    ExtraInfo:
                      description: Custom extra field for additional package information
                      type: string
                    OldVersion:
                      description: Old version currently installed
                      type: string
                    Origin:
                      description: Package origin
                      type: string
                    Package:
                      description: Package name
                      type: string
                    Priority:
                      description: Package priority in human-readable form
                      type: string
                    Section:
                      description: Package section
                      type: string
                    Title:
                      description: Package title
                      type: string
                    Version:
                      description: New version to be updated to
                      type: string
                  type: object
                type: array
          description: A list of packages with available updates.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List available APT updates
      tags:
      - Nodes
    post:
      description: Update the APT database
      operationId: post_nodes_nodes_node_nodes_node_apt_nodes_node_apt_update
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notify:
                  default: false
                  description: 'Send notification mail about new package updates available
                    to the email

                    address configured for ''root@pam'').'
                  type: boolean
                quiet:
                  default: false
                  description: Only produces output suitable for logging, omitting
                    progress indicators.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update the APT database
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/apt/nodes/{node}/apt/versions:
    get:
      description: Get package information for important Proxmox Backup Server packages.
      operationId: get_nodes_nodes_node_nodes_node_apt_nodes_node_apt_versions
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of more relevant packages.
                items:
                  description: Describes a package for which an update is available.
                  properties:
                    Arch:
                      description: Package architecture
                      type: string
                    Description:
                      description: Human readable package description
                      type: string
                    ExtraInfo:
                      description: Custom extra field for additional package information
                      type: string
                    OldVersion:
                      description: Old version currently installed
                      type: string
                    Origin:
                      description: Package origin
                      type: string
                    Package:
                      description: Package name
                      type: string
                    Priority:
                      description: Package priority in human-readable form
                      type: string
                    Section:
                      description: Package section
                      type: string
                    Title:
                      description: Package title
                      type: string
                    Version:
                      description: New version to be updated to
                      type: string
                  type: object
                type: array
          description: List of more relevant packages.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get package information for important Proxmox Backup Server packages.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/certificates:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_certificates
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/acme:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/acme/nodes/{node}/certificates/acme/certificate:
    post:
      description: Order a new ACME certificate.
      operationId: post_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: false
                  description: Force replacement of existing files.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Order a new ACME certificate.
      tags:
      - Nodes
    put:
      description: 'Renew the current ACME certificate if it expires within 30 days
        (or always if the `force`

        parameter is set).'
      operationId: put_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_acme_nodes_node_certificates_acme_certificate
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: false
                  description: Force replacement of existing files.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Renew the current ACME certificate if it expires within 30 days (or
        always if the `force`

        parameter is set).'
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/custom:
    delete:
      description: Delete the current certificate and regenerate a self signed one.
      operationId: delete_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_custom
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: UI compatibility parameter, ignored
        in: query
        name: restart
        required: false
        schema:
          default: false
          description: UI compatibility parameter, ignored
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete the current certificate and regenerate a self signed one.
      tags:
      - Nodes
    post:
      description: Upload a custom certificate.
      operationId: post_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_custom
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                certificates:
                  description: PEM encoded certificate (chain).
                  type: string
                force:
                  default: false
                  description: Force replacement of existing files.
                  type: boolean
                key:
                  description: PEM encoded private key.
                  type: string
                restart:
                  default: false
                  description: UI compatibility parameter, ignored
                  type: boolean
              required:
              - certificates
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of certificate infos.
                items:
                  description: Certificate information.
                  properties:
                    filename:
                      description: Certificate file name.
                      type: string
                    fingerprint:
                      description: The SSL Fingerprint.
                      type: string
                    issuer:
                      description: Certificate issuer name.
                      type: string
                    notafter:
                      description: Certificate's notAfter timestamp (UNIX epoch).
                      type: integer
                    notbefore:
                      description: Certificate's notBefore timestamp (UNIX epoch).
                      type: integer
                    pem:
                      description: Certificate in PEM format.
                      type: string
                    public-key-bits:
                      description: Certificate's public key size if available.
                      type: integer
                    public-key-type:
                      description: Certificate's public key algorithm.
                      type: string
                    san:
                      description: List of certificate's SubjectAlternativeName entries.
                      items:
                        description: A SubjectAlternateName entry.
                        type: string
                      type: array
                    subject:
                      description: Certificate subject name.
                      type: string
                  type: object
                type: array
          description: List of certificate infos.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload a custom certificate.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/certificates/nodes/{node}/certificates/info:
    get:
      description: Get certificate info.
      operationId: get_nodes_nodes_node_nodes_node_certificates_nodes_node_certificates_info
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of certificate infos.
                items:
                  description: Certificate information.
                  properties:
                    filename:
                      description: Certificate file name.
                      type: string
                    fingerprint:
                      description: The SSL Fingerprint.
                      type: string
                    issuer:
                      description: Certificate issuer name.
                      type: string
                    notafter:
                      description: Certificate's notAfter timestamp (UNIX epoch).
                      type: integer
                    notbefore:
                      description: Certificate's notBefore timestamp (UNIX epoch).
                      type: integer
                    pem:
                      description: Certificate in PEM format.
                      type: string
                    public-key-bits:
                      description: Certificate's public key size if available.
                      type: integer
                    public-key-type:
                      description: Certificate's public key algorithm.
                      type: string
                    san:
                      description: List of certificate's SubjectAlternativeName entries.
                      items:
                        description: A SubjectAlternateName entry.
                        type: string
                      type: array
                    subject:
                      description: Certificate subject name.
                      type: string
                  type: object
                type: array
          description: List of certificate infos.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get certificate info.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/config:
    get:
      description: Get the node configuration
      operationId: get_nodes_nodes_node_nodes_node_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Node specific configuration.
                properties:
                  acme:
                    description: The acme account to use on this node.
                    type: string
                  acmedomain0:
                    description: ACME domain configuration string
                    type: string
                  acmedomain1:
                    description: ACME domain configuration string
                    type: string
                  acmedomain2:
                    description: ACME domain configuration string
                    type: string
                  acmedomain3:
                    description: ACME domain configuration string
                    type: string
                  acmedomain4:
                    description: ACME domain configuration string
                    type: string
                  ciphers-tls-1.2:
                    description: OpenSSL cipher list used by the proxy for TLS <=
                      1.2
                    type: string
                  ciphers-tls-1.3:
                    description: OpenSSL ciphersuites list used by the proxy for TLS
                      1.3
                    type: string
                  consent-text:
                    description: Consent banner text
                    type: string
                  default-lang:
                    description: 'All available languages in Proxmox. Taken from proxmox-i18n
                      repository.

                      pt_BR, zh_CN, and zh_TW use the same case in the translation
                      files.'
                    type: string
                  description:
                    description: Comment (multiple lines).
                    type: string
                  email-from:
                    description: E-Mail Address.
                    type: string
                  http-proxy:
                    description: HTTP proxy configuration [http://]<host>[:port]
                    type: string
                  task-log-max-days:
                    description: Maximum days to keep Task logs
                    type: integer
                type: object
          description: Node specific configuration.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get the node configuration
      tags:
      - Nodes
    put:
      description: Update the node configuration
      operationId: put_nodes_nodes_node_nodes_node_config
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                acme:
                  description: The acme account to use on this node.
                  type: string
                acmedomain0:
                  description: ACME domain configuration string
                  type: string
                acmedomain1:
                  description: ACME domain configuration string
                  type: string
                acmedomain2:
                  description: ACME domain configuration string
                  type: string
                acmedomain3:
                  description: ACME domain configuration string
                  type: string
                acmedomain4:
                  description: ACME domain configuration string
                  type: string
                ciphers-tls-1.2:
                  description: OpenSSL cipher list used by the proxy for TLS <= 1.2
                  pattern: ^[0-9A-Za-z_:, +!\-@=.]+$
                  type: string
                ciphers-tls-1.3:
                  description: OpenSSL ciphersuites list used by the proxy for TLS
                    1.3
                  pattern: ^[0-9A-Za-z_:, +!\-@=.]+$
                  type: string
                consent-text:
                  description: Consent banner text
                  maxLength: 65536
                  type: string
                default-lang:
                  description: 'All available languages in Proxmox. Taken from proxmox-i18n
                    repository.

                    pt_BR, zh_CN, and zh_TW use the same case in the translation files.'
                  enum:
                  - ar
                  - ca
                  - da
                  - de
                  - en
                  - es
                  - eu
                  - fa
                  - fr
                  - gl
                  - he
                  - hu
                  - it
                  - ja
                  - kr
                  - nb
                  - nl
                  - nn
                  - pl
                  - pt_BR
                  - ru
                  - sl
                  - sv
                  - tr
                  - zh_CN
                  - zh_TW
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                description:
                  description: Comment (multiple lines).
                  pattern: (?m)^([[:^cntrl:]]*)$
                  type: string
                digest:
                  description: Digest to protect against concurrent updates
                  type: string
                email-from:
                  description: E-Mail Address.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
                http-proxy:
                  description: HTTP proxy configuration [http://]<host>[:port]
                  maxLength: 128
                  minLength: 1
                  type: string
                task-log-max-days:
                  description: Maximum days to keep Task logs
                  minimum: 0
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update the node configuration
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_disks
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/directory:
    get:
      description: List systemd datastore mount units.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of removable-datastore devices and systemd datastore
                  mount units.
                items:
                  description: Datastore mount info.
                  properties:
                    device:
                      description: The mounted device.
                      type: string
                    filesystem:
                      description: A file system type supported by our tooling.
                      type: string
                    name:
                      description: The name of the mount
                      type: string
                    options:
                      description: Mount options
                      type: string
                    path:
                      description: The mount path.
                      type: string
                    removable:
                      description: This is removable
                      type: boolean
                    unitfile:
                      description: The path of the mount unit.
                      type: string
                  type: object
                type: array
          description: List of removable-datastore devices and systemd datastore mount
            units.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List systemd datastore mount units.
      tags:
      - Nodes
    post:
      description: Create a Filesystem on an unused disk. Will be mounted under `/mnt/datastore/<name>`.
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add-datastore:
                  default: false
                  description: Configure a datastore using the directory.
                  type: boolean
                disk:
                  description: Block device name (/sys/block/<name>).
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:h|s|x?v)d[a-z]+)|(?:nvme\d+n\d+)$
                  type: string
                filesystem:
                  description: A file system type supported by our tooling.
                  enum:
                  - ext4
                  - xfs
                  type: string
                name:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                removable-datastore:
                  default: false
                  description: The added datastore is removable.
                  type: boolean
              required:
              - disk
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a Filesystem on an unused disk. Will be mounted under `/mnt/datastore/<name>`.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/directory/nodes/{node}/disks/directory/{name}:
    delete:
      description: Remove a Filesystem mounted under `/mnt/datastore/<name>`.
      operationId: delete_nodes_nodes_node_nodes_node_disks_nodes_node_disks_directory_nodes_node_disks_directory_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove a Filesystem mounted under `/mnt/datastore/<name>`.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/initgpt:
    post:
      description: Initialize empty Disk with GPT
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_initgpt
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disk:
                  description: Block device name (/sys/block/<name>).
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:h|s|x?v)d[a-z]+)|(?:nvme\d+n\d+)$
                  type: string
                uuid:
                  description: UUID for the GPT table.
                  maxLength: 36
                  type: string
              required:
              - disk
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Initialize empty Disk with GPT
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/list:
    get:
      description: List local disks
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_list
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Include partitions.
        in: query
        name: include-partitions
        required: false
        schema:
          default: false
          description: Include partitions.
          type: boolean
      - description: Skip smart checks.
        in: query
        name: skipsmart
        required: false
        schema:
          default: false
          description: Skip smart checks.
          type: boolean
      - description: What a block device (disk) is used for.
        in: query
        name: usage-type
        required: false
        schema:
          description: What a block device (disk) is used for.
          enum:
          - unused
          - mounted
          - lvm
          - zfs
          - devicemapper
          - partitions
          - filesystem
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Local disk list.
                items:
                  description: Information about how a Disk is used
                  properties:
                    devpath:
                      description: Linux device path (/dev/xxx)
                      type: string
                    disk-type:
                      description: This is just a rough estimate for a "type" of disk.
                      type: string
                    gpt:
                      description: Set if disk contains a GPT partition table
                      type: boolean
                    model:
                      description: Model
                      type: string
                    name:
                      description: Disk name (`/sys/block/<name>`)
                      type: string
                    partitions:
                      description: Partitions on the device
                      items:
                        description: Basic information about a partition
                        properties:
                          devpath:
                            description: The partition devpath
                            type: string
                          filesystem:
                            description: The filesystem of the partition
                            type: string
                          gpt:
                            description: GPT partition
                            type: boolean
                          mounted:
                            description: Is the partition mounted
                            type: boolean
                          name:
                            description: The partition name
                            type: string
                          size:
                            description: Size in bytes
                            type: integer
                          used:
                            description: What a block device partition is used for.
                            type: string
                          uuid:
                            description: UUID
                            type: string
                        type: object
                      type: array
                    rpm:
                      description: RPM
                      type: integer
                    serial:
                      description: Serisal number
                      type: string
                    size:
                      description: Disk size
                      type: integer
                    status:
                      description: SMART status
                      type: string
                    used:
                      description: What a block device (disk) is used for.
                      type: string
                    vendor:
                      description: Vendor
                      type: string
                    wearout:
                      description: Disk wearout
                      type: number
                    wwn:
                      description: WWN
                      type: string
                  type: object
                type: array
          description: Local disk list.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List local disks
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/smart:
    get:
      description: Get SMART attributes and health of a disk.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_smart
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Block device name (/sys/block/<name>).
        in: query
        name: disk
        required: true
        schema:
          description: Block device name (/sys/block/<name>).
          maxLength: 64
          minLength: 3
          pattern: ^(?:(?:h|s|x?v)d[a-z]+)|(?:nvme\d+n\d+)$
          type: string
      - description: If true returns only the health status.
        in: query
        name: healthonly
        required: false
        schema:
          description: If true returns only the health status.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Data from smartctl
                properties:
                  attributes:
                    description: SMART attributes.
                    items:
                      description: SMART Attribute
                      properties:
                        flags:
                          description: ATA Flags
                          type: string
                        id:
                          description: ATA Attribute ID
                          type: integer
                        name:
                          description: Attribute name
                          type: string
                        normalized:
                          description: ATA normalized value (0..100)
                          type: number
                        raw:
                          description: Attribute raw value
                          type: string
                        threshold:
                          description: ATA threshold
                          type: number
                        value:
                          description: duplicate of raw - kept for API stability
                          type: string
                        worst:
                          description: ATA worst
                          type: number
                      type: object
                    type: array
                  status:
                    description: SMART status
                    type: string
                  wearout:
                    description: Wearout level.
                    type: number
                type: object
          description: Data from smartctl
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get SMART attributes and health of a disk.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/wipedisk:
    put:
      description: wipe disk
      operationId: put_nodes_nodes_node_nodes_node_disks_nodes_node_disks_wipedisk
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                disk:
                  description: (Partition) block device name (/sys/class/block/<name>).
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:h|s|x?v)d[a-z]+\d*)|(?:nvme\d+n\d+(p\d+)?)$
                  type: string
              required:
              - disk
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: wipe disk
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/zfs:
    get:
      description: List zfs pools.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of zpools.
                items:
                  description: zpool list item
                  properties:
                    alloc:
                      description: Used size
                      type: integer
                    dedup:
                      description: ZFS deduplication ratio
                      type: number
                    frag:
                      description: ZFS fragnentation level
                      type: integer
                    free:
                      description: Free space
                      type: integer
                    health:
                      description: Health
                      type: string
                    name:
                      description: zpool name
                      type: string
                    size:
                      description: Total size
                      type: integer
                  type: object
                type: array
          description: List of zpools.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List zfs pools.
      tags:
      - Nodes
    post:
      description: Create a new ZFS pool. Will be mounted under `/mnt/datastore/<name>`.
      operationId: post_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                add-datastore:
                  description: Configure a datastore using the zpool.
                  type: boolean
                ashift:
                  default: 12
                  description: Pool sector size exponent.
                  maximum: 16
                  minimum: 9
                  type: integer
                compression:
                  description: The ZFS compression algorithm to use.
                  enum:
                  - gzip
                  - lz4
                  - lzjb
                  - zle
                  - zstd
                  - 'on'
                  - 'off'
                  type: string
                devices:
                  description: A list of disk names, comma separated.
                  type: string
                name:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                raidlevel:
                  description: The ZFS RAID level to use.
                  enum:
                  - single
                  - mirror
                  - raid10
                  - raidz
                  - raidz2
                  - raidz3
                  type: string
              required:
              - devices
              - name
              - raidlevel
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create a new ZFS pool. Will be mounted under `/mnt/datastore/<name>`.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/disks/nodes/{node}/disks/zfs/nodes/{node}/disks/zfs/{name}:
    get:
      description: Get zpool status details.
      operationId: get_nodes_nodes_node_nodes_node_disks_nodes_node_disks_zfs_nodes_node_disks_zfs_name
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: zpool vdev tree with status
                type: object
          description: zpool vdev tree with status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get zpool status details.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/dns:
    get:
      description: Read DNS settings.
      operationId: get_nodes_nodes_node_nodes_node_dns
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns DNS server IPs and sreach domain.
                properties:
                  digest:
                    description: Prevent changes if current configuration file has
                      different SHA256 digest. This can be used to prevent concurrent
                      modifications.
                    type: string
                  dns1:
                    description: First name server IP address.
                    type: string
                  dns2:
                    description: Second name server IP address.
                    type: string
                  dns3:
                    description: Third name server IP address.
                    type: string
                  search:
                    description: Search domain for host-name lookup.
                    type: string
                type: object
          description: Returns DNS server IPs and sreach domain.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read DNS settings.
      tags:
      - Nodes
    put:
      description: Update DNS settings.
      operationId: put_nodes_nodes_node_nodes_node_dns
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                dns1:
                  description: First name server IP address.
                  pattern: ^(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))$
                  type: string
                dns2:
                  description: Second name server IP address.
                  pattern: ^(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))$
                  type: string
                dns3:
                  description: Third name server IP address.
                  pattern: ^(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::))))$
                  type: string
                search:
                  description: Search domain for host-name lookup.
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update DNS settings.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/journal:
    get:
      description: Read syslog entries.
      operationId: get_nodes_nodes_node_nodes_node_journal
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: End before the given Cursor. Conflicts with 'until'
        in: query
        name: endcursor
        required: false
        schema:
          description: End before the given Cursor. Conflicts with 'until'
          type: string
      - description: Limit to the last X lines. Conflicts with a range.
        in: query
        name: lastentries
        required: false
        schema:
          description: Limit to the last X lines. Conflicts with a range.
          minimum: 0
          type: integer
      - description: Display all log since this UNIX epoch. Conflicts with 'startcursor'.
        in: query
        name: since
        required: false
        schema:
          description: Display all log since this UNIX epoch. Conflicts with 'startcursor'.
          minimum: 0
          type: integer
      - description: Start after the given Cursor. Conflicts with 'since'.
        in: query
        name: startcursor
        required: false
        schema:
          description: Start after the given Cursor. Conflicts with 'since'.
          type: string
      - description: Display all log until this UNIX epoch. Conflicts with 'endcursor'.
        in: query
        name: until
        required: false
        schema:
          description: Display all log until this UNIX epoch. Conflicts with 'endcursor'.
          minimum: 0
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns a list of journal entries.
                items:
                  description: Line text.
                  type: string
                type: array
          description: Returns a list of journal entries.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read syslog entries.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/network:
    delete:
      description: Revert network configuration (rm /etc/network/interfaces.new).
      operationId: delete_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Revert network configuration (rm /etc/network/interfaces.new).
      tags:
      - Nodes
    get:
      description: List all datastores
      operationId: get_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List network devices (with config digest).
                items:
                  description: Network Interface configuration
                  properties:
                    active:
                      description: Interface is active (UP)
                      type: boolean
                    autostart:
                      description: Autostart interface
                      type: boolean
                    bond-primary:
                      description: Network interface name.
                      type: string
                    bond_mode:
                      description: Linux Bond Mode
                      type: string
                    bond_xmit_hash_policy:
                      description: Bond Transmit Hash Policy for LACP (802.3ad)
                      type: string
                    bridge_ports:
                      description: Network interface list.
                      items:
                        description: Network interface name.
                        type: string
                      type: array
                    bridge_vlan_aware:
                      description: Enable bridge vlan support.
                      type: boolean
                    cidr:
                      description: IPv4 address with netmask (CIDR notation).
                      type: string
                    cidr6:
                      description: IPv6 address with netmask (CIDR notation).
                      type: string
                    comments:
                      description: Comments (inet, may span multiple lines)
                      type: string
                    comments6:
                      description: Comments (inet6, may span multiple lines)
                      type: string
                    gateway:
                      description: IPv4 address.
                      type: string
                    gateway6:
                      description: IPv6 address.
                      type: string
                    method:
                      description: Interface configuration method
                      type: string
                    method6:
                      description: Interface configuration method
                      type: string
                    mtu:
                      description: Maximum Transmission Unit
                      type: integer
                    name:
                      description: Network interface name.
                      type: string
                    options:
                      description: Option list (inet)
                      items:
                        description: Optional attribute line.
                        type: string
                      type: array
                    options6:
                      description: Option list (inet6)
                      items:
                        description: Optional attribute line.
                        type: string
                      type: array
                    slaves:
                      description: Network interface list.
                      items:
                        description: Network interface name.
                        type: string
                      type: array
                    type:
                      description: Network interface type
                      type: string
                    vlan-id:
                      description: VLAN ID.
                      type: integer
                    vlan-raw-device:
                      description: Network interface name.
                      type: string
                  type: object
                type: array
          description: List network devices (with config digest).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all datastores
      tags:
      - Nodes
    post:
      description: Create network interface configuration.
      operationId: post_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                autostart:
                  description: Autostart interface.
                  type: boolean
                bond-primary:
                  description: Network interface name.
                  maxLength: 15
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                bond_mode:
                  description: Linux Bond Mode
                  enum:
                  - balance-rr
                  - active-backup
                  - balance-xor
                  - broadcast
                  - 802.3ad
                  - balance-tlb
                  - balance-alb
                  type: string
                bond_xmit_hash_policy:
                  description: Bond Transmit Hash Policy for LACP (802.3ad)
                  enum:
                  - layer2
                  - layer2+3
                  - layer3+4
                  type: string
                bridge_ports:
                  description: A list of network devices, comma separated.
                  type: string
                bridge_vlan_aware:
                  description: Enable bridge vlan support.
                  type: boolean
                cidr:
                  description: IPv4 address with netmask (CIDR notation).
                  maxLength: 18
                  pattern: ^(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))/\d{1,2})$$
                  type: string
                cidr6:
                  description: IPv6 address with netmask (CIDR notation).
                  maxLength: 43
                  pattern: ^(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::)))/\d{1,3})$$
                  type: string
                comments:
                  description: Comments (inet, may span multiple lines)
                  type: string
                comments6:
                  description: Comments (inet5, may span multiple lines)
                  type: string
                gateway:
                  description: IPv4 address.
                  maxLength: 15
                  pattern: ^(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))$
                  type: string
                gateway6:
                  description: IPv6 address.
                  maxLength: 39
                  pattern: ^(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::)))$
                  type: string
                iface:
                  description: Network interface name.
                  maxLength: 15
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                method:
                  description: Interface configuration method
                  enum:
                  - manual
                  - static
                  - dhcp
                  - loopback
                  type: string
                method6:
                  description: Interface configuration method
                  enum:
                  - manual
                  - static
                  - dhcp
                  - loopback
                  type: string
                mtu:
                  default: 1500
                  description: Maximum Transmission Unit.
                  maximum: 65535
                  minimum: 46
                  type: integer
                slaves:
                  description: A list of network devices, comma separated.
                  type: string
                type:
                  description: Network interface type
                  enum:
                  - loopback
                  - eth
                  - bridge
                  - bond
                  - vlan
                  - alias
                  - unknown
                  type: string
                vlan-id:
                  description: VLAN ID.
                  type: integer
                vlan-raw-device:
                  description: Network interface name.
                  maxLength: 15
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - iface
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create network interface configuration.
      tags:
      - Nodes
    put:
      description: Reload network configuration (requires ifupdown2).
      operationId: put_nodes_nodes_node_nodes_node_network
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reload network configuration (requires ifupdown2).
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/network/nodes/{node}/network/{iface}:
    delete:
      description: Remove network interface configuration.
      operationId: delete_nodes_nodes_node_nodes_node_network_nodes_node_network_iface
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iface parameter
        in: path
        name: iface
        required: true
        schema:
          description: The iface parameter
          type: string
      - description: Prevent changes if current configuration file has different SHA256
          digest. This can be used to prevent concurrent modifications.
        in: query
        name: digest
        required: false
        schema:
          description: Prevent changes if current configuration file has different
            SHA256 digest. This can be used to prevent concurrent modifications.
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Remove network interface configuration.
      tags:
      - Nodes
    get:
      description: Read a network interface configuration.
      operationId: get_nodes_nodes_node_nodes_node_network_nodes_node_network_iface
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iface parameter
        in: path
        name: iface
        required: true
        schema:
          description: The iface parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Network Interface configuration
                properties:
                  active:
                    description: Interface is active (UP)
                    type: boolean
                  autostart:
                    description: Autostart interface
                    type: boolean
                  bond-primary:
                    description: Network interface name.
                    type: string
                  bond_mode:
                    description: Linux Bond Mode
                    type: string
                  bond_xmit_hash_policy:
                    description: Bond Transmit Hash Policy for LACP (802.3ad)
                    type: string
                  bridge_ports:
                    description: Network interface list.
                    items:
                      description: Network interface name.
                      type: string
                    type: array
                  bridge_vlan_aware:
                    description: Enable bridge vlan support.
                    type: boolean
                  cidr:
                    description: IPv4 address with netmask (CIDR notation).
                    type: string
                  cidr6:
                    description: IPv6 address with netmask (CIDR notation).
                    type: string
                  comments:
                    description: Comments (inet, may span multiple lines)
                    type: string
                  comments6:
                    description: Comments (inet6, may span multiple lines)
                    type: string
                  gateway:
                    description: IPv4 address.
                    type: string
                  gateway6:
                    description: IPv6 address.
                    type: string
                  method:
                    description: Interface configuration method
                    type: string
                  method6:
                    description: Interface configuration method
                    type: string
                  mtu:
                    description: Maximum Transmission Unit
                    type: integer
                  name:
                    description: Network interface name.
                    type: string
                  options:
                    description: Option list (inet)
                    items:
                      description: Optional attribute line.
                      type: string
                    type: array
                  options6:
                    description: Option list (inet6)
                    items:
                      description: Optional attribute line.
                      type: string
                    type: array
                  slaves:
                    description: Network interface list.
                    items:
                      description: Network interface name.
                      type: string
                    type: array
                  type:
                    description: Network interface type
                    type: string
                  vlan-id:
                    description: VLAN ID.
                    type: integer
                  vlan-raw-device:
                    description: Network interface name.
                    type: string
                type: object
          description: Network Interface configuration
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read a network interface configuration.
      tags:
      - Nodes
    put:
      description: Update network interface config.
      operationId: put_nodes_nodes_node_nodes_node_network_nodes_node_network_iface
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The iface parameter
        in: path
        name: iface
        required: true
        schema:
          description: The iface parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                autostart:
                  description: Autostart interface.
                  type: boolean
                bond-primary:
                  description: Network interface name.
                  maxLength: 15
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                bond_mode:
                  description: Linux Bond Mode
                  enum:
                  - balance-rr
                  - active-backup
                  - balance-xor
                  - broadcast
                  - 802.3ad
                  - balance-tlb
                  - balance-alb
                  type: string
                bond_xmit_hash_policy:
                  description: Bond Transmit Hash Policy for LACP (802.3ad)
                  enum:
                  - layer2
                  - layer2+3
                  - layer3+4
                  type: string
                bridge_ports:
                  description: A list of network devices, comma separated.
                  type: string
                bridge_vlan_aware:
                  description: Enable bridge vlan support.
                  type: boolean
                cidr:
                  description: IPv4 address with netmask (CIDR notation).
                  maxLength: 18
                  pattern: ^(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))/\d{1,2})$$
                  type: string
                cidr6:
                  description: IPv6 address with netmask (CIDR notation).
                  maxLength: 43
                  pattern: ^(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::)))/\d{1,3})$$
                  type: string
                comments:
                  description: Comments (inet, may span multiple lines)
                  type: string
                comments6:
                  description: Comments (inet5, may span multiple lines)
                  type: string
                delete:
                  description: List of properties to delete.
                  items:
                    type: string
                  type: array
                digest:
                  description: Prevent changes if current configuration file has different
                    SHA256 digest. This can be used to prevent concurrent modifications.
                  pattern: ^[a-f0-9]{64}$
                  type: string
                gateway:
                  description: IPv4 address.
                  maxLength: 15
                  pattern: ^(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))$
                  type: string
                gateway6:
                  description: IPv6 address.
                  maxLength: 39
                  pattern: ^(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){6})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:::(?:(?:[0-9a-fA-F]{1,4}):){5})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){4})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,1}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){3})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,2}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){2})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,3}(?:[0-9a-fA-F]{1,4}))?::(?:(?:[0-9a-fA-F]{1,4}):){1})(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,4}(?:[0-9a-fA-F]{1,4}))?::)(?:(?:(?:(?:(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9])\.){3}(?:25[0-5]|(?:2[0-4]|1[0-9]|[1-9])?[0-9]))|(?:[0-9a-fA-F]{1,4}):(?:[0-9a-fA-F]{1,4}))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,5}(?:[0-9a-fA-F]{1,4}))?::)(?:[0-9a-fA-F]{1,4}))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4}):){0,6}(?:[0-9a-fA-F]{1,4}))?::)))$
                  type: string
                method:
                  description: Interface configuration method
                  enum:
                  - manual
                  - static
                  - dhcp
                  - loopback
                  type: string
                method6:
                  description: Interface configuration method
                  enum:
                  - manual
                  - static
                  - dhcp
                  - loopback
                  type: string
                mtu:
                  default: 1500
                  description: Maximum Transmission Unit.
                  maximum: 65535
                  minimum: 46
                  type: integer
                slaves:
                  description: A list of network devices, comma separated.
                  type: string
                type:
                  description: Network interface type
                  enum:
                  - loopback
                  - eth
                  - bridge
                  - bond
                  - vlan
                  - alias
                  - unknown
                  type: string
                vlan-id:
                  description: VLAN ID.
                  type: integer
                vlan-raw-device:
                  description: Network interface name.
                  maxLength: 15
                  minLength: 1
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Update network interface config.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/report:
    get:
      description: Generate a report
      operationId: get_nodes_nodes_node_nodes_node_report
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns report of the node
                type: string
          description: Returns report of the node
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Generate a report
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/rrd:
    get:
      description: Read node stats
      operationId: get_nodes_nodes_node_nodes_node_rrd
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: RRD consolidation mode
        in: query
        name: cf
        required: true
        schema:
          description: RRD consolidation mode
          enum:
          - MAX
          - AVERAGE
          type: string
      - description: RRD time frame
        in: query
        name: timeframe
        required: true
        schema:
          description: RRD time frame
          enum:
          - hour
          - day
          - week
          - month
          - year
          - decade
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read node stats
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services:
    get:
      description: Service list.
      operationId: get_nodes_nodes_node_nodes_node_services
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns a list of systemd services.
                items:
                  description: Service details.
                  properties:
                    desc:
                      description: systemd service description.
                      type: string
                    name:
                      description: systemd service name.
                      type: string
                    service:
                      description: Service ID.
                      type: string
                    state:
                      description: systemd service 'SubState'.
                      type: string
                    unit-state:
                      description: systemd service unit state.
                      type: string
                  type: object
                type: array
          description: Returns a list of systemd services.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Service list.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}:
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_services_nodes_node_services_service
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/reload:
    post:
      description: Reload service.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_reload
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reload service.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/restart:
    post:
      description: Restart service.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_restart
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Restart service.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/start:
    post:
      description: Start service.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_start
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Start service.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/state:
    get:
      description: Read service properties.
      operationId: get_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_state
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read service properties.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/services/nodes/{node}/services/{service}/nodes/{node}/services/{service}/stop:
    post:
      description: Stop service.
      operationId: post_nodes_nodes_node_nodes_node_services_nodes_node_services_service_nodes_node_services_service_stop
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The service parameter
        in: path
        name: service
        required: true
        schema:
          description: The service parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Stop service.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/status:
    get:
      description: Read node memory, CPU and (root) disk usage
      operationId: get_nodes_nodes_node_nodes_node_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The Node status
                properties:
                  boot-info:
                    description: Holds the Bootmodes
                    properties:
                      mode:
                        description: The possible BootModes
                        type: string
                      secureboot:
                        description: SecureBoot status
                        type: boolean
                    type: object
                  cpu:
                    description: Total CPU usage since last query.
                    type: number
                  cpuinfo:
                    description: Information about the CPU
                    properties:
                      cpus:
                        description: The number of CPU cores (incl. threads)
                        type: integer
                      model:
                        description: The CPU model
                        type: string
                      sockets:
                        description: The number of CPU sockets
                        type: integer
                    type: object
                  current-kernel:
                    description: The current kernel version (output of `uname`)
                    properties:
                      machine:
                        description: The machine architecture
                        type: string
                      release:
                        description: The kernel release number
                        type: string
                      sysname:
                        description: The systemname/nodename
                        type: string
                      version:
                        description: The kernel version
                        type: string
                    type: object
                  info:
                    description: Contains general node information such as the fingerprint`
                    properties:
                      fingerprint:
                        description: The SSL Fingerprint
                        type: string
                    type: object
                  kversion:
                    description: The current kernel version (LEGACY string type).
                    type: string
                  loadavg:
                    description: Load for 1, 5 and 15 minutes.
                    items:
                      description: the load
                      type: number
                    type: array
                  memory:
                    description: Node memory usage counters
                    properties:
                      free:
                        description: Free memory
                        type: integer
                      total:
                        description: Total memory
                        type: integer
                      used:
                        description: Used memory
                        type: integer
                    type: object
                  root:
                    description: Storage space usage information.
                    properties:
                      avail:
                        description: Available space (bytes).
                        type: integer
                      total:
                        description: Total space (bytes).
                        type: integer
                      used:
                        description: Used space (bytes).
                        type: integer
                    type: object
                  swap:
                    description: Node swap usage counters
                    properties:
                      free:
                        description: Free swap
                        type: integer
                      total:
                        description: Total swap
                        type: integer
                      used:
                        description: Used swap
                        type: integer
                    type: object
                  uptime:
                    description: The current uptime of the server.
                    type: integer
                  wait:
                    description: Total IO wait since last query.
                    type: number
                type: object
          description: The Node status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read node memory, CPU and (root) disk usage
      tags:
      - Nodes
    post:
      description: Reboot or shutdown the node.
      operationId: post_nodes_nodes_node_nodes_node_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                command:
                  description: Node Power command type.
                  enum:
                  - reboot
                  - shutdown
                  type: string
              required:
              - command
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Reboot or shutdown the node.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/subscription:
    delete:
      description: Delete subscription info.
      operationId: delete_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Delete subscription info.
      tags:
      - Nodes
    get:
      description: Read subscription info.
      operationId: get_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Proxmox subscription information
                properties:
                  checktime:
                    description: timestamp of the last check done
                    type: integer
                  key:
                    description: the subscription key, if set and permitted to access
                    type: string
                  message:
                    description: a more human readable status message
                    type: string
                  nextduedate:
                    description: next due date of the set subscription
                    type: string
                  productname:
                    description: human readable productname of the set subscription
                    type: string
                  regdate:
                    description: register date of the set subscription
                    type: string
                  serverid:
                    description: the server ID, if permitted to access
                    type: string
                  signature:
                    description: Signature for offline keys
                    type: string
                  status:
                    description: Subscription status
                    type: string
                  url:
                    description: URL to the web shop
                    type: string
                type: object
          description: Proxmox subscription information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read subscription info.
      tags:
      - Nodes
    post:
      description: Check and update subscription status.
      operationId: post_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  default: false
                  description: Always connect to server, even if information in cache
                    is up to date.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Check and update subscription status.
      tags:
      - Nodes
    put:
      description: Set a subscription key and check it.
      operationId: put_nodes_nodes_node_nodes_node_subscription
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: Proxmox Backup Server subscription key.
                  maxLength: 16
                  minLength: 15
                  pattern: ^pbs(?:[cbsp])-[0-9a-f]{10}$
                  type: string
              required:
              - key
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set a subscription key and check it.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/syslog:
    get:
      description: Read syslog entries.
      operationId: get_nodes_nodes_node_nodes_node_syslog
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Max. number of lines.
        in: query
        name: limit
        required: false
        schema:
          description: Max. number of lines.
          minimum: 0
          type: integer
      - description: Service ID.
        in: query
        name: service
        required: false
        schema:
          description: Service ID.
          maxLength: 128
          type: string
      - description: Display all log since this date-time string.
        in: query
        name: since
        required: false
        schema:
          description: Display all log since this date-time string.
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
      - description: Start line number.
        in: query
        name: start
        required: false
        schema:
          description: Start line number.
          minimum: 0
          type: integer
      - description: Display all log until this date-time string.
        in: query
        name: until
        required: false
        schema:
          description: Display all log until this date-time string.
          pattern: ^\d{4}-\d{2}-\d{2}( \d{2}:\d{2}(:\d{2})?)?$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns a list of syslog entries.
                items:
                  description: Syslog line with line number.
                  properties:
                    n:
                      description: Line number.
                      type: integer
                    t:
                      description: Line text.
                      type: string
                  type: object
                type: array
          description: Returns a list of syslog entries.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read syslog entries.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/tasks:
    get:
      description: List tasks.
      operationId: get_nodes_nodes_node_nodes_node_tasks
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Only list erroneous tasks.
        in: query
        name: errors
        required: false
        schema:
          default: false
          description: Only list erroneous tasks.
          type: boolean
      - description: Only list this amount of tasks. (0 means no limit)
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: Only list this amount of tasks. (0 means no limit)
          type: integer
      - description: Only list running tasks.
        in: query
        name: running
        required: false
        schema:
          default: false
          description: Only list running tasks.
          type: boolean
      - description: Only list tasks since this UNIX epoch.
        in: query
        name: since
        required: false
        schema:
          description: Only list tasks since this UNIX epoch.
          type: integer
      - description: List tasks beginning from this offset.
        in: query
        name: start
        required: false
        schema:
          default: 0
          description: List tasks beginning from this offset.
          type: integer
      - description: Only list tasks which have any one of the listed status.
        in: query
        name: statusfilter
        required: false
        schema:
          description: Only list tasks which have any one of the listed status.
          items:
            type: string
          type: array
      - description: Datastore name.
        in: query
        name: store
        required: false
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Only list tasks whose type contains this.
        in: query
        name: typefilter
        required: false
        schema:
          description: Only list tasks whose type contains this.
          type: string
      - description: Only list tasks until this UNIX epoch.
        in: query
        name: until
        required: false
        schema:
          description: Only list tasks until this UNIX epoch.
          type: integer
      - description: Only list tasks from this user.
        in: query
        name: userfilter
        required: false
        schema:
          description: Only list tasks from this user.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list of tasks.
                items:
                  description: Task properties.
                  properties:
                    endtime:
                      description: The task end time (Epoch)
                      type: integer
                    node:
                      description: The node name where the task is running on.
                      type: string
                    pid:
                      description: The Unix PID
                      type: integer
                    pstart:
                      description: The task start time (Epoch)
                      type: integer
                    starttime:
                      description: The task start time (Epoch)
                      type: integer
                    status:
                      description: Task end status
                      type: string
                    upid:
                      description: Unique Process/Task Identifier
                      type: string
                    user:
                      description: The authenticated entity who started the task
                      type: string
                    worker_id:
                      description: Worker ID (arbitrary ASCII string)
                      type: string
                    worker_type:
                      description: Worker type (arbitrary ASCII string)
                      type: string
                  type: object
                type: array
          description: A list of tasks.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List tasks.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}:
    delete:
      description: Try to stop a task.
      operationId: delete_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Try to stop a task.
      tags:
      - Nodes
    get:
      description: Directory index.
      operationId: get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}/nodes/{node}/tasks/{upid}/log:
    get:
      description: Read the task log
      operationId: get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid_nodes_node_tasks_upid_log
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      - description: Whether the tasklog file should be downloaded. This parameter
          can't be used in conjunction with other parameters
        in: query
        name: download
        required: false
        schema:
          default: false
          description: Whether the tasklog file should be downloaded. This parameter
            can't be used in conjunction with other parameters
          type: boolean
      - description: The amount of lines to read from the tasklog. Setting this parameter
          to 0 will return all lines until the end of the file.
        in: query
        name: limit
        required: false
        schema:
          default: 50
          description: The amount of lines to read from the tasklog. Setting this
            parameter to 0 will return all lines until the end of the file.
          minimum: 0
          type: integer
      - description: Start at this line when reading the tasklog
        in: query
        name: start
        required: false
        schema:
          default: 0
          description: Start at this line when reading the tasklog
          minimum: 0
          type: integer
      - description: Test task status, and set result attribute "active" accordingly.
        in: query
        name: test-status
        required: false
        schema:
          description: Test task status, and set result attribute "active" accordingly.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read the task log
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/tasks/nodes/{node}/tasks/{upid}/nodes/{node}/tasks/{upid}/status:
    get:
      description: Get task status.
      operationId: get_nodes_nodes_node_nodes_node_tasks_nodes_node_tasks_upid_nodes_node_tasks_upid_status
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: The upid parameter
        in: path
        name: upid
        required: true
        schema:
          description: The upid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Task status information.
                properties:
                  exitstatus:
                    description: '''OK'', ''Error: <msg>'', or ''unknown''.'
                    type: string
                  id:
                    description: Worker ID (arbitrary ASCII string)
                    type: string
                  node:
                    description: Node name (or 'localhost')
                    type: string
                  pid:
                    description: The Unix PID.
                    type: integer
                  pstart:
                    description: The Unix process start time from `/proc/pid/stat`
                    type: integer
                  starttime:
                    description: The task start time (Epoch)
                    type: integer
                  status:
                    description: '''running'' or ''stopped'''
                    type: string
                  tokenid:
                    description: 'The token ID part of an API token authentication
                      id.


                      This alone does NOT uniquely identify the API token - use a
                      full `Authid` for such use cases.'
                    type: string
                  type:
                    description: Worker type (arbitrary ASCII string)
                    type: string
                  upid:
                    description: Unique Process/Task Identifier
                    type: string
                  user:
                    description: User ID
                    type: string
                type: object
          description: Task status information.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get task status.
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/termproxy:
    post:
      description: Call termproxy and return shell ticket
      operationId: post_nodes_nodes_node_nodes_node_termproxy
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cmd:
                  description: The command to run.
                  enum:
                  - login
                  - upgrade
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Object with the user, ticket, port and upid
                properties:
                  port:
                    description: ''
                    type: string
                  ticket:
                    description: ''
                    type: string
                  upid:
                    description: ''
                    type: string
                  user:
                    description: ''
                    type: string
                type: object
          description: Object with the user, ticket, port and upid
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Call termproxy and return shell ticket
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/time:
    get:
      description: Read server time and time zone settings.
      operationId: get_nodes_nodes_node_nodes_node_time
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Returns server time and timezone.
                properties:
                  localtime:
                    description: Seconds since 1970-01-01 00:00:00 UTC. (local time)
                    type: integer
                  time:
                    description: Seconds since 1970-01-01 00:00:00 UTC.
                    type: integer
                  timezone:
                    description: Time zone. The file '/usr/share/zoneinfo/zone.tab'
                      contains the list of valid names.
                    type: string
                type: object
          description: Returns server time and timezone.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read server time and time zone settings.
      tags:
      - Nodes
    put:
      description: Set time zone
      operationId: put_nodes_nodes_node_nodes_node_time
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                timezone:
                  description: Time zone. The file '/usr/share/zoneinfo/zone.tab'
                    contains the list of valid names.
                  maxLength: 64
                  minLength: 2
                  pattern: ^[[:^cntrl:]]*$
                  type: string
              required:
              - timezone
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Set time zone
      tags:
      - Nodes
  //nodes/nodes/{node}/nodes/{node}/vncwebsocket:
    get:
      description: Upgraded to websocket
      operationId: get_nodes_nodes_node_nodes_node_vncwebsocket
      parameters:
      - description: The node parameter
        in: path
        name: node
        required: true
        schema:
          $ref: '#/components/schemas/ProxmoxNodeId'
      - description: Terminal port
        in: query
        name: port
        required: true
        schema:
          description: Terminal port
          type: integer
      - description: Terminal ticket
        in: query
        name: vncticket
        required: true
        schema:
          description: Terminal ticket
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upgraded to websocket
      tags:
      - Nodes
  //ping:
    get:
      description: 'Dummy method which replies with `{ "pong": True }`'
      operationId: get_ping
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Dummy ping
                properties:
                  pong:
                    description: Always true
                    type: boolean
                type: object
          description: Dummy ping
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Dummy method which replies with `{ "pong": True }`'
      tags:
      - Ping
  //pull:
    post:
      description: Sync store from other repository
      operationId: post_pull
      requestBody:
        content:
          application/json:
            schema:
              properties:
                burst-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                burst-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                encrypted-only:
                  description: Only synchronize encrypted backup snapshots, exclude
                    others.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                rate-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                rate-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                remote:
                  description: Remote ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remote-ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                remote-store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remove-vanished:
                  default: false
                  description: Delete vanished backups. This remove the local copy
                    if the remote backup was deleted.
                  type: boolean
                resync-corrupt:
                  description: If the verification failed for a local snapshot, try
                    to pull it again.
                  type: boolean
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                transfer-last:
                  description: Limit transfer to last N snapshots (per group), skipping
                    others
                  minimum: 1
                  type: integer
                verified-only:
                  description: Only synchronize verified backup snapshots, exclude
                    others.
                  type: boolean
              required:
              - remote-store
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Sync store from other repository
      tags:
      - Pull
  //push:
    post:
      description: Push store to other repository
      operationId: post_push
      requestBody:
        content:
          application/json:
            schema:
              properties:
                burst-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                burst-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                encrypted-only:
                  description: Only synchronize encrypted backup snapshots, exclude
                    others.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                max-depth:
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion, empty == automatic full recursion, namespace
                    depths reduce maximum allowed value)
                  maximum: 7
                  minimum: 0
                  type: integer
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                rate-in:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                rate-out:
                  description: Byte size with optional unit (B, KB (base 10), MB,
                    GB, ..., KiB (base 2), MiB, Gib, ...).
                  maxLength: 64
                  minLength: 1
                  type: string
                remote:
                  description: Remote ID.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remote-ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                remote-store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                remove-vanished:
                  default: false
                  description: Delete vanished backups. This remove the local copy
                    if the remote backup was deleted.
                  type: boolean
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                transfer-last:
                  description: Limit transfer to last N snapshots (per group), skipping
                    others
                  minimum: 1
                  type: integer
                verified-only:
                  description: Only synchronize verified backup snapshots, exclude
                    others.
                  type: boolean
              required:
              - remote
              - remote-store
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Push store to other repository
      tags:
      - Push
  //reader:
    get:
      description: Upgraded to backup protocol ('proxmox-backup-reader-protocol-v1').
      operationId: get_reader
      parameters:
      - description: Backup ID.
        in: query
        name: backup-id
        required: true
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup time (Unix epoch.)
        in: query
        name: backup-time
        required: true
        schema:
          description: Backup time (Unix epoch.)
          minimum: 1
          type: integer
      - description: Backup type.
        in: query
        name: backup-type
        required: true
        schema:
          description: Backup type.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Enable verbose debug logging.
        in: query
        name: debug
        required: false
        schema:
          description: Enable verbose debug logging.
          type: boolean
      - description: Namespace.
        in: query
        name: ns
        required: false
        schema:
          description: Namespace.
          maxLength: 256
          pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
          type: string
      - description: Datastore name.
        in: query
        name: store
        required: true
        schema:
          description: Datastore name.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upgraded to backup protocol ('proxmox-backup-reader-protocol-v1').
      tags:
      - Reader
  //status:
    get:
      description: Directory index.
      operationId: get_status
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Status & Monitoring
  //status/status/datastore-usage:
    get:
      description: List Datastore usages and estimates
      operationId: get_status_status_datastore-usage
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Lists the Status of the Datastores.
                items:
                  description: Status of a Datastore
                  properties:
                    avail:
                      description: The available bytes of the underlying storage.
                        (-1 on error)
                      type: integer
                    error:
                      description: An error description, for example, when the datastore
                        could not be looked up
                      type: string
                    estimated-full-date:
                      description: 'Estimation of the UNIX epoch when the storage
                        will be full.

                        It''s calculated via a simple Linear Regression (Least Squares)
                        over the RRD data of the

                        last Month. Missing if not enough data points are available
                        yet. An estimate in the past

                        means that usage is declining or not changing.'
                      type: integer
                    gc-status:
                      description: Garbage collection status.
                      properties:
                        disk-bytes:
                          description: Bytes used on disk.
                          type: integer
                        disk-chunks:
                          description: Chunks used on disk.
                          type: integer
                        index-data-bytes:
                          description: Sum of bytes referred by index files.
                          type: integer
                        index-file-count:
                          description: Number of processed index files.
                          type: integer
                        pending-bytes:
                          description: Sum of pending bytes (pending removal - kept
                            for safety).
                          type: integer
                        pending-chunks:
                          description: Number of pending chunks (pending removal -
                            kept for safety).
                          type: integer
                        removed-bad:
                          description: Number of chunks marked as .bad by verify that
                            have been removed by GC.
                          type: integer
                        removed-bytes:
                          description: Sum of removed bytes.
                          type: integer
                        removed-chunks:
                          description: Number of removed chunks.
                          type: integer
                        still-bad:
                          description: Number of chunks still marked as .bad after
                            garbage collection.
                          type: integer
                        upid:
                          description: Unique Process/Task Identifier
                          type: string
                      type: object
                    history:
                      description: A list of usages of the past (last Month).
                      items:
                        description: The usage of a time in the past. Either null
                          or between 0.0 and 1.0.
                        type: number
                      type: array
                    history-delta:
                      description: History resolution (seconds)
                      type: integer
                    history-start:
                      description: History start time (epoch)
                      type: integer
                    mount-status:
                      description: Current mounting status of a datastore, useful
                        for removable datastores.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                    total:
                      description: The Size of the underlying storage in bytes.
                      type: integer
                    used:
                      description: The used bytes of the underlying storage.
                      type: integer
                  type: object
                type: array
          description: Lists the Status of the Datastores.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List Datastore usages and estimates
      tags:
      - Status & Monitoring
  //status/status/metrics:
    get:
      description: Return backup server metrics.
      operationId: get_status_status_metrics
      parameters:
      - description: Include historic values (last 30 minutes)
        in: query
        name: history
        required: false
        schema:
          default: false
          description: Include historic values (last 30 minutes)
          type: boolean
      - description: Only return values with a timestamp > start-time. Only has an
          effect if 'history' is also set
        in: query
        name: start-time
        required: false
        schema:
          default: 0
          description: Only return values with a timestamp > start-time. Only has
            an effect if 'history' is also set
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Return backup server metrics.
      tags:
      - Status & Monitoring
  //tape:
    get:
      description: Directory index.
      operationId: get_tape
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Tape
  //tape/tape/backup:
    get:
      description: List all tape backup jobs
      operationId: get_tape_tape_backup
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List configured thape backup jobs and their status
                items:
                  description: Status of Tape Backup Job
                  properties:
                    comment:
                      description: Comment.
                      type: string
                    drive:
                      description: Drive Identifier.
                      type: string
                    eject-media:
                      description: Eject media upon job completion.
                      type: boolean
                    export-media-set:
                      description: Export media set upon job completion.
                      type: boolean
                    group-filter:
                      description: List of group filters.
                      items:
                        description: Group filter based on group identifier ('group:GROUP'),
                          group type ('type:<vm|ct|host>'), or regex ('regex:RE').
                          Can be inverted by prepending 'exclude:'.
                        type: string
                      type: array
                    id:
                      description: Job ID.
                      type: string
                    last-run-endtime:
                      description: Endtime of the last run.
                      type: integer
                    last-run-state:
                      description: Result of the last run.
                      type: string
                    last-run-upid:
                      description: Task UPID of the last run.
                      type: string
                    latest-only:
                      description: Backup latest snapshots only.
                      type: boolean
                    max-depth:
                      description: How many levels of namespaces should be operated
                        on (0 == no recursion)
                      type: integer
                    next-media-label:
                      description: Next tape used (best guess)
                      type: string
                    next-run:
                      description: Estimated time of the next run (UNIX epoch).
                      type: integer
                    notification-mode:
                      description: 'Configure how notifications for this datastore
                        should be sent.

                        `legacy-sendmail` sends email notifications to the user configured

                        in `notify-user` via the system''s `sendmail` executable.

                        `notification-system` emits matchable notification events
                        to the

                        notification system.'
                      type: string
                    notify-user:
                      description: User ID
                      type: string
                    ns:
                      description: Namespace.
                      type: string
                    pool:
                      description: Media pool name.
                      type: string
                    schedule:
                      description: Run sync job at specified schedule.
                      type: string
                    store:
                      description: Datastore name.
                      type: string
                    worker-threads:
                      description: Set the number of worker threads to use for the
                        job
                      type: integer
                  type: object
                type: array
          description: List configured thape backup jobs and their status
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List all tape backup jobs
      tags:
      - Tape
    post:
      description: Backup datastore to tape media pool
      operationId: post_tape_tape_backup
      requestBody:
        content:
          application/json:
            schema:
              properties:
                drive:
                  description: Drive Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                eject-media:
                  description: Eject media upon job completion.
                  type: boolean
                export-media-set:
                  description: Export media set upon job completion.
                  type: boolean
                force-media-set:
                  default: false
                  description: Ignore the allocation policy and start a new media-set.
                  type: boolean
                group-filter:
                  description: List of group filters.
                  items:
                    type: string
                  type: array
                latest-only:
                  description: Backup latest snapshots only.
                  type: boolean
                max-depth:
                  default: 7
                  description: How many levels of namespaces should be operated on
                    (0 == no recursion)
                  maximum: 7
                  minimum: 0
                  type: integer
                notification-mode:
                  default: legacy-sendmail
                  description: 'Configure how notifications for this datastore should
                    be sent.

                    `legacy-sendmail` sends email notifications to the user configured

                    in `notify-user` via the system''s `sendmail` executable.

                    `notification-system` emits matchable notification events to the

                    notification system.'
                  enum:
                  - legacy-sendmail
                  - notification-system
                  type: string
                notify-user:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                ns:
                  description: Namespace.
                  maxLength: 256
                  pattern: ^(?:(?:(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)/){0,7}(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))?$
                  type: string
                pool:
                  description: Media pool name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                store:
                  description: Datastore name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                worker-threads:
                  default: 1
                  description: Set the number of worker threads to use for the job
                  maximum: 32
                  minimum: 1
                  type: integer
              required:
              - drive
              - pool
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Backup datastore to tape media pool
      tags:
      - Tape
  //tape/tape/backup/tape/backup/{id}:
    post:
      description: Runs a tape backup job manually.
      operationId: post_tape_tape_backup_tape_backup_id
      parameters:
      - description: The id parameter
        in: path
        name: id
        required: true
        schema:
          description: The id parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Runs a tape backup job manually.
      tags:
      - Tape
  //tape/tape/changer:
    get:
      description: List changers
      operationId: get_tape_tape_changer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured changers with model information.
                items:
                  description: Changer config with optional device identification
                    attributes
                  properties:
                    eject-before-unload:
                      description: if set to true, tapes are ejected manually before
                        unloading
                      type: boolean
                    export-slots:
                      description: 'A list of slot numbers, comma separated. Those
                        slots are reserved for

                        Import/Export, i.e. any media in those slots are considered
                        to be

                        ''offline''.

                        '
                      type: string
                    model:
                      description: Model (autodetected)
                      type: string
                    name:
                      description: Tape Changer Identifier.
                      type: string
                    path:
                      description: Path to Linux generic SCSI device (e.g. '/dev/sg4')
                      type: string
                    serial:
                      description: Serial number (autodetected)
                      type: string
                    vendor:
                      description: Vendor (autodetected)
                      type: string
                  type: object
                type: array
          description: The list of configured changers with model information.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List changers
      tags:
      - Tape
  //tape/tape/changer/tape/changer/{name}:
    get:
      description: Directory index.
      operationId: get_tape_tape_changer_tape_changer_name
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Tape
  //tape/tape/changer/tape/changer/{name}/tape/changer/{name}/status:
    get:
      description: Get tape changer status
      operationId: get_tape_tape_changer_tape_changer_name_tape_changer_name_status
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      - description: Use cached value.
        in: query
        name: cache
        required: false
        schema:
          default: true
          description: Use cached value.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A status entry for each drive and slot.
                items:
                  description: Mtx Status Entry
                  properties:
                    entry-id:
                      description: The ID of the slot or drive
                      type: integer
                    entry-kind:
                      description: Mtx Entry Kind
                      type: string
                    label-text:
                      description: Media Label/Barcode.
                      type: string
                    loaded-slot:
                      description: The slot the drive was loaded from
                      type: integer
                    state:
                      description: The current state of the drive
                      type: string
                  type: object
                type: array
          description: A status entry for each drive and slot.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get tape changer status
      tags:
      - Tape
  //tape/tape/changer/tape/changer/{name}/tape/changer/{name}/transfer:
    post:
      description: Transfers media from one slot to another
      operationId: post_tape_tape_changer_tape_changer_name_tape_changer_name_transfer
      parameters:
      - description: The name parameter
        in: path
        name: name
        required: true
        schema:
          description: The name parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                from:
                  description: Source slot number
                  minimum: 1
                  type: integer
                to:
                  description: Destination slot number
                  minimum: 1
                  type: integer
              required:
              - from
              - to
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Transfers media from one slot to another
      tags:
      - Tape
  //tape/tape/drive:
    get:
      description: List drives
      operationId: get_tape_tape_drive
      parameters:
      - description: Tape Changer Identifier.
        in: query
        name: changer
        required: false
        schema:
          description: Tape Changer Identifier.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: If true, queries and returns the drive activity for each drive.
        in: query
        name: query-activity
        required: false
        schema:
          default: false
          description: If true, queries and returns the drive activity for each drive.
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of configured drives with model information.
                items:
                  description: Drive list entry
                  properties:
                    activity:
                      description: The DT Device Activity from DT Device Status LP
                        page
                      type: string
                    changer:
                      description: Tape Changer Identifier.
                      type: string
                    changer-drivenum:
                      description: Associated changer drive number (requires option
                        changer)
                      type: integer
                    model:
                      description: Model (autodetected)
                      type: string
                    name:
                      description: Drive Identifier.
                      type: string
                    path:
                      description: The path to a LTO SCSI-generic tape device (i.e.
                        '/dev/sg0')
                      type: string
                    serial:
                      description: Serial number (autodetected)
                      type: string
                    state:
                      description: the state of the drive if locked
                      type: string
                    vendor:
                      description: Vendor (autodetected)
                      type: string
                  type: object
                type: array
          description: The list of configured drives with model information.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List drives
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}:
    get:
      description: Directory index.
      operationId: get_tape_tape_drive_tape_drive_drive
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/barcode-label-media:
    post:
      description: Label media with barcodes from changer device
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_barcode-label-media
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pool:
                  description: Media pool name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Label media with barcodes from changer device
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/cartridge-memory:
    get:
      description: Read Cartridge Memory (Medium auxiliary memory attributes)
      operationId: get_tape_tape_drive_tape_drive_drive_tape_drive_drive_cartridge-memory
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A List of medium auxiliary memory attributes.
                items:
                  description: Medium auxiliary memory attributes (MAM)
                  properties:
                    id:
                      description: Attribute id
                      type: integer
                    name:
                      description: Attribute name
                      type: string
                    value:
                      description: Attribute value
                      type: string
                  type: object
                type: array
          description: A List of medium auxiliary memory attributes.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read Cartridge Memory (Medium auxiliary memory attributes)
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/catalog:
    post:
      description: Scan media and record content
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_catalog
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                force:
                  description: Force overriding existing index.
                  type: boolean
                scan:
                  description: Re-read the whole tape to reconstruct the catalog instead
                    of restoring saved versions.
                  type: boolean
                verbose:
                  description: Verbose mode - log all found chunks.
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan media and record content
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/clean:
    put:
      description: Clean drive
      operationId: put_tape_tape_drive_tape_drive_drive_tape_drive_drive_clean
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Clean drive
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/eject-media:
    post:
      description: Eject/Unload drive media
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_eject-media
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Eject/Unload drive media
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/export-media:
    put:
      description: Export media with specified label
      operationId: put_tape_tape_drive_tape_drive_drive_tape_drive_drive_export-media
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label-text:
                  description: Media Label/Barcode.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - label-text
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The import-export slot number the media was transferred
                  to.
                type: integer
          description: The import-export slot number the media was transferred to.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Export media with specified label
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/format-media:
    post:
      description: Format media. Check for label-text if given (cancels if wrong media).
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_format-media
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                fast:
                  default: true
                  description: Use fast erase.
                  type: boolean
                label-text:
                  description: Media Label/Barcode.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Format media. Check for label-text if given (cancels if wrong media).
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/inventory:
    get:
      description: 'List known media labels (Changer Inventory)


        Note: Only useful for drives with associated changer device.


        This method queries the changer to get a list of media labels.


        Note: This updates the media online status.'
      operationId: get_tape_tape_drive_tape_drive_drive_tape_drive_drive_inventory
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of media labels with associated media Uuid (if
                  any).
                items:
                  description: Label with optional Uuid
                  properties:
                    label-text:
                      description: Changer label text (or Barcode)
                      type: string
                    uuid:
                      description: Media Uuid.
                      type: string
                  type: object
                type: array
          description: The list of media labels with associated media Uuid (if any).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'List known media labels (Changer Inventory)


        Note: Only useful for drives with associated changer device.


        This method queries the changer to get a list of media labels.


        Note: This updates the media online status.'
      tags:
      - Tape
    put:
      description: 'Update inventory


        Note: Only useful for drives with associated changer device.


        This method queries the changer to get a list of media labels. It

        then loads any unknown media into the drive, reads the label, and

        store the result to the media database.


        If `catalog` is true, also tries to restore the catalog from tape.


        Note: This updates the media online status.'
      operationId: put_tape_tape_drive_tape_drive_drive_tape_drive_drive_inventory
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                catalog:
                  default: false
                  description: Restore the catalog from tape.
                  type: boolean
                read-all-labels:
                  default: false
                  description: Load all tapes and try read labels (even if already
                    inventoried)
                  type: boolean
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Update inventory


        Note: Only useful for drives with associated changer device.


        This method queries the changer to get a list of media labels. It

        then loads any unknown media into the drive, reads the label, and

        store the result to the media database.


        If `catalog` is true, also tries to restore the catalog from tape.


        Note: This updates the media online status.'
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/label-media:
    post:
      description: 'Label media


        Write a new media label to the media in ''drive''. The media is

        assigned to the specified ''pool'', or else to the free media pool.


        Note: The media need to be empty (you may want to format it first).'
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_label-media
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label-text:
                  description: Media Label/Barcode.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                pool:
                  description: Media pool name.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - label-text
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Label media


        Write a new media label to the media in ''drive''. The media is

        assigned to the specified ''pool'', or else to the free media pool.


        Note: The media need to be empty (you may want to format it first).'
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/load-media:
    post:
      description: 'Load media with specified label


        Issue a media load request to the associated changer device.'
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_load-media
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label-text:
                  description: Media Label/Barcode.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - label-text
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Load media with specified label


        Issue a media load request to the associated changer device.'
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/load-slot:
    post:
      description: 'Load media from the specified slot


        Issue a media load request to the associated changer device.'
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_load-slot
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                source-slot:
                  description: Source slot number.
                  minimum: 1
                  type: integer
              required:
              - source-slot
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Load media from the specified slot


        Issue a media load request to the associated changer device.'
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/read-label:
    get:
      description: Read media label (optionally inventorize media)
      operationId: get_tape_tape_drive_tape_drive_drive_tape_drive_drive_read-label
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      - description: Inventorize media
        in: query
        name: inventorize
        required: false
        schema:
          description: Inventorize media
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Media label info
                properties:
                  ctime:
                    description: Creation time stamp
                    type: integer
                  encryption-key-fingerprint:
                    description: Encryption key fingerprint
                    type: string
                  label-text:
                    description: Media label text (or Barcode)
                    type: string
                  media-set-ctime:
                    description: MediaSet Creation time stamp
                    type: integer
                  media-set-uuid:
                    description: MediaSet Uuid (We use the all-zero Uuid to reseve
                      an empty media for a specific pool).
                    type: string
                  pool:
                    description: MediaSet Pool
                    type: string
                  seq-nr:
                    description: MediaSet media sequence number
                    type: integer
                  uuid:
                    description: Media Uuid.
                    type: string
                type: object
          description: Media label info
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read media label (optionally inventorize media)
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/restore-key:
    post:
      description: Try to restore a tape encryption key
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_restore-key
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  description: The password the key was encrypted with.
                  type: string
              required:
              - password
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Try to restore a tape encryption key
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/rewind:
    post:
      description: Rewind tape
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_rewind
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Rewind tape
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/status:
    get:
      description: Get drive/media status
      operationId: get_tape_tape_drive_tape_drive_drive_tape_drive_drive_status
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: 'Drive/Media status for Lto SCSI drives.


                  Media related data is optional - only set if there is a medium

                  loaded.'
                properties:
                  alert-flags:
                    description: Tape Alert Flags
                    type: string
                  block-number:
                    description: Current block number
                    type: integer
                  blocksize:
                    description: Block size (0 is variable size)
                    type: integer
                  buffer-mode:
                    description: Drive buffer mode
                    type: integer
                  bytes-read:
                    description: Total Bytes Read in Medium Life
                    type: integer
                  bytes-written:
                    description: Total Bytes Written in Medium Life
                    type: integer
                  compression:
                    description: Compression enabled
                    type: boolean
                  density:
                    description: The density of a tape medium, derived from the LTO
                      version.
                    type: string
                  drive-activity:
                    description: The DT Device Activity from DT Device Status LP page
                    type: string
                  file-number:
                    description: Current file number
                    type: integer
                  manufactured:
                    description: Medium Manufacture Date (epoch)
                    type: integer
                  medium-passes:
                    description: 'Count of the total number of times the medium has
                      passed over

                      the head.'
                    type: integer
                  medium-wearout:
                    description: Estimated tape wearout factor (assuming max. 16000
                      end-to-end passes)
                    type: number
                  product:
                    description: Product
                    type: string
                  revision:
                    description: Revision
                    type: string
                  vendor:
                    description: Vendor
                    type: string
                  volume-mounts:
                    description: Number of mounts for the current volume (i.e., Thread
                      Count)
                    type: integer
                  write-protect:
                    description: Media is write protected
                    type: boolean
                type: object
          description: 'Drive/Media status for Lto SCSI drives.


            Media related data is optional - only set if there is a medium

            loaded.'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get drive/media status
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/unload:
    post:
      description: Unload media via changer
      operationId: post_tape_tape_drive_tape_drive_drive_tape_drive_drive_unload
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                target-slot:
                  description: Target slot number. If omitted, defaults to the slot
                    that the drive was loaded from.
                  minimum: 1
                  type: integer
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Unload media via changer
      tags:
      - Tape
  //tape/tape/drive/tape/drive/{drive}/tape/drive/{drive}/volume-statistics:
    get:
      description: Read Volume Statistics (SCSI log page 17h)
      operationId: get_tape_tape_drive_tape_drive_drive_tape_drive_drive_volume-statistics
      parameters:
      - description: The drive parameter
        in: path
        name: drive
        required: true
        schema:
          description: The drive parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Volume statistics from SCSI log page 17h
                properties:
                  beginning-of-medium-passes:
                    description: Beginning of medium passes
                    type: integer
                  last-load-read-compression-ratio:
                    description: Last load read compression ratio
                    type: integer
                  last-load-write-compression-ratio:
                    description: Last load write compression ratio
                    type: integer
                  last-mount-bytes-read:
                    description: Last mount bytes read
                    type: integer
                  last-mount-bytes-written:
                    description: Last mount bytes written
                    type: integer
                  last-mount-unrecovered-read-errors:
                    description: Last mount unrecovered read errors
                    type: integer
                  last-mount-unrecovered-write-errors:
                    description: Last mount unrecovered write errors
                    type: integer
                  lifetime-bytes-read:
                    description: Lifetime bytes read
                    type: integer
                  lifetime-bytes-written:
                    description: Lifetime bytes written
                    type: integer
                  medium-mount-time:
                    description: Medium mount time
                    type: integer
                  medium-ready-time:
                    description: Medium ready time
                    type: integer
                  middle-of-tape-passes:
                    description: Middle of medium passes
                    type: integer
                  serial:
                    description: Volume serial number
                    type: string
                  total-native-capacity:
                    description: Total native capacity
                    type: integer
                  total-used-native-capacity:
                    description: Total used native capacity
                    type: integer
                  volume-datasets-read:
                    description: Total datasets read
                    type: integer
                  volume-datasets-written:
                    description: Total data sets written
                    type: integer
                  volume-mounts:
                    description: Volume mounts (thread count)
                    type: integer
                  volume-recovered-read-errors:
                    description: Total read retries
                    type: integer
                  volume-recovered-write-data-errors:
                    description: Write retries
                    type: integer
                  volume-unrecovered-read-errors:
                    description: Total unrecovered read errors
                    type: integer
                  volume-unrecovered-write-data-errors:
                    description: Total unrecovered write errors
                    type: integer
                  volume-unrecovered-write-servo-errors:
                    description: Total fatal suspended writes
                    type: integer
                  volume-write-servo-errors:
                    description: Total suspended writes
                    type: integer
                  worm:
                    description: Volume is WORM
                    type: boolean
                  write-protect:
                    description: Write protect
                    type: boolean
                type: object
          description: Volume statistics from SCSI log page 17h
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Read Volume Statistics (SCSI log page 17h)
      tags:
      - Tape
  //tape/tape/media:
    get:
      description: Directory index.
      operationId: get_tape_tape_media
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Tape
  //tape/tape/media/tape/media/content:
    get:
      description: List media content
      operationId: get_tape_tape_media_tape_media_content
      parameters:
      - description: Backup ID.
        in: query
        name: backup-id
        required: false
        schema:
          description: Backup ID.
          pattern: ^[A-Za-z0-9_][A-Za-z0-9._\-]*$
          type: string
      - description: Backup types.
        in: query
        name: backup-type
        required: false
        schema:
          description: Backup types.
          enum:
          - vm
          - ct
          - host
          type: string
      - description: Media Label/Barcode.
        in: query
        name: label-text
        required: false
        schema:
          description: Media Label/Barcode.
          maxLength: 32
          minLength: 2
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Media Uuid.
        in: query
        name: media
        required: false
        schema:
          description: Media Uuid.
          pattern: ^[0-9a-f]{8}(?:-[0-9a-f]{4}){3}-[0-9a-f]{12}$
          type: string
      - description: MediaSet Uuid (We use the all-zero Uuid to reseve an empty media
          for a specific pool).
        in: query
        name: media-set
        required: false
        schema:
          description: MediaSet Uuid (We use the all-zero Uuid to reseve an empty
            media for a specific pool).
          pattern: ^[0-9a-f]{8}(?:-[0-9a-f]{4}){3}-[0-9a-f]{12}$
          type: string
      - description: Media pool name.
        in: query
        name: pool
        required: false
        schema:
          description: Media pool name.
          maxLength: 32
          minLength: 2
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Media content list.
                items:
                  description: Media content list entry
                  properties:
                    backup-time:
                      description: Snapshot creation time (epoch)
                      type: integer
                    label-text:
                      description: Media label text (or Barcode)
                      type: string
                    media-set-ctime:
                      description: MediaSet Creation time stamp
                      type: integer
                    media-set-name:
                      description: Media set name
                      type: string
                    media-set-uuid:
                      description: MediaSet Uuid (We use the all-zero Uuid to reseve
                        an empty media for a specific pool).
                      type: string
                    pool:
                      description: Media Pool
                      type: string
                    seq-nr:
                      description: Media set seq_nr
                      type: integer
                    snapshot:
                      description: Backup snapshot
                      type: string
                    store:
                      description: Datastore Name
                      type: string
                    uuid:
                      description: Media Uuid.
                      type: string
                  type: object
                type: array
          description: Media content list.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List media content
      tags:
      - Tape
  //tape/tape/media/tape/media/destroy:
    get:
      description: Destroy media (completely remove from database)
      operationId: get_tape_tape_media_tape_media_destroy
      parameters:
      - description: Force removal (even if media is used in a media set).
        in: query
        name: force
        required: false
        schema:
          description: Force removal (even if media is used in a media set).
          type: boolean
      - description: Media Label/Barcode.
        in: query
        name: label-text
        required: false
        schema:
          description: Media Label/Barcode.
          maxLength: 32
          minLength: 2
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Media Uuid.
        in: query
        name: uuid
        required: false
        schema:
          description: Media Uuid.
          pattern: ^[0-9a-f]{8}(?:-[0-9a-f]{4}){3}-[0-9a-f]{12}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Destroy media (completely remove from database)
      tags:
      - Tape
  //tape/tape/media/tape/media/list:
    get:
      description: List pool media
      operationId: get_tape_tape_media_tape_media_list
      parameters:
      - description: Media pool name.
        in: query
        name: pool
        required: false
        schema:
          description: Media pool name.
          maxLength: 32
          minLength: 2
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      - description: Try to update tape library status (check what tapes are online).
        in: query
        name: update-status
        required: false
        schema:
          default: true
          description: Try to update tape library status (check what tapes are online).
          type: boolean
      - description: Tape Changer Identifier.
        in: query
        name: update-status-changer
        required: false
        schema:
          description: Tape Changer Identifier.
          maxLength: 32
          minLength: 3
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of registered backup media.
                items:
                  description: Media list entry
                  properties:
                    bytes-used:
                      description: Bytes currently used
                      type: integer
                    catalog:
                      description: Catalog status OK
                      type: boolean
                    ctime:
                      description: Creation time stamp
                      type: integer
                    expired:
                      description: Expired flag
                      type: boolean
                    label-text:
                      description: Media label text (or Barcode)
                      type: string
                    location:
                      description: Media location (e.g. 'offline', 'online-<changer_name>',
                        'vault-<vault_name>')
                      type: string
                    media-set-ctime:
                      description: MediaSet creation time stamp
                      type: integer
                    media-set-name:
                      description: Media set name
                      type: string
                    media-set-uuid:
                      description: MediaSet Uuid (We use the all-zero Uuid to reseve
                        an empty media for a specific pool).
                      type: string
                    pool:
                      description: Media Pool
                      type: string
                    seq-nr:
                      description: Media set seq_nr
                      type: integer
                    status:
                      description: 'Media status

                        Media Status'
                      type: string
                    uuid:
                      description: Media Uuid.
                      type: string
                  type: object
                type: array
          description: List of registered backup media.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List pool media
      tags:
      - Tape
  //tape/tape/media/tape/media/list/tape/media/list/{uuid}:
    get:
      description: Directory index.
      operationId: get_tape_tape_media_tape_media_list_tape_media_list_uuid
      parameters:
      - description: The uuid parameter
        in: path
        name: uuid
        required: true
        schema:
          description: The uuid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Tape
  //tape/tape/media/tape/media/list/tape/media/list/{uuid}/tape/media/list/{uuid}/status:
    get:
      description: Get current media status
      operationId: get_tape_tape_media_tape_media_list_tape_media_list_uuid_tape_media_list_uuid_status
      parameters:
      - description: The uuid parameter
        in: path
        name: uuid
        required: true
        schema:
          description: The uuid parameter
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get current media status
      tags:
      - Tape
    post:
      description: 'Update media status (None, ''full'', ''damaged'' or ''retired'')


        It is not allowed to set status to ''writable'' or ''unknown'' (those

        are internally managed states).'
      operationId: post_tape_tape_media_tape_media_list_tape_media_list_uuid_tape_media_list_uuid_status
      parameters:
      - description: The uuid parameter
        in: path
        name: uuid
        required: true
        schema:
          description: The uuid parameter
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: 'Media status

                    Media Status'
                  enum:
                  - writable
                  - full
                  - unknown
                  - damaged
                  - retired
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: 'Update media status (None, ''full'', ''damaged'' or ''retired'')


        It is not allowed to set status to ''writable'' or ''unknown'' (those

        are internally managed states).'
      tags:
      - Tape
  //tape/tape/media/tape/media/media-sets:
    get:
      description: List Media sets
      operationId: get_tape_tape_media_tape_media_media-sets
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of media sets.
                items:
                  description: Media Set list entry
                  properties:
                    media-set-ctime:
                      description: MediaSet creation time stamp
                      type: integer
                    media-set-name:
                      description: Media set name
                      type: string
                    media-set-uuid:
                      description: MediaSet Uuid (We use the all-zero Uuid to reseve
                        an empty media for a specific pool).
                      type: string
                    pool:
                      description: Media Pool
                      type: string
                  type: object
                type: array
          description: List of media sets.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: List Media sets
      tags:
      - Tape
  //tape/tape/media/tape/media/move:
    post:
      description: Change Tape location to vault (if given), or offline.
      operationId: post_tape_tape_media_tape_media_move
      requestBody:
        content:
          application/json:
            schema:
              properties:
                label-text:
                  description: Media Label/Barcode.
                  maxLength: 32
                  minLength: 2
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                uuid:
                  description: Media Uuid.
                  pattern: ^[0-9a-f]{8}(?:-[0-9a-f]{4}){3}-[0-9a-f]{12}$
                  type: string
                vault-name:
                  description: Vault name.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Change Tape location to vault (if given), or offline.
      tags:
      - Tape
  //tape/tape/restore:
    post:
      description: Restore data from media-set. Namespaces will be automatically created
        if necessary.
      operationId: post_tape_tape_restore
      requestBody:
        content:
          application/json:
            schema:
              properties:
                drive:
                  description: Drive Identifier.
                  maxLength: 32
                  minLength: 3
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                media-set:
                  description: Media set UUID.
                  type: string
                namespaces:
                  description: List of namespace to restore.
                  items:
                    type: string
                  type: array
                notification-mode:
                  default: legacy-sendmail
                  description: 'Configure how notifications for this datastore should
                    be sent.

                    `legacy-sendmail` sends email notifications to the user configured

                    in `notify-user` via the system''s `sendmail` executable.

                    `notification-system` emits matchable notification events to the

                    notification system.'
                  enum:
                  - legacy-sendmail
                  - notification-system
                  type: string
                notify-user:
                  description: User ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                owner:
                  description: Authentication ID
                  maxLength: 64
                  minLength: 3
                  pattern: ^(?:(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)|(?:[^\s:/[:cntrl:]]+)@(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)!(?:[A-Za-z0-9_][A-Za-z0-9._\-]*))$
                  type: string
                snapshots:
                  description: List of snapshots.
                  items:
                    type: string
                  type: array
                store:
                  description: A list of Datastore mappings (or single datastore),
                    comma separated. For example 'a=b,e' maps the source datastore
                    'a' to target 'b and all other sources to the default 'e'. If
                    no default is given, only the specified sources are mapped.
                  type: string
              required:
              - drive
              - media-set
              - store
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Unique Process/Task Identifier
                type: string
          description: Unique Process/Task Identifier
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Restore data from media-set. Namespaces will be automatically created
        if necessary.
      tags:
      - Tape
  //tape/tape/scan-changers:
    get:
      description: Scan for SCSI tape changers
      operationId: get_tape_tape_scan-changers
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of autodetected tape changers.
                items:
                  description: Tape device information
                  properties:
                    kind:
                      description: Kind of device
                      type: string
                    major:
                      description: Device major number
                      type: integer
                    minor:
                      description: Device minor number
                      type: integer
                    model:
                      description: Model (autodetected)
                      type: string
                    path:
                      description: Path to the linux device node
                      type: string
                    serial:
                      description: Serial number (autodetected)
                      type: string
                    vendor:
                      description: Vendor (autodetected)
                      type: string
                  type: object
                type: array
          description: The list of autodetected tape changers.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan for SCSI tape changers
      tags:
      - Tape
  //tape/tape/scan-drives:
    get:
      description: Scan tape drives
      operationId: get_tape_tape_scan-drives
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The list of autodetected tape drives.
                items:
                  description: Tape device information
                  properties:
                    kind:
                      description: Kind of device
                      type: string
                    major:
                      description: Device major number
                      type: integer
                    minor:
                      description: Device minor number
                      type: integer
                    model:
                      description: Model (autodetected)
                      type: string
                    path:
                      description: Path to the linux device node
                      type: string
                    serial:
                      description: Serial number (autodetected)
                      type: string
                    vendor:
                      description: Vendor (autodetected)
                      type: string
                  type: object
                type: array
          description: The list of autodetected tape drives.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Scan tape drives
      tags:
      - Tape
  //version:
    get:
      description: Proxmox Backup Server API version.
      operationId: get_version
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Api version information
                properties:
                  release:
                    description: Version release
                    type: string
                  repoid:
                    description: Version repository id
                    type: string
                  version:
                    description: Version 'major.minor'
                    type: string
                type: object
          description: Api version information
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Proxmox Backup Server API version.
      tags:
      - Version
  /backup/_upgrade_:
    get:
      description: Directory index.
      operationId: get_backup__upgrade
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/blob:
    post:
      description: Upload binary blob file.
      operationId: post_backup__upgrade__backup__upgrade__blob
      requestBody:
        content:
          application/json:
            schema:
              properties:
                encoded-size:
                  description: Encoded blob size.
                  maximum: 16777260
                  minimum: 12
                  type: integer
                file-name:
                  description: Backup archive name.
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - encoded-size
              - file-name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload binary blob file.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/dynamic_chunk:
    post:
      description: Upload a new chunk.
      operationId: post_backup__upgrade__backup__upgrade__dynamic_chunk
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Chunk digest (SHA256).
                  pattern: ^[a-f0-9]{64}$
                  type: string
                encoded-size:
                  description: Encoded chunk size.
                  maximum: 16777260
                  minimum: 13
                  type: integer
                size:
                  description: Chunk size.
                  maximum: 16777216
                  minimum: 1
                  type: integer
                wid:
                  description: Dynamic writer ID.
                  maximum: 256
                  minimum: 1
                  type: integer
              required:
              - digest
              - encoded-size
              - size
              - wid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload a new chunk.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/dynamic_close:
    post:
      description: Close dynamic index writer.
      operationId: post_backup__upgrade__backup__upgrade__dynamic_close
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chunk-count:
                  description: Chunk count. This is used to verify that the server
                    got all chunks.
                  minimum: 1
                  type: integer
                csum:
                  description: Digest list checksum.
                  type: string
                size:
                  description: File size. This is used to verify that the server got
                    all data.
                  minimum: 1
                  type: integer
                wid:
                  description: Dynamic writer ID.
                  maximum: 256
                  minimum: 1
                  type: integer
              required:
              - chunk-count
              - csum
              - size
              - wid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Close dynamic index writer.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/dynamic_index:
    post:
      description: Create dynamic chunk index file.
      operationId: post_backup__upgrade__backup__upgrade__dynamic_index
      requestBody:
        content:
          application/json:
            schema:
              properties:
                archive-name:
                  description: Backup archive name.
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
              required:
              - archive-name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create dynamic chunk index file.
      tags:
      - Backup Operations
    put:
      description: Append chunk to dynamic index writer.
      operationId: put_backup__upgrade__backup__upgrade__dynamic_index
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest-list:
                  description: Chunk digest list.
                  items:
                    type: string
                  type: array
                offset-list:
                  description: Chunk offset list.
                  items:
                    type: integer
                  type: array
                wid:
                  description: Dynamic writer ID.
                  maximum: 256
                  minimum: 1
                  type: integer
              required:
              - digest-list
              - offset-list
              - wid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Append chunk to dynamic index writer.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/finish:
    post:
      description: Mark backup as finished.
      operationId: post_backup__upgrade__backup__upgrade__finish
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Mark backup as finished.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/fixed_chunk:
    post:
      description: Upload a new chunk.
      operationId: post_backup__upgrade__backup__upgrade__fixed_chunk
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest:
                  description: Chunk digest (SHA256).
                  pattern: ^[a-f0-9]{64}$
                  type: string
                encoded-size:
                  description: Encoded chunk size.
                  maximum: 16777260
                  minimum: 13
                  type: integer
                size:
                  description: Chunk size.
                  maximum: 16777216
                  minimum: 1
                  type: integer
                wid:
                  description: Fixed writer ID.
                  maximum: 256
                  minimum: 1
                  type: integer
              required:
              - digest
              - encoded-size
              - size
              - wid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Upload a new chunk.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/fixed_close:
    post:
      description: Close fixed index writer.
      operationId: post_backup__upgrade__backup__upgrade__fixed_close
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chunk-count:
                  description: Chunk count. This is used to verify that the server
                    got all chunks. Ignored for incremental backups.
                  minimum: 0
                  type: integer
                csum:
                  description: Digest list checksum.
                  type: string
                size:
                  description: File size. This is used to verify that the server got
                    all data. Ignored for incremental backups.
                  minimum: 0
                  type: integer
                wid:
                  description: Fixed writer ID.
                  maximum: 256
                  minimum: 1
                  type: integer
              required:
              - chunk-count
              - csum
              - size
              - wid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Close fixed index writer.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/fixed_index:
    post:
      description: Create fixed chunk index file.
      operationId: post_backup__upgrade__backup__upgrade__fixed_index
      requestBody:
        content:
          application/json:
            schema:
              properties:
                archive-name:
                  description: Backup archive name.
                  pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
                  type: string
                reuse-csum:
                  description: If set, compare last backup's csum and reuse index
                    for incremental backup if it matches.
                  type: string
                size:
                  description: File size.
                  minimum: 1
                  type: integer
              required:
              - archive-name
              - size
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Create fixed chunk index file.
      tags:
      - Backup Operations
    put:
      description: Append chunk to fixed index writer.
      operationId: put_backup__upgrade__backup__upgrade__fixed_index
      requestBody:
        content:
          application/json:
            schema:
              properties:
                digest-list:
                  description: Chunk digest list.
                  items:
                    type: string
                  type: array
                offset-list:
                  description: Chunk offset list.
                  items:
                    type: integer
                  type: array
                wid:
                  description: Fixed writer ID.
                  maximum: 256
                  minimum: 1
                  type: integer
              required:
              - digest-list
              - offset-list
              - wid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Append chunk to fixed index writer.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/previous:
    get:
      description: Download archive from previous backup.
      operationId: get_backup__upgrade__backup__upgrade__previous
      parameters:
      - description: Backup archive name.
        in: query
        name: archive-name
        required: true
        schema:
          description: Backup archive name.
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download archive from previous backup.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/previous_backup_time:
    get:
      description: Get previous backup time.
      operationId: get_backup__upgrade__backup__upgrade__previous_backup_time
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Get previous backup time.
      tags:
      - Backup Operations
  /backup/_upgrade_/backup/_upgrade_/speedtest:
    post:
      description: Test upload speed.
      operationId: post_backup__upgrade__backup__upgrade__speedtest
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Test upload speed.
      tags:
      - Backup Operations
  /reader/_upgrade_:
    get:
      description: Directory index.
      operationId: get_reader__upgrade
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Directory index.
      tags:
      - Reader
  /reader/_upgrade_/reader/_upgrade_/chunk:
    get:
      description: Download specified chunk.
      operationId: get_reader__upgrade__reader__upgrade__chunk
      parameters:
      - description: Chunk digest (SHA256).
        in: query
        name: digest
        required: true
        schema:
          description: Chunk digest (SHA256).
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download specified chunk.
      tags:
      - Reader
  /reader/_upgrade_/reader/_upgrade_/download:
    get:
      description: Download specified file.
      operationId: get_reader__upgrade__reader__upgrade__download
      parameters:
      - description: Backup archive name.
        in: query
        name: file-name
        required: true
        schema:
          description: Backup archive name.
          pattern: ^(?:[A-Za-z0-9_][A-Za-z0-9._\-]*)$
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Download specified file.
      tags:
      - Reader
  /reader/_upgrade_/reader/_upgrade_/speedtest:
    get:
      description: Test 1M block download speed.
      operationId: get_reader__upgrade__reader__upgrade__speedtest
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                properties: {}
                type: object
          description: Successful operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Bad Request - Invalid input parameters or malformed request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unauthorized - Authentication required or invalid credentials
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Forbidden - Insufficient permissions for the requested operation
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Not Found - Requested resource does not exist
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Unprocessable Entity - Request is well-formed but contains
            semantic errors
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Internal Server Error - Unexpected server error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxmoxError'
          description: Service Unavailable - Service temporarily unavailable
      security: *id001
      summary: Test 1M block download speed.
      tags:
      - Reader
security: *id001
servers:
- description: Proxmox Backup Server
  url: https://{host}:8007
  variables:
    host:
      default: localhost
      description: Proxmox Backup server hostname or IP address
tags:
- description: Access Control related operations
  name: Access Control
- description: Administration related operations
  name: Administration
- description: Backup Operations related operations
  name: Backup Operations
- description: Configuration related operations
  name: Configuration
- description: Default related operations
  name: Default
- description: Nodes related operations
  name: Nodes
- description: Ping related operations
  name: Ping
- description: Pull related operations
  name: Pull
- description: Push related operations
  name: Push
- description: Reader related operations
  name: Reader
- description: Status & Monitoring related operations
  name: Status & Monitoring
- description: Tape related operations
  name: Tape
- description: Version related operations
  name: Version
